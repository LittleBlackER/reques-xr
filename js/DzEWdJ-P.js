var qx=Object.defineProperty;var Xx=(l,t,e)=>t in l?qx(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var c=(l,t,e)=>Xx(l,typeof t!="symbol"?t+"":t,e);const jx="RenderFrame",nd="RenderFrameTime",Yp="RenderPass",ta="RenderPassDetail",xl="RenderAction",Kp="RenderTargetAlloc",Zp="TextureAlloc",Qp="ShaderAlloc",Yx="ShaderCompile",Kx="VRAM.Texture",Zx="VRAM.Vb",Qx="VRAM.Ib",Jx="BindGroupAlloc",eS="BindGroupFormatAlloc",Es="Element",tS="Textures",Sl="GpuTimings",ho="$_CURRENT_SDK_VERSION",iy="$_CURRENT_SDK_REVISION";function Eh(l,t){for(const e in t){const s=t[e];Array.isArray(s)?l[e]=Eh([],s):s&&typeof s=="object"?l[e]=Eh({},s):l[e]=s}return l}const sS={create(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,l=>{const t=Math.random()*16|0;return(l==="x"?t:t&3|8).toString(16)})}},me={delimiter:"/",join(...l){let t=l[0];for(let e=0;e<l.length-1;e++){const s=l[e],i=l[e+1];if(i[0]===me.delimiter){t=i;continue}s&&i&&s[s.length-1]!==me.delimiter&&i[0]!==me.delimiter?t+=me.delimiter+i:t+=i}return t},normalize(l){const t=l.startsWith(me.delimiter),e=l.endsWith(me.delimiter),s=l.split("/");let i="",r=[];for(let n=0;n<s.length;n++)if(s[n]!==""&&s[n]!=="."){if(s[n]===".."&&r.length>0){r=r.slice(0,r.length-2);continue}n>0&&r.push(me.delimiter),r.push(s[n])}return i=r.join(""),!t&&i[0]===me.delimiter&&(i=i.slice(1)),e&&i[i.length-1]!==me.delimiter&&(i+=me.delimiter),i},split(l){const t=l.lastIndexOf(me.delimiter);return t!==-1?[l.substring(0,t),l.substring(t+1)]:["",l]},getBasename(l){return me.split(l)[1]},getDirectory(l){return me.split(l)[0]},getExtension(l){const t=l.split("?")[0].split(".").pop();return t!==l?`.${t}`:""},isRelativePath(l){return l.charAt(0)!=="/"&&l.match(/:\/\//)===null},extractPath(l){let t="";const e=l.split("/");let s=0;if(e.length>1)if(me.isRelativePath(l))if(e[0]===".")for(s=0;s<e.length-1;++s)t+=s===0?e[s]:`/${e[s]}`;else if(e[0]==="..")for(s=0;s<e.length-1;++s)t+=s===0?e[s]:`/${e[s]}`;else for(t=".",s=0;s<e.length-1;++s)t+=`/${e[s]}`;else for(s=0;s<e.length-1;++s)t+=s===0?e[s]:`/${e[s]}`;return t}},iS=()=>{let l=!1;try{const t=Object.defineProperty({},"passive",{get:function(){return l=!0,!1}});window.addEventListener("testpassive",null,t),window.removeEventListener("testpassive",null,t)}catch{}return l},Ti=typeof navigator<"u"?navigator.userAgent:"",Ch=typeof window<"u"?"browser":typeof global<"u"?"node":"worker",Jp=/android/i.test(Ti)?"android":/ip(?:[ao]d|hone)/i.test(Ti)?"ios":/windows/i.test(Ti)?"windows":/mac os/i.test(Ti)?"osx":/linux/i.test(Ti)?"linux":/cros/i.test(Ti)?"cros":null,rS=Ch!=="browser"?null:/Chrome\/|Chromium\/|Edg.*\//.test(Ti)?"chrome":/Safari\//.test(Ti)?"safari":/Firefox\//.test(Ti)?"firefox":"other",nS=Ch==="browser"&&("ontouchstart"in window||"maxTouchPoints"in navigator&&navigator.maxTouchPoints>0),aS=iS(),be={name:Jp,browser:Ch==="browser",worker:Ch==="worker",android:Jp==="android",touch:nS,passiveEvents:aS,browserName:rS},ry="abcdefghijklmnopqrstuvwxyz",ny="ABCDEFGHIJKLMNOPQRSTUVWXYZ",oS=ry+ny,du=55296,ay=56319,em=56320,lS=57343,hS=8205,tm=127462,sm=127487,cS=127995,dS=127999,uS=8400,fS=8447,uu=65024,fu=65039;function pu(l,t=0){const e=l.length;if(t<0||t>=e)return null;const s=l.charCodeAt(t);if(e>1&&s>=du&&s<=ay){const i=l.charCodeAt(t+1);if(i>=em&&i<=lS)return{code:(s-du)*1024+i-em+65536,long:!0}}return{code:s,long:!1}}function Yi(l,t,e){if(!l)return!1;const s=pu(l);if(s){const i=s.code;return i>=t&&i<=e}return!1}function pS(l,t){if(t===l.length-1)return 1;if(Yi(l[t],du,ay)){const e=l.substring(t,t+2),s=l.substring(t+2,t+4);return Yi(s,cS,dS)||Yi(e,tm,sm)&&Yi(s,tm,sm)?4:Yi(s,uu,fu)?3:2}return Yi(l[t+1],uu,fu)?2:1}const dh={ASCII_LOWERCASE:ry,ASCII_UPPERCASE:ny,ASCII_LETTERS:oS,format(l,...t){for(let e=0;e<t.length;e++)l=l.replace(`{${e}}`,t[e]);return l},getCodePoint(l,t){const e=pu(l,t);return e&&e.code},getCodePoints(l){if(typeof l!="string")throw new TypeError("Not a string");let t=0;const e=[];let s;for(;s=pu(l,t);)e.push(s.code),t+=s.long?2:1;return e},getSymbols(l){if(typeof l!="string")throw new TypeError("Not a string");let t=0;const e=l.length,s=[];let i=0,r;for(;t<e;){if(i+=pS(l,t+i),r=l[t+i],Yi(r,uS,fS)&&(r=l[t+i++]),Yi(r,uu,fu)&&(r=l[t+i++]),r&&r.charCodeAt(0)===hS){r=l[t+i++];continue}const n=l.substring(t,t+i);s.push(n),t+=i,i=0}return s},fromCodePoint(){const l=[];let t,e,s;for(let i=0;i<arguments.length;++i)t=Number(arguments[i]),e=t-65536,s=t>65535?[(e>>10)+55296,e%1024+56320]:[t],l.push(String.fromCharCode.apply(null,s));return l.join("")}},Ur=class Ur{static set(t,e=!0){e?Ur._traceChannels.add(t):Ur._traceChannels.delete(t)}static get(t){return Ur._traceChannels.has(t)}};c(Ur,"_traceChannels",new Set),c(Ur,"stack",!1);let Qs=Ur;const Mt=class Mt{static deprecated(t){Mt._loggedMessages.has(t)||(Mt._loggedMessages.add(t),console.warn(`DEPRECATED: ${t}`))}static removed(t){Mt._loggedMessages.has(t)||(Mt._loggedMessages.add(t),console.error(`REMOVED: ${t}`))}static assertDeprecated(t,e){t||Mt.deprecated(e)}static assert(t,...e){t||console.error("ASSERT FAILED: ",...e)}static assertDestroyed(t){var e;if(t!=null&&t.__alreadyDestroyed){const s=`[${(e=t.constructor)==null?void 0:e.name}] with name [${t.name}] has already been destroyed, and cannot be used.`;Mt._loggedMessages.has(s)||(Mt._loggedMessages.add(s),console.error("ASSERT FAILED: ",s,t))}}static call(t){t()}static log(...t){console.log(...t)}static logOnce(t,...e){Mt._loggedMessages.has(t)||(Mt._loggedMessages.add(t),console.log(t,...e))}static warn(...t){console.warn(...t)}static warnOnce(t,...e){Mt._loggedMessages.has(t)||(Mt._loggedMessages.add(t),console.warn(t,...e))}static error(...t){console.error(...t)}static errorOnce(t,...e){Mt._loggedMessages.has(t)||(Mt._loggedMessages.add(t),console.error(t,...e))}static trace(t,...e){Qs.get(t)&&(console.groupCollapsed(`${t.padEnd(20," ")}|`,...e),console.groupEnd())}};c(Mt,"_loggedMessages",new Set);let b=Mt;class gn{static setName(t,e){t&&(t.name=e)}static setLabel(t,e){t&&(t.label=e)}static setDestroyed(t){t&&(t.__alreadyDestroyed=!0)}}class mS{constructor(t,e,s,i,r=!1){c(this,"handler");c(this,"name");c(this,"callback");c(this,"scope");c(this,"_once");c(this,"_removed",!1);this.handler=t,this.name=e,this.callback=s,this.scope=i,this._once=r}off(){this._removed||this.handler.offByHandle(this)}on(t,e,s=this){return b.deprecated("Using chaining with EventHandler.on is deprecated, subscribe to an event from EventHandler directly instead."),this.handler._addCallback(t,e,s,!1)}once(t,e,s=this){return b.deprecated("Using chaining with EventHandler.once is deprecated, subscribe to an event from EventHandler directly instead."),this.handler._addCallback(t,e,s,!0)}set removed(t){t&&(this._removed=!0)}get removed(){return this._removed}}class de{constructor(){c(this,"_callbacks",new Map);c(this,"_callbackActive",new Map)}initEventHandler(){this._callbacks=new Map,this._callbackActive=new Map}_addCallback(t,e,s,i){if((!t||typeof t!="string"||!e)&&console.warn(`EventHandler: subscribing to an event (${t}) with missing arguments`,e),this._callbacks.has(t)||this._callbacks.set(t,[]),this._callbackActive.has(t)){const n=this._callbackActive.get(t);n&&n===this._callbacks.get(t)&&this._callbackActive.set(t,n.slice())}const r=new mS(this,t,e,s,i);return this._callbacks.get(t).push(r),r}on(t,e,s=this){return this._addCallback(t,e,s,!1)}once(t,e,s=this){return this._addCallback(t,e,s,!0)}off(t,e,s){if(t)this._callbackActive.has(t)&&this._callbackActive.get(t)===this._callbacks.get(t)&&this._callbackActive.set(t,this._callbackActive.get(t).slice());else for(const[i,r]of this._callbackActive)this._callbacks.has(i)&&this._callbacks.get(i)===r&&this._callbackActive.set(i,r.slice());if(t)if(e){const i=this._callbacks.get(t);if(!i)return this;for(let r=0;r<i.length;r++)i[r].callback===e&&(s&&i[r].scope!==s||(i[r].removed=!0,i.splice(r,1),r--));i.length===0&&this._callbacks.delete(t)}else{const i=this._callbacks.get(t);if(i){for(let r=0;r<i.length;r++)i[r].removed=!0;this._callbacks.delete(t)}}else{for(const i of this._callbacks.values())for(let r=0;r<i.length;r++)i[r].removed=!0;this._callbacks.clear()}return this}offByHandle(t){const e=t.name;t.removed=!0,this._callbackActive.has(e)&&this._callbackActive.get(e)===this._callbacks.get(e)&&this._callbackActive.set(e,this._callbackActive.get(e).slice());const s=this._callbacks.get(e);if(!s)return this;const i=s.indexOf(t);return i!==-1&&(s.splice(i,1),s.length===0&&this._callbacks.delete(e)),this}fire(t,e,s,i,r,n,a,o,h){if(!t)return this;const d=this._callbacks.get(t);if(!d)return this;let u;this._callbackActive.has(t)?this._callbackActive.get(t)!==d&&(u=d.slice()):this._callbackActive.set(t,d);for(let f=0;(u||this._callbackActive.get(t))&&f<(u||this._callbackActive.get(t)).length;f++){const p=(u||this._callbackActive.get(t))[f];if(p.callback&&(p.callback.call(p.scope,e,s,i,r,n,a,o,h),p._once)){const m=this._callbacks.get(t),_=m?m.indexOf(p):-1;if(_!==-1){this._callbackActive.get(t)===m&&this._callbackActive.set(t,this._callbackActive.get(t).slice());const g=this._callbacks.get(t);if(!g)continue;g[_].removed=!0,g.splice(_,1),g.length===0&&this._callbacks.delete(t)}}}return u||this._callbackActive.delete(t),this}hasEvent(t){var e;return!!((e=this._callbacks.get(t))!=null&&e.length)}}class _S{constructor(){c(this,"_list",[]);c(this,"_index",{})}push(t,e){if(this._index[t])throw Error(`Key already in index ${t}`);const s=this._list.push(e)-1;this._index[t]=s}has(t){return this._index[t]!==void 0}get(t){const e=this._index[t];return e!==void 0?this._list[e]:null}remove(t){const e=this._index[t];if(e!==void 0){this._list.splice(e,1),delete this._index[t];for(t in this._index){const s=this._index[t];s>e&&(this._index[t]=s-1)}return!0}return!1}list(){return this._list}clear(){this._list.length=0;for(const t in this._index)delete this._index[t]}}const gS=l=>{const t={};let e=t;return()=>(e===t&&(e=l()),e)},Hs=class Hs{static loadScript(t,e){const s=document.createElement("script");s.setAttribute("src",t),s.onload=()=>{e(null)},s.onerror=()=>{e(`Failed to load script='${t}'`)},document.body.appendChild(s)}static loadWasm(t,e,s){const i=Hs.wasmSupported()&&e.glueUrl&&e.wasmUrl?e.glueUrl:e.fallbackUrl;i?Hs.loadScript(i,r=>{if(r)s(r,null);else{const n=window[t];window[t]=void 0,n({locateFile:()=>e.wasmUrl,onAbort:()=>{s("wasm module aborted.")}}).then(a=>{s(null,a)})}}):s("No supported wasm modules found.",null)}static getModule(t){return Hs.modules.hasOwnProperty(t)||(Hs.modules[t]={config:null,initializing:!1,instance:null,callbacks:[]}),Hs.modules[t]}static initialize(t,e){if(e.initializing)return;const s=e.config;(s.glueUrl||s.wasmUrl||s.fallbackUrl)&&(e.initializing=!0,Hs.loadWasm(t,s,(i,r)=>{i?s.errorHandler?s.errorHandler(i):console.error(`failed to initialize module=${t} error=${i}`):(e.instance=r,e.callbacks.forEach(n=>{n(r)}))}))}};c(Hs,"modules",{}),c(Hs,"wasmSupported",gS(()=>{try{if(typeof WebAssembly=="object"&&typeof WebAssembly.instantiate=="function"){const t=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(t instanceof WebAssembly.Module)return new WebAssembly.Instance(t)instanceof WebAssembly.Instance}}catch{}return!1}));let Nr=Hs;class oy{static setConfig(t,e){const s=Nr.getModule(t);s.config=e,s.callbacks.length>0&&Nr.initialize(t,s)}static getConfig(t){var e,s;return(s=(e=Nr.modules)==null?void 0:e[t])==null?void 0:s.config}static getInstance(t,e){const s=Nr.getModule(t);s.instance?e(s.instance):(s.callbacks.push(e),s.config&&Nr.initialize(t,s))}}class ly{constructor(t){c(this,"arraybuffer");c(this,"dataView");c(this,"offset",0);this.arraybuffer=t,this.dataView=new DataView(t)}get remainingBytes(){return this.dataView.byteLength-this.offset}reset(t=0){this.offset=t}skip(t){this.offset+=t}align(t){this.offset=this.offset+t-1&~(t-1)}_inc(t){return this.offset+=t,this.offset-t}readChar(){return String.fromCharCode(this.dataView.getUint8(this.offset++))}readChars(t){let e="";for(let s=0;s<t;++s)e+=this.readChar();return e}readU8(){return this.dataView.getUint8(this.offset++)}readU16(){return this.dataView.getUint16(this._inc(2),!0)}readU32(){return this.dataView.getUint32(this._inc(4),!0)}readU64(){return this.readU32()+2**32*this.readU32()}readU32be(){return this.dataView.getUint32(this._inc(4),!1)}readArray(t){for(let e=0;e<t.length;++e)t[e]=this.readU8()}readLine(){const t=this.dataView;let e="";for(;!(this.offset>=t.byteLength);){const s=String.fromCharCode(this.readU8());if(s===`
`)break;e+=s}return e}}class Mh{constructor(t){c(this,"items",[]);c(this,"length",0);c(this,"loopIndex",-1);c(this,"_sortBy");c(this,"_sortHandler");this._sortBy=t.sortBy,this._sortHandler=this._doSort.bind(this)}_binarySearch(t){let e=0,s=this.items.length-1;const i=t[this._sortBy];let r,n;for(;e<=s;)r=Math.floor((e+s)/2),n=this.items[r][this._sortBy],n<=i?e=r+1:n>i&&(s=r-1);return e}_doSort(t,e){const s=this._sortBy;return t[s]-e[s]}insert(t){const e=this._binarySearch(t);this.items.splice(e,0,t),this.length++,this.loopIndex>=e&&this.loopIndex++}append(t){this.items.push(t),this.length++}remove(t){const e=this.items.indexOf(t);e<0||(this.items.splice(e,1),this.length--,this.loopIndex>=e&&this.loopIndex--)}sort(){const t=this.loopIndex>=0?this.items[this.loopIndex]:null;this.items.sort(this._sortHandler),t!==null&&(this.loopIndex=this.items.indexOf(t))}}class yo extends de{constructor(e){super();c(this,"_index",{});c(this,"_list",[]);this._parent=e}add(...e){let s=!1;const i=this._processArguments(e,!0);if(!i.length)return s;for(let r=0;r<i.length;r++)this._index[i[r]]||(s=!0,this._index[i[r]]=!0,this._list.push(i[r]),this.fire("add",i[r],this._parent));return s&&this.fire("change",this._parent),s}remove(...e){let s=!1;if(!this._list.length)return s;const i=this._processArguments(e,!0);if(!i.length)return s;for(let r=0;r<i.length;r++)this._index[i[r]]&&(s=!0,delete this._index[i[r]],this._list.splice(this._list.indexOf(i[r]),1),this.fire("remove",i[r],this._parent));return s&&this.fire("change",this._parent),s}clear(){if(!this._list.length)return;const e=this._list.slice(0);this._list=[],this._index={};for(let s=0;s<e.length;s++)this.fire("remove",e[s],this._parent);this.fire("change",this._parent)}has(...e){return this._list.length?this._has(this._processArguments(e)):!1}_has(e){if(!this._list.length||!e.length)return!1;for(let s=0;s<e.length;s++)if(e[s].length===1){if(this._index[e[s][0]])return!0}else{let i=!0;for(let r=0;r<e[s].length;r++)if(!this._index[e[s][r]]){i=!1;break}if(i)return!0}return!1}list(){return this._list.slice(0)}_processArguments(e,s){const i=[];let r=[];if(!e||!e.length)return i;for(let n=0;n<e.length;n++)if(e[n]instanceof Array){s||(r=[]);for(let a=0;a<e[n].length;a++)typeof e[n][a]=="string"&&(s?i.push(e[n][a]):r.push(e[n][a]));!s&&r.length&&i.push(r)}else typeof e[n]=="string"&&(s?i.push(e[n]):i.push([e[n]]));return i}get size(){return this._list.length}}c(yo,"EVENT_ADD","add"),c(yo,"EVENT_REMOVE","remove"),c(yo,"EVENT_CHANGE","change");const ae=typeof window<"u"&&window.performance&&window.performance.now?performance.now.bind(performance):Date.now,yS=/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class ad{constructor(t){c(this,"scheme");c(this,"authority");c(this,"path");c(this,"query");c(this,"fragment");const e=t.match(yS);this.scheme=e[2],this.authority=e[4],this.path=e[5],this.query=e[7],this.fragment=e[9]}toString(){let t="";return this.scheme&&(t+=`${this.scheme}:`),this.authority&&(t+=`//${this.authority}`),t+=this.path,this.query&&(t+=`?${this.query}`),this.fragment&&(t+=`#${this.fragment}`),t}getQuery(){const t={};if(this.query){const e=decodeURIComponent(this.query).split("&");for(const s of e){const i=s.split("=");t[i[0]]=i[1]}}return t}setQuery(t){let e="";for(const s in t)t.hasOwnProperty(s)&&(e!==""&&(e+="&"),e+=`${encodeURIComponent(s)}=${encodeURIComponent(t[s])}`);this.query=e}}const xS=0,Of=1,im=4,SS=5,z={DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,clamp(l,t,e){return l>=e?e:l<=t?t:l},intToBytes24(l){const t=l>>16&255,e=l>>8&255,s=l&255;return[t,e,s]},intToBytes32(l){const t=l>>24&255,e=l>>16&255,s=l>>8&255,i=l&255;return[t,e,s,i]},bytesToInt24(l,t,e){return l.length&&(e=l[2],t=l[1],l=l[0]),l<<16|t<<8|e},bytesToInt32(l,t,e,s){return l.length&&(s=l[3],e=l[2],t=l[1],l=l[0]),(l<<24|t<<16|e<<8|s)>>>0},lerp(l,t,e){return l+(t-l)*z.clamp(e,0,1)},lerpAngle(l,t,e){return t-l>180&&(t-=360),t-l<-180&&(t+=360),z.lerp(l,t,z.clamp(e,0,1))},powerOfTwo(l){return l!==0&&!(l&l-1)},nextPowerOfTwo(l){return l--,l|=l>>1,l|=l>>2,l|=l>>4,l|=l>>8,l|=l>>16,l++,l},nearestPowerOfTwo(l){return Math.pow(2,Math.round(Math.log(l)/Math.log(2)))},random(l,t){const e=t-l;return Math.random()*e+l},smoothstep(l,t,e){return e<=l?0:e>=t?1:(e=(e-l)/(t-l),e*e*(3-2*e))},smootherstep(l,t,e){return e<=l?0:e>=t?1:(e=(e-l)/(t-l),e*e*e*(e*(e*6-15)+10))},roundUp(l,t){return t===0?l:Math.ceil(l/t)*t},between(l,t,e,s){const i=Math.min(t,e),r=Math.max(t,e);return s?l>=i&&l<=r:l>i&&l<r}},ot=class ot{constructor(t=0,e=0,s=0,i=1){c(this,"r");c(this,"g");c(this,"b");c(this,"a");const r=t.length;r===3||r===4?(this.r=t[0],this.g=t[1],this.b=t[2],this.a=t[3]??1):(this.r=t,this.g=e,this.b=s,this.a=i)}clone(){const t=this.constructor;return new t(this.r,this.g,this.b,this.a)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this}equals(t){return this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}set(t,e,s,i=1){return this.r=t,this.g=e,this.b=s,this.a=i,this}lerp(t,e,s){return this.r=t.r+s*(e.r-t.r),this.g=t.g+s*(e.g-t.g),this.b=t.b+s*(e.b-t.b),this.a=t.a+s*(e.a-t.a),this}linear(t=this){return this.r=Math.pow(t.r,2.2),this.g=Math.pow(t.g,2.2),this.b=Math.pow(t.b,2.2),this.a=t.a,this}gamma(t=this){return this.r=Math.pow(t.r,1/2.2),this.g=Math.pow(t.g,1/2.2),this.b=Math.pow(t.b,1/2.2),this.a=t.a,this}mulScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}fromString(t){const e=parseInt(t.replace("#","0x"),16);let s;return t.length>7?s=z.intToBytes32(e):(s=z.intToBytes24(e),s[3]=255),this.set(s[0]/255,s[1]/255,s[2]/255,s[3]/255),this}fromArray(t,e=0){return this.r=t[e]??this.r,this.g=t[e+1]??this.g,this.b=t[e+2]??this.b,this.a=t[e+3]??this.a,this}toString(t,e){const{r:s,g:i,b:r,a:n}=this;if(e||s>1||i>1||r>1)return`${s.toFixed(3)}, ${i.toFixed(3)}, ${r.toFixed(3)}, ${n.toFixed(3)}`;let a=`#${((1<<24)+(Math.round(s*255)<<16)+(Math.round(i*255)<<8)+Math.round(r*255)).toString(16).slice(1)}`;if(t===!0){const o=Math.round(n*255).toString(16);this.a<16/255?a+=`0${o}`:a+=o}return a}toArray(t=[],e=0,s=!0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,s&&(t[e+3]=this.a),t}};c(ot,"BLACK",Object.freeze(new ot(0,0,0,1))),c(ot,"BLUE",Object.freeze(new ot(0,0,1,1))),c(ot,"CYAN",Object.freeze(new ot(0,1,1,1))),c(ot,"GRAY",Object.freeze(new ot(.5,.5,.5,1))),c(ot,"GREEN",Object.freeze(new ot(0,1,0,1))),c(ot,"MAGENTA",Object.freeze(new ot(1,0,1,1))),c(ot,"RED",Object.freeze(new ot(1,0,0,1))),c(ot,"WHITE",Object.freeze(new ot(1,1,1,1))),c(ot,"YELLOW",Object.freeze(new ot(1,1,0,1)));let Y=ot;class hy{constructor(t,e=0){c(this,"_curve");c(this,"_left",-1/0);c(this,"_right",1/0);c(this,"_recip",0);c(this,"_p0",0);c(this,"_p1",0);c(this,"_m0",0);c(this,"_m1",0);this._curve=t,this._reset(e)}evaluate(t,e=!1){(e||t<this._left||t>=this._right)&&this._reset(t);let s;const i=this._curve.type;if(i===SS)s=this._p0;else{const r=this._recip===0?0:(t-this._left)*this._recip;i===xS?s=z.lerp(this._p0,this._p1,r):i===Of?s=z.lerp(this._p0,this._p1,r*r*(3-2*r)):s=this._evaluateHermite(this._p0,this._p1,this._m0,this._m1,r)}return s}_reset(t){const e=this._curve.keys,s=e.length;if(!s)this._left=-1/0,this._right=1/0,this._recip=0,this._p0=this._p1=this._m0=this._m1=0;else if(t<e[0][0])this._left=-1/0,this._right=e[0][0],this._recip=0,this._p0=this._p1=e[0][1],this._m0=this._m1=0;else if(t>=e[s-1][0])this._left=e[s-1][0],this._right=1/0,this._recip=0,this._p0=this._p1=e[s-1][1],this._m0=this._m1=0;else{let i=0;for(;t>=e[i+1][0];)i++;this._left=e[i][0],this._right=e[i+1][0];const r=1/(this._right-this._left);this._recip=isFinite(r)?r:0,this._p0=e[i][1],this._p1=e[i+1][1],this._curve.type===im&&this._calcTangents(e,i)}}_calcTangents(t,e){let s;const i=t[e],r=t[e+1];let n;if(e===0?s=[t[0][0]+(t[0][0]-t[1][0]),t[0][1]+(t[0][1]-t[1][1])]:s=t[e-1],e===t.length-2?n=[t[e+1][0]+(t[e+1][0]-t[e][0]),t[e+1][1]+(t[e+1][1]-t[e][1])]:n=t[e+2],this._curve.type===im){const a=2*(r[0]-i[0])/(r[0]-s[0]),o=2*(r[0]-i[0])/(n[0]-i[0]);this._m0=this._curve.tension*(isFinite(a)?a:0)*(r[1]-s[1]),this._m1=this._curve.tension*(isFinite(o)?o:0)*(n[1]-i[1])}else{const a=(r[0]-i[0])/(i[0]-s[0]),o=(r[0]-i[0])/(n[0]-r[0]),h=i[1]+(s[1]-i[1])*(isFinite(a)?a:0),d=r[1]+(n[1]-r[1])*(isFinite(o)?o:0),u=this._curve.tension;this._m0=u*(r[1]-h),this._m1=u*(d-i[1])}}_evaluateHermite(t,e,s,i,r){const n=r*r,a=r+r,o=1-r,h=o*o;return t*((1+a)*h)+s*(r*h)+e*(n*(3-a))+i*(n*(r-1))}}class Ls{constructor(t){c(this,"keys",[]);c(this,"type",Of);c(this,"tension",.5);c(this,"_eval",new hy(this));if(t)for(let e=0;e<t.length-1;e+=2)this.keys.push([t[e],t[e+1]]);this.sort()}get length(){return this.keys.length}add(t,e){const s=this.keys,i=s.length;let r=0;for(;r<i&&!(s[r][0]>t);r++);const n=[t,e];return this.keys.splice(r,0,n),n}get(t){return this.keys[t]}sort(){this.keys.sort((t,e)=>t[0]-e[0])}value(t){return this._eval.evaluate(t,!0)}closest(t){const e=this.keys,s=e.length;let i=2,r=null;for(let n=0;n<s;n++){const a=Math.abs(t-e[n][0]);if(i>=a)i=a,r=e[n];else break}return r}clone(){const t=new this.constructor;return t.keys=this.keys.map(e=>[...e]),t.type=this.type,t.tension=this.tension,t}quantize(t){t=Math.max(t,2);const e=new Float32Array(t),s=1/(t-1);e[0]=this._eval.evaluate(0,!0);for(let i=1;i<t;i++)e[i]=this._eval.evaluate(s*i);return e}quantizeClamped(t,e,s){const i=this.quantize(t);for(let r=0;r<i.length;++r)i[r]=Math.min(s,Math.max(e,i[r]));return i}}class Yr{constructor(){c(this,"curves",[]);c(this,"_type",Of);if(arguments.length>1)for(let t=0;t<arguments.length;t++)this.curves.push(new Ls(arguments[t]));else if(arguments.length===0)this.curves.push(new Ls);else{const t=arguments[0];if(typeof t=="number")for(let e=0;e<t;e++)this.curves.push(new Ls);else for(let e=0;e<t.length;e++)this.curves.push(new Ls(t[e]))}}get length(){return this.curves.length}set type(t){this._type=t;for(let e=0;e<this.curves.length;e++)this.curves[e].type=t}get type(){return this._type}get(t){return this.curves[t]}value(t,e=[]){const s=this.curves.length;e.length=s;for(let i=0;i<s;i++)e[i]=this.curves[i].value(t);return e}clone(){const t=new this.constructor;t.curves=[];for(let e=0;e<this.curves.length;e++)t.curves.push(this.curves[e].clone());return t._type=this._type,t}quantize(t){t=Math.max(t,2);const e=this.curves.length,s=new Float32Array(t*e),i=1/(t-1);for(let r=0;r<e;r++){const n=new hy(this.curves[r]);for(let a=0;a<t;a++)s[a*e+r]=n.evaluate(i*a)}return s}quantizeClamped(t,e,s){const i=this.quantize(t);for(let r=0;r<i.length;++r)i[r]=Math.min(s,Math.max(e,i[r]));return i}}let rm=5;const od=1/255,mu=new Float32Array(1),nm=new Int32Array(mu.buffer);class Bt{static float2Half(t){mu[0]=t;const e=nm[0];let s=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?s:r>142?(s|=31744,s|=(r===255?0:1)&&e&8388607,s):r<113?(i|=2048,s|=(i>>114-r)+(i>>113-r&1),s):(s|=r-112<<10|i>>1,s+=i&1,s)}static float2Bytes(t,e,s,i){const r=255*t%1;if(e[s+0]=Math.round((t%1-od*r)*255),i>1){const n=65025*t%1;if(e[s+1]=Math.round((r-od*n)*255),i>2){const a=16581375*t%1;e[s+2]=Math.round((n-od*a)*255),i>3&&(e[s+3]=Math.round(a*255))}}}static float2BytesRange(t,e,s,i,r,n){(t<i||t>r)&&rm&&(rm--,console.warn("float2BytesRange - value to pack is out of specified range.")),t=z.clamp((t-i)/(r-i),0,1),Bt.float2Bytes(t,e,s,n)}static float2RGBA8(t,e){mu[0]=t;const s=nm[0];e.r=(s>>24&255)/255,e.g=(s>>16&255)/255,e.b=(s>>8&255)/255,e.a=(s&255)/255}}const lt=class lt{constructor(t=0,e=0,s=0){c(this,"x");c(this,"y");c(this,"z");t.length===3?(this.x=t[0],this.y=t[1],this.z=t[2]):(this.x=t,this.y=e,this.z=s)}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}add2(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addScaled(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}clone(){const t=this.constructor;return new t(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}cross(t,e){const s=t.x,i=t.y,r=t.z,n=e.x,a=e.y,o=e.z;return this.x=i*o-a*r,this.y=r*n-o*s,this.z=s*a-n*i,this}distance(t){const e=this.x-t.x,s=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+s*s+i*i)}div(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}div2(t,e){return this.x=t.x/e.x,this.y=t.y/e.y,this.z=t.z/e.z,this}divScalar(t){return this.x/=t,this.y/=t,this.z/=t,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}lerp(t,e,s){return this.x=t.x+s*(e.x-t.x),this.y=t.y+s*(e.y-t.y),this.z=t.z+s*(e.z-t.z),this}mul(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}mul2(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}mulScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}normalize(t=this){const e=t.x*t.x+t.y*t.y+t.z*t.z;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s,this.y=t.y*s,this.z=t.z*s}return this}floor(t=this){return this.x=Math.floor(t.x),this.y=Math.floor(t.y),this.z=Math.floor(t.z),this}ceil(t=this){return this.x=Math.ceil(t.x),this.y=Math.ceil(t.y),this.z=Math.ceil(t.z),this}round(t=this){return this.x=Math.round(t.x),this.y=Math.round(t.y),this.z=Math.round(t.z),this}min(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),this}max(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),this}project(t){const e=this.x*t.x+this.y*t.y+this.z*t.z,s=t.x*t.x+t.y*t.y+t.z*t.z,i=e/s;return this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}sub2(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}fromArray(t,e=0){return this.x=t[e]??this.x,this.y=t[e+1]??this.y,this.z=t[e+2]??this.z,this}toString(){return`[${this.x}, ${this.y}, ${this.z}]`}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}};c(lt,"ZERO",Object.freeze(new lt(0,0,0))),c(lt,"HALF",Object.freeze(new lt(.5,.5,.5))),c(lt,"ONE",Object.freeze(new lt(1,1,1))),c(lt,"UP",Object.freeze(new lt(0,1,0))),c(lt,"DOWN",Object.freeze(new lt(0,-1,0))),c(lt,"RIGHT",Object.freeze(new lt(1,0,0))),c(lt,"LEFT",Object.freeze(new lt(-1,0,0))),c(lt,"FORWARD",Object.freeze(new lt(0,0,-1))),c(lt,"BACK",Object.freeze(new lt(0,0,1)));let A=lt;const oa=class oa{constructor(){c(this,"data",new Float32Array(9));this.data[0]=this.data[4]=this.data[8]=1}clone(){const t=this.constructor;return new t().copy(this)}copy(t){const e=t.data,s=this.data;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],this}set(t){const e=this.data;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],this}getX(t=new A){return t.set(this.data[0],this.data[1],this.data[2])}getY(t=new A){return t.set(this.data[3],this.data[4],this.data[5])}getZ(t=new A){return t.set(this.data[6],this.data[7],this.data[8])}equals(t){const e=this.data,s=t.data;return e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2]&&e[3]===s[3]&&e[4]===s[4]&&e[5]===s[5]&&e[6]===s[6]&&e[7]===s[7]&&e[8]===s[8]}isIdentity(){const t=this.data;return t[0]===1&&t[1]===0&&t[2]===0&&t[3]===0&&t[4]===1&&t[5]===0&&t[6]===0&&t[7]===0&&t[8]===1}setIdentity(){const t=this.data;return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,this}toString(){return`[${this.data.join(", ")}]`}transpose(t=this){const e=t.data,s=this.data;if(e===s){let i;i=e[1],s[1]=e[3],s[3]=i,i=e[2],s[2]=e[6],s[6]=i,i=e[5],s[5]=e[7],s[7]=i}else s[0]=e[0],s[1]=e[3],s[2]=e[6],s[3]=e[1],s[4]=e[4],s[5]=e[7],s[6]=e[2],s[7]=e[5],s[8]=e[8];return this}setFromMat4(t){const e=t.data,s=this.data;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[4],s[4]=e[5],s[5]=e[6],s[6]=e[8],s[7]=e[9],s[8]=e[10],this}setFromQuat(t){const e=t.x,s=t.y,i=t.z,r=t.w,n=e+e,a=s+s,o=i+i,h=e*n,d=e*a,u=e*o,f=s*a,p=s*o,m=i*o,_=r*n,g=r*a,y=r*o,w=this.data;return w[0]=1-(f+m),w[1]=d+y,w[2]=u-g,w[3]=d-y,w[4]=1-(h+m),w[5]=p+_,w[6]=u+g,w[7]=p-_,w[8]=1-(h+f),this}invertMat4(t){const e=t.data,s=e[0],i=e[1],r=e[2],n=e[4],a=e[5],o=e[6],h=e[8],d=e[9],u=e[10],f=u*a-o*d,p=-u*i+r*d,m=o*i-r*a,_=-u*n+o*h,g=u*s-r*h,y=-o*s+r*n,w=d*n-a*h,C=-d*s+i*h,x=a*s-i*n,M=s*f+i*_+r*w;if(M===0)this.setIdentity();else{const S=1/M,v=this.data;v[0]=f*S,v[1]=p*S,v[2]=m*S,v[3]=_*S,v[4]=g*S,v[5]=y*S,v[6]=w*S,v[7]=C*S,v[8]=x*S}return this}transformVector(t,e=new A){const s=this.data,{x:i,y:r,z:n}=t;return e.x=i*s[0]+r*s[3]+n*s[6],e.y=i*s[1]+r*s[4]+n*s[7],e.z=i*s[2]+r*s[5]+n*s[8],e}};c(oa,"IDENTITY",Object.freeze(new oa)),c(oa,"ZERO",Object.freeze(new oa().set([0,0,0,0,0,0,0,0,0])));let Js=oa;const Pt=class Pt{constructor(t=0,e=0){c(this,"x");c(this,"y");t.length===2?(this.x=t[0],this.y=t[1]):(this.x=t,this.y=e)}add(t){return this.x+=t.x,this.y+=t.y,this}add2(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addScaled(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}clone(){const t=this.constructor;return new t(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}cross(t){return this.x*t.y-this.y*t.x}distance(t){const e=this.x-t.x,s=this.y-t.y;return Math.sqrt(e*e+s*s)}div(t){return this.x/=t.x,this.y/=t.y,this}div2(t,e){return this.x=t.x/e.x,this.y=t.y/e.y,this}divScalar(t){return this.x/=t,this.y/=t,this}dot(t){return this.x*t.x+this.y*t.y}equals(t){return this.x===t.x&&this.y===t.y}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}lengthSq(){return this.x*this.x+this.y*this.y}lerp(t,e,s){return this.x=t.x+s*(e.x-t.x),this.y=t.y+s*(e.y-t.y),this}mul(t){return this.x*=t.x,this.y*=t.y,this}mul2(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this}mulScalar(t){return this.x*=t,this.y*=t,this}normalize(t=this){const e=t.x*t.x+t.y*t.y;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s,this.y=t.y*s}return this}rotate(t){const e=Math.atan2(this.x,this.y)+t*z.DEG_TO_RAD,s=Math.sqrt(this.x*this.x+this.y*this.y);return this.x=Math.sin(e)*s,this.y=Math.cos(e)*s,this}angle(){return Math.atan2(this.x,this.y)*z.RAD_TO_DEG}angleTo(t){return Math.atan2(this.x*t.y+this.y*t.x,this.x*t.x+this.y*t.y)*z.RAD_TO_DEG}floor(t=this){return this.x=Math.floor(t.x),this.y=Math.floor(t.y),this}ceil(t=this){return this.x=Math.ceil(t.x),this.y=Math.ceil(t.y),this}round(t=this){return this.x=Math.round(t.x),this.y=Math.round(t.y),this}min(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),this}max(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),this}set(t,e){return this.x=t,this.y=e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}sub2(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}subScalar(t){return this.x-=t,this.y-=t,this}fromArray(t,e=0){return this.x=t[e]??this.x,this.y=t[e+1]??this.y,this}toString(){return`[${this.x}, ${this.y}]`}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}static angleRad(t,e){return Math.atan2(t.x*e.y-t.y*e.x,t.x*e.x+t.y*e.y)}};c(Pt,"ZERO",Object.freeze(new Pt(0,0))),c(Pt,"HALF",Object.freeze(new Pt(.5,.5))),c(Pt,"ONE",Object.freeze(new Pt(1,1))),c(Pt,"UP",Object.freeze(new Pt(0,1))),c(Pt,"DOWN",Object.freeze(new Pt(0,-1))),c(Pt,"RIGHT",Object.freeze(new Pt(1,0))),c(Pt,"LEFT",Object.freeze(new Pt(-1,0)));let W=Pt;const Zi=class Zi{constructor(t=0,e=0,s=0,i=0){c(this,"x");c(this,"y");c(this,"z");c(this,"w");t.length===4?(this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3]):(this.x=t,this.y=e,this.z=s,this.w=i)}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}add2(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addScaled(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}clone(){const t=this.constructor;return new t(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}div(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}div2(t,e){return this.x=t.x/e.x,this.y=t.y/e.y,this.z=t.z/e.z,this.w=t.w/e.w,this}divScalar(t){return this.x/=t,this.y/=t,this.z/=t,this.w/=t,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e&&Math.abs(this.w-t.w)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}lerp(t,e,s){return this.x=t.x+s*(e.x-t.x),this.y=t.y+s*(e.y-t.y),this.z=t.z+s*(e.z-t.z),this.w=t.w+s*(e.w-t.w),this}mul(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}mul2(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this.w=t.w*e.w,this}mulScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}normalize(t=this){const e=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=t.w*s}return this}floor(t=this){return this.x=Math.floor(t.x),this.y=Math.floor(t.y),this.z=Math.floor(t.z),this.w=Math.floor(t.w),this}ceil(t=this){return this.x=Math.ceil(t.x),this.y=Math.ceil(t.y),this.z=Math.ceil(t.z),this.w=Math.ceil(t.w),this}round(t=this){return this.x=Math.round(t.x),this.y=Math.round(t.y),this.z=Math.round(t.z),this.w=Math.round(t.w),this}min(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),t.w<this.w&&(this.w=t.w),this}max(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),t.w>this.w&&(this.w=t.w),this}set(t,e,s,i){return this.x=t,this.y=e,this.z=s,this.w=i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}sub2(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}fromArray(t,e=0){return this.x=t[e]??this.x,this.y=t[e+1]??this.y,this.z=t[e+2]??this.z,this.w=t[e+3]??this.w,this}toString(){return`[${this.x}, ${this.y}, ${this.z}, ${this.w}]`}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}};c(Zi,"ZERO",Object.freeze(new Zi(0,0,0,0))),c(Zi,"HALF",Object.freeze(new Zi(.5,.5,.5,.5))),c(Zi,"ONE",Object.freeze(new Zi(1,1,1,1)));let ee=Zi;const Wa=new W,ys=new A,zs=new A,Us=new A,vl=new A,Vr=class Vr{constructor(){c(this,"data",new Float32Array(16));this.data[0]=this.data[5]=this.data[10]=this.data[15]=1}static _getPerspectiveHalfSize(t,e,s,i,r){r?(t.x=i*Math.tan(e*Math.PI/360),t.y=t.x/s):(t.y=i*Math.tan(e*Math.PI/360),t.x=t.y*s)}add2(t,e){const s=t.data,i=e.data,r=this.data;return r[0]=s[0]+i[0],r[1]=s[1]+i[1],r[2]=s[2]+i[2],r[3]=s[3]+i[3],r[4]=s[4]+i[4],r[5]=s[5]+i[5],r[6]=s[6]+i[6],r[7]=s[7]+i[7],r[8]=s[8]+i[8],r[9]=s[9]+i[9],r[10]=s[10]+i[10],r[11]=s[11]+i[11],r[12]=s[12]+i[12],r[13]=s[13]+i[13],r[14]=s[14]+i[14],r[15]=s[15]+i[15],this}add(t){return this.add2(this,t)}clone(){const t=this.constructor;return new t().copy(this)}copy(t){const e=t.data,s=this.data;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],s[9]=e[9],s[10]=e[10],s[11]=e[11],s[12]=e[12],s[13]=e[13],s[14]=e[14],s[15]=e[15],this}equals(t){const e=this.data,s=t.data;return e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2]&&e[3]===s[3]&&e[4]===s[4]&&e[5]===s[5]&&e[6]===s[6]&&e[7]===s[7]&&e[8]===s[8]&&e[9]===s[9]&&e[10]===s[10]&&e[11]===s[11]&&e[12]===s[12]&&e[13]===s[13]&&e[14]===s[14]&&e[15]===s[15]}isIdentity(){const t=this.data;return t[0]===1&&t[1]===0&&t[2]===0&&t[3]===0&&t[4]===0&&t[5]===1&&t[6]===0&&t[7]===0&&t[8]===0&&t[9]===0&&t[10]===1&&t[11]===0&&t[12]===0&&t[13]===0&&t[14]===0&&t[15]===1}mul2(t,e){const s=t.data,i=e.data,r=this.data,n=s[0],a=s[1],o=s[2],h=s[3],d=s[4],u=s[5],f=s[6],p=s[7],m=s[8],_=s[9],g=s[10],y=s[11],w=s[12],C=s[13],x=s[14],M=s[15];let S,v,E,T;return S=i[0],v=i[1],E=i[2],T=i[3],r[0]=n*S+d*v+m*E+w*T,r[1]=a*S+u*v+_*E+C*T,r[2]=o*S+f*v+g*E+x*T,r[3]=h*S+p*v+y*E+M*T,S=i[4],v=i[5],E=i[6],T=i[7],r[4]=n*S+d*v+m*E+w*T,r[5]=a*S+u*v+_*E+C*T,r[6]=o*S+f*v+g*E+x*T,r[7]=h*S+p*v+y*E+M*T,S=i[8],v=i[9],E=i[10],T=i[11],r[8]=n*S+d*v+m*E+w*T,r[9]=a*S+u*v+_*E+C*T,r[10]=o*S+f*v+g*E+x*T,r[11]=h*S+p*v+y*E+M*T,S=i[12],v=i[13],E=i[14],T=i[15],r[12]=n*S+d*v+m*E+w*T,r[13]=a*S+u*v+_*E+C*T,r[14]=o*S+f*v+g*E+x*T,r[15]=h*S+p*v+y*E+M*T,this}mulAffine2(t,e){const s=t.data,i=e.data,r=this.data,n=s[0],a=s[1],o=s[2],h=s[4],d=s[5],u=s[6],f=s[8],p=s[9],m=s[10],_=s[12],g=s[13],y=s[14];let w,C,x;return w=i[0],C=i[1],x=i[2],r[0]=n*w+h*C+f*x,r[1]=a*w+d*C+p*x,r[2]=o*w+u*C+m*x,r[3]=0,w=i[4],C=i[5],x=i[6],r[4]=n*w+h*C+f*x,r[5]=a*w+d*C+p*x,r[6]=o*w+u*C+m*x,r[7]=0,w=i[8],C=i[9],x=i[10],r[8]=n*w+h*C+f*x,r[9]=a*w+d*C+p*x,r[10]=o*w+u*C+m*x,r[11]=0,w=i[12],C=i[13],x=i[14],r[12]=n*w+h*C+f*x+_,r[13]=a*w+d*C+p*x+g,r[14]=o*w+u*C+m*x+y,r[15]=1,this}mul(t){return this.mul2(this,t)}transformPoint(t,e=new A){const s=this.data,{x:i,y:r,z:n}=t;return e.x=i*s[0]+r*s[4]+n*s[8]+s[12],e.y=i*s[1]+r*s[5]+n*s[9]+s[13],e.z=i*s[2]+r*s[6]+n*s[10]+s[14],e}transformVector(t,e=new A){const s=this.data,{x:i,y:r,z:n}=t;return e.x=i*s[0]+r*s[4]+n*s[8],e.y=i*s[1]+r*s[5]+n*s[9],e.z=i*s[2]+r*s[6]+n*s[10],e}transformVec4(t,e=new ee){const s=this.data,{x:i,y:r,z:n,w:a}=t;return e.x=i*s[0]+r*s[4]+n*s[8]+a*s[12],e.y=i*s[1]+r*s[5]+n*s[9]+a*s[13],e.z=i*s[2]+r*s[6]+n*s[10]+a*s[14],e.w=i*s[3]+r*s[7]+n*s[11]+a*s[15],e}setLookAt(t,e,s){Us.sub2(t,e).normalize(),zs.copy(s).normalize(),ys.cross(zs,Us).normalize(),zs.cross(Us,ys);const i=this.data;return i[0]=ys.x,i[1]=ys.y,i[2]=ys.z,i[3]=0,i[4]=zs.x,i[5]=zs.y,i[6]=zs.z,i[7]=0,i[8]=Us.x,i[9]=Us.y,i[10]=Us.z,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}setFrustum(t,e,s,i,r,n){const a=2*r,o=e-t,h=i-s,d=n-r,u=this.data;return u[0]=a/o,u[1]=0,u[2]=0,u[3]=0,u[4]=0,u[5]=a/h,u[6]=0,u[7]=0,u[8]=(e+t)/o,u[9]=(i+s)/h,u[10]=(-n-r)/d,u[11]=-1,u[12]=0,u[13]=0,u[14]=-a*n/d,u[15]=0,this}setPerspective(t,e,s,i,r){return Vr._getPerspectiveHalfSize(Wa,t,e,s,r),this.setFrustum(-Wa.x,Wa.x,-Wa.y,Wa.y,s,i)}setOrtho(t,e,s,i,r,n){const a=this.data;return a[0]=2/(e-t),a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2/(i-s),a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=-2/(n-r),a[11]=0,a[12]=-(e+t)/(e-t),a[13]=-(i+s)/(i-s),a[14]=-(n+r)/(n-r),a[15]=1,this}setFromAxisAngle(t,e){e*=z.DEG_TO_RAD;const{x:s,y:i,z:r}=t,n=Math.cos(e),a=Math.sin(e),o=1-n,h=o*s,d=o*i,u=this.data;return u[0]=h*s+n,u[1]=h*i+a*r,u[2]=h*r-a*i,u[3]=0,u[4]=h*i-a*r,u[5]=d*i+n,u[6]=d*r+a*s,u[7]=0,u[8]=h*r+a*i,u[9]=d*r-s*a,u[10]=o*r*r+n,u[11]=0,u[12]=0,u[13]=0,u[14]=0,u[15]=1,this}setTranslate(t,e,s){const i=this.data;return i[0]=1,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=t,i[13]=e,i[14]=s,i[15]=1,this}setScale(t,e,s){const i=this.data;return i[0]=t,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=e,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=s,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}setViewport(t,e,s,i){const r=this.data;return r[0]=s*.5,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=i*.5,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=.5,r[11]=0,r[12]=t+s*.5,r[13]=e+i*.5,r[14]=.5,r[15]=1,this}setReflection(t,e){const s=t.x,i=t.y,r=t.z,n=this.data;return n[0]=1-2*s*s,n[1]=-2*s*i,n[2]=-2*s*r,n[3]=0,n[4]=-2*s*i,n[5]=1-2*i*i,n[6]=-2*i*r,n[7]=0,n[8]=-2*s*r,n[9]=-2*i*r,n[10]=1-2*r*r,n[11]=0,n[12]=-2*s*e,n[13]=-2*i*e,n[14]=-2*r*e,n[15]=1,this}invert(t=this){const e=t.data,s=e[0],i=e[1],r=e[2],n=e[3],a=e[4],o=e[5],h=e[6],d=e[7],u=e[8],f=e[9],p=e[10],m=e[11],_=e[12],g=e[13],y=e[14],w=e[15],C=s*o-i*a,x=s*h-r*a,M=s*d-n*a,S=i*h-r*o,v=i*d-n*o,E=r*d-n*h,T=u*g-f*_,R=u*y-p*_,D=u*w-m*_,P=f*y-p*g,L=f*w-m*g,k=p*w-m*y,H=C*k-x*L+M*P+S*D-v*R+E*T;if(H===0)this.setIdentity();else{const N=1/H,I=this.data;I[0]=(o*k-h*L+d*P)*N,I[1]=(-i*k+r*L-n*P)*N,I[2]=(g*E-y*v+w*S)*N,I[3]=(-f*E+p*v-m*S)*N,I[4]=(-a*k+h*D-d*R)*N,I[5]=(s*k-r*D+n*R)*N,I[6]=(-_*E+y*M-w*x)*N,I[7]=(u*E-p*M+m*x)*N,I[8]=(a*L-o*D+d*T)*N,I[9]=(-s*L+i*D-n*T)*N,I[10]=(_*v-g*M+w*C)*N,I[11]=(-u*v+f*M-m*C)*N,I[12]=(-a*P+o*R-h*T)*N,I[13]=(s*P-i*R+r*T)*N,I[14]=(-_*S+g*x-y*C)*N,I[15]=(u*S-f*x+p*C)*N}return this}set(t){const e=this.data;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],this}setIdentity(){const t=this.data;return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}setTRS(t,e,s){const i=e.x,r=e.y,n=e.z,a=e.w,o=s.x,h=s.y,d=s.z,u=i+i,f=r+r,p=n+n,m=i*u,_=i*f,g=i*p,y=r*f,w=r*p,C=n*p,x=a*u,M=a*f,S=a*p,v=this.data;return v[0]=(1-(y+C))*o,v[1]=(_+S)*o,v[2]=(g-M)*o,v[3]=0,v[4]=(_-S)*h,v[5]=(1-(m+C))*h,v[6]=(w+x)*h,v[7]=0,v[8]=(g+M)*d,v[9]=(w-x)*d,v[10]=(1-(m+y))*d,v[11]=0,v[12]=t.x,v[13]=t.y,v[14]=t.z,v[15]=1,this}transpose(t=this){const e=t.data,s=this.data;if(e===s){let i;i=e[1],s[1]=e[4],s[4]=i,i=e[2],s[2]=e[8],s[8]=i,i=e[3],s[3]=e[12],s[12]=i,i=e[6],s[6]=e[9],s[9]=i,i=e[7],s[7]=e[13],s[13]=i,i=e[11],s[11]=e[14],s[14]=i}else s[0]=e[0],s[1]=e[4],s[2]=e[8],s[3]=e[12],s[4]=e[1],s[5]=e[5],s[6]=e[9],s[7]=e[13],s[8]=e[2],s[9]=e[6],s[10]=e[10],s[11]=e[14],s[12]=e[3],s[13]=e[7],s[14]=e[11],s[15]=e[15];return this}getTranslation(t=new A){return t.set(this.data[12],this.data[13],this.data[14])}getX(t=new A){return t.set(this.data[0],this.data[1],this.data[2])}getY(t=new A){return t.set(this.data[4],this.data[5],this.data[6])}getZ(t=new A){return t.set(this.data[8],this.data[9],this.data[10])}getScale(t=new A){return this.getX(ys),this.getY(zs),this.getZ(Us),t.set(ys.length(),zs.length(),Us.length()),t}get scaleSign(){return this.getX(ys),this.getY(zs),this.getZ(Us),ys.cross(ys,zs),ys.dot(Us)<0?-1:1}setFromEulerAngles(t,e,s){t*=z.DEG_TO_RAD,e*=z.DEG_TO_RAD,s*=z.DEG_TO_RAD;const i=Math.sin(-t),r=Math.cos(-t),n=Math.sin(-e),a=Math.cos(-e),o=Math.sin(-s),h=Math.cos(-s),d=this.data;return d[0]=a*h,d[1]=-a*o,d[2]=n,d[3]=0,d[4]=r*o+h*i*n,d[5]=r*h-i*n*o,d[6]=-a*i,d[7]=0,d[8]=i*o-r*h*n,d[9]=h*i+r*n*o,d[10]=r*a,d[11]=0,d[12]=0,d[13]=0,d[14]=0,d[15]=1,this}getEulerAngles(t=new A){this.getScale(vl);const e=vl.x,s=vl.y,i=vl.z;if(e===0||s===0||i===0)return t.set(0,0,0);const r=this.data,n=Math.asin(-r[2]/e),a=Math.PI*.5;let o,h;return n<a?n>-a?(o=Math.atan2(r[6]/s,r[10]/i),h=Math.atan2(r[1]/e,r[0]/e)):(h=0,o=-Math.atan2(r[4]/s,r[5]/s)):(h=0,o=Math.atan2(r[4]/s,r[5]/s)),t.set(o,n,h).mulScalar(z.RAD_TO_DEG)}toString(){return`[${this.data.join(", ")}]`}};c(Vr,"IDENTITY",Object.freeze(new Vr)),c(Vr,"ZERO",Object.freeze(new Vr().set([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])));let q=Vr;const la=class la{constructor(t=0,e=0,s=0,i=1){c(this,"x");c(this,"y");c(this,"z");c(this,"w");t.length===4?(this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3]):(this.x=t,this.y=e,this.z=s,this.w=i)}clone(){const t=this.constructor;return new t(this.x,this.y,this.z,this.w)}conjugate(t=this){return this.x=t.x*-1,this.y=t.y*-1,this.z=t.z*-1,this.w=t.w,this}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e&&Math.abs(this.w-t.w)<e}getAxisAngle(t){let e=Math.acos(this.w)*2;const s=Math.sin(e/2);return s!==0?(t.x=this.x/s,t.y=this.y/s,t.z=this.z/s,(t.x<0||t.y<0||t.z<0)&&(t.x*=-1,t.y*=-1,t.z*=-1,e*=-1)):(t.x=1,t.y=0,t.z=0),e*z.RAD_TO_DEG}getEulerAngles(t=new A){let e,s,i;const r=this.x,n=this.y,a=this.z,o=this.w,h=2*(o*n-r*a);return h<=-.99999?(e=2*Math.atan2(r,o),s=-Math.PI/2,i=0):h>=.99999?(e=2*Math.atan2(r,o),s=Math.PI/2,i=0):(e=Math.atan2(2*(o*r+n*a),1-2*(r*r+n*n)),s=Math.asin(h),i=Math.atan2(2*(o*a+r*n),1-2*(n*n+a*a))),t.set(e,s,i).mulScalar(z.RAD_TO_DEG)}invert(t=this){return this.conjugate(t).normalize()}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}mul(t){const e=this.x,s=this.y,i=this.z,r=this.w,n=t.x,a=t.y,o=t.z,h=t.w;return this.x=r*n+e*h+s*o-i*a,this.y=r*a+s*h+i*n-e*o,this.z=r*o+i*h+e*a-s*n,this.w=r*h-e*n-s*a-i*o,this}mulScalar(t,e=this){return this.x=e.x*t,this.y=e.y*t,this.z=e.z*t,this.w=e.w*t,this}mul2(t,e){const s=t.x,i=t.y,r=t.z,n=t.w,a=e.x,o=e.y,h=e.z,d=e.w;return this.x=n*a+s*d+i*h-r*o,this.y=n*o+i*d+r*a-s*h,this.z=n*h+r*d+s*o-i*a,this.w=n*d-s*a-i*o-r*h,this}normalize(t=this){let e=t.length();return e===0?(this.x=this.y=this.z=0,this.w=1):(e=1/e,this.x=t.x*e,this.y=t.y*e,this.z=t.z*e,this.w=t.w*e),this}set(t,e,s,i){return this.x=t,this.y=e,this.z=s,this.w=i,this}setFromAxisAngle(t,e){e*=.5*z.DEG_TO_RAD;const s=Math.sin(e),i=Math.cos(e);return this.x=s*t.x,this.y=s*t.y,this.z=s*t.z,this.w=i,this}setFromEulerAngles(t,e,s){if(t instanceof A){const u=t;t=u.x,e=u.y,s=u.z}const i=.5*z.DEG_TO_RAD;t*=i,e*=i,s*=i;const r=Math.sin(t),n=Math.cos(t),a=Math.sin(e),o=Math.cos(e),h=Math.sin(s),d=Math.cos(s);return this.x=r*o*d-n*a*h,this.y=n*a*d+r*o*h,this.z=n*o*h-r*a*d,this.w=n*o*d+r*a*h,this}setFromMat4(t){const e=t.data;let s=e[0],i=e[1],r=e[2],n=e[4],a=e[5],o=e[6],h=e[8],d=e[9],u=e[10],f;return f=s*s+i*i+r*r,f===0?this.set(0,0,0,1):(f=1/Math.sqrt(f),s*=f,i*=f,r*=f,f=n*n+a*a+o*o,f===0?this.set(0,0,0,1):(f=1/Math.sqrt(f),n*=f,a*=f,o*=f,f=h*h+d*d+u*u,f===0?this.set(0,0,0,1):(f=1/Math.sqrt(f),h*=f,d*=f,u*=f,u<0?s>a?this.set(1+s-a-u,i+n,h+r,o-d):this.set(i+n,1-s+a-u,o+d,h-r):s<-a?this.set(h+r,o+d,1-s-a+u,i-n):this.set(o-d,h-r,i-n,1+s+a+u),this.mulScalar(1/this.length()))))}setFromDirections(t,e){const s=1+t.dot(e);return s<Number.EPSILON?Math.abs(t.x)>Math.abs(t.y)?(this.x=-t.z,this.y=0,this.z=t.x,this.w=0):(this.x=0,this.y=-t.z,this.z=t.y,this.w=0):(this.x=t.y*e.z-t.z*e.y,this.y=t.z*e.x-t.x*e.z,this.z=t.x*e.y-t.y*e.x,this.w=s),this.normalize()}slerp(t,e,s){const i=t.x,r=t.y,n=t.z,a=t.w;let o=e.x,h=e.y,d=e.z,u=e.w,f=a*u+i*o+r*h+n*d;if(f<0&&(u=-u,o=-o,h=-h,d=-d,f=-f),Math.abs(f)>=1)return this.w=a,this.x=i,this.y=r,this.z=n,this;const p=Math.acos(f),m=Math.sqrt(1-f*f);if(Math.abs(m)<.001)return this.w=a*.5+u*.5,this.x=i*.5+o*.5,this.y=r*.5+h*.5,this.z=n*.5+d*.5,this;const _=Math.sin((1-s)*p)/m,g=Math.sin(s*p)/m;return this.w=a*_+u*g,this.x=i*_+o*g,this.y=r*_+h*g,this.z=n*_+d*g,this}transformVector(t,e=new A){const s=t.x,i=t.y,r=t.z,n=this.x,a=this.y,o=this.z,h=this.w,d=h*s+a*r-o*i,u=h*i+o*s-n*r,f=h*r+n*i-a*s,p=-n*s-a*i-o*r;return e.x=d*h+p*-n+u*-o-f*-a,e.y=u*h+p*-a+f*-n-d*-o,e.z=f*h+p*-o+d*-a-u*-n,e}toString(){return`[${this.x}, ${this.y}, ${this.z}, ${this.w}]`}};c(la,"IDENTITY",Object.freeze(new la(0,0,0,1))),c(la,"ZERO",Object.freeze(new la(0,0,0,0)));let ie=la;const wn=new A,Tn=new A,am=new A,om=new A,vS=new A;class ve{constructor(t,e){c(this,"center",new A);c(this,"halfExtents",new A(.5,.5,.5));c(this,"_min",new A);c(this,"_max",new A);t&&this.center.copy(t),e&&this.halfExtents.copy(e)}add(t){const e=this.center,s=e.x,i=e.y,r=e.z,n=this.halfExtents,a=n.x,o=n.y,h=n.z;let d=s-a,u=s+a,f=i-o,p=i+o,m=r-h,_=r+h;const g=t.center,y=g.x,w=g.y,C=g.z,x=t.halfExtents,M=x.x,S=x.y,v=x.z,E=y-M,T=y+M,R=w-S,D=w+S,P=C-v,L=C+v;E<d&&(d=E),T>u&&(u=T),R<f&&(f=R),D>p&&(p=D),P<m&&(m=P),L>_&&(_=L),e.x=(d+u)*.5,e.y=(f+p)*.5,e.z=(m+_)*.5,n.x=(u-d)*.5,n.y=(p-f)*.5,n.z=(_-m)*.5}copy(t){this.center.copy(t.center),this.halfExtents.copy(t.halfExtents)}clone(){return new ve(this.center,this.halfExtents)}intersects(t){const e=this.getMax(),s=this.getMin(),i=t.getMax(),r=t.getMin();return s.x<=i.x&&e.x>=r.x&&s.y<=i.y&&e.y>=r.y&&s.z<=i.z&&e.z>=r.z}_intersectsRay(t,e){const s=wn.copy(this.getMin()).sub(t.origin),i=Tn.copy(this.getMax()).sub(t.origin),r=t.direction;r.x===0?(s.x=s.x<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.x=i.x<0?-Number.MAX_VALUE:Number.MAX_VALUE):(s.x/=r.x,i.x/=r.x),r.y===0?(s.y=s.y<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.y=i.y<0?-Number.MAX_VALUE:Number.MAX_VALUE):(s.y/=r.y,i.y/=r.y),r.z===0?(s.z=s.z<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.z=i.z<0?-Number.MAX_VALUE:Number.MAX_VALUE):(s.z/=r.z,i.z/=r.z);const n=am.set(Math.min(s.x,i.x),Math.min(s.y,i.y),Math.min(s.z,i.z)),a=om.set(Math.max(s.x,i.x),Math.max(s.y,i.y),Math.max(s.z,i.z)),o=Math.min(Math.min(a.x,a.y),a.z),h=Math.max(Math.max(n.x,n.y),n.z),d=o>=h&&h>=0;return d&&e.copy(t.direction).mulScalar(h).add(t.origin),d}_fastIntersectsRay(t){const e=wn,s=Tn,i=am,r=om,n=vS,a=t.direction;return e.sub2(t.origin,this.center),r.set(Math.abs(e.x),Math.abs(e.y),Math.abs(e.z)),i.mul2(e,a),!(r.x>this.halfExtents.x&&i.x>=0||r.y>this.halfExtents.y&&i.y>=0||r.z>this.halfExtents.z&&i.z>=0||(n.set(Math.abs(a.x),Math.abs(a.y),Math.abs(a.z)),s.cross(a,e),s.set(Math.abs(s.x),Math.abs(s.y),Math.abs(s.z)),s.x>this.halfExtents.y*n.z+this.halfExtents.z*n.y)||s.y>this.halfExtents.x*n.z+this.halfExtents.z*n.x||s.z>this.halfExtents.x*n.y+this.halfExtents.y*n.x)}intersectsRay(t,e){return e?this._intersectsRay(t,e):this._fastIntersectsRay(t)}setMinMax(t,e){this.center.add2(e,t).mulScalar(.5),this.halfExtents.sub2(e,t).mulScalar(.5)}getMin(){return this._min.copy(this.center).sub(this.halfExtents)}getMax(){return this._max.copy(this.center).add(this.halfExtents)}containsPoint(t){const e=this.getMin(),s=this.getMax();return!(t.x<e.x||t.x>s.x||t.y<e.y||t.y>s.y||t.z<e.z||t.z>s.z)}setFromTransformedAabb(t,e,s=!1){const i=t.center,r=t.halfExtents,n=e.data;let a=n[0],o=n[4],h=n[8],d=n[1],u=n[5],f=n[9],p=n[2],m=n[6],_=n[10];if(s){let g=a*a+o*o+h*h;if(g>0){const y=1/Math.sqrt(g);a*=y,o*=y,h*=y}if(g=d*d+u*u+f*f,g>0){const y=1/Math.sqrt(g);d*=y,u*=y,f*=y}if(g=p*p+m*m+_*_,g>0){const y=1/Math.sqrt(g);p*=y,m*=y,_*=y}}this.center.set(n[12]+a*i.x+o*i.y+h*i.z,n[13]+d*i.x+u*i.y+f*i.z,n[14]+p*i.x+m*i.y+_*i.z),this.halfExtents.set(Math.abs(a)*r.x+Math.abs(o)*r.y+Math.abs(h)*r.z,Math.abs(d)*r.x+Math.abs(u)*r.y+Math.abs(f)*r.z,Math.abs(p)*r.x+Math.abs(m)*r.y+Math.abs(_)*r.z)}static computeMinMax(t,e,s,i=t.length/3){if(i>0){let r=t[0],n=t[1],a=t[2],o=r,h=n,d=a;const u=i*3;for(let f=3;f<u;f+=3){const p=t[f],m=t[f+1],_=t[f+2];p<r&&(r=p),m<n&&(n=m),_<a&&(a=_),p>o&&(o=p),m>h&&(h=m),_>d&&(d=_)}e.set(r,n,a),s.set(o,h,d)}}compute(t,e){ve.computeMinMax(t,wn,Tn,e),this.setMinMax(wn,Tn)}intersectsBoundingSphere(t){return this._distanceToBoundingSphereSq(t)<=t.radius*t.radius}_distanceToBoundingSphereSq(t){const e=this.getMin(),s=this.getMax();let i=0;const r=["x","y","z"];for(let n=0;n<3;++n){let a=0;const o=t.center[r[n]],h=e[r[n]],d=s[r[n]];let u=0;o<h&&(u=h-o,a+=u*u),o>d&&(u=o-d,a+=u*u),i+=a}return i}_expand(t,e){wn.add2(this.getMin(),t),Tn.add2(this.getMax(),e),this.setMinMax(wn,Tn)}}const bl=new A,bS=new A;class Bf{constructor(t=new A,e=.5){c(this,"center");c(this,"radius");b.assert(!Object.isFrozen(t),"The constructor of 'BoundingSphere' does not accept a constant (frozen) object as a 'center' parameter"),this.center=t,this.radius=e}containsPoint(t){const e=bl.sub2(t,this.center).lengthSq(),s=this.radius;return e<s*s}intersectsRay(t,e){const s=bl.copy(t.origin).sub(this.center),i=s.dot(bS.copy(t.direction).normalize()),r=s.dot(s)-this.radius*this.radius;if(r>0&&i>0)return!1;const n=i*i-r;if(n<0)return!1;const a=Math.abs(-i-Math.sqrt(n));return e&&e.copy(t.direction).mulScalar(a).add(t.origin),!0}intersectsBoundingSphere(t){bl.sub2(t.center,this.center);const e=t.radius+this.radius;return bl.lengthSq()<=e*e}}class cy{constructor(t=A.UP,e=0){c(this,"normal",new A);c(this,"distance");this.normal.copy(t),this.distance=e}clone(){const t=this.constructor;return new t().copy(this)}copy(t){return this.normal.copy(t.normal),this.distance=t.distance,this}intersectsLine(t,e,s){const i=this.distance,r=this.normal.dot(t)+i,n=this.normal.dot(e)+i,a=r/(r-n),o=a>=0&&a<=1;return o&&s&&s.lerp(t,e,a),o}intersectsRay(t,e){const s=this.normal.dot(t.direction);if(s===0)return!1;const i=-(this.normal.dot(t.origin)+this.distance)/s;return i>=0&&e&&e.copy(t.direction).mulScalar(i).add(t.origin),i>=0}normalize(){const t=1/this.normal.length();return this.normal.mulScalar(t),this.distance*=t,this}set(t,e,s,i){return this.normal.set(t,e,s),this.distance=i,this}setFromPointNormal(t,e){return this.normal.copy(e),this.distance=-this.normal.dot(t),this}}class wS{constructor(){c(this,"planes",[]);for(let t=0;t<6;t++)this.planes[t]=new cy}clone(){const t=this.constructor;return new t().copy(this)}copy(t){for(let e=0;e<6;e++)this.planes[e].copy(t.planes[e]);return this}setFromMat4(t){const[e,s,i,r,n,a,o,h,d,u,f,p,m,_,g,y]=t.data,w=this.planes;w[0].set(r-e,h-n,p-d,y-m).normalize(),w[1].set(r+e,h+n,p+d,y+m).normalize(),w[2].set(r+s,h+a,p+u,y+_).normalize(),w[3].set(r-s,h-a,p-u,y-_).normalize(),w[4].set(r-i,h-o,p-f,y-g).normalize(),w[5].set(r+i,h+o,p+f,y+g).normalize()}containsPoint(t){for(let e=0;e<6;e++){const{normal:s,distance:i}=this.planes[e];if(s.dot(t)+i<=0)return!1}return!0}containsSphere(t){const{center:e,radius:s}=t;let i=0;for(let r=0;r<6;r++){const{normal:n,distance:a}=this.planes[r],o=n.dot(e)+a;if(o<=-s)return 0;o>s&&i++}return i===6?2:1}}class _u{constructor(t,e){c(this,"origin",new A);c(this,"direction",A.FORWARD.clone());t&&this.origin.copy(t),e&&this.direction.copy(e)}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.set(t.origin,t.direction)}clone(){return new this.constructor(this.origin,this.direction)}}const mc="linear",Nf="inverse",dy="exponential",nt=0,oe=1,zf=2,Uf=0,ct=1,TS=2,uy=4,AS=5,_c=6,gc=8,Ut=0,ES=2,CS=3,MS=4,ts=0,Ph=1,fy=2,PS=3,Io=1,Do=2,Rh=4,vt=0,nn=1,xo=2,RS=3,fe=0,at=1,yc=2,xc=3,Sc=4,an=5,IS=0,Ih=1,Dh=2,gu=3,DS=4,LS=5,FS=6,Ri=7,yu=0,Fi=1,or=2,py=0,my=1,Vf=2,vc=3,Gf=4,bc=5,ur=6,Te=7,wc=8,Hf=9,Yo=10,Tc=11,it=12,Ac=13,et=14,Oi=15,Di=16,Ec=17,ya=18,Wf=19,cs=20,Cc=21,$f=22,qf=23,Ko=24,Zo=25,Mc=26,Pc=27,_y=28,gy=29,yy=30,xy=31,Xf=32,Sy=33,jf=34,Yf=35,Kf=36,on=37,Zf=38,vy=39,Qf=40,Jf=41,ep=42,tp=43,sp=44,by=45,ip=46,Rc=47,rp=48,yt=49,xa=50,np=51,ap=52,op=53,xu=54,Su=55,vu=56,bu=61,wu=62,Tu=63,wy=64,Ty=65,Ay=66,Ey=67,Au=68,ca=69,At=new Map([[py,{name:"A8",size:1,ldr:!0}],[ap,{name:"R8",size:1,ldr:!0}],[my,{name:"L8",size:1,ldr:!0}],[Vf,{name:"LA8",size:2,ldr:!0}],[op,{name:"RG8",size:2,ldr:!0}],[vc,{name:"RGB565",size:2,ldr:!0}],[Gf,{name:"RGBA5551",size:2,ldr:!0}],[bc,{name:"RGBA4",size:2,ldr:!0}],[ur,{name:"RGB8",size:4,ldr:!0}],[Te,{name:"RGBA8",size:4,ldr:!0,srgbFormat:cs}],[xa,{name:"R16F",size:2}],[np,{name:"RG16F",size:4}],[Tc,{name:"RGB16F",size:8}],[it,{name:"RGBA16F",size:8}],[Ac,{name:"RGB32F",size:16}],[et,{name:"RGBA32F",size:16}],[Oi,{name:"R32F",size:4}],[Di,{name:"DEPTH",size:4}],[ca,{name:"DEPTH16",size:2}],[Ec,{name:"DEPTHSTENCIL",size:4}],[ya,{name:"111110F",size:4}],[Wf,{name:"SRGB8",size:4,ldr:!0,srgb:!0}],[cs,{name:"SRGBA8",size:4,ldr:!0,srgb:!0}],[xy,{name:"BGRA8",size:4,ldr:!0}],[wy,{name:"SBGRA8",size:4,ldr:!0,srgb:!0}],[wc,{name:"DXT1",blockSize:8,ldr:!0,srgbFormat:xu}],[Hf,{name:"DXT3",blockSize:16,ldr:!0,srgbFormat:Su}],[Yo,{name:"DXT5",blockSize:16,ldr:!0,srgbFormat:vu}],[Cc,{name:"ETC1",blockSize:8,ldr:!0}],[$f,{name:"ETC2_RGB",blockSize:8,ldr:!0,srgbFormat:bu}],[qf,{name:"ETC2_RGBA",blockSize:16,ldr:!0,srgbFormat:wu}],[Ko,{name:"PVRTC_2BPP_RGB_1",ldr:!0,blockSize:8}],[Zo,{name:"PVRTC_2BPP_RGBA_1",ldr:!0,blockSize:8}],[Mc,{name:"PVRTC_4BPP_RGB_1",ldr:!0,blockSize:8}],[Pc,{name:"PVRTC_4BPP_RGBA_1",ldr:!0,blockSize:8}],[_y,{name:"ASTC_4x4",blockSize:16,ldr:!0,srgbFormat:Tu}],[gy,{name:"ATC_RGB",blockSize:8,ldr:!0}],[yy,{name:"ATC_RGBA",blockSize:16,ldr:!0}],[Ty,{name:"BC6H_RGBF",blockSize:16}],[Ay,{name:"BC6H_RGBUF",blockSize:16}],[Ey,{name:"BC7_RGBA",blockSize:16,ldr:!0,srgbFormat:Au}],[xu,{name:"DXT1_SRGB",blockSize:8,ldr:!0,srgb:!0}],[Su,{name:"DXT3_SRGBA",blockSize:16,ldr:!0,srgb:!0}],[vu,{name:"DXT5_SRGBA",blockSize:16,ldr:!0,srgb:!0}],[bu,{name:"ETC2_SRGB",blockSize:8,ldr:!0,srgb:!0}],[wu,{name:"ETC2_SRGBA",blockSize:16,ldr:!0,srgb:!0}],[Tu,{name:"ASTC_4x4_SRGB",blockSize:16,ldr:!0,srgb:!0}],[Au,{name:"BC7_SRGBA",blockSize:16,ldr:!0,srgb:!0}],[Xf,{name:"R8I",size:1,isInt:!0}],[Sy,{name:"R8U",size:1,isInt:!0}],[jf,{name:"R16I",size:2,isInt:!0}],[Yf,{name:"R16U",size:2,isInt:!0}],[Kf,{name:"R32I",size:4,isInt:!0}],[on,{name:"R32U",size:4,isInt:!0}],[Zf,{name:"RG8I",size:2,isInt:!0}],[vy,{name:"RG8U",size:2,isInt:!0}],[Qf,{name:"RG16I",size:4,isInt:!0}],[Jf,{name:"RG16U",size:4,isInt:!0}],[ep,{name:"RG32I",size:8,isInt:!0}],[tp,{name:"RG32U",size:8,isInt:!0}],[sp,{name:"RGBA8I",size:4,isInt:!0}],[by,{name:"RGBA8U",size:4,isInt:!0}],[ip,{name:"RGBA16I",size:8,isInt:!0}],[Rc,{name:"RGBA16U",size:8,isInt:!0}],[rp,{name:"RGBA32I",size:16,isInt:!0}],[yt,{name:"RGBA32U",size:16,isInt:!0}]]),kS=l=>{var t;return((t=At.get(l))==null?void 0:t.blockSize)!==void 0},Lh=l=>{var t;return((t=At.get(l))==null?void 0:t.srgb)===!0},sa=l=>{var t;return((t=At.get(l))==null?void 0:t.isInt)===!0},Ic=l=>{var t;return((t=At.get(l))==null?void 0:t.srgbFormat)||l},OS=l=>{for(const[t,e]of At)if(e.srgbFormat===l)return t;return l},Cy=l=>{const t=At.get(l);return!!(t!=null&&t.ldr&&!(t!=null&&t.srgb))},My=l=>{switch(l){case Oi:case Ac:case et:return Float32Array;case Kf:case ep:case rp:return Int32Array;case on:case tp:case yt:return Uint32Array;case jf:case Qf:case ip:return Int16Array;case op:case Yf:case Jf:case Rc:case vc:case Gf:case bc:case xa:case np:case Tc:case it:return Uint16Array;case Xf:case Zf:case sp:return Int8Array;default:return Uint8Array}},Dc=0,Lc=1,Py=2,Ry=3,Fs=4,lr=5,Kr=6,Xe="POSITION",ss="NORMAL",si="TANGENT",ei="BLENDWEIGHT",Jt="BLENDINDICES",It="COLOR",lm="TEXCOORD",ds="TEXCOORD0",yn="TEXCOORD1",Qo="TEXCOORD2",Jo="TEXCOORD3",el="TEXCOORD4",tl="TEXCOORD5",sl="TEXCOORD6",il="TEXCOORD7",Eu="ATTR0",Cu="ATTR1",Iy="ATTR2",Dy="ATTR3",Ly="ATTR4",BS="ATTR5",NS="ATTR6",zS="ATTR7",Lo="ATTR8",Fo="ATTR9",US="ATTR10",VS="ATTR11",lp="ATTR12",Sa="ATTR13",hp="ATTR14",va="ATTR15",Fy=1,da=0,GS=2,HS=3,WS=5,wl=0,ky=1,ld=2,Bi="default",ln="rgbm",cp="rgbe",ko="rgbp",dp="swizzleGGGR",Mu=1,fr=2,Oy=3,$s="2d",$S="2d-array",qS="cube",XS="3d",uh=0,hd=1,jS=2,YS=3,KS=4,ZS="none",Pu="cube",hm="equirect",QS="octahedral",By="glsl",Fh="wgsl",Fc=0,Zr=1,kc=2,rl=3,Ny=4,Oo=5,Re=6,ua=0,hn=1,Ks=2,hr=3,Qt=4,ba=5,Qr=6,Jr=7,en=8,Bo=9,No=10,zo=11,kh=12,Uo=13,wa=14,JS=15,ev=16,Oc=17,tv=18,sv=19,iv=20,Bc=21,Nc=22,up=23,zy=24,rv=25,Ta=26,Aa=27,Ea=28,Ca=29,Ma=30,zc=31,Uc=32,Pa=33,Vc=34,Gc=35,Ra=36,Hc=37,Wc=38,Oh=39,fp=40,pp=41,nv=42,av=43,ov=44,lv=45,hv=46,cv=47,dv=48,uv=49,mp=["bool","int","float","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","mat2","mat3","mat4","sampler2D","samplerCube","","sampler2DShadow","samplerCubeShadow","sampler3D","","","","","sampler2DArray","uint","uvec2","uvec3","uvec4","","","","","","","","","","","","","isampler2D","usampler2D","isamplerCube","usamplerCube","isampler3D","usampler3D","isampler2DArray","usampler2DArray"],fv=[["bool"],["i32"],["f32"],["vec2f","vec2<f32>"],["vec3f","vec3<f32>"],["vec4f","vec4<f32>"],["vec2i","vec2<i32>"],["vec3i","vec3<i32>"],["vec4i","vec4<i32>"],["vec2<bool>"],["vec3<bool>"],["vec4<bool>"],["mat2x2f","mat2x2<f32>"],["mat3x3f","mat3x3<f32>"],["mat4x4f","mat4x4<f32>"],["texture_2d<f32>"],["texture_cube<f32>"],["array<f32>"],["texture_depth_2d"],["texture_depth_cube"],["texture_3d<f32>"],["array<vec2<f32>>"],["array<vec3<f32>>"],["array<vec4<f32>>"],["array<mat4x4<f32>>"],["texture_2d_array<f32>"],["u32"],["vec2u","vec2<u32>"],["vec3u","vec3<u32>"],["vec4u","vec4<u32>"],["array<i32>"],["array<u32>"],["array<bool>"],["array<vec2i>","array<vec2<i32>>"],["array<vec2u>","array<vec2<u32>>"],["array<vec2b>","array<vec2<bool>>"],["array<vec3i>","array<vec3<i32>>"],["array<vec3u>","array<vec3<u32>>"],["array<vec3b>","array<vec3<bool>>"],["array<vec4i>","array<vec4<i32>>"],["array<vec4u>","array<vec4<u32>>"],["array<vec4b>","array<vec4<bool>>"],["texture_2d<i32>"],["texture_2d<u32>"],["texture_cube<i32>"],["texture_cube<u32>"],["texture_3d<i32>"],["texture_3d<u32>"],["texture_2d_array<i32>"],["texture_2d_array<u32>"]],pv=new Map;fv.forEach((l,t)=>{l.forEach(e=>pv.set(e,t))});const mv="webgl2",_p=1,fi=2,_v=4,gv="ldr",Uy=1,Vy=2,Gy=4,Hy=8,Wy=16,$y=32,qy=64,Xy=128,yv=255,Bh=0,jy=1,Ru=2,xv=["view","mesh","mesh_ub"],gp="default",fa=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Uint16Array],So=[1,1,2,2,4,4,4,2],Sv=["INT8","UINT8","INT16","UINT16","INT32","UINT32","FLOAT32","FLOAT16"],Nh=[Uint8Array,Uint16Array,Uint32Array],vv=[1,2,4],Ae={};Ae[Xe]=0;Ae[ss]=1;Ae[ei]=2;Ae[Jt]=3;Ae[It]=4;Ae[ds]=5;Ae[yn]=6;Ae[Qo]=7;Ae[Jo]=8;Ae[el]=9;Ae[tl]=10;Ae[sl]=11;Ae[il]=12;Ae[si]=13;Ae[Eu]=0;Ae[Cu]=1;Ae[Iy]=2;Ae[Dy]=3;Ae[Ly]=4;Ae[BS]=5;Ae[NS]=6;Ae[zS]=7;Ae[Lo]=8;Ae[Fo]=9;Ae[US]=10;Ae[VS]=11;Ae[lp]=12;Ae[Sa]=13;Ae[hp]=14;Ae[va]=15;const Gi="1.51",Mi="1.55",gr="1.56",Et="1.57",cd="1.60",Se="1.62",pi="1.65",cm="1.70",dm="2.1",bv="2.3",An="2.5",Qi=class Qi{static clearGpuMarkers(){Qi.markers.length=0}static pushGpuMarker(t,e){Qi.markers.push(e),t.pushMarker(e)}static popGpuMarker(t){Qi.markers.length&&Qi.markers.pop(),t.popMarker()}static toString(){return Qi.markers.join(" | ")}};c(Qi,"markers",[]);let G=Qi,wv=0;const Tv={[$s]:"texture2D",[qS]:"textureCube",[XS]:"texture3D",[$S]:"texture2DArray"};class $c{constructor(t,e){c(this,"slot",-1);c(this,"scopeId",null);this.name=t,this.visibility=e}}class yp extends $c{}class Av extends $c{constructor(e,s,i=!1){super(e,s);c(this,"format","");this.readOnly=i,b.assert(i||!(s&_p),"Storage buffer can only be used in read-only mode in SHADERSTAGE_VERTEX.")}}class yi extends $c{constructor(t,e,s=$s,i=uh,r=!0,n=null){super(t,e),this.textureDimension=s,this.sampleType=i,this.hasSampler=r,this.samplerName=n??`${t}_sampler`}}class Ev extends $c{constructor(t,e=Te,s=$s,i=!0,r=!1){super(t,_v),this.format=e,this.textureDimension=s,this.write=i,this.read=r}}class Yy{constructor(t,e){c(this,"uniformBufferFormats",[]);c(this,"textureFormats",[]);c(this,"storageTextureFormats",[]);c(this,"storageBufferFormats",[]);this.id=wv++,gn.setName(this,`BindGroupFormat_${this.id}`),b.assert(e);let s=0;e.forEach(r=>{r.slot=s++,r instanceof yi&&r.hasSampler&&s++,r instanceof yp?this.uniformBufferFormats.push(r):r instanceof yi?this.textureFormats.push(r):r instanceof Ev?this.storageTextureFormats.push(r):r instanceof Av?this.storageBufferFormats.push(r):b.assert("Invalid bind format",r)}),this.device=t;const i=t.scope;this.bufferFormatsMap=new Map,this.uniformBufferFormats.forEach((r,n)=>this.bufferFormatsMap.set(r.name,n)),this.textureFormatsMap=new Map,this.textureFormats.forEach((r,n)=>{this.textureFormatsMap.set(r.name,n),r.scopeId=i.resolve(r.name)}),this.storageTextureFormatsMap=new Map,this.storageTextureFormats.forEach((r,n)=>{this.storageTextureFormatsMap.set(r.name,n),r.scopeId=i.resolve(r.name)}),this.storageBufferFormatsMap=new Map,this.storageBufferFormats.forEach((r,n)=>{this.storageBufferFormatsMap.set(r.name,n),r.scopeId=i.resolve(r.name)}),this.impl=t.createBindGroupFormatImpl(this),b.trace(eS,`Alloc: Id ${this.id}, while rendering [${G.toString()}]`,this)}destroy(){this.impl.destroy()}getTexture(t){const e=this.textureFormatsMap.get(t);return e!==void 0?this.textureFormats[e]:null}getStorageTexture(t){const e=this.storageTextureFormatsMap.get(t);return e!==void 0?this.storageTextureFormats[e]:null}getShaderDeclarationTextures(t){let e="";return this.textureFormats.forEach(s=>{let i=Tv[s.textureDimension];b.assert(i,"Unsupported texture type",s.textureDimension);const r=i==="texture2DArray",n=s.sampleType===KS?"u":s.sampleType===YS?"i":"";i=`${n}${i}`;let a="",o="";r&&(a="_texture",o=`#define ${s.name} ${n}sampler2DArray(${s.name}${a}, ${s.name}_sampler)
`),e+=`layout(set = ${t}, binding = ${s.slot}) uniform ${i} ${s.name}${a};
`,s.hasSampler&&(e+=`layout(set = ${t}, binding = ${s.slot+1}) uniform sampler ${s.name}_sampler;
`),e+=o}),e}loseContext(){}}class Ht{constructor(){c(this,"_cache",new Map)}get(t,e){return this._cache.has(t)||(this._cache.set(t,e()),t.on("destroy",()=>{this.remove(t)}),t.on("devicelost",()=>{var s,i;(i=(s=this._cache.get(t))==null?void 0:s.loseContext)==null||i.call(s,t)})),this._cache.get(t)}remove(t){var e,s;(s=(e=this._cache.get(t))==null?void 0:e.destroy)==null||s.call(e,t),this._cache.delete(t)}}class Li{static calcLevelDimension(t,e){return Math.max(t>>e,1)}static calcMipLevelsCount(t,e,s=1){return 1+Math.floor(Math.log2(Math.max(t,e,s)))}static calcLevelGpuSize(t,e,s,i){var u;const r=At.get(i);b.assert(r!==void 0,`Invalid pixel format ${i}`);const n=((u=At.get(i))==null?void 0:u.size)??0;if(n>0)return t*e*s*n;const a=r.blockSize??0;let o=Math.floor((t+3)/4);const h=Math.floor((e+3)/4),d=Math.floor((s+3)/4);return(i===Ko||i===Zo)&&(o=Math.max(Math.floor(o/2),1)),o*h*d*a}static calcGpuSize(t,e,s,i,r,n){let a=0;for(;a+=Li.calcLevelGpuSize(t,e,s,i),!(!r||t===1&&e===1&&s===1);)t=Math.max(t>>1,1),e=Math.max(e>>1,1),s=Math.max(s>>1,1);return a*(n?6:1)}}let Cv=0;class ce{constructor(t,e={}){c(this,"name");c(this,"_gpuSize",0);c(this,"id",Cv++);c(this,"_invalid",!1);c(this,"_lockedLevel",-1);c(this,"_lockedMode",wl);c(this,"renderVersionDirty",0);c(this,"_storage",!1);c(this,"_numLevels",0);c(this,"_numLevelsRequested");var i;this.device=t,b.assert(this.device,"Texture constructor requires a graphicsDevice to be valid"),b.assert(!e.width||Number.isInteger(e.width),"Texture width must be an integer number, got",e),b.assert(!e.height||Number.isInteger(e.height),"Texture height must be an integer number, got",e),b.assert(!e.depth||Number.isInteger(e.depth),"Texture depth must be an integer number, got",e),this.name=e.name??"",this._width=Math.floor(e.width??4),this._height=Math.floor(e.height??4),this._format=e.format??Te,this._compressed=kS(this._format),this._integerFormat=sa(this._format),this._integerFormat&&(e.minFilter=fe,e.magFilter=fe),this._volume=e.volume??!1,this._depth=Math.floor(e.depth??1),this._arrayLength=Math.floor(e.arrayLength??0),this._storage=e.storage??!1,this._cubemap=e.cubemap??!1,this._flipY=e.flipY??!1,this._premultiplyAlpha=e.premultiplyAlpha??!1,this._mipmaps=e.mipmaps??!0,this._numLevelsRequested=e.numLevels,e.numLevels!==void 0&&(this._numLevels=e.numLevels),this._updateNumLevel(),this._minFilter=e.minFilter??an,this._magFilter=e.magFilter??at,this._anisotropy=e.anisotropy??1,this._addressU=e.addressU??nt,this._addressV=e.addressV??nt,this._addressW=e.addressW??nt,this._compareOnRead=e.compareOnRead??!1,this._compareFunc=e.compareFunc??Ih,this.type=e.hasOwnProperty("type")?e.type:Bi,b.assert(!e.hasOwnProperty("rgbm"),"Use options.type."),b.assert(!e.hasOwnProperty("swizzleGGGR"),"Use options.type."),this.projection=ZS,this._cubemap?this.projection=Pu:e.projection&&e.projection!==Pu&&(this.projection=e.projection),this.profilerHint=e.profilerHint??0,this._levels=e.levels;const s=!!e.levels;this._levels||(this._levels=this._cubemap?[[null,null,null,null,null,null]]:[null]),this.recreateImpl(s),t.textures.push(this),b.trace(Zp,`Alloc: Id ${this.id} ${this.name}: ${this.width}x${this.height} [${(i=At.get(this.format))==null?void 0:i.name}]${this.cubemap?"[Cubemap]":""}${this.volume?"[Volume]":""}${this.array?"[Array]":""}[MipLevels:${this.numLevels}]`,this)}destroy(){b.trace(Zp,`DeAlloc: Id ${this.id} ${this.name}`);const t=this.device;if(t){const e=t.textures.indexOf(this);e!==-1&&t.textures.splice(e,1),t.scope.removeValue(this),this.impl.destroy(t),this.adjustVramSizeTracking(t._vram,-this._gpuSize),this._levels=null,this.device=null}}recreateImpl(t=!0){var s;const{device:e}=this;(s=this.impl)==null||s.destroy(e),this.impl=null,this.impl=e.createTextureImpl(this),this.dirtyAll(),t&&this.upload()}resize(t,e,s=1){const i=this.device;this.adjustVramSizeTracking(i._vram,-this._gpuSize),this.impl.destroy(i),this._width=Math.floor(t),this._height=Math.floor(e),this._depth=Math.floor(s),this._updateNumLevel(),this.impl=i.createTextureImpl(this),this.dirtyAll()}loseContext(){this.impl.loseContext(),this.dirtyAll()}adjustVramSizeTracking(t,e){b.trace(Kx,`${this.id} ${this.name} size: ${e} vram.texture: ${t.tex} => ${t.tex+e}`),t.tex+=e,this.profilerHint===Mu?t.texShadow+=e:this.profilerHint===fr?t.texAsset+=e:this.profilerHint===Oy&&(t.texLightmap+=e)}propertyChanged(t){this.impl.propertyChanged(t),this.renderVersionDirty=this.device.renderVersion}_updateNumLevel(){const t=this.mipmaps?Li.calcMipLevelsCount(this.width,this.height):1,e=this._numLevelsRequested;e!==void 0&&e>t&&b.warn("Texture#numLevels: requested mip level count is greater than the maximum possible, will be clamped to",t,this),this._numLevels=Math.min(e??t,t),this._mipmaps=this._numLevels>1}get lockedMode(){return this._lockedMode}set minFilter(t){this._minFilter!==t&&(sa(this._format)?b.warn("Texture#minFilter: minFilter property cannot be changed on an integer texture, will remain FILTER_NEAREST",this):(this._minFilter=t,this.propertyChanged(Uy)))}get minFilter(){return this._minFilter}set magFilter(t){this._magFilter!==t&&(sa(this._format)?b.warn("Texture#magFilter: magFilter property cannot be changed on an integer texture, will remain FILTER_NEAREST",this):(this._magFilter=t,this.propertyChanged(Vy)))}get magFilter(){return this._magFilter}set addressU(t){this._addressU!==t&&(this._addressU=t,this.propertyChanged(Gy))}get addressU(){return this._addressU}set addressV(t){this._addressV!==t&&(this._addressV=t,this.propertyChanged(Hy))}get addressV(){return this._addressV}set addressW(t){if(!this._volume){b.warn("pc.Texture#addressW: Can't set W addressing mode for a non-3D texture.");return}t!==this._addressW&&(this._addressW=t,this.propertyChanged(Wy))}get addressW(){return this._addressW}set compareOnRead(t){this._compareOnRead!==t&&(this._compareOnRead=t,this.propertyChanged($y))}get compareOnRead(){return this._compareOnRead}set compareFunc(t){this._compareFunc!==t&&(this._compareFunc=t,this.propertyChanged(qy))}get compareFunc(){return this._compareFunc}set anisotropy(t){this._anisotropy!==t&&(this._anisotropy=t,this.propertyChanged(Xy))}get anisotropy(){return this._anisotropy}set mipmaps(t){this._mipmaps!==t&&(this.device.isWebGPU?b.warn("Texture#mipmaps: mipmap property is currently not allowed to be changed on WebGPU, create the texture appropriately.",this):sa(this._format)?b.warn("Texture#mipmaps: mipmap property cannot be changed on an integer texture, will remain false",this):this._mipmaps=t,t&&(this._needsMipmapsUpload=!0))}get mipmaps(){return this._mipmaps}get numLevels(){return this._numLevels}get storage(){return this._storage}get width(){return this._width}get height(){return this._height}get depth(){return this._depth}get format(){return this._format}get cubemap(){return this._cubemap}get gpuSize(){const t=this.pot&&this._mipmaps&&!(this._compressed&&this._levels.length===1);return Li.calcGpuSize(this._width,this._height,this._depth,this._format,t,this._cubemap)}get array(){return this._arrayLength>0}get arrayLength(){return this._arrayLength}get volume(){return this._volume}set srgb(t){var s,i,r,n;const e=Lh(this.format);if(t!==e)if(t){const a=Ic(this.format);this._format!==a&&(b.warn(`Switching format of texture '${this.name}' to sRGB equivalent: ${(s=At.get(this.format))==null?void 0:s.name} -> ${(i=At.get(a))==null?void 0:i.name}. This is an expensive operation, and the texture should be created using the right format to avoid this.`,this),this._format=a,this.recreateImpl(),this.device._shadersDirty=!0)}else{const a=OS(this.format);this._format!==a&&(b.warn(`Switching format of texture '${this.name}' to linear equivalent: ${(r=At.get(this.format))==null?void 0:r.name} -> ${(n=At.get(a))==null?void 0:n.name}. This is an expensive operation, and the texture should be created using the right format to avoid this.`,this),this._format=a,this.recreateImpl(),this.device._shadersDirty=!0)}}get srgb(){return Lh(this.format)}set flipY(t){this._flipY!==t&&(this._flipY=t,this._needsUpload=!0)}get flipY(){return this._flipY}set premultiplyAlpha(t){this._premultiplyAlpha!==t&&(this._premultiplyAlpha=t,this._needsUpload=!0)}get premultiplyAlpha(){return this._premultiplyAlpha}get pot(){return z.powerOfTwo(this._width)&&z.powerOfTwo(this._height)}get encoding(){switch(this.type){case ln:return"rgbm";case cp:return"rgbe";case ko:return"rgbp"}return Cy(this.format)?"srgb":"linear"}dirtyAll(){this._levelsUpdated=this._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0],this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,this._mipmapsUploaded=!1,this.propertyChanged(yv)}lock(t={}){t.level??(t.level=0),t.face??(t.face=0),t.mode??(t.mode=ld),b.assert(this._lockedMode===wl,"The texture is already locked. Call `texture.unlock()` before attempting to lock again.",this),b.assert(t.mode===ky||t.mode===ld,"Cannot lock a texture with TEXTURELOCK_NONE. To unlock a texture, call `texture.unlock()`.",this),this._lockedMode=t.mode,this._lockedLevel=t.level;const e=this.cubemap?this._levels[t.face]:this._levels;if(e[t.level]===null){const s=Math.max(1,this._width>>t.level),i=Math.max(1,this._height>>t.level),r=Math.max(1,this._depth>>t.level),n=new ArrayBuffer(Li.calcLevelGpuSize(s,i,r,this._format));e[t.level]=new(My(this._format))(n)}return e[t.level]}setSource(t,e=0){let s=!1,i,r;if(this._cubemap){if(t[0]){i=t[0].width||0,r=t[0].height||0;for(let n=0;n<6;n++){const a=t[n];if(!a||a.width!==i||a.height!==r||!this.device._isBrowserInterface(a)){s=!0;break}}}else s=!0;if(!s)for(let n=0;n<6;n++)this._levels[e][n]!==t[n]&&(this._levelsUpdated[e][n]=!0)}else this.device._isBrowserInterface(t)||(s=!0),s||(t!==this._levels[e]&&(this._levelsUpdated[e]=!0),t instanceof HTMLVideoElement?(i=t.videoWidth,r=t.videoHeight):(i=t.width,r=t.height));if(s)if(this._width=4,this._height=4,this._cubemap)for(let n=0;n<6;n++)this._levels[e][n]=null,this._levelsUpdated[e][n]=!0;else this._levels[e]=null,this._levelsUpdated[e]=!0;else e===0&&(this._width=i,this._height=r),this._levels[e]=t;(this._invalid!==s||!s)&&(this._invalid=s,this.upload())}getSource(t=0){return this._levels[t]}unlock(){this._lockedMode===wl&&b.warn("pc.Texture#unlock: Attempting to unlock a texture that is not locked.",this),this._lockedMode===ld&&this.upload(),this._lockedLevel=-1,this._lockedMode=wl}upload(){var t,e;this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,(e=(t=this.impl).uploadImmediate)==null||e.call(t,this.device,this)}read(t,e,s,i,r={}){var n,a;return(a=(n=this.impl).read)==null?void 0:a.call(n,t,e,s,i,r)}}const Mv={white:[255,255,255,255],gray:[128,128,128,255],black:[0,0,0,255],normal:[128,128,255,255],pink:[255,128,255,255]};class Pv{constructor(){c(this,"map",new Map)}destroy(){this.map.forEach(t=>{t.destroy()})}}const Rv=new Ht,tn=(l,t)=>{const e=Rv.get(l,()=>new Pv);if(!e.map.has(t)){const s=new ce(l,{name:`built-in-texture-${t}`,width:1,height:1,format:Te}),i=s.lock(),r=Mv[t];b.assert(r,`Data for built-in texture '${t}' not found`),i.set(r),s.unlock(),e.map.set(t,s)}return e.map.get(t)};let Iv=0;class Ky{constructor(){c(this,"bindGroup");c(this,"offsets",[])}}class xp{constructor(t,e,s){c(this,"renderVersionUpdated",-1);c(this,"uniformBuffers");c(this,"uniformBufferOffsets",[]);this.id=Iv++,this.device=t,this.format=e,this.dirty=!0,this.impl=t.createBindGroupImpl(this),this.textures=[],this.storageTextures=[],this.storageBuffers=[],this.uniformBuffers=[],this.defaultUniformBuffer=s,s&&this.setUniformBuffer(gp,s),b.trace(Jx,`Alloc: Id ${this.id}`,this,e)}destroy(){this.impl.destroy(),this.impl=null,this.format=null,this.defaultUniformBuffer=null}setUniformBuffer(t,e){const s=this.format.bufferFormatsMap.get(t);b.assert(s!==void 0,`Setting a uniform [${t}] on a bind group with id ${this.id} which does not contain it, while rendering [${G.toString()}]`,this),this.uniformBuffers[s]!==e&&(this.uniformBuffers[s]=e,this.dirty=!0)}setStorageBuffer(t,e){const s=this.format.storageBufferFormatsMap.get(t);b.assert(s!==void 0,`Setting a storage buffer [${t}] on a bind group with id: ${this.id} which does not contain it, while rendering [${G.toString()}]`,this),this.storageBuffers[s]!==e&&(this.storageBuffers[s]=e,this.dirty=!0)}setTexture(t,e){const s=this.format.textureFormatsMap.get(t);b.assert(s!==void 0,`Setting a texture [${t}] on a bind group with id: ${this.id} which does not contain it, while rendering [${G.toString()}]`,this),this.textures[s]!==e?(this.textures[s]=e,this.dirty=!0):this.renderVersionUpdated<e.renderVersionDirty&&(this.dirty=!0)}setStorageTexture(t,e){const s=this.format.storageTextureFormatsMap.get(t);b.assert(s!==void 0,`Setting a storage texture [${t}] on a bind group with id: ${this.id} which does not contain it, while rendering [${G.toString()}]`,this),this.storageTextures[s]!==e?(this.storageTextures[s]=e,this.dirty=!0):this.renderVersionUpdated<e.renderVersionDirty&&(this.dirty=!0)}updateUniformBuffers(){for(let t=0;t<this.uniformBuffers.length;t++)this.uniformBuffers[t].update()}update(){const{textureFormats:t,storageTextureFormats:e,storageBufferFormats:s}=this.format;for(let i=0;i<t.length;i++){const r=t[i];let n=r.scopeId.value;n||(r.name==="uSceneDepthMap"&&(b.errorOnce(`A uSceneDepthMap texture is used by the shader but a scene depth texture is not available. Use CameraComponent.requestSceneDepthMap / enable Depth Grabpass on the Camera Component to enable it. Rendering [${G.toString()}]`),n=tn(this.device,"white")),r.name==="uSceneColorMap"&&(b.errorOnce(`A uSceneColorMap texture is used by the shader but a scene color texture is not available. Use CameraComponent.requestSceneColorMap / enable Color Grabpass on the Camera Component to enable it. Rendering [${G.toString()}]`),n=tn(this.device,"pink")),n||(b.errorOnce(`Texture ${r.name} is required for rendering but was not set. Rendering [${G.toString()}]`),n=tn(this.device,"pink"))),this.setTexture(r.name,n)}for(let i=0;i<e.length;i++){const r=e[i],n=r.scopeId.value;b.assert(n,`Value was not set when assigning storage texture slot [${r.name}] to a bind group, while rendering [${G.toString()}]`,this),this.setStorageTexture(r.name,n)}for(let i=0;i<s.length;i++){const r=s[i],n=r.scopeId.value;b.assert(n,`Value was not set when assigning storage buffer slot [${r.name}] to a bind group, while rendering [${G.toString()}]`,this),this.setStorageBuffer(r.name,n)}this.uniformBufferOffsets.length=this.uniformBuffers.length;for(let i=0;i<this.uniformBuffers.length;i++){const r=this.uniformBuffers[i];this.uniformBufferOffsets[i]=r.offset,this.renderVersionUpdated<r.renderVersionDirty&&(this.dirty=!0)}this.dirty&&(this.dirty=!1,this.renderVersionUpdated=this.device.renderVersion,this.impl.update(this))}}const Ue={set(l,t,e,s=1){return l&~(s<<e)|t<<e},get(l,t,e=1){return l>>t&e},all(l,t,e=1){const s=e<<t;return(l&s)===s},any(l,t,e=1){return(l&e<<t)!==0}},Tl=7,Hi=15,um=0,fm=3,pm=7,mm=11,_m=14,gm=18,Iu=22,ym=23,xm=24,Sm=25,vm=26,Dv=15,Lv=Iu,Ws=class Ws{constructor(t=!1,e=Ut,s=ct,i=Uf,r,n,a,o=!0,h=!0,d=!0,u=!0){c(this,"target0",0);this.setColorBlend(e,s,i),this.setAlphaBlend(r??e,n??s,a??i),this.setColorWrite(o,h,d,u),this.blend=t}set blend(t){this.target0=Ue.set(this.target0,t?1:0,vm)}get blend(){return Ue.all(this.target0,vm)}setColorBlend(t,e,s){this.target0=Ue.set(this.target0,t,um,Tl),this.target0=Ue.set(this.target0,e,fm,Hi),this.target0=Ue.set(this.target0,s,pm,Hi)}setAlphaBlend(t,e,s){this.target0=Ue.set(this.target0,t,mm,Tl),this.target0=Ue.set(this.target0,e,_m,Hi),this.target0=Ue.set(this.target0,s,gm,Hi)}setColorWrite(t,e,s,i){this.redWrite=t,this.greenWrite=e,this.blueWrite=s,this.alphaWrite=i}get colorOp(){return Ue.get(this.target0,um,Tl)}get colorSrcFactor(){return Ue.get(this.target0,fm,Hi)}get colorDstFactor(){return Ue.get(this.target0,pm,Hi)}get alphaOp(){return Ue.get(this.target0,mm,Tl)}get alphaSrcFactor(){return Ue.get(this.target0,_m,Hi)}get alphaDstFactor(){return Ue.get(this.target0,gm,Hi)}set redWrite(t){this.target0=Ue.set(this.target0,t?1:0,Iu)}get redWrite(){return Ue.all(this.target0,Iu)}set greenWrite(t){this.target0=Ue.set(this.target0,t?1:0,ym)}get greenWrite(){return Ue.all(this.target0,ym)}set blueWrite(t){this.target0=Ue.set(this.target0,t?1:0,xm)}get blueWrite(){return Ue.all(this.target0,xm)}set alphaWrite(t){this.target0=Ue.set(this.target0,t?1:0,Sm)}get alphaWrite(){return Ue.all(this.target0,Sm)}get allWrite(){return Ue.get(this.target0,Lv,Dv)}copy(t){return this.target0=t.target0,this}clone(){return new this.constructor().copy(this)}get key(){return this.target0}equals(t){return this.target0===t.target0}};c(Ws,"NOBLEND",Object.freeze(new Ws)),c(Ws,"NOWRITE",Object.freeze(new Ws(void 0,void 0,void 0,void 0,void 0,void 0,void 0,!1,!1,!1,!1))),c(Ws,"ALPHABLEND",Object.freeze(new Ws(!0,Ut,_c,gc))),c(Ws,"ADDBLEND",Object.freeze(new Ws(!0,Ut,ct,ct)));let bt=Ws;class Sp{constructor(){c(this,"map",new Map);c(this,"id",0)}get(t){let e=this.map.get(t);return e===void 0&&(e=this.id++,this.map.set(t,e)),e}}const Fv=new Sp,bm=7,wm=0,Tm=3,Ji=class Ji{constructor(t=gu,e=!0){c(this,"data",0);c(this,"_depthBias",0);c(this,"_depthBiasSlope",0);c(this,"key",0);this.func=t,this.write=e}set test(t){this.func=t?gu:Ri,this.updateKey()}get test(){return this.func!==Ri}set write(t){this.data=Ue.set(this.data,t?1:0,Tm),this.updateKey()}get write(){return Ue.all(this.data,Tm)}set func(t){this.data=Ue.set(this.data,t,wm,bm),this.updateKey()}get func(){return Ue.get(this.data,wm,bm)}set depthBias(t){this._depthBias=t,this.updateKey()}get depthBias(){return this._depthBias}set depthBiasSlope(t){this._depthBiasSlope=t,this.updateKey()}get depthBiasSlope(){return this._depthBiasSlope}copy(t){return this.data=t.data,this._depthBias=t._depthBias,this._depthBiasSlope=t._depthBiasSlope,this.key=t.key,this}clone(){return new this.constructor().copy(this)}updateKey(){const{data:t,_depthBias:e,_depthBiasSlope:s}=this,i=`${t}-${e}-${s}`;this.key=Fv.get(i)}equals(t){return this.key===t.key}};c(Ji,"DEFAULT",Object.freeze(new Ji)),c(Ji,"NODEPTH",Object.freeze(new Ji(Ri,!1))),c(Ji,"WRITEDEPTH",Object.freeze(new Ji(Ri,!0)));let us=Ji;class Zy{constructor(){c(this,"globalId",0);c(this,"revision",0)}equals(t){return this.globalId===t.globalId&&this.revision===t.revision}copy(t){this.globalId=t.globalId,this.revision=t.revision}reset(){this.globalId=0,this.revision=0}}let Am=0;class kv{constructor(){Am++,this.version=new Zy,this.version.globalId=Am}increment(){this.version.revision++}}class Ov{constructor(t){this.name=t,this.value=null,this.versionObject=new kv}toJSON(t){}setValue(t){this.value=t,this.versionObject.increment()}getValue(){return this.value}}class Bv{constructor(t){this.name=t,this.variables=new Map}resolve(t){return this.variables.has(t)||this.variables.set(t,new Ov(t)),this.variables.get(t)}removeValue(t){for(const e in this.variables){const s=this.variables[e];s.value===t&&(s.value=null)}}}let Nv=0;class fs{constructor(t,e,s,i){c(this,"usage",ts);b.assert(arguments.length<=4&&(!i||typeof i=="object"),"incorrect arguments"),this.usage=(i==null?void 0:i.usage)??ts,this.device=t,this.format=e,this.numVertices=s,this.id=Nv++,this.impl=t.createVertexBufferImpl(this,e,i),this.numBytes=e.verticesByteSize?e.verticesByteSize:e.size*s,this.adjustVramSizeTracking(t._vram,this.numBytes);const r=i==null?void 0:i.data;r?this.setData(r):this.storage=new ArrayBuffer(this.numBytes),this.device.buffers.push(this)}destroy(){const t=this.device,e=t.buffers.indexOf(this);e!==-1&&t.buffers.splice(e,1),this.impl.initialized&&(this.impl.destroy(t),this.adjustVramSizeTracking(t._vram,-this.storage.byteLength))}adjustVramSizeTracking(t,e){b.trace(Zx,`${this.id} size: ${e} vram.vb: ${t.vb} => ${t.vb+e}`),t.vb+=e}loseContext(){this.impl.loseContext()}getFormat(){return this.format}getUsage(){return this.usage}getNumVertices(){return this.numVertices}lock(){return this.storage}unlock(){this.impl.unlock(this)}setData(t){return t.byteLength!==this.numBytes?(b.error(`VertexBuffer: wrong initial data size: expected ${this.numBytes}, got ${t.byteLength}`),!1):(this.storage=t,this.unlock(),!0)}}function cn(l){if(l==null)return 0;let t=0;for(let e=0,s=l.length;e<s;e++)t=(t<<5)-t+l.charCodeAt(e),t|=0;return t}function Qy(l){let e=2166136261;for(let s=0;s<l.length;s++)e^=l[s],e*=16777619;return e>>>0}const zv=new Sp,Uv=[2,4,8,12,16],Vv=new Ht;class Dt{constructor(t,e,s){this.device=t,this._elements=[],this.hasUv0=!1,this.hasUv1=!1,this.hasColor=!1,this.hasTangents=!1,this.verticesByteSize=0,this.vertexCount=s,this.interleaved=s===void 0,this.instancing=!1,this.size=e.reduce((n,a)=>n+Math.ceil(a.components*So[a.type]/4)*4,0);let i=0,r;for(let n=0,a=e.length;n<a;n++){const o=e[n];r=o.components*So[o.type],b.assert(Dt.isElementValid(t,o),`WebGPU does not support the format of vertex element ${o.semantic} : ${Sv[o.type]} x ${o.components}`),s&&(i=z.roundUp(i,r),b.assert(r%4===0,`Non-interleaved vertex format with element size not multiple of 4 can have performance impact on some platforms. Element size: ${r}`));const h=o.asInt??!1,d=h?!1:o.normalize??!1,u={name:o.semantic,offset:s?i:o.hasOwnProperty("offset")?o.offset:i,stride:s?r:o.hasOwnProperty("stride")?o.stride:this.size,dataType:o.type,numComponents:o.components,normalize:d,size:r,asInt:h};this._elements.push(u),s?i+=r*s:i+=Math.ceil(r/4)*4,o.semantic===ds?this.hasUv0=!0:o.semantic===yn?this.hasUv1=!0:o.semantic===It?this.hasColor=!0:o.semantic===si&&(this.hasTangents=!0)}s&&(this.verticesByteSize=i),this._evaluateHash()}get elements(){return this._elements}static getDefaultInstancingFormat(t){return Vv.get(t,()=>new Dt(t,[{semantic:lp,components:4,type:Re},{semantic:Sa,components:4,type:Re},{semantic:hp,components:4,type:Re},{semantic:va,components:4,type:Re}]))}static isElementValid(t,e){const s=e.components*So[e.type];return!(t.isWebGPU&&!Uv.includes(s))}update(){b.assert(!this.device.isWebGPU,"VertexFormat#update is not supported on WebGPU and VertexFormat cannot be modified."),this._evaluateHash()}_evaluateHash(){const t=[],e=[],s=this._elements.length;for(let r=0;r<s;r++){const{name:n,dataType:a,numComponents:o,normalize:h,offset:d,stride:u,size:f,asInt:p}=this._elements[r],m=n+a+o+h+p;t.push(m);const _=m+d+u+f;e.push(_)}t.sort();const i=t.join();this.batchingHash=cn(i),this.shaderProcessingHashString=i,this.renderingHashString=e.join("_"),this.renderingHash=zv.get(this.renderingHashString)}}const Gv=new Sp,hc=class hc{constructor(t={}){c(this,"_func");c(this,"_ref");c(this,"_fail");c(this,"_zfail");c(this,"_zpass");c(this,"_readMask");c(this,"_writeMask");c(this,"_dirty",!0);c(this,"_key");this._func=t.func??Ri,this._ref=t.ref??0,this._readMask=t.readMask??255,this._writeMask=t.writeMask??255,this._fail=t.fail??da,this._zfail=t.zfail??da,this._zpass=t.zpass??da,this._evalKey()}set func(t){this._func=t,this._dirty=!0}get func(){return this._func}set ref(t){this._ref=t,this._dirty=!0}get ref(){return this._ref}set fail(t){this._fail=t,this._dirty=!0}get fail(){return this._fail}set zfail(t){this._zfail=t,this._dirty=!0}get zfail(){return this._zfail}set zpass(t){this._zpass=t,this._dirty=!0}get zpass(){return this._zpass}set readMask(t){this._readMask=t,this._dirty=!0}get readMask(){return this._readMask}set writeMask(t){this._writeMask=t,this._dirty=!0}get writeMask(){return this._writeMask}_evalKey(){const{_func:t,_ref:e,_fail:s,_zfail:i,_zpass:r,_readMask:n,_writeMask:a}=this,o=`${t},${e},${s},${i},${r},${n},${a}`;this._key=Gv.get(o),this._dirty=!1}get key(){return this._dirty&&this._evalKey(),this._key}copy(t){return this._func=t._func,this._ref=t._ref,this._readMask=t._readMask,this._writeMask=t._writeMask,this._fail=t._fail,this._zfail=t._zfail,this._zpass=t._zpass,this._dirty=t._dirty,this._key=t._key,this}clone(){return new this.constructor().copy(this)}};c(hc,"DEFAULT",Object.freeze(new hc));let Zs=hc;const cc=class cc extends de{constructor(e,s){var i,r,n,a,o,h;super();c(this,"canvas");c(this,"backBuffer",null);c(this,"backBufferSize",new W);c(this,"backBufferFormat");c(this,"backBufferAntialias",!1);c(this,"isWebGPU",!1);c(this,"isWebGL2",!1);c(this,"isHdr",!1);c(this,"scope");c(this,"maxAnisotropy");c(this,"maxCubeMapSize");c(this,"maxTextureSize");c(this,"maxVolumeSize");c(this,"maxColorAttachments",1);c(this,"precision");c(this,"samples");c(this,"maxSamples",1);c(this,"supportsStencil");c(this,"supportsCompute",!1);c(this,"supportsStorageTextureRead",!1);c(this,"renderTarget",null);c(this,"shaders",[]);c(this,"textures",[]);c(this,"targets",new Set);c(this,"renderVersion",0);c(this,"renderPassIndex");c(this,"insideRenderPass",!1);c(this,"supportsUniformBuffers",!1);c(this,"supportsClipDistances",!1);c(this,"textureFloatRenderable");c(this,"textureHalfFloatRenderable");c(this,"textureRG11B10Renderable",!1);c(this,"textureFloatFilterable",!1);c(this,"quadVertexBuffer");c(this,"blendState",new bt);c(this,"depthState",new us);c(this,"stencilEnabled",!1);c(this,"stencilFront",new Zs);c(this,"stencilBack",new Zs);c(this,"dynamicBuffers");c(this,"gpuProfiler");c(this,"defaultClearOptions",{color:[0,0,0,1],depth:1,stencil:0,flags:Io|Do});c(this,"clientRect",{width:0,height:0});c(this,"_shadersDirty",!1);this.canvas=e,this.initOptions={...s},(i=this.initOptions).alpha??(i.alpha=!0),(r=this.initOptions).depth??(r.depth=!0),(n=this.initOptions).stencil??(n.stencil=!0),(a=this.initOptions).antialias??(a.antialias=!0),(o=this.initOptions).powerPreference??(o.powerPreference="high-performance"),(h=this.initOptions).displayFormat??(h.displayFormat=gv),this._maxPixelRatio=be.browser?Math.min(1,window.devicePixelRatio):1,this.buffers=[],this._vram={texShadow:0,texAsset:0,texLightmap:0,tex:0,vb:0,ib:0,ub:0,sb:0},this._shaderStats={vsCompiled:0,fsCompiled:0,linked:0,materialShaders:0,compileTime:0},this.initializeContextCaches(),this._drawCallsPerFrame=0,this._shaderSwitchesPerFrame=0,this._primsPerFrame=[];for(let d=Dc;d<=Kr;d++)this._primsPerFrame[d]=0;this._renderTargetCreationTime=0,this.scope=new Bv("Device"),this.textureBias=this.scope.resolve("textureBias"),this.textureBias.setValue(0)}postInit(){const e=new Dt(this,[{semantic:Xe,components:2,type:Re}]),s=new Float32Array([-1,-1,1,-1,-1,1,1,1]);this.quadVertexBuffer=new fs(this,e,4,{data:s})}destroy(){var e,s,i;this.fire("destroy"),(e=this.quadVertexBuffer)==null||e.destroy(),this.quadVertexBuffer=null,(s=this.dynamicBuffers)==null||s.destroy(),this.dynamicBuffers=null,(i=this.gpuProfiler)==null||i.destroy(),this.gpuProfiler=null}onDestroyShader(e){this.fire("destroy:shader",e);const s=this.shaders.indexOf(e);s!==-1&&this.shaders.splice(s,1)}postDestroy(){this.scope=null,this.canvas=null}loseContext(){var e;this.contextLost=!0,this.backBufferSize.set(-1,-1);for(const s of this.textures)s.loseContext();for(const s of this.buffers)s.loseContext();for(const s of this.targets)s.loseContext();(e=this.gpuProfiler)==null||e.loseContext()}restoreContext(){var e,s;this.contextLost=!1,this.initializeRenderState(),this.initializeContextCaches();for(const i of this.buffers)i.unlock();(s=(e=this.gpuProfiler)==null?void 0:e.restoreContext)==null||s.call(e)}toJSON(e){}initializeContextCaches(){this.indexBuffer=null,this.vertexBuffers=[],this.shader=null,this.shaderValid=void 0,this.shaderAsyncCompile=!1,this.renderTarget=null}initializeRenderState(){this.blendState=new bt,this.depthState=new us,this.cullMode=nn,this.vx=this.vy=this.vw=this.vh=0,this.sx=this.sy=this.sw=this.sh=0,this.blendColor=new Y(0,0,0,0)}setStencilState(e,s){b.assert(!1)}setBlendState(e){b.assert(!1)}setBlendColor(e,s,i,r){b.assert(!1)}setDepthState(e){b.assert(!1)}setCullMode(e){b.assert(!1)}setRenderTarget(e){this.renderTarget=e}setIndexBuffer(e){this.indexBuffer=e}setVertexBuffer(e){e&&this.vertexBuffers.push(e)}clearVertexBuffer(){this.vertexBuffers.length=0}getRenderTarget(){return this.renderTarget}initRenderTarget(e){if(e.initialized)return;const s=ae();this.fire("fbo:create",{timestamp:s,target:this}),e.init(),this.targets.add(e),this._renderTargetCreationTime+=ae()-s}_isBrowserInterface(e){return this._isImageBrowserInterface(e)||this._isImageCanvasInterface(e)||this._isImageVideoInterface(e)}_isImageBrowserInterface(e){return typeof ImageBitmap<"u"&&e instanceof ImageBitmap||typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement}_isImageCanvasInterface(e){return typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement}_isImageVideoInterface(e){return typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement}resizeCanvas(e,s){const i=Math.min(this._maxPixelRatio,be.browser?window.devicePixelRatio:1),r=Math.floor(e*i),n=Math.floor(s*i);(r!==this.canvas.width||n!==this.canvas.height)&&this.setResolution(r,n)}setResolution(e,s){this.canvas.width=e,this.canvas.height=s,this.fire(cc.EVENT_RESIZE,e,s)}updateClientRect(){if(be.worker)this.clientRect.width=this.canvas.width,this.clientRect.height=this.canvas.height;else{const e=this.canvas.getBoundingClientRect();this.clientRect.width=e.width,this.clientRect.height=e.height}}get width(){return this.canvas.width}get height(){return this.canvas.height}set fullscreen(e){b.error("GraphicsDevice.fullscreen is not implemented on current device.")}get fullscreen(){return b.error("GraphicsDevice.fullscreen is not implemented on current device."),!1}set maxPixelRatio(e){this._maxPixelRatio=e}get maxPixelRatio(){return this._maxPixelRatio}get deviceType(){return this._deviceType}startRenderPass(e){}endRenderPass(e){}startComputePass(e){}endComputePass(){}frameStart(){this.renderPassIndex=0,this.renderVersion++,b.call(()=>{if(Qs.get(tS)){const e=this.textures.slice();e.sort((i,r)=>r.gpuSize-i.gpuSize),b.log(`Textures: ${e.length}`);let s=0;e.forEach((i,r)=>{const n=i.gpuSize;s+=n,b.log(`${r}. ${i.name} ${i.width}x${i.height} VRAM: ${(n/1024/1024).toFixed(2)} MB`)}),b.log(`Total: ${(s/1024/1024).toFixed(2)}MB`)}})}frameEnd(){}computeDispatch(e,s="Unnamed"){}getRenderableHdrFormat(e=[ya,it,et],s=!0,i=1){for(let r=0;r<e.length;r++){const n=e[r];switch(n){case ya:{if(this.textureRG11B10Renderable)return n;break}case it:if(this.textureHalfFloatRenderable)return n;break;case et:if(this.isWebGPU&&i>1)continue;if(this.textureFloatRenderable&&(!s||this.textureFloatFilterable))return n;break}}}};c(cc,"EVENT_RESIZE","resizecanvas");let zh=cc,Hv=0;class St{constructor(t={}){c(this,"name");c(this,"_device");c(this,"_colorBuffer");c(this,"_colorBuffers");c(this,"_depthBuffer");c(this,"_depth");c(this,"_stencil");c(this,"_samples");c(this,"autoResolve");c(this,"_face");c(this,"_mipLevel");c(this,"_mipmaps");c(this,"flipY");var i,r,n,a,o,h;b.assert(!(t instanceof zh),"pc.RenderTarget constructor no longer accepts GraphicsDevice parameter."),this.id=Hv++;const e=((i=t.colorBuffer)==null?void 0:i.device)??((r=t.colorBuffers)==null?void 0:r[0].device)??((n=t.depthBuffer)==null?void 0:n.device)??t.graphicsDevice;b.assert(e,"Failed to obtain the device, colorBuffer nor depthBuffer store it."),this._device=e;const{maxSamples:s}=this._device;if(this._samples=Math.min(t.samples??1,s),e.isWebGPU&&(this._samples=this._samples>1?s:1),this._colorBuffer=t.colorBuffer,t.colorBuffer&&(this._colorBuffers=[t.colorBuffer]),this._depthBuffer=t.depthBuffer,this._face=t.face??0,this._depthBuffer){const d=this._depthBuffer._format;d===Di||d===ca?(this._depth=!0,this._stencil=!1):d===Ec?(this._depth=!0,this._stencil=!0):d===Oi&&this._depthBuffer.device.isWebGPU&&this._samples>1?(this._depth=!0,this._stencil=!1):(b.warn("Incorrect depthBuffer format. Must be pc.PIXELFORMAT_DEPTH or pc.PIXELFORMAT_DEPTHSTENCIL"),this._depth=!1,this._stencil=!1)}else this._depth=t.depth??!0,this._stencil=t.stencil??!1;t.colorBuffers&&(b.assert(!this._colorBuffers,"When constructing RenderTarget and options.colorBuffers is used, options.colorBuffer must not be used."),this._colorBuffers||(this._colorBuffers=[...t.colorBuffers],this._colorBuffer=t.colorBuffers[0])),this.autoResolve=t.autoResolve??!0,this.name=t.name,this.name||(this.name=(a=this._colorBuffer)==null?void 0:a.name),this.name||(this.name=(o=this._depthBuffer)==null?void 0:o.name),this.name||(this.name="Untitled"),this.flipY=t.flipY??!1,this._mipLevel=t.mipLevel??0,this._mipLevel>0&&this._depth&&(b.error(`Rendering to a mipLevel is not supported when render target uses a depth buffer. Ignoring mipLevel ${this._mipLevel} for render target ${this.name}`,{renderTarget:this,options:t}),this._mipLevel=0),this._mipmaps=t.mipLevel===void 0,this.validateMrt(),this.impl=e.createRenderTargetImpl(this),b.trace(Kp,`Alloc: Id ${this.id} ${this.name}: ${this.width}x${this.height} [samples: ${this.samples}]${(h=this._colorBuffers)!=null&&h.length?`[MRT: ${this._colorBuffers.length}]`:""}${this.colorBuffer?"[Color]":""}${this.depth?"[Depth]":""}${this.stencil?"[Stencil]":""}[Face:${this.face}]`)}destroy(){b.trace(Kp,`DeAlloc: Id ${this.id} ${this.name}`);const t=this._device;t&&(t.targets.delete(this),t.renderTarget===this&&t.setRenderTarget(null),this.destroyFrameBuffers())}destroyFrameBuffers(){const t=this._device;t&&this.impl.destroy(t)}destroyTextureBuffers(){var t,e;(t=this._depthBuffer)==null||t.destroy(),this._depthBuffer=null,(e=this._colorBuffers)==null||e.forEach(s=>{s.destroy()}),this._colorBuffers=null,this._colorBuffer=null}resize(t,e){var s,i;if(this.width!==t||this.height!==e){if(this.mipLevel>0){b.warn("Only a render target rendering to mipLevel 0 can be resized, ignoring.",this);return}const r=this._device;this.destroyFrameBuffers(),r.renderTarget===this&&r.setRenderTarget(null),(s=this._depthBuffer)==null||s.resize(t,e),(i=this._colorBuffers)==null||i.forEach(n=>{n.resize(t,e)}),this.validateMrt(),this.impl=r.createRenderTargetImpl(this)}}validateMrt(){b.call(()=>{if(this._colorBuffers){const{width:t,height:e,cubemap:s,volume:i}=this._colorBuffers[0];for(let r=1;r<this._colorBuffers.length;r++){const n=this._colorBuffers[r];b.assert(n.width===t,"All render target color buffers must have the same width",this),b.assert(n.height===e,"All render target color buffers must have the same height",this),b.assert(n.cubemap===s,"All render target color buffers must have the same cubemap setting",this),b.assert(n.volume===i,"All render target color buffers must have the same volume setting",this)}}})}init(){this.impl.init(this._device,this)}get initialized(){return this.impl.initialized}get device(){return this._device}loseContext(){this.impl.loseContext()}resolve(t=!0,e=!!this._depthBuffer){this._device&&this._samples>1&&(G.pushGpuMarker(this._device,`RESOLVE-RT:${this.name}:${t?"[color]":""}:${e?"[depth]":""}`),this.impl.resolve(this._device,this,t,e),G.popGpuMarker(this._device))}copy(t,e,s){if(!this._device)if(t._device)this._device=t._device;else return b.error("Render targets are not initialized"),!1;G.pushGpuMarker(this._device,`COPY-RT:${t.name}->${this.name}`);const i=this._device.copyRenderTarget(t,this,e,s);return G.popGpuMarker(this._device),i}get samples(){return this._samples}get depth(){return this._depth}get stencil(){return this._stencil}get colorBuffer(){return this._colorBuffer}getColorBuffer(t){var e;return(e=this._colorBuffers)==null?void 0:e[t]}get depthBuffer(){return this._depthBuffer}get face(){return this._face}get mipLevel(){return this._mipLevel}get mipmaps(){return this._mipmaps}get width(){var e,s;let t=((e=this._colorBuffer)==null?void 0:e.width)||((s=this._depthBuffer)==null?void 0:s.width)||this._device.width;return this._mipLevel>0&&(t=Li.calcLevelDimension(t,this._mipLevel)),t}get height(){var e,s;let t=((e=this._colorBuffer)==null?void 0:e.height)||((s=this._depthBuffer)==null?void 0:s.height)||this._device.height;return this._mipLevel>0&&(t=Li.calcLevelDimension(t,this._mipLevel)),t}isColorBufferSrgb(t=0){if(this.device.backBuffer===this)return Lh(this.device.backBufferFormat);const e=this.getColorBuffer(t);return e?Lh(e.format):!1}}const Wv={equals(l,t){if(l.length!==t.length)return!1;for(let e=0;e<l.length;e++)if(l[e]!==t[e])return!1;return!0}};class qc{constructor(){c(this,"_refCount",0)}incRefCount(){this._refCount++}decRefCount(){this._refCount--}get refCount(){return this._refCount}}class $v extends qc{constructor(e){super();c(this,"object");this.object=e,this.incRefCount()}}class qv{constructor(){c(this,"cache",new Map)}destroy(){this.cache.forEach(t=>{var e;(e=t.object)==null||e.destroy()}),this.cache.clear()}clear(){this.cache.clear()}get(t){const e=this.cache.get(t);return e?(e.incRefCount(),e.object):null}set(t,e){b.assert(!this.cache.has(t),"RefCountedKeyCache: Trying to put object with key that already exists in the cache",{key:t,object:e}),this.cache.set(t,new $v(e))}release(t){var s;const e=this.cache.get(t);e?(e.decRefCount(),e.refCount===0&&(this.cache.delete(t),(s=e.object)==null||s.destroy())):b.warn("RefCountedKeyCache: Trying to release object that is not in the cache",{key:t})}}class Xv extends qv{loseContext(t){this.clear()}}const jv=new Ht,dd=l=>jv.get(l,()=>new Xv),dt=[];dt[Ks]=1;dt[hr]=2;dt[Qt]=3;dt[ba]=4;dt[hn]=1;dt[Qr]=2;dt[Jr]=3;dt[en]=4;dt[ua]=1;dt[Bo]=2;dt[No]=3;dt[zo]=4;dt[kh]=8;dt[Uo]=12;dt[wa]=16;dt[Ta]=1;dt[Aa]=2;dt[Ea]=3;dt[Ca]=4;class wt{constructor(t,e,s=0){c(this,"name");c(this,"type");c(this,"byteSize");c(this,"offset");c(this,"scopeId");c(this,"count");c(this,"numComponents");if(this.shortName=t,this.name=s?`${t}[0]`:t,this.type=e,this.numComponents=dt[e],b.assert(this.numComponents,`Unhandled uniform format ${e} used for ${t}`),this.updateType=e,s>0)switch(e){case Ks:this.updateType=Oc;break;case hn:this.updateType=Ma;break;case Ta:this.updateType=zc;break;case ua:this.updateType=Uc;break;case hr:this.updateType=Bc;break;case Qr:this.updateType=Pa;break;case Aa:this.updateType=Vc;break;case Bo:this.updateType=Gc;break;case Qt:this.updateType=Nc;break;case Jr:this.updateType=Ra;break;case Ea:this.updateType=Hc;break;case No:this.updateType=Wc;break;case ba:this.updateType=up;break;case en:this.updateType=Oh;break;case Ca:this.updateType=fp;break;case zo:this.updateType=pp;break;case wa:this.updateType=zy;break;default:b.error(`Uniform array of type ${mp[e]} is not supported when processing uniform '${t}'.`),b.call(()=>{this.invalid=!0});break}this.count=s,b.assert(!isNaN(s),`Unsupported uniform: ${t}[${s}]`),b.call(()=>{isNaN(s)&&(this.invalid=!0)});let i=this.numComponents;s&&(i=z.roundUp(i,4)),this.byteSize=i*4,s&&(this.byteSize*=s),b.assert(this.byteSize,`Unknown byte size for uniform format ${e} used for ${t}`)}get isArrayType(){return this.count>0}calculateOffset(t){let e=this.byteSize<=8?this.byteSize:16;this.count&&(e=16),t=z.roundUp(t,e),this.offset=t/4}}class Jy{constructor(t,e){c(this,"byteSize",0);c(this,"map",new Map);this.scope=t.scope,this.uniforms=e;let s=0;for(let i=0;i<e.length;i++){const r=e[i];r.calculateOffset(s),s=r.offset*4+r.byteSize,r.scopeId=this.scope.resolve(r.name),this.map.set(r.name,r)}this.byteSize=z.roundUp(s,16)}get(t){return this.map.get(t)}getShaderDeclaration(t,e){const s=xv[t];let i=`layout(set = ${t}, binding = ${e}, std140) uniform ub_${s} {
`;return this.uniforms.forEach(r=>{const n=mp[r.type];b.assert(n.length>0,`Uniform type ${r.type} is not handled.`),i+=`    ${n} ${r.shortName}${r.count?`[${r.count}]`:""};
`}),`${i}};
`}}const yr="Preprocessor",xs=/[ \t]*#(ifn?def|if|endif|else|elif|define|undef|extension|include)/g,ud=/define[ \t]+([^\n]+)\r?(?:\n|$)/g,Em=/extension[ \t]+([\w-]+)[ \t]*:[ \t]*(enable|require)/g,fd=/undef[ \t]+([^\n]+)\r?(?:\n|$)/g,pd=/(ifdef|ifndef|if)[ \t]*([^\r\n]+)\r?\n/g,md=/(endif|else|elif)([ \t][^\r\n]+)?\r?(?:\n|$)/g,Cm=/([\w-]+)/,Yv=/(!|\s)?defined\(([\w-]+)\)/,Kv=/([a-z_]\w*)\s*(==|!=|<|<=|>|>=)\s*([\w"']+)/i,Zv=/[|&+-]/g,_d=/include[ \t]+"([\w-]+)"\r?(?:\n|$)/g,Cs=class Cs{static run(t,e=new Map,s={}){Cs.sourceName=s.sourceName,t=this.stripComments(t),t=t.split(/\r?\n/).map(a=>a.trimEnd()).join(`
`);const i=new Map;if(s.stripUnusedColorAttachments){const a=new Map,o=/(pcFragColor[1-8])\b/g,h=t.match(o);h==null||h.forEach(d=>{const u=parseInt(d.charAt(d.length-1),10);a.set(u,(a.get(u)??0)+1)}),a.forEach((d,u)=>{d===1&&i.set(`REMOVE_COLOR_ATTACHMENT_${u}`,"")})}t=this._preprocess(t,i,e,s.stripDefines);const r=new Map;i.forEach((a,o)=>{Number.isInteger(parseFloat(a))&&!a.includes(".")&&r.set(o,a)});const n=new Map;return i.forEach((a,o)=>{o.startsWith("__INJECT_")&&n.set(o,a)}),t=this.stripComments(t),t=this.RemoveEmptyLines(t),t=this.processArraySize(t,r),t=this.injectDefines(t,n),t}static stripComments(t){return t.replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"$1")}static processArraySize(t,e){return t!==null&&e.forEach((s,i)=>{t=t.replace(new RegExp(`\\[${i}\\]`,"g"),`[${s}]`)}),t}static injectDefines(t,e){if(t!==null&&e.size>0){const s=t.split(`
`);e.forEach((i,r)=>{const n=new RegExp(`\\b${r}\\b`,"g");for(let a=0;a<s.length;a++)s[a].includes("#")||(s[a]=s[a].replace(n,i))}),t=s.join(`
`)}return t}static RemoveEmptyLines(t){return t!==null&&(t=t.split(/\r?\n/).map(e=>e.trim()===""?"":e).join(`
`),t=t.replace(/(\n\n){3,}/g,`

`)),t}static _preprocess(t,e=new Map,s,i){const r=t,n=[];let a=!1,o;for(;(o=xs.exec(t))!==null;){const h=o[1];switch(h){case"define":{ud.lastIndex=o.index;const d=ud.exec(t);b.assert(d,`Invalid [${h}]: ${t.substring(o.index,o.index+100)}...`),a||(a=d===null);const u=d[1];Cm.lastIndex=d.index;const p=Cm.exec(u)[1];let m=u.substring(p.length).trim();m===""&&(m="true");const _=Cs._keep(n);_&&(e.set(p,m),i&&(t=t.substring(0,d.index-1)+t.substring(ud.lastIndex),xs.lastIndex=d.index-1)),b.trace(yr,`${h}: [${p}] ${m} ${_?"":"IGNORED"}`),i||(xs.lastIndex=d.index+d[0].length);break}case"undef":{fd.lastIndex=o.index;const d=fd.exec(t),u=d[1].trim(),f=Cs._keep(n);f&&(e.delete(u),i&&(t=t.substring(0,d.index-1)+t.substring(fd.lastIndex),xs.lastIndex=d.index-1)),b.trace(yr,`${h}: [${u}] ${f?"":"IGNORED"}`),i||(xs.lastIndex=d.index+d[0].length);break}case"extension":{Em.lastIndex=o.index;const d=Em.exec(t);if(b.assert(d,`Invalid [${h}]: ${t.substring(o.index,o.index+100)}...`),a||(a=d===null),d){const u=d[1],f=Cs._keep(n);f&&e.set(u,"true"),b.trace(yr,`${h}: [${u}] ${f?"":"IGNORED"}`)}xs.lastIndex=d.index+d[0].length;break}case"ifdef":case"ifndef":case"if":{pd.lastIndex=o.index;const d=pd.exec(t),u=d[2],f=Cs.evaluate(u,e);a||(a=f.error);let p=f.result;h==="ifndef"&&(p=!p),n.push({anyKeep:p,keep:p,start:o.index,end:pd.lastIndex}),b.trace(yr,`${h}: [${u}] => ${p}`),xs.lastIndex=d.index+d[0].length;break}case"endif":case"else":case"elif":{md.lastIndex=o.index;const d=md.exec(t),u=n.pop(),f=u.keep?t.substring(u.end,o.index):"";b.trace(yr,`${h}: [previous block] => ${f!==""}`),t=t.substring(0,u.start)+f+t.substring(md.lastIndex),xs.lastIndex=u.start+f.length;const p=d[1];if(p==="else"||p==="elif"){let m=!1;if(!u.anyKeep)if(p==="else")m=!u.keep;else{const _=Cs.evaluate(d[2],e);m=_.result,a||(a=_.error)}n.push({anyKeep:u.anyKeep||m,keep:m,start:xs.lastIndex,end:xs.lastIndex}),b.trace(yr,`${h}: [${d[2]}] => ${m}`)}break}case"include":{_d.lastIndex=o.index;const d=_d.exec(t);a||(a=d===null),b.assert(d,`Invalid [${h}]: ${t.substring(o.index,o.index+100)}...`);const u=d[1].trim(),f=Cs._keep(n);if(f){const p=s==null?void 0:s.get(u);p!==void 0?(t=t.substring(0,d.index-1)+p+t.substring(_d.lastIndex),xs.lastIndex=d.index-1):(console.error(`Include "${u}" not resolved while preprocessing ${Cs.sourceName}`,{source:r}),a=!0)}b.trace(yr,`${h}: [${u}] ${f?"":"IGNORED"}`);break}}}return a?(console.warn("Failed to preprocess shader: ",{source:r}),r):t}static _keep(t){for(let e=0;e<t.length;e++)if(!t[e].keep)return!1;return!0}static evaluate(t,e){const s=Zv.exec(t)===null;b.assert(s,`Resolving expression like this is not supported: ${t}`);let i=!1;const r=Yv.exec(t);r&&(i=r[1]==="!",t=r[2]);const n=Kv.exec(t);if(n){const o=e.get(n[1])??n[1],h=e.get(n[3])??n[3],d=n[2];let u=!1;switch(d){case"==":u=o===h;break;case"!=":u=o!==h;break;case"<":u=o<h;break;case"<=":u=o<=h;break;case">":u=o>h;break;case">=":u=o>=h;break}return{result:u,error:!s}}t=t.trim();let a=e.has(t);return i&&(a=!a),{result:a,error:!s}}};c(Cs,"sourceName");let Uh=Cs;const e0=`

#ifndef outType_0
#define outType_0 vec4
#endif

layout(location = 0) out highp outType_0 pc_fragColor;

#ifndef REMOVE_COLOR_ATTACHMENT_1
#if COLOR_ATTACHMENT_1
layout(location = 1) out highp outType_1 pc_fragColor1;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_2
#if COLOR_ATTACHMENT_2
layout(location = 2) out highp outType_2 pc_fragColor2;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_3
#if COLOR_ATTACHMENT_3
layout(location = 3) out highp outType_3 pc_fragColor3;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_4
#if COLOR_ATTACHMENT_4
layout(location = 4) out highp outType_4 pc_fragColor4;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_5
#if COLOR_ATTACHMENT_5
layout(location = 5) out highp outType_5 pc_fragColor5;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_6
#if COLOR_ATTACHMENT_6
layout(location = 6) out highp outType_6 pc_fragColor6;
#endif
#endif

#ifndef REMOVE_COLOR_ATTACHMENT_7
#if COLOR_ATTACHMENT_7
layout(location = 7) out highp outType_7 pc_fragColor7;
#endif
#endif

#define gl_FragColor pc_fragColor

#define pcFragColor0 pc_fragColor
#define pcFragColor1 pc_fragColor1
#define pcFragColor2 pc_fragColor2
#define pcFragColor3 pc_fragColor3
#define pcFragColor4 pc_fragColor4
#define pcFragColor5 pc_fragColor5
#define pcFragColor6 pc_fragColor6
#define pcFragColor7 pc_fragColor7

#define varying in

#define texture2D texture
#define texture2DBias texture
#define textureCube texture
#define texture2DProj textureProj
#define texture2DLod textureLod
#define texture2DProjLod textureProjLod
#define textureCubeLod textureLod
#define texture2DGrad textureGrad
#define texture2DProjGrad textureProjGrad
#define textureCubeGrad textureGrad
#define utexture2D texture
#define itexture2D texture

// deprecated defines
#define texture2DLodEXT texture2DLodEXT_is_no_longer_supported_use_texture2DLod_instead
#define texture2DProjLodEXT texture2DProjLodEXT_is_no_longer_supported_use_texture2DProjLod
#define textureCubeLodEXT textureCubeLodEXT_is_no_longer_supported_use_textureCubeLod_instead
#define texture2DGradEXT texture2DGradEXT_is_no_longer_supported_use_texture2DGrad_instead
#define texture2DProjGradEXT texture2DProjGradEXT_is_no_longer_supported_use_texture2DProjGrad_instead
#define textureCubeGradEXT textureCubeGradEXT_is_no_longer_supported_use_textureCubeGrad_instead

// sample shadows using textureGrad to remove derivatives in the dynamic loops (which are used by
// clustered lighting) - as DirectX shader compiler tries to unroll the loops and takes long time
// to compile the shader. Using textureLod would be even better, but WebGl does not translate it to
// lod instruction for DirectX correctly and uses SampleCmp instead of SampleCmpLevelZero or similar.
#define textureShadow(res, uv) textureGrad(res, uv, vec2(1, 1), vec2(1, 1))

// pass / accept shadow map or texture as a function parameter, on webgl this is simply passed as is
// but this is needed for WebGPU
#define SHADOWMAP_PASS(name) name
#define SHADOWMAP_ACCEPT(name) sampler2DShadow name
#define TEXTURE_PASS(name) name
#define TEXTURE_ACCEPT(name) sampler2D name
#define TEXTURE_ACCEPT_HIGHP(name) highp sampler2D name

#define GL2
`,t0=`
#define attribute in
#define varying out
#define texture2D texture
#define utexture2D texture
#define itexture2D texture
#define GL2
#define VERTEXSHADER

#define TEXTURE_PASS(name) name
#define TEXTURE_ACCEPT(name) sampler2D name
#define TEXTURE_ACCEPT_HIGHP(name) highp sampler2D name
`,s0=`

// texelFetch support and others
#extension GL_EXT_samplerless_texture_functions : require

#ifndef outType_0
#define outType_0 vec4
#endif
#ifndef outType_1
#define outType_1 vec4
#endif
#ifndef outType_2
#define outType_2 vec4
#endif
#ifndef outType_3
#define outType_3 vec4
#endif
#ifndef outType_4
#define outType_4 vec4
#endif
#ifndef outType_5
#define outType_5 vec4
#endif
#ifndef outType_6
#define outType_6 vec4
#endif
#ifndef outType_7
#define outType_7 vec4
#endif

layout(location = 0) out highp outType_0 pc_fragColor;
layout(location = 1) out highp outType_1 pc_fragColor1;
layout(location = 2) out highp outType_2 pc_fragColor2;
layout(location = 3) out highp outType_3 pc_fragColor3;
layout(location = 4) out highp outType_4 pc_fragColor4;
layout(location = 5) out highp outType_5 pc_fragColor5;
layout(location = 6) out highp outType_6 pc_fragColor6;
layout(location = 7) out highp outType_7 pc_fragColor7;

#define gl_FragColor pc_fragColor

#define pcFragColor0 pc_fragColor
#define pcFragColor1 pc_fragColor1
#define pcFragColor2 pc_fragColor2
#define pcFragColor3 pc_fragColor3
#define pcFragColor4 pc_fragColor4
#define pcFragColor5 pc_fragColor5
#define pcFragColor6 pc_fragColor6
#define pcFragColor7 pc_fragColor7

#define texture2D(res, uv) texture(sampler2D(res, res ## _sampler), uv)
#define texture2DBias(res, uv, bias) texture(sampler2D(res, res ## _sampler), uv, bias)
#define texture2DLod(res, uv, lod) textureLod(sampler2D(res, res ## _sampler), uv, lod)
#define textureCube(res, uv) texture(samplerCube(res, res ## _sampler), uv)
#define textureCubeLod(res, uv, lod) textureLod(samplerCube(res, res ## _sampler), uv, lod)
#define textureShadow(res, uv) textureLod(sampler2DShadow(res, res ## _sampler), uv, 0.0)
#define itexture2D(res, uv) texture(isampler2D(res, res ## _sampler), uv)
#define utexture2D(res, uv) texture(usampler2D(res, res ## _sampler), uv)

// deprecated defines
#define texture2DLodEXT texture2DLodEXT_is_no_longer_supported_use_texture2DLod_instead
#define texture2DProjLodEXT texture2DProjLodEXT_is_no_longer_supported_use_texture2DProjLod
#define textureCubeLodEXT textureCubeLodEXT_is_no_longer_supported_use_textureCubeLod_instead
#define texture2DGradEXT texture2DGradEXT_is_no_longer_supported_use_texture2DGrad_instead
#define texture2DProjGradEXT texture2DProjGradEXT_is_no_longer_supported_use_texture2DProjGrad_instead
#define textureCubeGradEXT textureCubeGradEXT_is_no_longer_supported_use_textureCubeGrad_instead

// TODO: implement other texture sampling macros
// #define texture2DProj textureProj
// #define texture2DProjLod textureProjLod
// #define texture2DGrad textureGrad
// #define texture2DProjGrad textureProjGrad
// #define textureCubeGrad textureGrad

// pass / accept shadow map as a function parameter, passes both the texture as well as sampler
// as the combined sampler can be only created at a point of use
#define SHADOWMAP_PASS(name) name, name ## _sampler
#define SHADOWMAP_ACCEPT(name) texture2D name, sampler name ## _sampler
#define TEXTURE_PASS(name) name, name ## _sampler
#define TEXTURE_ACCEPT(name) texture2D name, sampler name ## _sampler
#define TEXTURE_ACCEPT_HIGHP TEXTURE_ACCEPT

#define GL2
#define WEBGPU
`,i0=`

// texelFetch support and others
#extension GL_EXT_samplerless_texture_functions : require

#define texture2D(res, uv) texture(sampler2D(res, res ## _sampler), uv)
#define itexture2D(res, uv) texture(isampler2D(res, res ## _sampler), uv)
#define utexture2D(res, uv) texture(usampler2D(res, res ## _sampler), uv)

#define TEXTURE_PASS(name) name, name ## _sampler
#define TEXTURE_ACCEPT(name) texture2D name, sampler name ## _sampler
#define TEXTURE_ACCEPT_HIGHP TEXTURE_ACCEPT

#define GL2
#define WEBGPU
#define VERTEXSHADER
#define gl_VertexID gl_VertexIndex
#define gl_InstanceID gl_InstanceIndex
`,Mm=`

// convert clip space position into texture coordinates to sample scene grab textures
vec2 getGrabScreenPos(vec4 clipPos) {
    vec2 uv = (clipPos.xy / clipPos.w) * 0.5 + 0.5;

    #ifdef WEBGPU
        uv.y = 1.0 - uv.y;
    #endif

    return uv;
}

// convert uv coordinates to sample image effect texture (render target texture rendered without
// forward renderer which does the flip in the projection matrix)
vec2 getImageEffectUV(vec2 uv) {
    #ifdef WEBGPU
        uv.y = 1.0 - uv.y;
    #endif

    return uv;
}
`,Qv={vertex_position:Xe,vertex_normal:ss,vertex_tangent:si,vertex_texCoord0:ds,vertex_texCoord1:yn,vertex_texCoord2:Qo,vertex_texCoord3:Jo,vertex_texCoord4:el,vertex_texCoord5:tl,vertex_texCoord6:sl,vertex_texCoord7:il,vertex_color:It,vertex_boneIndices:Jt,vertex_boneWeights:ei};class Ft{static createDefinition(t,e){b.assert(e),b.assert(!e.vertexDefines||e.vertexDefines instanceof Map),b.assert(!e.vertexIncludes||e.vertexIncludes instanceof Map),b.assert(!e.fragmentDefines||e.fragmentDefines instanceof Map),b.assert(!e.fragmentIncludes||e.fragmentIncludes instanceof Map);const s=(a,o,h,d)=>{const u=t.isWebGPU?a:o;let f="";if(!h){let p=d.fragmentOutputTypes??"vec4";Array.isArray(p)||(p=[p]);for(let m=0;m<t.maxColorAttachments;m++){f+=`#define COLOR_ATTACHMENT_${m}
`;const _=p[m]??"vec4";f+=`#define outType_${m} ${_}
`}}return f+u},i=e.name??"Untitled";let r,n;return e.shaderLanguage===Fh?(r=e.vertexCode,n=e.fragmentCode):(r=`${Ft.versionCode(t)+s(i0,t0,!0,e)+Ft.getDefinesCode(e.vertexDefines)+Ft.precisionCode(t)}
${Mm}${Ft.getShaderNameCode(i)}${e.vertexCode}`,n=`${(e.fragmentPreamble||"")+Ft.versionCode(t)+s(s0,e0,!1,e)+Ft.getDefinesCode(e.fragmentDefines)+Ft.precisionCode(t)}
${Mm}${Ft.getShaderNameCode(i)}${e.fragmentCode||Ft.dummyFragmentCode()}`),{name:i,shaderLanguage:e.shaderLanguage??By,attributes:e.attributes,vshader:r,vincludes:e.vertexIncludes,fincludes:e.fragmentIncludes,fshader:n,useTransformFeedback:e.useTransformFeedback,meshUniformBufferFormat:e.meshUniformBufferFormat,meshBindGroupFormat:e.meshBindGroupFormat}}static getDefinesCode(t){let e="";return t==null||t.forEach((s,i)=>{e+=`#define ${i} ${s}
`}),e}static getShaderNameCode(t){return`#define SHADER_NAME ${t}
`}static dummyFragmentCode(){return"void main(void) {gl_FragColor = vec4(0.0);}"}static versionCode(t){return t.isWebGPU?`#version 450
`:`#version 300 es
`}static precisionCode(t,e){e&&e!=="highp"&&e!=="mediump"&&e!=="lowp"&&(e=null),e&&(e==="highp"&&t.maxPrecision!=="highp"&&(e="mediump"),e==="mediump"&&t.maxPrecision==="lowp"&&(e="lowp"));const s=e||t.precision;return`
            precision ${s} float;
            precision ${s} int;
            precision ${s} usampler2D;
            precision ${s} isampler2D;
            precision ${s} sampler2DShadow;
            precision ${s} samplerCubeShadow;
            precision ${s} sampler2DArray;
        `}static collectAttributes(t){const e={};let s=0,i=t.indexOf("attribute");for(;i>=0&&!(i>0&&t[i-1]==="/");){let r=!1;if(i>0){let n=t.lastIndexOf(`
`,i);n=n!==-1?n+1:0,t.substring(n,i).includes("#")&&(r=!0)}if(!r){const n=t.indexOf(";",i),a=t.lastIndexOf(" ",n),o=t.substring(a+1,n);if(e[o])b.warn(`Attribute [${o}] already exists when extracting the attributes from the vertex shader, ignoring.`,{vsCode:t});else{const h=Qv[o];h!==void 0?e[o]=h:(e[o]=`ATTR${s}`,s++)}}i=t.indexOf("attribute",i+1)}return e}}let Jv=0;class r0{constructor(t,e){c(this,"meshUniformBufferFormat");c(this,"meshBindGroupFormat");if(this.id=Jv++,this.device=t,this.definition=e,this.name=e.name||"Untitled",this.init(),e.cshader)b.assert(t.supportsCompute,"Compute shaders are not supported on this device."),b.assert(!e.vshader&&!e.fshader,"Vertex and fragment shaders are not supported when creating a compute shader.");else{b.assert(e.vshader,"No vertex shader has been specified when creating a shader."),b.assert(e.fshader,"No fragment shader has been specified when creating a shader."),e.vshader=Uh.run(e.vshader,e.vincludes,{sourceName:`vertex shader for ${this.label}`}),e.shaderLanguage===By&&(e.attributes??(e.attributes=Ft.collectAttributes(e.vshader)));const s=t.isWebGL2&&(be.name==="osx"||be.name==="ios");e.fshader=Uh.run(e.fshader,e.fincludes,{stripUnusedColorAttachments:s,sourceName:`fragment shader for ${this.label}`})}this.impl=t.createShaderImpl(this),b.trace(Qp,`Alloc: ${this.label}, stack: ${G.toString()}`,{instance:this})}init(){this.ready=!1,this.failed=!1}get label(){return`Shader Id ${this.id} ${this.name}`}destroy(){b.trace(Qp,`DeAlloc: Id ${this.id} ${this.name}`),this.device.onDestroyShader(this),this.impl.destroy(this)}loseContext(){this.init(),this.impl.loseContext()}restoreContext(){this.impl.restoreContext(this.device,this)}}class eb{constructor(){c(this,"storage");c(this,"gpuBuffer");c(this,"offset")}}const Me=[];Me[Ks]=function(l,t,e){const s=l.storageFloat32;s[e]=t};Me[hr]=(l,t,e)=>{const s=l.storageFloat32;s[e]=t[0],s[e+1]=t[1]};Me[Qt]=(l,t,e)=>{const s=l.storageFloat32;s[e]=t[0],s[e+1]=t[1],s[e+2]=t[2]};Me[ba]=(l,t,e)=>{const s=l.storageFloat32;s[e]=t[0],s[e+1]=t[1],s[e+2]=t[2],s[e+3]=t[3]};Me[hn]=function(l,t,e){const s=l.storageInt32;s[e]=t};Me[Qr]=function(l,t,e){const s=l.storageInt32;s[e]=t[0],s[e+1]=t[1]};Me[Jr]=function(l,t,e){const s=l.storageInt32;s[e]=t[0],s[e+1]=t[1],s[e+2]=t[2]};Me[en]=function(l,t,e){const s=l.storageInt32;s[e]=t[0],s[e+1]=t[1],s[e+2]=t[2],s[e+3]=t[3]};Me[kh]=(l,t,e)=>{const s=l.storageFloat32;s[e]=t[0],s[e+1]=t[1],s[e+4]=t[2],s[e+5]=t[3],s[e+8]=t[4],s[e+9]=t[5]};Me[Uo]=(l,t,e)=>{const s=l.storageFloat32;s[e]=t[0],s[e+1]=t[1],s[e+2]=t[2],s[e+4]=t[3],s[e+5]=t[4],s[e+6]=t[5],s[e+8]=t[6],s[e+9]=t[7],s[e+10]=t[8]};Me[Oc]=function(l,t,e,s){const i=l.storageFloat32;for(let r=0;r<s;r++)i[e+r*4]=t[r]};Me[Bc]=(l,t,e,s)=>{const i=l.storageFloat32;for(let r=0;r<s;r++)i[e+r*4]=t[r*2],i[e+r*4+1]=t[r*2+1]};Me[Nc]=(l,t,e,s)=>{const i=l.storageFloat32;for(let r=0;r<s;r++)i[e+r*4]=t[r*3],i[e+r*4+1]=t[r*3+1],i[e+r*4+2]=t[r*3+2]};Me[Ta]=(l,t,e,s)=>{const i=l.storageUint32;i[e]=t};Me[Aa]=(l,t,e,s)=>{const i=l.storageUint32;i[e]=t[0],i[e+1]=t[1]};Me[Ea]=(l,t,e,s)=>{const i=l.storageUint32;i[e]=t[0],i[e+1]=t[1],i[e+2]=t[2]};Me[Ca]=(l,t,e,s)=>{const i=l.storageUint32;i[e]=t[0],i[e+1]=t[1],i[e+2]=t[2],i[e+3]=t[3]};Me[Ma]=function(l,t,e,s){const i=l.storageInt32;for(let r=0;r<s;r++)i[e+r*4]=t[r]};Me[Uc]=Me[Ma];Me[zc]=function(l,t,e,s){const i=l.storageUint32;for(let r=0;r<s;r++)i[e+r*4]=t[r]};Me[Pa]=(l,t,e,s)=>{const i=l.storageInt32;for(let r=0;r<s;r++)i[e+r*4]=t[r*2],i[e+r*4+1]=t[r*2+1]};Me[Gc]=Me[Pa];Me[Vc]=(l,t,e,s)=>{const i=l.storageUint32;for(let r=0;r<s;r++)i[e+r*4]=t[r*2],i[e+r*4+1]=t[r*2+1]};Me[Ra]=(l,t,e,s)=>{const i=l.storageInt32;for(let r=0;r<s;r++)i[e+r*4]=t[r*3],i[e+r*4+1]=t[r*3+1],i[e+r*4+2]=t[r*3+2]};Me[Wc]=Me[Ra];Me[Hc]=(l,t,e,s)=>{const i=l.storageUint32;for(let r=0;r<s;r++)i[e+r*4]=t[r*3],i[e+r*4+1]=t[r*3+1],i[e+r*4+2]=t[r*3+2]};class vp{constructor(t,e,s=!0){c(this,"device");c(this,"persistent");c(this,"allocation");c(this,"storageFloat32");c(this,"storageInt32");c(this,"storageUint32");c(this,"renderVersionDirty",0);if(this.device=t,this.format=e,this.persistent=s,b.assert(e),s){this.impl=t.createUniformBufferImpl(this);const i=new ArrayBuffer(e.byteSize);this.assignStorage(new Int32Array(i)),t._vram.ub+=this.format.byteSize}else this.allocation=new eb}destroy(){if(this.persistent){const t=this.device;this.impl.destroy(t),t._vram.ub-=this.format.byteSize}}get offset(){return this.persistent?0:this.allocation.offset}assignStorage(t){this.storageInt32=t,this.storageUint32=new Uint32Array(t.buffer,t.byteOffset,t.byteLength/4),this.storageFloat32=new Float32Array(t.buffer,t.byteOffset,t.byteLength/4)}loseContext(){var t;(t=this.impl)==null||t.loseContext()}setUniform(t,e){b.assert(t);const s=t.offset;if(e!=null){const i=Me[t.updateType];i?i(this,e,s,t.count):this.storageFloat32.set(e,s)}else b.warnOnce(`Value was not set when assigning to uniform [${t.name}], expected type ${mp[t.type]} while rendering ${G.toString()}`)}set(t,e){const s=this.format.map.get(t);b.assert(s,`Uniform name [${t}] is not part of the Uniform buffer.`),s&&this.setUniform(s,e)}startUpdate(t){if(!this.persistent){const e=this.allocation,s=e.gpuBuffer;this.device.dynamicBuffers.alloc(e,this.format.byteSize),this.assignStorage(e.storage),t&&(t.bindGroup=e.gpuBuffer.getBindGroup(this),t.offsets[0]=e.offset),s!==e.gpuBuffer&&(this.renderVersionDirty=this.device.renderVersion)}}endUpdate(){this.persistent?this.impl.unlock(this):(this.storageFloat32=null,this.storageInt32=null)}update(t){this.startUpdate(t);const e=this.format.uniforms;for(let s=0;s<e.length;s++){const i=e[s].scopeId.value;this.setUniform(e[s],i)}this.endUpdate()}}class tb{constructor(){c(this,"frameAllocations",[]);c(this,"pastFrameAllocations",new Map);c(this,"_enabled",!1);c(this,"_enableRequest",!1);c(this,"_frameTime",0)}loseContext(){this.pastFrameAllocations.clear()}set enabled(t){this._enableRequest=t}get enabled(){return this._enableRequest}processEnableRequest(){this._enableRequest!==this._enabled&&(this._enabled=this._enableRequest,this._enabled||(this._frameTime=0))}request(t){this.pastFrameAllocations.set(t,this.frameAllocations),this.frameAllocations=[]}report(t,e){if(e){const s=this.pastFrameAllocations.get(t);if(b.assert(s.length===e.length),e.length>0&&(this._frameTime=e[0]),Qs.get(Sl)){b.trace(Sl,`-- GPU timings for frame ${t} --`);let i=0;for(let r=0;r<s.length;++r){const n=s[r];i+=e[r],b.trace(Sl,`${e[r].toFixed(2)} ms ${n}`)}b.trace(Sl,`${i.toFixed(2)} ms TOTAL`)}}this.pastFrameAllocations.delete(t)}getSlot(t){const e=this.frameAllocations.length;return this.frameAllocations.push(t),e}get slotCount(){return this.frameAllocations.length}}class n0{constructor(){c(this,"bufferId",null)}destroy(t){this.bufferId&&(t.gl.deleteBuffer(this.bufferId),this.bufferId=null)}get initialized(){return!!this.bufferId}loseContext(){this.bufferId=null}unlock(t,e,s,i){const r=t.gl;if(this.bufferId)r.bindBuffer(s,this.bufferId),r.bufferSubData(s,0,i);else{let n;switch(e){case ts:n=r.STATIC_DRAW;break;case Ph:n=r.DYNAMIC_DRAW;break;case fy:n=r.STREAM_DRAW;break;case PS:n=r.DYNAMIC_COPY;break}this.bufferId=r.createBuffer(),r.bindBuffer(s,this.bufferId),r.bufferData(s,i,n)}}}class sb extends n0{constructor(){super(...arguments);c(this,"vao",null)}destroy(e){super.destroy(e),e.unbindVertexArray()}loseContext(){super.loseContext(),this.vao=null}unlock(e){const s=e.device;super.unlock(s,e.usage,s.gl.ARRAY_BUFFER,e.storage)}}class ib extends n0{constructor(t){super();const e=t.device.gl,s=t.format;s===yu?this.glFormat=e.UNSIGNED_BYTE:s===Fi?this.glFormat=e.UNSIGNED_SHORT:s===or&&(this.glFormat=e.UNSIGNED_INT)}unlock(t){const e=t.device;super.unlock(e,t.usage,e.gl.ELEMENT_ARRAY_BUFFER,t.storage)}}class Pm{constructor(t,e,s,i){if(this.locationId=i,this.scopeId=t.scope.resolve(e),this.version=new Zy,e.substring(e.length-3)==="[0]")switch(s){case Ks:s=Oc;break;case hn:s=Ma;break;case Ta:s=zc;break;case ua:s=Uc;break;case hr:s=Bc;break;case Qr:s=Pa;break;case Aa:s=Vc;break;case Bo:s=Gc;break;case Qt:s=Nc;break;case Jr:s=Ra;break;case Ea:s=Hc;break;case No:s=Wc;break;case ba:s=up;break;case en:s=Oh;break;case Ca:s=fp;break;case zo:s=pp;break}this.dataType=s,this.value=[null,null,null,null],this.array=[]}}let Rm=0;const rb=new Set(["gl_VertexID","gl_InstanceID","gl_DrawID","gl_BaseVertex","gl_BaseInstance"]);class nb{constructor(){c(this,"map",new Map)}destroy(t){this.map.forEach(e=>{t.gl.deleteShader(e)})}loseContext(t){this.map.clear()}}const ab=new Ht,ob=new Ht;class lb{constructor(t){c(this,"compileDuration",0);this.init(),this.compile(t.device,t),this.link(t.device,t),t.device.shaders.push(t)}destroy(t){this.glProgram&&(t.device.gl.deleteProgram(this.glProgram),this.glProgram=null)}init(){this.uniforms=[],this.samplers=[],this.attributes=[],this.glProgram=null,this.glVertexShader=null,this.glFragmentShader=null}loseContext(){this.init()}restoreContext(t,e){this.compile(t,e),this.link(t,e)}compile(t,e){const s=e.definition;this.glVertexShader=this._compileShaderSource(t,s.vshader,!0),this.glFragmentShader=this._compileShaderSource(t,s.fshader,!1)}link(t,e){if(this.glProgram)return;const s=t.gl;if(s.isContextLost())return;let i=0;b.call(()=>{this.compileDuration=0,i=ae()});const r=s.createProgram();this.glProgram=r,s.attachShader(r,this.glVertexShader),s.attachShader(r,this.glFragmentShader);const n=e.definition,a=n.attributes;if(n.useTransformFeedback){const h=[];for(const d in a)a.hasOwnProperty(d)&&h.push(`out_${d}`);s.transformFeedbackVaryings(r,h,s.INTERLEAVED_ATTRIBS)}const o={};for(const h in a)if(a.hasOwnProperty(h)){const d=a[h],u=Ae[d];b.assert(!o.hasOwnProperty(u),`WARNING: Two attributes are mapped to the same location in a shader: ${o[u]} and ${h}`),o[u]=h,s.bindAttribLocation(r,u,h)}s.linkProgram(r),b.call(()=>{this.compileDuration=ae()-i}),t._shaderStats.linked++,n.tag===Fy&&t._shaderStats.materialShaders++}_compileShaderSource(t,e,s){const i=t.gl;if(i.isContextLost())return null;const n=(s?ab:ob).get(t,()=>new nb);let a=n.map.get(e);if(!a){const o=ae();t.fire("shader:compile:start",{timestamp:o,target:t}),a=i.createShader(s?i.VERTEX_SHADER:i.FRAGMENT_SHADER),i.shaderSource(a,e),i.compileShader(a),n.map.set(e,a);const h=ae();t.fire("shader:compile:end",{timestamp:h,target:t}),t._shaderStats.compileTime+=h-o,s?t._shaderStats.vsCompiled++:t._shaderStats.fsCompiled++}return a}finalize(t,e){var p,m;const s=t.gl;if(s.isContextLost())return!0;const i=this.glProgram,r=e.definition,n=ae();t.fire("shader:link:start",{timestamp:n,target:t});let a=0;if(b.call(()=>{a=ae()}),!s.getProgramParameter(i,s.LINK_STATUS)){if(!this._isCompiled(t,e,this.glVertexShader,r.vshader,"vertex")||!this._isCompiled(t,e,this.glFragmentShader,r.fshader,"fragment"))return!1;const _=`Failed to link shader program. Error: ${s.getProgramInfoLog(i)}`;return r.translatedFrag=(p=s.getExtension("WEBGL_debug_shaders"))==null?void 0:p.getTranslatedShaderSource(this.glFragmentShader),r.translatedVert=(m=s.getExtension("WEBGL_debug_shaders"))==null?void 0:m.getTranslatedShaderSource(this.glVertexShader),console.error(_,r),console.error(_),!1}const h=s.getProgramParameter(i,s.ACTIVE_ATTRIBUTES);for(let _=0;_<h;_++){const g=s.getActiveAttrib(i,_),y=s.getAttribLocation(i,g.name);if(!rb.has(g.name))if(r.attributes[g.name]===void 0)console.error(`Vertex shader attribute "${g.name}" is not mapped to a semantic in shader definition, shader [${e.label}]`,e),e.failed=!0;else{const w=new Pm(t,r.attributes[g.name],t.pcUniformType[g.type],y);this.attributes.push(w)}}const d=t._samplerTypes,u=s.getProgramParameter(i,s.ACTIVE_UNIFORMS);for(let _=0;_<u;_++){const g=s.getActiveUniform(i,_),y=s.getUniformLocation(i,g.name),w=new Pm(t,g.name,t.pcUniformType[g.type],y);d.has(g.type)?this.samplers.push(w):this.uniforms.push(w)}e.ready=!0;const f=ae();return t.fire("shader:link:end",{timestamp:f,target:t}),t._shaderStats.compileTime+=f-n,b.call(()=>{const _=ae()-a;this.compileDuration+=_,Rm+=this.compileDuration,b.trace(Yx,`[id: ${e.id}] ${e.name}: ${this.compileDuration.toFixed(1)}ms, TOTAL: ${Rm.toFixed(1)}ms`)}),!0}_isCompiled(t,e,s,i,r){const n=t.gl;if(!n.getShaderParameter(s,n.COMPILE_STATUS)){const a=n.getShaderInfoLog(s),[o,h]=this._processError(i,a),d=`Failed to compile ${r} shader:

${a}
${o} while rendering ${G.toString()}`;return h.shader=e,console.error(d,h),console.error(d),!1}return!0}isLinked(t){const{extParallelShaderCompile:e}=t;return e?t.gl.getProgramParameter(this.glProgram,e.COMPLETION_STATUS_KHR):!0}_processError(t,e){const s={};let i="";if(t){const r=t.split(`
`);let n=0,a=r.length;if(e&&e.startsWith("ERROR:")){const o=e.match(/^ERROR:\s(\d+):(\d+):\s*(.+)/);o&&(s.message=o[3],s.line=parseInt(o[2],10),n=Math.max(0,s.line-6),a=Math.min(r.length,s.line+5))}for(let o=n;o<a;o++)i+=`${o+1}:	${r[o]}
`;s.source=t}return[i,s]}}function Im(l,t){const e=l.width,s=l.height;if(e>t||s>t){const i=t/Math.max(e,s),r=Math.floor(e*i),n=Math.floor(s*i);b.warn(`Image dimensions larger than max supported texture size of ${t}. Resizing from ${e}, ${s} to ${r}, ${n}.`);const a=document.createElement("canvas");return a.width=r,a.height=n,a.getContext("2d").drawImage(l,0,0,e,s,0,0,r,n),a}return l}class hb{constructor(t){c(this,"_glTexture",null);c(this,"_glTarget");c(this,"_glFormat");c(this,"_glInternalFormat");c(this,"_glPixelType");c(this,"_glCreated");c(this,"dirtyParameterFlags",0);this.texture=t}destroy(t){if(this._glTexture){for(let e=0;e<t.textureUnits.length;e++){const s=t.textureUnits[e];for(let i=0;i<s.length;i++)s[i]===this._glTexture&&(s[i]=null)}t.gl.deleteTexture(this._glTexture),this._glTexture=null}}loseContext(){this._glTexture=null}propertyChanged(t){this.dirtyParameterFlags|=t}initialize(t,e){const s=t.gl;switch(this._glTexture=s.createTexture(),this._glTarget=e._cubemap?s.TEXTURE_CUBE_MAP:e._volume?s.TEXTURE_3D:e.array?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D,e._format){case py:this._glFormat=s.ALPHA,this._glInternalFormat=s.ALPHA,this._glPixelType=s.UNSIGNED_BYTE;break;case my:this._glFormat=s.LUMINANCE,this._glInternalFormat=s.LUMINANCE,this._glPixelType=s.UNSIGNED_BYTE;break;case Vf:this._glFormat=s.LUMINANCE_ALPHA,this._glInternalFormat=s.LUMINANCE_ALPHA,this._glPixelType=s.UNSIGNED_BYTE;break;case ap:this._glFormat=s.RED,this._glInternalFormat=s.R8,this._glPixelType=s.UNSIGNED_BYTE;break;case op:this._glFormat=s.RG,this._glInternalFormat=s.RG8,this._glPixelType=s.UNSIGNED_BYTE;break;case vc:this._glFormat=s.RGB,this._glInternalFormat=s.RGB,this._glPixelType=s.UNSIGNED_SHORT_5_6_5;break;case Gf:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA,this._glPixelType=s.UNSIGNED_SHORT_5_5_5_1;break;case bc:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA,this._glPixelType=s.UNSIGNED_SHORT_4_4_4_4;break;case ur:this._glFormat=s.RGB,this._glInternalFormat=s.RGB8,this._glPixelType=s.UNSIGNED_BYTE;break;case Te:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA8,this._glPixelType=s.UNSIGNED_BYTE;break;case xy:case wy:b.error("BGRA8 and SBGRA8 texture formats are not supported by WebGL.");break;case wc:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case Hf:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case Yo:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;case Cc:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTextureETC1.COMPRESSED_RGB_ETC1_WEBGL;break;case Ko:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;break;case Zo:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;break;case Mc:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;break;case Pc:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;break;case $f:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_RGB8_ETC2;break;case qf:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;break;case _y:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;break;case gy:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTextureATC.COMPRESSED_RGB_ATC_WEBGL;break;case yy:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureATC.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL;break;case Ty:this._glFormat=s.RGB,this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;break;case Ay:this._glFormat=s.RGB,this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;break;case Ey:this._glFormat=s.RGBA,this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGBA_BPTC_UNORM_EXT;break;case xu:this._glFormat=s.SRGB,this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_S3TC_DXT1_EXT;break;case Su:this._glFormat=s.SRGB_ALPHA,this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;break;case vu:this._glFormat=s.SRGB_ALPHA,this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;break;case bu:this._glFormat=s.SRGB,this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_SRGB8_ETC2;break;case wu:this._glFormat=s.SRGB_ALPHA,this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;break;case Tu:this._glFormat=s.SRGB_ALPHA,this._glInternalFormat=t.extCompressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;break;case Au:this._glFormat=s.RGBA,this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT;break;case xa:this._glFormat=s.RED,this._glInternalFormat=s.R16F,this._glPixelType=s.HALF_FLOAT;break;case np:this._glFormat=s.RG,this._glInternalFormat=s.RG16F,this._glPixelType=s.HALF_FLOAT;break;case Tc:this._glFormat=s.RGB,this._glInternalFormat=s.RGB16F,this._glPixelType=s.HALF_FLOAT;break;case it:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA16F,this._glPixelType=s.HALF_FLOAT;break;case Ac:this._glFormat=s.RGB,this._glInternalFormat=s.RGB32F,this._glPixelType=s.FLOAT;break;case et:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA32F,this._glPixelType=s.FLOAT;break;case Oi:this._glFormat=s.RED,this._glInternalFormat=s.R32F,this._glPixelType=s.FLOAT;break;case Di:this._glFormat=s.DEPTH_COMPONENT,this._glInternalFormat=s.DEPTH_COMPONENT32F,this._glPixelType=s.FLOAT;break;case ca:this._glFormat=s.DEPTH_COMPONENT,this._glInternalFormat=s.DEPTH_COMPONENT16,this._glPixelType=s.UNSIGNED_SHORT;break;case Ec:this._glFormat=s.DEPTH_STENCIL,this._glInternalFormat=s.DEPTH24_STENCIL8,this._glPixelType=s.UNSIGNED_INT_24_8;break;case ya:this._glFormat=s.RGB,this._glInternalFormat=s.R11F_G11F_B10F,this._glPixelType=s.UNSIGNED_INT_10F_11F_11F_REV;break;case Wf:this._glFormat=s.RGB,this._glInternalFormat=s.SRGB8,this._glPixelType=s.UNSIGNED_BYTE;break;case cs:this._glFormat=s.RGBA,this._glInternalFormat=s.SRGB8_ALPHA8,this._glPixelType=s.UNSIGNED_BYTE;break;case Xf:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R8I,this._glPixelType=s.BYTE;break;case Sy:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R8UI,this._glPixelType=s.UNSIGNED_BYTE;break;case jf:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R16I,this._glPixelType=s.SHORT;break;case Yf:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R16UI,this._glPixelType=s.UNSIGNED_SHORT;break;case Kf:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R32I,this._glPixelType=s.INT;break;case on:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R32UI,this._glPixelType=s.UNSIGNED_INT;break;case Zf:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG8I,this._glPixelType=s.BYTE;break;case vy:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG8UI,this._glPixelType=s.UNSIGNED_BYTE;break;case Qf:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG16I,this._glPixelType=s.SHORT;break;case Jf:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG16UI,this._glPixelType=s.UNSIGNED_SHORT;break;case ep:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG32I,this._glPixelType=s.INT;break;case tp:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG32UI,this._glPixelType=s.UNSIGNED_INT;break;case sp:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA8I,this._glPixelType=s.BYTE;break;case by:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA8UI,this._glPixelType=s.UNSIGNED_BYTE;break;case ip:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA16I,this._glPixelType=s.SHORT;break;case Rc:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA16UI,this._glPixelType=s.UNSIGNED_SHORT;break;case rp:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA32I,this._glPixelType=s.INT;break;case yt:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA32UI,this._glPixelType=s.UNSIGNED_INT;break}this._glCreated=!1}upload(t,e){b.assert(e.device,"Attempting to use a texture that has been destroyed.",e);const s=t.gl;if(!e._needsUpload&&(e._needsMipmapsUpload&&e._mipmapsUploaded||!e.pot))return;let i=0,r,n;const a=e.numLevels;for(e.array&&s.texStorage3D(s.TEXTURE_2D_ARRAY,a,this._glInternalFormat,e._width,e._height,e._arrayLength);e._levels[i]||i===0;){if(!e._needsUpload&&i===0){i++;continue}else if(i&&(!e._needsMipmapsUpload||!e._mipmaps))break;if(r=e._levels[i],n=1/Math.pow(2,i),i===1&&!e._compressed&&!e._integerFormat&&e._levels.length<a&&(s.generateMipmap(this._glTarget),e._mipmapsUploaded=!0),e._cubemap){let o;if(t._isBrowserInterface(r[0]))for(o=0;o<6;o++){if(!e._levelsUpdated[0][o])continue;let h=r[o];t._isImageBrowserInterface(h)&&(h.width>t.maxCubeMapSize||h.height>t.maxCubeMapSize)&&(h=Im(h,t.maxCubeMapSize),i===0&&(e._width=h.width,e._height=h.height)),t.setUnpackFlipY(!1),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),this._glCreated?s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+o,i,0,0,this._glFormat,this._glPixelType,h):s.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+o,i,this._glInternalFormat,this._glFormat,this._glPixelType,h)}else for(n=1/Math.pow(2,i),o=0;o<6;o++){if(!e._levelsUpdated[0][o])continue;const h=r[o];e._compressed?this._glCreated&&h?s.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+o,i,0,0,Math.max(e._width*n,1),Math.max(e._height*n,1),this._glInternalFormat,h):s.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+o,i,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),0,h):(t.setUnpackFlipY(!1),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),this._glCreated&&h?s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+o,i,0,0,Math.max(e._width*n,1),Math.max(e._height*n,1),this._glFormat,this._glPixelType,h):s.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+o,i,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),0,this._glFormat,this._glPixelType,h))}}else if(e._volume)e._compressed?s.compressedTexImage3D(s.TEXTURE_3D,i,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),Math.max(e._depth*n,1),0,r):(t.setUnpackFlipY(!1),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),s.texImage3D(s.TEXTURE_3D,i,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),Math.max(e._depth*n,1),0,this._glFormat,this._glPixelType,r));else if(e.array&&typeof r=="object"){if(e._arrayLength===r.length)if(e._compressed)for(let o=0;o<e._arrayLength;o++)s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,i,0,0,o,Math.max(Math.floor(e._width*n),1),Math.max(Math.floor(e._height*n),1),1,this._glInternalFormat,r[o]);else for(let o=0;o<e._arrayLength;o++)s.texSubImage3D(s.TEXTURE_2D_ARRAY,i,0,0,o,Math.max(Math.floor(e._width*n),1),Math.max(Math.floor(e._height*n),1),1,this._glFormat,this._glPixelType,r[o])}else{if(t._isBrowserInterface(r)){t._isImageBrowserInterface(r)&&(r.width>t.maxTextureSize||r.height>t.maxTextureSize)&&(r=Im(r,t.maxTextureSize),i===0&&(e._width=r.width,e._height=r.height));const o=r.width||r.videoWidth,h=r.height||r.videoHeight;t.setUnpackFlipY(e._flipY),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),this._glCreated&&e._width===o&&e._height===h&&!t._isImageVideoInterface(r)?s.texSubImage2D(s.TEXTURE_2D,i,0,0,this._glFormat,this._glPixelType,r):(s.texImage2D(s.TEXTURE_2D,i,this._glInternalFormat,this._glFormat,this._glPixelType,r),i===0&&(e._width=o,e._height=h))}else n=1/Math.pow(2,i),e._compressed?this._glCreated&&r?s.compressedTexSubImage2D(s.TEXTURE_2D,i,0,0,Math.max(Math.floor(e._width*n),1),Math.max(Math.floor(e._height*n),1),this._glInternalFormat,r):s.compressedTexImage2D(s.TEXTURE_2D,i,this._glInternalFormat,Math.max(Math.floor(e._width*n),1),Math.max(Math.floor(e._height*n),1),0,r):(t.setUnpackFlipY(!1),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),this._glCreated&&r?s.texSubImage2D(s.TEXTURE_2D,i,0,0,Math.max(e._width*n,1),Math.max(e._height*n,1),this._glFormat,this._glPixelType,r):s.texImage2D(s.TEXTURE_2D,i,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),0,this._glFormat,this._glPixelType,r));i===0?e._mipmapsUploaded=!1:e._mipmapsUploaded=!0}i++}if(e._needsUpload)if(e._cubemap)for(let o=0;o<6;o++)e._levelsUpdated[0][o]=!1;else e._levelsUpdated[0]=!1;!e._compressed&&!e._integerFormat&&e._mipmaps&&e._needsMipmapsUpload&&e._levels.length===1&&(s.generateMipmap(this._glTarget),e._mipmapsUploaded=!0),e._gpuSize&&e.adjustVramSizeTracking(t._vram,-e._gpuSize),e._gpuSize=e.gpuSize,e.adjustVramSizeTracking(t._vram,e._gpuSize),this._glCreated=!0}read(t,e,s,i,r){const n=this.texture;return n.device.readTextureAsync(n,t,e,s,i,r)}}class cb{constructor(t,e){c(this,"msaaFB");c(this,"resolveFB");this.msaaFB=t,this.resolveFB=e}destroy(t){this.msaaFB&&(t.deleteRenderbuffer(this.msaaFB),this.msaaFB=null),this.resolveFB&&(t.deleteRenderbuffer(this.resolveFB),this.resolveFB=null)}}class db{constructor(){c(this,"_glFrameBuffer",null);c(this,"_glDepthBuffer",null);c(this,"_glResolveFrameBuffer",null);c(this,"colorMrtFramebuffers",null);c(this,"_glMsaaColorBuffers",[]);c(this,"_glMsaaDepthBuffer",null);c(this,"msaaDepthBufferKey");c(this,"suppliedColorFramebuffer");c(this,"_isInitialized",!1)}destroy(t){var s;const e=t.gl;this._isInitialized=!1,this._glFrameBuffer&&(this._glFrameBuffer!==this.suppliedColorFramebuffer&&e.deleteFramebuffer(this._glFrameBuffer),this._glFrameBuffer=null),this._glDepthBuffer&&(e.deleteRenderbuffer(this._glDepthBuffer),this._glDepthBuffer=null),this._glResolveFrameBuffer&&(this._glResolveFrameBuffer!==this.suppliedColorFramebuffer&&e.deleteFramebuffer(this._glResolveFrameBuffer),this._glResolveFrameBuffer=null),this._glMsaaColorBuffers.forEach(i=>{e.deleteRenderbuffer(i)}),this._glMsaaColorBuffers.length=0,(s=this.colorMrtFramebuffers)==null||s.forEach(i=>{i.destroy(e)}),this.colorMrtFramebuffers=null,this._glMsaaDepthBuffer&&(this._glMsaaDepthBuffer=null,this.msaaDepthBufferKey&&dd(t).release(this.msaaDepthBufferKey)),this.suppliedColorFramebuffer=void 0}get initialized(){return this._isInitialized}init(t,e){var r,n;const s=t.gl;b.assert(!this._isInitialized,"Render target already initialized."),this._isInitialized=!0;const i=[];if(this.suppliedColorFramebuffer!==void 0)this._glFrameBuffer=this.suppliedColorFramebuffer;else{b.call(()=>{(e.width<=0||e.height<=0)&&b.warnOnce(`Invalid render target size: ${e.width} x ${e.height}`,e)}),this._glFrameBuffer=s.createFramebuffer(),t.setFramebuffer(this._glFrameBuffer);const a=((r=e._colorBuffers)==null?void 0:r.length)??0,o=s.COLOR_ATTACHMENT0;for(let d=0;d<a;++d){const u=e.getColorBuffer(d);u&&(u.impl._glTexture||(u._width=Math.min(u.width,t.maxRenderBufferSize),u._height=Math.min(u.height,t.maxRenderBufferSize),t.setTexture(u,0)),s.framebufferTexture2D(s.FRAMEBUFFER,o+d,u._cubemap?s.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:s.TEXTURE_2D,u.impl._glTexture,e.mipLevel),i.push(o+d))}s.drawBuffers(i);const h=e._depthBuffer;if(h||e._depth){const d=e._stencil?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;if(h)h.impl._glTexture||(h._width=Math.min(h.width,t.maxRenderBufferSize),h._height=Math.min(h.height,t.maxRenderBufferSize),t.setTexture(h,0)),s.framebufferTexture2D(s.FRAMEBUFFER,d,h._cubemap?s.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:s.TEXTURE_2D,e._depthBuffer.impl._glTexture,e.mipLevel);else if(!(e._samples>1)){this._glDepthBuffer||(this._glDepthBuffer=s.createRenderbuffer());const f=e._stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT32F;s.bindRenderbuffer(s.RENDERBUFFER,this._glDepthBuffer),s.renderbufferStorage(s.RENDERBUFFER,f,e.width,e.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,d,s.RENDERBUFFER,this._glDepthBuffer),s.bindRenderbuffer(s.RENDERBUFFER,null)}}b.call(()=>this._checkFbo(t,e))}if(e._samples>1){this._glResolveFrameBuffer=this._glFrameBuffer,this._glFrameBuffer=s.createFramebuffer(),t.setFramebuffer(this._glFrameBuffer);const a=((n=e._colorBuffers)==null?void 0:n.length)??0;if(this.suppliedColorFramebuffer!==void 0){const o=s.createRenderbuffer();this._glMsaaColorBuffers.push(o);const h=t.backBufferFormat===Te?s.RGBA8:s.RGB8;s.bindRenderbuffer(s.RENDERBUFFER,o),s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,h,e.width,e.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,o)}else for(let o=0;o<a;++o){const h=e.getColorBuffer(o);if(h){const d=s.createRenderbuffer();this._glMsaaColorBuffers.push(d),s.bindRenderbuffer(s.RENDERBUFFER,d),s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,h.impl._glInternalFormat,e.width,e.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+o,s.RENDERBUFFER,d)}}if(e._depth){b.assert(!this._glMsaaDepthBuffer);const o=e._stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT32F,h=e._stencil?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;let d;const u=e._depthBuffer;u&&(d=`${u.id}:${e.width}:${e.height}:${e._samples}:${o}:${h}`,this._glMsaaDepthBuffer=dd(t).get(d)),this._glMsaaDepthBuffer||(this._glMsaaDepthBuffer=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,this._glMsaaDepthBuffer),s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,o,e.width,e.height),this._glMsaaDepthBuffer.destroy=function(){s.deleteRenderbuffer(this)},u&&dd(t).set(d,this._glMsaaDepthBuffer)),this.msaaDepthBufferKey=d,s.framebufferRenderbuffer(s.FRAMEBUFFER,h,s.RENDERBUFFER,this._glMsaaDepthBuffer)}b.call(()=>this._checkFbo(t,e,"MSAA")),a>1&&(this._createMsaaMrtFramebuffers(t,e,a),t.setFramebuffer(this._glFrameBuffer),s.drawBuffers(i))}}_createMsaaMrtFramebuffers(t,e,s){const i=t.gl;this.colorMrtFramebuffers=[];for(let r=0;r<s;++r){const n=e.getColorBuffer(r),a=i.createFramebuffer();t.setFramebuffer(a);const o=this._glMsaaColorBuffers[r];i.bindRenderbuffer(i.RENDERBUFFER,o),i.renderbufferStorageMultisample(i.RENDERBUFFER,e._samples,n.impl._glInternalFormat,e.width,e.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,o),i.drawBuffers([i.COLOR_ATTACHMENT0]),b.call(()=>this._checkFbo(t,e,`MSAA-MRT-src${r}`));const h=i.createFramebuffer();t.setFramebuffer(h),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,n._cubemap?i.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:i.TEXTURE_2D,n.impl._glTexture,0),this.colorMrtFramebuffers[r]=new cb(a,h),b.call(()=>this._checkFbo(t,e,`MSAA-MRT-dst${r}`))}}_checkFbo(t,e,s=""){const i=t.gl,r=i.checkFramebufferStatus(i.FRAMEBUFFER);let n;switch(r){case i.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:n="FRAMEBUFFER_INCOMPLETE_ATTACHMENT";break;case i.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:n="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";break;case i.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:n="FRAMEBUFFER_INCOMPLETE_DIMENSIONS";break;case i.FRAMEBUFFER_UNSUPPORTED:n="FRAMEBUFFER_UNSUPPORTED";break}b.assert(!n,`Framebuffer creation failed with error code ${n}, render target: ${e.name} ${s}`,e)}loseContext(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this._glMsaaColorBuffers.length=0,this._glMsaaDepthBuffer=null,this.msaaDepthBufferKey=void 0,this.colorMrtFramebuffers=null,this.suppliedColorFramebuffer=void 0,this._isInitialized=!1}internalResolve(t,e,s,i,r){b.assert(e!==s,"Source and destination framebuffers must be different when blitting."),t.setScissor(0,0,i.width,i.height);const n=t.gl;n.bindFramebuffer(n.READ_FRAMEBUFFER,e),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,s),n.blitFramebuffer(0,0,i.width,i.height,0,0,i.width,i.height,r,n.NEAREST)}resolve(t,e,s,i){const r=t.gl;if(this.colorMrtFramebuffers){if(s)for(let n=0;n<this.colorMrtFramebuffers.length;n++){const a=this.colorMrtFramebuffers[n];G.pushGpuMarker(t,`RESOLVE-MRT${n}`),this.internalResolve(t,a.msaaFB,a.resolveFB,e,r.COLOR_BUFFER_BIT),G.popGpuMarker(t)}i&&(G.pushGpuMarker(t,"RESOLVE-MRT-DEPTH"),this.internalResolve(t,this._glFrameBuffer,this._glResolveFrameBuffer,e,r.DEPTH_BUFFER_BIT),G.popGpuMarker(t))}else G.pushGpuMarker(t,"RESOLVE"),this.internalResolve(t,this._glFrameBuffer,this._glResolveFrameBuffer,e,(s?r.COLOR_BUFFER_BIT:0)|(i?r.DEPTH_BUFFER_BIT:0)),G.popGpuMarker(t);r.bindFramebuffer(r.FRAMEBUFFER,this._glFrameBuffer)}}class ub{constructor(){c(this,"renderVersion");c(this,"queries",[])}destroy(t){this.queries.forEach(e=>t.deleteQuery(e)),this.queries=null}}class fb extends tb{constructor(e){super();c(this,"device");c(this,"freeQueries",[]);c(this,"frameQueries",[]);c(this,"previousFrameQueries",[]);c(this,"timings",[]);this.device=e,this.ext=e.extDisjointTimerQuery}destroy(){this.freeQueries.forEach(e=>this.device.gl.deleteQuery(e)),this.frameQueries.forEach(e=>this.device.gl.deleteQuery(e)),this.previousFrameQueries.forEach(e=>e.destroy(this.device.gl)),this.freeQueries=null,this.frameQueries=null,this.previousFrameQueries=null}loseContext(){super.loseContext(),this.freeQueries=[],this.frameQueries=[],this.previousFrameQueries=[]}restoreContext(){this.ext=this.device.extDisjointTimerQuery}getQuery(){return this.freeQueries.pop()??this.device.gl.createQuery()}start(e){if(this.ext){const s=this.getSlot(e),i=this.getQuery();return this.frameQueries[s]=i,this.device.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,i),s}}end(e){e!==void 0&&this.device.gl.endQuery(this.ext.TIME_ELAPSED_EXT)}frameStart(){this.processEnableRequest(),this._enabled&&(this.frameGPUMarkerSlot=this.start("GpuFrame"))}frameEnd(){this._enabled&&this.end(this.frameGPUMarkerSlot)}request(){if(this._enabled){const e=this.ext,s=this.device.gl,i=this.device.renderVersion,r=this.frameQueries;if(r.length>0){this.frameQueries=[];const n=new ub;n.queries=r,n.renderVersion=i,this.previousFrameQueries.push(n)}if(this.previousFrameQueries.length>0){const n=this.previousFrameQueries[0],a=n.queries,o=a[a.length-1],h=s.getQueryParameter(o,s.QUERY_RESULT_AVAILABLE),d=s.getParameter(e.GPU_DISJOINT_EXT);if(h&&!d){this.previousFrameQueries.shift();const u=this.timings;u.length=0;for(let f=0;f<a.length;f++){const p=a[f],m=s.getQueryParameter(p,s.QUERY_RESULT);u[f]=m*1e-6,this.freeQueries.push(p)}this.report(n.renderVersion,u)}d&&(this.previousFrameQueries.forEach(u=>{this.report(u.renderVersion,null),u.destroy(s)}),this.previousFrameQueries.length=0)}super.request(i)}}}const En=[];class pb extends zh{constructor(e,s={}){super(e,s);c(this,"gl");c(this,"_defaultFramebuffer",null);c(this,"_defaultFramebufferChanged",!1);c(this,"drawTime",0);c(this,"drawTimeWithoutRasterize",0);s=this.initOptions,this.updateClientRect(),this.initTextureUnits(),this.contextLost=!1,this._contextLostHandler=m=>{m.preventDefault(),this.loseContext(),b.log("pc.GraphicsDevice: WebGL context lost."),this.fire("devicelost")},this._contextRestoredHandler=()=>{b.log("pc.GraphicsDevice: WebGL context restored."),this.restoreContext(),this.fire("devicerestored")};const i=typeof navigator<"u"&&navigator.userAgent;if(this.forceDisableMultisampling=i&&i.includes("AppleWebKit")&&(i.includes("15.4")||i.includes("15_4")),this.forceDisableMultisampling&&(s.antialias=!1,b.log("Antialiasing has been turned off due to rendering issues on AppleWebKit 15.4")),be.browserName==="firefox"){const _=(typeof navigator<"u"?navigator.userAgent:"").match(/Firefox\/(\d+(\.\d+)*)/),g=_?_[1]:null;if(g){const y=parseFloat(g);(be.name==="windows"&&(y>=120||y===115)||be.name==="android"&&y>=132)&&(s.antialias=!1,b.log(`Antialiasing has been turned off due to rendering issues on Firefox ${be.name} platform version ${g}`))}}this.backBufferAntialias=s.antialias??!1,s.antialias=!1;const r=s.gl??e.getContext("webgl2",s);if(!r)throw new Error("WebGL not supported");this.gl=r,this.isWebGL2=!0,this._deviceType=mv,this.updateBackbufferFormat(null);const n=be.browserName==="chrome",a=be.browserName==="safari",o=be.browser&&navigator.appVersion.indexOf("Mac")!==-1;this._tempEnableSafariTextureUnitWorkaround=a,this._tempMacChromeBlitFramebufferWorkaround=o&&n&&!s.alpha,e.addEventListener("webglcontextlost",this._contextLostHandler,!1),e.addEventListener("webglcontextrestored",this._contextRestoredHandler,!1),this.initializeExtensions(),this.initializeCapabilities(),this.initializeRenderState(),this.initializeContextCaches(),this.createBackbuffer(null),this.supportsImageBitmap=!a&&typeof ImageBitmap<"u",this._samplerTypes=new Set([r.SAMPLER_2D,r.SAMPLER_CUBE,r.UNSIGNED_INT_SAMPLER_2D,r.INT_SAMPLER_2D,r.SAMPLER_2D_SHADOW,r.SAMPLER_CUBE_SHADOW,r.SAMPLER_3D,r.INT_SAMPLER_3D,r.UNSIGNED_INT_SAMPLER_3D,r.SAMPLER_2D_ARRAY,r.INT_SAMPLER_2D_ARRAY,r.UNSIGNED_INT_SAMPLER_2D_ARRAY]),this.glAddress=[r.REPEAT,r.CLAMP_TO_EDGE,r.MIRRORED_REPEAT],this.glBlendEquation=[r.FUNC_ADD,r.FUNC_SUBTRACT,r.FUNC_REVERSE_SUBTRACT,r.MIN,r.MAX],this.glBlendFunctionColor=[r.ZERO,r.ONE,r.SRC_COLOR,r.ONE_MINUS_SRC_COLOR,r.DST_COLOR,r.ONE_MINUS_DST_COLOR,r.SRC_ALPHA,r.SRC_ALPHA_SATURATE,r.ONE_MINUS_SRC_ALPHA,r.DST_ALPHA,r.ONE_MINUS_DST_ALPHA,r.CONSTANT_COLOR,r.ONE_MINUS_CONSTANT_COLOR],this.glBlendFunctionAlpha=[r.ZERO,r.ONE,r.SRC_COLOR,r.ONE_MINUS_SRC_COLOR,r.DST_COLOR,r.ONE_MINUS_DST_COLOR,r.SRC_ALPHA,r.SRC_ALPHA_SATURATE,r.ONE_MINUS_SRC_ALPHA,r.DST_ALPHA,r.ONE_MINUS_DST_ALPHA,r.CONSTANT_ALPHA,r.ONE_MINUS_CONSTANT_ALPHA],this.glComparison=[r.NEVER,r.LESS,r.EQUAL,r.LEQUAL,r.GREATER,r.NOTEQUAL,r.GEQUAL,r.ALWAYS],this.glStencilOp=[r.KEEP,r.ZERO,r.REPLACE,r.INCR,r.INCR_WRAP,r.DECR,r.DECR_WRAP,r.INVERT],this.glClearFlag=[0,r.COLOR_BUFFER_BIT,r.DEPTH_BUFFER_BIT,r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT,r.STENCIL_BUFFER_BIT,r.STENCIL_BUFFER_BIT|r.COLOR_BUFFER_BIT,r.STENCIL_BUFFER_BIT|r.DEPTH_BUFFER_BIT,r.STENCIL_BUFFER_BIT|r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT],this.glCull=[0,r.BACK,r.FRONT,r.FRONT_AND_BACK],this.glFilter=[r.NEAREST,r.LINEAR,r.NEAREST_MIPMAP_NEAREST,r.NEAREST_MIPMAP_LINEAR,r.LINEAR_MIPMAP_NEAREST,r.LINEAR_MIPMAP_LINEAR],this.glPrimitive=[r.POINTS,r.LINES,r.LINE_LOOP,r.LINE_STRIP,r.TRIANGLES,r.TRIANGLE_STRIP,r.TRIANGLE_FAN],this.glType=[r.BYTE,r.UNSIGNED_BYTE,r.SHORT,r.UNSIGNED_SHORT,r.INT,r.UNSIGNED_INT,r.FLOAT,r.HALF_FLOAT],this.pcUniformType={},this.pcUniformType[r.BOOL]=ua,this.pcUniformType[r.INT]=hn,this.pcUniformType[r.FLOAT]=Ks,this.pcUniformType[r.FLOAT_VEC2]=hr,this.pcUniformType[r.FLOAT_VEC3]=Qt,this.pcUniformType[r.FLOAT_VEC4]=ba,this.pcUniformType[r.INT_VEC2]=Qr,this.pcUniformType[r.INT_VEC3]=Jr,this.pcUniformType[r.INT_VEC4]=en,this.pcUniformType[r.BOOL_VEC2]=Bo,this.pcUniformType[r.BOOL_VEC3]=No,this.pcUniformType[r.BOOL_VEC4]=zo,this.pcUniformType[r.FLOAT_MAT2]=kh,this.pcUniformType[r.FLOAT_MAT3]=Uo,this.pcUniformType[r.FLOAT_MAT4]=wa,this.pcUniformType[r.SAMPLER_2D]=JS,this.pcUniformType[r.SAMPLER_CUBE]=ev,this.pcUniformType[r.UNSIGNED_INT]=Ta,this.pcUniformType[r.UNSIGNED_INT_VEC2]=Aa,this.pcUniformType[r.UNSIGNED_INT_VEC3]=Ea,this.pcUniformType[r.UNSIGNED_INT_VEC4]=Ca,this.pcUniformType[r.SAMPLER_2D_SHADOW]=tv,this.pcUniformType[r.SAMPLER_CUBE_SHADOW]=sv,this.pcUniformType[r.SAMPLER_2D_ARRAY]=rv,this.pcUniformType[r.SAMPLER_3D]=iv,this.pcUniformType[r.INT_SAMPLER_2D]=nv,this.pcUniformType[r.UNSIGNED_INT_SAMPLER_2D]=av,this.pcUniformType[r.INT_SAMPLER_CUBE]=ov,this.pcUniformType[r.UNSIGNED_INT_SAMPLER_2D]=lv,this.pcUniformType[r.INT_SAMPLER_3D]=hv,this.pcUniformType[r.UNSIGNED_INT_SAMPLER_3D]=cv,this.pcUniformType[r.INT_SAMPLER_2D_ARRAY]=dv,this.pcUniformType[r.UNSIGNED_INT_SAMPLER_2D_ARRAY]=uv,this.targetToSlot={},this.targetToSlot[r.TEXTURE_2D]=0,this.targetToSlot[r.TEXTURE_CUBE_MAP]=1,this.targetToSlot[r.TEXTURE_3D]=2;let h,d,u,f,p;this.commitFunction=[],this.commitFunction[ua]=function(m,_){m.value!==_&&(r.uniform1i(m.locationId,_),m.value=_)},this.commitFunction[hn]=this.commitFunction[ua],this.commitFunction[Ks]=function(m,_){m.value!==_&&(r.uniform1f(m.locationId,_),m.value=_)},this.commitFunction[hr]=function(m,_){p=m.value,h=_[0],d=_[1],(p[0]!==h||p[1]!==d)&&(r.uniform2fv(m.locationId,_),p[0]=h,p[1]=d)},this.commitFunction[Qt]=function(m,_){p=m.value,h=_[0],d=_[1],u=_[2],(p[0]!==h||p[1]!==d||p[2]!==u)&&(r.uniform3fv(m.locationId,_),p[0]=h,p[1]=d,p[2]=u)},this.commitFunction[ba]=function(m,_){p=m.value,h=_[0],d=_[1],u=_[2],f=_[3],(p[0]!==h||p[1]!==d||p[2]!==u||p[3]!==f)&&(r.uniform4fv(m.locationId,_),p[0]=h,p[1]=d,p[2]=u,p[3]=f)},this.commitFunction[Qr]=function(m,_){p=m.value,h=_[0],d=_[1],(p[0]!==h||p[1]!==d)&&(r.uniform2iv(m.locationId,_),p[0]=h,p[1]=d)},this.commitFunction[Bo]=this.commitFunction[Qr],this.commitFunction[Jr]=function(m,_){p=m.value,h=_[0],d=_[1],u=_[2],(p[0]!==h||p[1]!==d||p[2]!==u)&&(r.uniform3iv(m.locationId,_),p[0]=h,p[1]=d,p[2]=u)},this.commitFunction[No]=this.commitFunction[Jr],this.commitFunction[en]=function(m,_){p=m.value,h=_[0],d=_[1],u=_[2],f=_[3],(p[0]!==h||p[1]!==d||p[2]!==u||p[3]!==f)&&(r.uniform4iv(m.locationId,_),p[0]=h,p[1]=d,p[2]=u,p[3]=f)},this.commitFunction[zo]=this.commitFunction[en],this.commitFunction[kh]=function(m,_){r.uniformMatrix2fv(m.locationId,!1,_)},this.commitFunction[Uo]=function(m,_){r.uniformMatrix3fv(m.locationId,!1,_)},this.commitFunction[wa]=function(m,_){r.uniformMatrix4fv(m.locationId,!1,_)},this.commitFunction[Oc]=function(m,_){r.uniform1fv(m.locationId,_)},this.commitFunction[Bc]=function(m,_){r.uniform2fv(m.locationId,_)},this.commitFunction[Nc]=function(m,_){r.uniform3fv(m.locationId,_)},this.commitFunction[up]=function(m,_){r.uniform4fv(m.locationId,_)},this.commitFunction[Ta]=function(m,_){m.value!==_&&(r.uniform1ui(m.locationId,_),m.value=_)},this.commitFunction[Aa]=function(m,_){p=m.value,h=_[0],d=_[1],(p[0]!==h||p[1]!==d)&&(r.uniform2uiv(m.locationId,_),p[0]=h,p[1]=d)},this.commitFunction[Ea]=function(m,_){p=m.value,h=_[0],d=_[1],u=_[2],(p[0]!==h||p[1]!==d||p[2]!==u)&&(r.uniform3uiv(m.locationId,_),p[0]=h,p[1]=d,p[2]=u)},this.commitFunction[Ca]=function(m,_){p=m.value,h=_[0],d=_[1],u=_[2],f=_[3],(p[0]!==h||p[1]!==d||p[2]!==u||p[3]!==f)&&(r.uniform4uiv(m.locationId,_),p[0]=h,p[1]=d,p[2]=u,p[3]=f)},this.commitFunction[Ma]=function(m,_){r.uniform1iv(m.locationId,_)},this.commitFunction[zc]=function(m,_){r.uniform1uiv(m.locationId,_)},this.commitFunction[Uc]=this.commitFunction[Ma],this.commitFunction[Pa]=function(m,_){r.uniform2iv(m.locationId,_)},this.commitFunction[Vc]=function(m,_){r.uniform2uiv(m.locationId,_)},this.commitFunction[Gc]=this.commitFunction[Pa],this.commitFunction[Ra]=function(m,_){r.uniform3iv(m.locationId,_)},this.commitFunction[Hc]=function(m,_){r.uniform3uiv(m.locationId,_)},this.commitFunction[Wc]=this.commitFunction[Ra],this.commitFunction[Oh]=function(m,_){r.uniform4iv(m.locationId,_)},this.commitFunction[fp]=function(m,_){r.uniform4uiv(m.locationId,_)},this.commitFunction[pp]=this.commitFunction[Oh],this.commitFunction[zy]=function(m,_){r.uniformMatrix4fv(m.locationId,!1,_)},this.constantTexSource=this.scope.resolve("source"),this.textureFloatRenderable=!!this.extColorBufferFloat,this.textureHalfFloatRenderable=!!this.extColorBufferHalfFloat||!!this.extColorBufferFloat,this.postInit()}postInit(){super.postInit(),this.gpuProfiler=new fb(this)}destroy(){super.destroy();const e=this.gl;this.feedback&&e.deleteTransformFeedback(this.feedback),this.clearVertexArrayObjectCache(),this.canvas.removeEventListener("webglcontextlost",this._contextLostHandler,!1),this.canvas.removeEventListener("webglcontextrestored",this._contextRestoredHandler,!1),this._contextLostHandler=null,this._contextRestoredHandler=null,this.gl=null,super.postDestroy()}createBackbuffer(e){this.supportsStencil=this.initOptions.stencil,this.backBuffer=new St({name:"WebglFramebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples}),this.backBuffer.impl.suppliedColorFramebuffer=e}updateBackbufferFormat(e){const s=this.gl;s.bindFramebuffer(s.FRAMEBUFFER,e);const i=this.gl.getParameter(this.gl.ALPHA_BITS);this.backBufferFormat=i?Te:ur}updateBackbuffer(){const e=this.canvas.width!==this.backBufferSize.x||this.canvas.height!==this.backBufferSize.y;(this._defaultFramebufferChanged||e)&&(this._defaultFramebufferChanged&&this.updateBackbufferFormat(this._defaultFramebuffer),this._defaultFramebufferChanged=!1,this.backBufferSize.set(this.canvas.width,this.canvas.height),this.backBuffer.destroy(),this.createBackbuffer(this._defaultFramebuffer))}createVertexBufferImpl(e,s){return new sb}createIndexBufferImpl(e){return new ib(e)}createShaderImpl(e){return new lb(e)}createTextureImpl(e){return new hb(e)}createRenderTargetImpl(e){return new db}pushMarker(e){if(be.browser&&window.spector){const s=G.toString();window.spector.setMarker(`${s} #`)}}popMarker(){if(be.browser&&window.spector){const e=G.toString();e.length?window.spector.setMarker(`${e} #`):window.spector.clearMarker()}}getPrecision(){const e=this.gl;let s="highp";if(e.getShaderPrecisionFormat){const i=e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT),r=e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT),n=e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT),a=e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT);if(i&&r&&n&&a){const o=i.precision>0&&n.precision>0,h=r.precision>0&&a.precision>0;o||(h?(s="mediump",b.warn("WARNING: highp not supported, using mediump")):(s="lowp",b.warn("WARNING: highp and mediump not supported, using lowp")))}}return s}getExtension(){for(let e=0;e<arguments.length;e++)if(this.supportedExtensions.indexOf(arguments[e])!==-1)return this.gl.getExtension(arguments[e]);return null}get extDisjointTimerQuery(){return this._extDisjointTimerQuery||(this._extDisjointTimerQuery=this.getExtension("EXT_disjoint_timer_query_webgl2","EXT_disjoint_timer_query")),this._extDisjointTimerQuery}initializeExtensions(){const e=this.gl;this.supportedExtensions=e.getSupportedExtensions()??[],this._extDisjointTimerQuery=null,this.textureRG11B10Renderable=!0,this.extColorBufferFloat=this.getExtension("EXT_color_buffer_float"),this.extDebugRendererInfo=this.getExtension("WEBGL_debug_renderer_info"),this.extTextureFloatLinear=this.getExtension("OES_texture_float_linear"),this.textureFloatFilterable=!!this.extTextureFloatLinear,this.extFloatBlend=this.getExtension("EXT_float_blend"),this.extTextureFilterAnisotropic=this.getExtension("EXT_texture_filter_anisotropic","WEBKIT_EXT_texture_filter_anisotropic"),this.extParallelShaderCompile=this.getExtension("KHR_parallel_shader_compile"),this.extCompressedTextureETC1=this.getExtension("WEBGL_compressed_texture_etc1"),this.extCompressedTextureETC=this.getExtension("WEBGL_compressed_texture_etc"),this.extCompressedTexturePVRTC=this.getExtension("WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc"),this.extCompressedTextureS3TC=this.getExtension("WEBGL_compressed_texture_s3tc","WEBKIT_WEBGL_compressed_texture_s3tc"),this.extCompressedTextureS3TC_SRGB=this.getExtension("WEBGL_compressed_texture_s3tc_srgb"),this.extCompressedTextureATC=this.getExtension("WEBGL_compressed_texture_atc"),this.extCompressedTextureASTC=this.getExtension("WEBGL_compressed_texture_astc"),this.extTextureCompressionBPTC=this.getExtension("EXT_texture_compression_bptc"),this.extColorBufferHalfFloat=this.getExtension("EXT_color_buffer_half_float")}initializeCapabilities(){const e=this.gl;let s;const i=typeof navigator<"u"?navigator.userAgent:"";this.maxPrecision=this.precision=this.getPrecision();const r=e.getContextAttributes();this.supportsMsaa=(r==null?void 0:r.antialias)??!1,this.supportsStencil=(r==null?void 0:r.stencil)??!1,this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubeMapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxRenderBufferSize=e.getParameter(e.MAX_RENDERBUFFER_SIZE),this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxCombinedTextures=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.vertexUniformsCount=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.fragmentUniformsCount=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.maxColorAttachments=e.getParameter(e.MAX_COLOR_ATTACHMENTS),this.maxVolumeSize=e.getParameter(e.MAX_3D_TEXTURE_SIZE),s=this.extDebugRendererInfo,this.unmaskedRenderer=s?e.getParameter(s.UNMASKED_RENDERER_WEBGL):"",this.unmaskedVendor=s?e.getParameter(s.UNMASKED_VENDOR_WEBGL):"";const n=/\bMali-G52+/,a=/SM-[a-zA-Z0-9]+/;this.supportsGpuParticles=!(this.unmaskedVendor==="ARM"&&i.match(a))&&!this.unmaskedRenderer.match(n),s=this.extTextureFilterAnisotropic,this.maxAnisotropy=s?e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1;const o=!this.forceDisableMultisampling;this.maxSamples=o?e.getParameter(e.MAX_SAMPLES):1,this.maxSamples=Math.min(this.maxSamples,4),this.samples=o&&this.backBufferAntialias?this.maxSamples:1,this.supportsAreaLights=!be.android,this.maxTextures<=8&&(this.supportsAreaLights=!1)}initializeRenderState(){super.initializeRenderState();const e=this.gl;e.disable(e.BLEND),e.blendFunc(e.ONE,e.ZERO),e.blendEquation(e.FUNC_ADD),e.colorMask(!0,!0,!0,!0),e.blendColor(0,0,0,0),e.enable(e.CULL_FACE),this.cullFace=e.BACK,e.cullFace(e.BACK),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.depthMask(!0),this.stencil=!1,e.disable(e.STENCIL_TEST),this.stencilFuncFront=this.stencilFuncBack=Ri,this.stencilRefFront=this.stencilRefBack=0,this.stencilMaskFront=this.stencilMaskBack=255,e.stencilFunc(e.ALWAYS,0,255),this.stencilFailFront=this.stencilFailBack=da,this.stencilZfailFront=this.stencilZfailBack=da,this.stencilZpassFront=this.stencilZpassBack=da,this.stencilWriteMaskFront=255,this.stencilWriteMaskBack=255,e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.stencilMask(255),this.alphaToCoverage=!1,this.raster=!0,e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.disable(e.RASTERIZER_DISCARD),this.depthBiasEnabled=!1,e.disable(e.POLYGON_OFFSET_FILL),this.clearDepth=1,e.clearDepth(1),this.clearColor=new Y(0,0,0,0),e.clearColor(0,0,0,0),this.clearStencil=0,e.clearStencil(0),e.hint(e.FRAGMENT_SHADER_DERIVATIVE_HINT,e.NICEST),e.enable(e.SCISSOR_TEST),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE),this.unpackFlipY=!1,e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),this.unpackPremultiplyAlpha=!1,e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),e.pixelStorei(e.UNPACK_ALIGNMENT,1)}initTextureUnits(e=16){this.textureUnits=[];for(let s=0;s<e;s++)this.textureUnits.push([null,null,null])}initializeContextCaches(){super.initializeContextCaches(),this._vaoMap=new Map,this.boundVao=null,this.activeFramebuffer=null,this.feedback=null,this.transformFeedbackBuffer=null,this.textureUnit=0,this.initTextureUnits(this.maxCombinedTextures)}loseContext(){super.loseContext();for(const e of this.shaders)e.loseContext()}restoreContext(){this.initializeExtensions(),this.initializeCapabilities(),super.restoreContext();for(const e of this.shaders)e.restoreContext()}setViewport(e,s,i,r){(this.vx!==e||this.vy!==s||this.vw!==i||this.vh!==r)&&(this.gl.viewport(e,s,i,r),this.vx=e,this.vy=s,this.vw=i,this.vh=r)}setScissor(e,s,i,r){(this.sx!==e||this.sy!==s||this.sw!==i||this.sh!==r)&&(this.gl.scissor(e,s,i,r),this.sx=e,this.sy=s,this.sw=i,this.sh=r)}setFramebuffer(e){if(this.activeFramebuffer!==e){const s=this.gl;s.bindFramebuffer(s.FRAMEBUFFER,e),this.activeFramebuffer=e}}copyRenderTarget(e,s,i,r){var f,p;const n=this.gl;if(e===this.backBuffer&&(e=null),i){if(s){if(e){if(!e._colorBuffer||!s._colorBuffer)return b.error("Can't copy color buffer, because one of the render targets doesn't have it"),!1;if(e._colorBuffer._format!==s._colorBuffer._format)return b.error("Can't copy render targets of different color formats"),!1}}else if(!e._colorBuffer)return b.error("Can't copy empty color buffer to backbuffer"),!1}if(r&&e&&!e._depth){if(!e._depthBuffer||!s._depthBuffer)return b.error("Can't copy depth buffer, because one of the render targets doesn't have it"),!1;if(e._depthBuffer._format!==s._depthBuffer._format)return b.error("Can't copy render targets of different depth formats"),!1}G.pushGpuMarker(this,"COPY-RT");const a=this.renderTarget;this.renderTarget=s,this.updateBegin();const o=e?e.impl._glFrameBuffer:(f=this.backBuffer)==null?void 0:f.impl._glFrameBuffer,h=s?s.impl._glFrameBuffer:(p=this.backBuffer)==null?void 0:p.impl._glFrameBuffer;b.assert(o!==h,"Source and destination framebuffers must be different when blitting."),n.bindFramebuffer(n.READ_FRAMEBUFFER,o),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,h);const d=e?e.width:s?s.width:this.width,u=e?e.height:s?s.height:this.height;return n.blitFramebuffer(0,0,d,u,0,0,d,u,(i?n.COLOR_BUFFER_BIT:0)|(r?n.DEPTH_BUFFER_BIT:0),n.NEAREST),this.renderTarget=a,n.bindFramebuffer(n.FRAMEBUFFER,a?a.impl._glFrameBuffer:null),G.popGpuMarker(this),!0}frameStart(){super.frameStart(),this.updateBackbuffer(),this.gpuProfiler.frameStart()}frameEnd(){super.frameEnd(),this.gpuProfiler.frameEnd(),this.gpuProfiler.request()}startRenderPass(e){const s=e.renderTarget??this.backBuffer;this.renderTarget=s,b.assert(s),G.pushGpuMarker(this,`Pass:${e.name} RT:${s.name}`),G.pushGpuMarker(this,"START-PASS"),this.updateBegin();const{width:i,height:r}=s;this.setViewport(0,0,i,r),this.setScissor(0,0,i,r);const n=e.colorOps,a=e.depthStencilOps;if(n!=null&&n.clear||a.clearDepth||a.clearStencil){let o=0;const h={};n!=null&&n.clear&&(o|=Io,h.color=[n.clearValue.r,n.clearValue.g,n.clearValue.b,n.clearValue.a]),a.clearDepth&&(o|=Do,h.depth=a.clearDepthValue),a.clearStencil&&(o|=Rh,h.stencil=a.clearStencilValue),h.flags=o,this.clear(h)}b.call(()=>{this.insideRenderPass&&b.errorOnce("RenderPass cannot be started while inside another render pass.")}),this.insideRenderPass=!0,G.popGpuMarker(this)}endRenderPass(e){var r;G.pushGpuMarker(this,"END-PASS"),this.unbindVertexArray();const s=this.renderTarget,i=e.colorArrayOps.length;if(s){En.length=0;const n=this.gl;for(let a=0;a<i;a++){const o=e.colorArrayOps[a];o.store||o.resolve||En.push(n.COLOR_ATTACHMENT0+a)}s!==this.backBuffer&&(e.depthStencilOps.storeDepth||En.push(n.DEPTH_ATTACHMENT),e.depthStencilOps.storeStencil||En.push(n.STENCIL_ATTACHMENT)),En.length>0&&e.fullSizeClearRect&&n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,En),i&&((r=e.colorOps)!=null&&r.resolve)&&e.samples>1&&s.autoResolve&&s.resolve(!0,!1),s.depthBuffer&&e.depthStencilOps.resolveDepth&&e.samples>1&&s.autoResolve&&s.resolve(!1,!0);for(let a=0;a<i;a++)if(e.colorArrayOps[a].genMipmaps){const h=s._colorBuffers[a];h&&h.impl._glTexture&&h.mipmaps&&(G.pushGpuMarker(this,`MIPS${a}`),this.activeTexture(this.maxCombinedTextures-1),this.bindTexture(h),this.gl.generateMipmap(h.impl._glTarget),G.popGpuMarker(this))}}this.insideRenderPass=!1,G.popGpuMarker(this),G.popGpuMarker(this)}set defaultFramebuffer(e){this._defaultFramebuffer!==e&&(this._defaultFramebuffer=e,this._defaultFramebufferChanged=!0)}get defaultFramebuffer(){return this._defaultFramebuffer}updateBegin(){if(G.pushGpuMarker(this,"UPDATE-BEGIN"),this.boundVao=null,this._tempEnableSafariTextureUnitWorkaround)for(let i=0;i<this.textureUnits.length;++i)for(let r=0;r<3;++r)this.textureUnits[i][r]=null;const e=this.renderTarget??this.backBuffer;b.assert(e);const s=e.impl;s.initialized||this.initRenderTarget(e),this.setFramebuffer(s._glFrameBuffer),G.popGpuMarker(this)}updateEnd(){G.pushGpuMarker(this,"UPDATE-END"),this.unbindVertexArray();const e=this.renderTarget;if(e&&e!==this.backBuffer){e._samples>1&&e.autoResolve&&e.resolve();const s=e._colorBuffer;s&&s.impl._glTexture&&s.mipmaps&&(this.activeTexture(this.maxCombinedTextures-1),this.bindTexture(s),this.gl.generateMipmap(s.impl._glTarget))}G.popGpuMarker(this)}setUnpackFlipY(e){if(this.unpackFlipY!==e){this.unpackFlipY=e;const s=this.gl;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,e)}}setUnpackPremultiplyAlpha(e){if(this.unpackPremultiplyAlpha!==e){this.unpackPremultiplyAlpha=e;const s=this.gl;s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e)}}activeTexture(e){this.textureUnit!==e&&(this.gl.activeTexture(this.gl.TEXTURE0+e),this.textureUnit=e)}bindTexture(e){const s=e.impl,i=s._glTarget,r=s._glTexture,n=this.textureUnit,a=this.targetToSlot[i];this.textureUnits[n][a]!==r&&(this.gl.bindTexture(i,r),this.textureUnits[n][a]=r)}bindTextureOnUnit(e,s){const i=e.impl,r=i._glTarget,n=i._glTexture,a=this.targetToSlot[r];this.textureUnits[s][a]!==n&&(this.activeTexture(s),this.gl.bindTexture(r,n),this.textureUnits[s][a]=n)}setTextureParameters(e){const s=this.gl,i=e.impl.dirtyParameterFlags,r=e.impl._glTarget;if(i&Uy){let n=e._minFilter;(!e._mipmaps||e._compressed&&e._levels.length===1)&&(n===yc||n===xc?n=fe:(n===Sc||n===an)&&(n=at)),s.texParameteri(r,s.TEXTURE_MIN_FILTER,this.glFilter[n])}if(i&Vy&&s.texParameteri(r,s.TEXTURE_MAG_FILTER,this.glFilter[e._magFilter]),i&Gy&&s.texParameteri(r,s.TEXTURE_WRAP_S,this.glAddress[e._addressU]),i&Hy&&s.texParameteri(r,s.TEXTURE_WRAP_T,this.glAddress[e._addressV]),i&Wy&&s.texParameteri(r,s.TEXTURE_WRAP_R,this.glAddress[e._addressW]),i&$y&&s.texParameteri(r,s.TEXTURE_COMPARE_MODE,e._compareOnRead?s.COMPARE_REF_TO_TEXTURE:s.NONE),i&qy&&s.texParameteri(r,s.TEXTURE_COMPARE_FUNC,this.glComparison[e._compareFunc]),i&Xy){const n=this.extTextureFilterAnisotropic;n&&s.texParameterf(r,n.TEXTURE_MAX_ANISOTROPY_EXT,z.clamp(Math.round(e._anisotropy),1,this.maxAnisotropy))}}setTexture(e,s){const i=e.impl;i._glTexture||i.initialize(this,e),i.dirtyParameterFlags>0||e._needsUpload||e._needsMipmapsUpload?(this.activeTexture(s),this.bindTexture(e),i.dirtyParameterFlags&&(this.setTextureParameters(e),i.dirtyParameterFlags=0),(e._needsUpload||e._needsMipmapsUpload)&&(i.upload(this,e),e._needsUpload=!1,e._needsMipmapsUpload=!1)):this.bindTextureOnUnit(e,s)}createVertexArray(e){let s,i;const r=e.length>1;if(r){s="";for(let n=0;n<e.length;n++){const a=e[n];s+=a.id+a.format.renderingHash}i=this._vaoMap.get(s)}if(!i){const n=this.gl;i=n.createVertexArray(),n.bindVertexArray(i),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null);let a=!1;for(let o=0;o<e.length;o++){const h=e[o];n.bindBuffer(n.ARRAY_BUFFER,h.impl.bufferId);const d=h.format.elements;for(let u=0;u<d.length;u++){const f=d[u],p=Ae[f.name];p===0&&(a=!0),f.asInt?n.vertexAttribIPointer(p,f.numComponents,this.glType[f.dataType],f.stride,f.offset):n.vertexAttribPointer(p,f.numComponents,this.glType[f.dataType],f.normalize,f.stride,f.offset),n.enableVertexAttribArray(p),h.format.instancing&&n.vertexAttribDivisor(p,1)}}n.bindVertexArray(null),n.bindBuffer(n.ARRAY_BUFFER,null),r&&this._vaoMap.set(s,i),a||b.warn("No vertex attribute is mapped to location 0, which might cause compatibility issues on Safari on MacOS - please use attribute SEMANTIC_POSITION or SEMANTIC_ATTR15")}return i}unbindVertexArray(){this.boundVao&&(this.boundVao=null,this.gl.bindVertexArray(null))}setBuffers(){const e=this.gl;let s;if(this.vertexBuffers.length===1){const r=this.vertexBuffers[0];b.assert(r.device===this,"The VertexBuffer was not created using current GraphicsDevice"),r.impl.vao||(r.impl.vao=this.createVertexArray(this.vertexBuffers)),s=r.impl.vao}else s=this.createVertexArray(this.vertexBuffers);this.boundVao!==s&&(this.boundVao=s,e.bindVertexArray(s)),this.clearVertexBuffer();const i=this.indexBuffer?this.indexBuffer.impl.bufferId:null;e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i)}draw(e,s,i){const r=this.gl;if(this.activateShader(this),!this.shaderValid)return;let n,a,o,h,d,u,f,p;const m=this.shader;if(!m)return;const _=m.impl.samplers,g=m.impl.uniforms;i||this.setBuffers();let y=0;for(let v=0,E=_.length;v<E;v++){if(n=_[v],a=n.scopeId.value,!a){const T=n.scopeId.name;b.assert(T!=="texture_grabPass","Engine provided texture with sampler name 'texture_grabPass' is not longer supported, use 'uSceneColorMap' instead"),b.assert(T!=="uDepthMap","Engine provided texture with sampler name 'uDepthMap' is not longer supported, use 'uSceneDepthMap' instead"),T==="uSceneDepthMap"&&(b.errorOnce(`A uSceneDepthMap texture is used by the shader but a scene depth texture is not available. Use CameraComponent.requestSceneDepthMap / enable Depth Grabpass on the Camera Component to enable it. Rendering [${G.toString()}]`),a=tn(this,"white")),T==="uSceneColorMap"&&(b.errorOnce(`A uSceneColorMap texture is used by the shader but a scene color texture is not available. Use CameraComponent.requestSceneColorMap / enable Color Grabpass on the Camera Component to enable it. Rendering [${G.toString()}]`),a=tn(this,"pink")),a||(b.errorOnce(`Shader ${m.name} requires ${T} texture which was not set. Rendering [${G.toString()}]`),a=tn(this,"pink"))}if(a instanceof ce)o=a,this.setTexture(o,y),this.renderTarget&&this.renderTarget._samples<2&&(this.renderTarget.colorBuffer&&this.renderTarget.colorBuffer===o?b.error("Trying to bind current color buffer as a texture",{renderTarget:this.renderTarget,texture:o}):this.renderTarget.depthBuffer&&this.renderTarget.depthBuffer===o&&b.error("Trying to bind current depth buffer as a texture",{texture:o})),n.slot!==y&&(r.uniform1i(n.locationId,y),n.slot=y),y++;else{n.array.length=0,h=a.length;for(let T=0;T<h;T++)o=a[T],this.setTexture(o,y),n.array[T]=y,y++;r.uniform1iv(n.locationId,n.array)}}for(let v=0,E=g.length;v<E;v++)d=g[v],u=d.scopeId,f=d.version,p=u.versionObject.version,(f.globalId!==p.globalId||f.revision!==p.revision)&&(f.globalId=p.globalId,f.revision=p.revision,u.value!==null&&this.commitFunction[d.dataType](d,u.value));this.transformFeedbackBuffer&&(r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,0,this.transformFeedbackBuffer.impl.bufferId),r.beginTransformFeedback(r.POINTS));const w=this.glPrimitive[e.type],C=e.count,x=this.getExtension("EXT_disjoint_timer_query_webgl2","EXT_disjoint_timer_query");let M=r.createQuery();if(x?r.beginQuery(x.TIME_ELAPSED_EXT,M):M=null,e.indexed){const v=this.indexBuffer;b.assert(v.device===this,"The IndexBuffer was not created using current GraphicsDevice");const E=v.impl.glFormat,T=e.base*v.bytesPerIndex;s>0?r.drawElementsInstanced(w,C,E,T,s):r.drawElements(w,C,E,T)}else{const v=e.base;s>0?r.drawArraysInstanced(w,v,C,s):r.drawArrays(w,v,C)}x&&r.endQuery(x.TIME_ELAPSED_EXT);let S=function(v,E){return new Promise(T=>{const R=performance.now(),D=()=>{if(E||T(0),v.getQueryParameter(E,v.QUERY_RESULT_AVAILABLE)){const L=v.getQueryParameter(E,v.QUERY_RESULT);v.deleteQuery(E),T(L)}else{const L=performance.now()-R,k=L<10?0:L<100?1:4;setTimeout(D,k)}};D()})};Promise.all([S(r,M)]).then(v=>{const E=v[0]/1e6,T=v[1]?v[1]/1e6:"";window.drawReasterize=E,console.log(`Draw call with rasterize took ${E} ms`,T?`draw call without rasterize took ${T} ms`:"")}),this.transformFeedbackBuffer&&(r.endTransformFeedback(),r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,0,null)),this._drawCallsPerFrame++,this._primsPerFrame[e.type]+=e.count*(s>1?s:1)}clear(e){const s=this.defaultClearOptions;e=e||s;const i=e.flags??s.flags;if(i!==0){const r=this.gl;if(i&Io){const n=e.color??s.color,a=n[0],o=n[1],h=n[2],d=n[3],u=this.clearColor;(a!==u.r||o!==u.g||h!==u.b||d!==u.a)&&(this.gl.clearColor(a,o,h,d),this.clearColor.set(a,o,h,d)),this.setBlendState(bt.NOBLEND)}if(i&Do){const n=e.depth??s.depth;n!==this.clearDepth&&(this.gl.clearDepth(n),this.clearDepth=n),this.setDepthState(us.WRITEDEPTH)}if(i&Rh){const n=e.stencil??s.stencil;n!==this.clearStencil&&(this.gl.clearStencil(n),this.clearStencil=n),r.stencilMask(255),this.stencilWriteMaskFront=255,this.stencilWriteMaskBack=255}r.clear(this.glClearFlag[i])}}submit(){this.gl.flush()}readPixels(e,s,i,r,n){const a=this.gl;a.readPixels(e,s,i,r,a.RGBA,a.UNSIGNED_BYTE,n)}async readPixelsAsync(e,s,i,r,n){var p;const a=this.gl,o=(m,_)=>{const g=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);return this.submit(),new Promise((y,w)=>{function C(){const x=a.clientWaitSync(g,m,0);x===a.WAIT_FAILED?(a.deleteSync(g),w(new Error("webgl clientWaitSync sync failed"))):x===a.TIMEOUT_EXPIRED?setTimeout(C,_):(a.deleteSync(g),y())}C()})},h=(p=this.renderTarget.colorBuffer)==null?void 0:p.impl,d=(h==null?void 0:h._glFormat)??a.RGBA,u=(h==null?void 0:h._glPixelType)??a.UNSIGNED_BYTE,f=a.createBuffer();return a.bindBuffer(a.PIXEL_PACK_BUFFER,f),a.bufferData(a.PIXEL_PACK_BUFFER,n.byteLength,a.STREAM_READ),a.readPixels(e,s,i,r,d,u,0),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),await o(0,20),a.bindBuffer(a.PIXEL_PACK_BUFFER,f),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,n),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),a.deleteBuffer(f),n}readTextureAsync(e,s,i,r,n,a){const o=a.face??0,h=a.renderTarget??new St({colorBuffer:e,depth:!1,face:o});b.assert(h.colorBuffer===e);const d=new ArrayBuffer(Li.calcLevelGpuSize(r,n,1,e._format)),u=a.data??new(My(e._format))(d);return this.setRenderTarget(h),this.initRenderTarget(h),new Promise((f,p)=>{this.readPixelsAsync(s,i,r,n,u).then(m=>{a.renderTarget||h.destroy(),f(m)}).catch(p)})}setAlphaToCoverage(e){this.alphaToCoverage!==e&&(this.alphaToCoverage=e,e?this.gl.enable(this.gl.SAMPLE_ALPHA_TO_COVERAGE):this.gl.disable(this.gl.SAMPLE_ALPHA_TO_COVERAGE))}setTransformFeedbackBuffer(e){if(this.transformFeedbackBuffer!==e){this.transformFeedbackBuffer=e;const s=this.gl;e?(this.feedback||(this.feedback=s.createTransformFeedback()),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,this.feedback)):s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,null)}}setRaster(e){this.raster!==e&&(this.raster=e,e?this.gl.disable(this.gl.RASTERIZER_DISCARD):this.gl.enable(this.gl.RASTERIZER_DISCARD))}setStencilTest(e){if(this.stencil!==e){const s=this.gl;e?s.enable(s.STENCIL_TEST):s.disable(s.STENCIL_TEST),this.stencil=e}}setStencilFunc(e,s,i){(this.stencilFuncFront!==e||this.stencilRefFront!==s||this.stencilMaskFront!==i||this.stencilFuncBack!==e||this.stencilRefBack!==s||this.stencilMaskBack!==i)&&(this.gl.stencilFunc(this.glComparison[e],s,i),this.stencilFuncFront=this.stencilFuncBack=e,this.stencilRefFront=this.stencilRefBack=s,this.stencilMaskFront=this.stencilMaskBack=i)}setStencilFuncFront(e,s,i){if(this.stencilFuncFront!==e||this.stencilRefFront!==s||this.stencilMaskFront!==i){const r=this.gl;r.stencilFuncSeparate(r.FRONT,this.glComparison[e],s,i),this.stencilFuncFront=e,this.stencilRefFront=s,this.stencilMaskFront=i}}setStencilFuncBack(e,s,i){if(this.stencilFuncBack!==e||this.stencilRefBack!==s||this.stencilMaskBack!==i){const r=this.gl;r.stencilFuncSeparate(r.BACK,this.glComparison[e],s,i),this.stencilFuncBack=e,this.stencilRefBack=s,this.stencilMaskBack=i}}setStencilOperation(e,s,i,r){(this.stencilFailFront!==e||this.stencilZfailFront!==s||this.stencilZpassFront!==i||this.stencilFailBack!==e||this.stencilZfailBack!==s||this.stencilZpassBack!==i)&&(this.gl.stencilOp(this.glStencilOp[e],this.glStencilOp[s],this.glStencilOp[i]),this.stencilFailFront=this.stencilFailBack=e,this.stencilZfailFront=this.stencilZfailBack=s,this.stencilZpassFront=this.stencilZpassBack=i),(this.stencilWriteMaskFront!==r||this.stencilWriteMaskBack!==r)&&(this.gl.stencilMask(r),this.stencilWriteMaskFront=r,this.stencilWriteMaskBack=r)}setStencilOperationFront(e,s,i,r){(this.stencilFailFront!==e||this.stencilZfailFront!==s||this.stencilZpassFront!==i)&&(this.gl.stencilOpSeparate(this.gl.FRONT,this.glStencilOp[e],this.glStencilOp[s],this.glStencilOp[i]),this.stencilFailFront=e,this.stencilZfailFront=s,this.stencilZpassFront=i),this.stencilWriteMaskFront!==r&&(this.gl.stencilMaskSeparate(this.gl.FRONT,r),this.stencilWriteMaskFront=r)}setStencilOperationBack(e,s,i,r){(this.stencilFailBack!==e||this.stencilZfailBack!==s||this.stencilZpassBack!==i)&&(this.gl.stencilOpSeparate(this.gl.BACK,this.glStencilOp[e],this.glStencilOp[s],this.glStencilOp[i]),this.stencilFailBack=e,this.stencilZfailBack=s,this.stencilZpassBack=i),this.stencilWriteMaskBack!==r&&(this.gl.stencilMaskSeparate(this.gl.BACK,r),this.stencilWriteMaskBack=r)}setBlendState(e){const s=this.blendState;if(!s.equals(e)){const i=this.gl,{blend:r,colorOp:n,alphaOp:a,colorSrcFactor:o,colorDstFactor:h,alphaSrcFactor:d,alphaDstFactor:u}=e;if(s.blend!==r&&(r?i.enable(i.BLEND):i.disable(i.BLEND)),s.colorOp!==n||s.alphaOp!==a){const f=this.glBlendEquation;i.blendEquationSeparate(f[n],f[a])}(s.colorSrcFactor!==o||s.colorDstFactor!==h||s.alphaSrcFactor!==d||s.alphaDstFactor!==u)&&i.blendFuncSeparate(this.glBlendFunctionColor[o],this.glBlendFunctionColor[h],this.glBlendFunctionAlpha[d],this.glBlendFunctionAlpha[u]),s.allWrite!==e.allWrite&&this.gl.colorMask(e.redWrite,e.greenWrite,e.blueWrite,e.alphaWrite),s.copy(e)}}setBlendColor(e,s,i,r){const n=this.blendColor;(e!==n.r||s!==n.g||i!==n.b||r!==n.a)&&(this.gl.blendColor(e,s,i,r),n.set(e,s,i,r))}setStencilState(e,s){e||s?(this.setStencilTest(!0),e===s?(this.setStencilFunc(e.func,e.ref,e.readMask),this.setStencilOperation(e.fail,e.zfail,e.zpass,e.writeMask)):(e??(e=Zs.DEFAULT),this.setStencilFuncFront(e.func,e.ref,e.readMask),this.setStencilOperationFront(e.fail,e.zfail,e.zpass,e.writeMask),s??(s=Zs.DEFAULT),this.setStencilFuncBack(s.func,s.ref,s.readMask),this.setStencilOperationBack(s.fail,s.zfail,s.zpass,s.writeMask))):this.setStencilTest(!1)}setDepthState(e){const s=this.depthState;if(!s.equals(e)){const i=this.gl,r=e.write;s.write!==r&&i.depthMask(r);let{func:n,test:a}=e;!a&&r&&(a=!0,n=Ri),s.func!==n&&i.depthFunc(this.glComparison[n]),s.test!==a&&(a?i.enable(i.DEPTH_TEST):i.disable(i.DEPTH_TEST));const{depthBias:o,depthBiasSlope:h}=e;o||h?(this.depthBiasEnabled||(this.depthBiasEnabled=!0,this.gl.enable(this.gl.POLYGON_OFFSET_FILL)),i.polygonOffset(h,o)):this.depthBiasEnabled&&(this.depthBiasEnabled=!1,this.gl.disable(this.gl.POLYGON_OFFSET_FILL)),s.copy(e)}}setCullMode(e){if(this.cullMode!==e){if(e===vt)this.gl.disable(this.gl.CULL_FACE);else{this.cullMode===vt&&this.gl.enable(this.gl.CULL_FACE);const s=this.glCull[e];this.cullFace!==s&&(this.gl.cullFace(s),this.cullFace=s)}this.cullMode=e}}setShader(e,s=!1){e!==this.shader&&(this.shader=e,this.shaderAsyncCompile=s,this.shaderValid=void 0,this._shaderSwitchesPerFrame++)}activateShader(e){const{shader:s}=this,{impl:i}=s;this.shaderValid===void 0&&(s.failed?this.shaderValid=!1:s.ready||(this.shaderAsyncCompile?i.isLinked(e)?i.finalize(this,s)||(s.failed=!0,this.shaderValid=!1):this.shaderValid=!1:i.finalize(this,s)||(s.failed=!0,this.shaderValid=!1))),this.shaderValid===void 0&&(this.gl.useProgram(i.glProgram),this.shaderValid=!0)}clearVertexArrayObjectCache(){const e=this.gl;this._vaoMap.forEach((s,i,r)=>{e.deleteVertexArray(s)}),this._vaoMap.clear()}set fullscreen(e){e?this.gl.canvas.requestFullscreen():document.exitFullscreen()}get fullscreen(){return!!document.fullscreenElement}debugLoseContext(e=100){const s=this.gl.getExtension("WEBGL_lose_context");s.loseContext(),setTimeout(()=>s.restoreContext(),e)}}let mb=0;class cr{constructor(t,e,s,i=ts,r,n){this.device=t,this.format=e,this.numIndices=s,this.usage=i,this.id=mb++,this.impl=t.createIndexBufferImpl(this,n);const a=vv[e];this.bytesPerIndex=a,this.numBytes=this.numIndices*a,r?this.setData(r):this.storage=new ArrayBuffer(this.numBytes),this.adjustVramSizeTracking(t._vram,this.numBytes),this.device.buffers.push(this)}destroy(){const t=this.device,e=t.buffers.indexOf(this);e!==-1&&t.buffers.splice(e,1),this.device.indexBuffer===this&&(this.device.indexBuffer=null),this.impl.initialized&&(this.impl.destroy(t),this.adjustVramSizeTracking(t._vram,-this.storage.byteLength))}adjustVramSizeTracking(t,e){b.trace(Qx,`${this.id} size: ${e} vram.ib: ${t.ib} => ${t.ib+e}`),t.ib+=e}loseContext(){this.impl.loseContext()}getFormat(){return this.format}getNumIndices(){return this.numIndices}lock(){return this.storage}unlock(){this.impl.unlock(this)}setData(t){return t.byteLength!==this.numBytes?(b.error(`IndexBuffer: wrong initial data size: expected ${this.numBytes}, got ${t.byteLength}`),!1):(this.storage=t,this.unlock(),!0)}_lockTypedArray(){const t=this.lock();return this.format===or?new Uint32Array(t):this.format===Fi?new Uint16Array(t):new Uint8Array(t)}writeData(t,e){const s=this._lockTypedArray();if(t.length>e)if(ArrayBuffer.isView(t))t=t.subarray(0,e),s.set(t);else for(let i=0;i<e;i++)s[i]=t[i];else s.set(t);this.unlock()}readData(t){const e=this._lockTypedArray(),s=this.numIndices;if(ArrayBuffer.isView(t))t.set(e);else{t.length=0;for(let i=0;i<s;i++)t[i]=e[i]}return s}}class _b{constructor(){c(this,"clearValue",new Y(0,0,0,1));c(this,"clearValueLinear",new Y(0,0,0,1));c(this,"clear",!1);c(this,"store",!1);c(this,"resolve",!0);c(this,"genMipmaps",!1)}}class gb{constructor(){c(this,"clearDepthValue",1);c(this,"clearStencilValue",0);c(this,"clearDepth",!1);c(this,"clearStencil",!1);c(this,"storeDepth",!1);c(this,"resolveDepth",!1);c(this,"storeStencil",!1)}}class gs{constructor(t){c(this,"_name");c(this,"device");c(this,"_enabled",!0);c(this,"_skipStart",!1);c(this,"_skipEnd",!1);c(this,"executeEnabled",!0);c(this,"renderTarget");c(this,"_options");c(this,"samples",0);c(this,"colorArrayOps",[]);c(this,"depthStencilOps");c(this,"requiresCubemaps",!0);c(this,"fullSizeClearRect",!0);c(this,"beforePasses",[]);c(this,"afterPasses",[]);b.assert(t),this.device=t}get colorOps(){return this.colorArrayOps[0]}set name(t){this._name=t}get name(){return this._name||(this._name=this.constructor.name),this._name}set scaleX(t){b.assert(this._options,"The render pass needs to be initialized first."),this._options.scaleX=t}get scaleX(){return this._options.scaleX}set scaleY(t){b.assert(this._options,"The render pass needs to be initialized first."),this._options.scaleY=t}get scaleY(){return this._options.scaleY}set options(t){this._options=t,t&&(this.scaleX=this.scaleX??1,this.scaleY=this.scaleY??1)}get options(){return this._options}init(t=null,e){this.options=e,this.renderTarget=t,this.samples=Math.max(this.renderTarget?this.renderTarget.samples:this.device.samples,1),this.allocateAttachments(),this.postInit()}allocateAttachments(){var s,i,r,n;const t=this.renderTarget;this.depthStencilOps=new gb,t!=null&&t.depthBuffer&&(this.depthStencilOps.storeDepth=!0);const e=t?((s=t._colorBuffers)==null?void 0:s.length)??0:1;this.colorArrayOps.length=0;for(let a=0;a<e;a++){const o=new _b;this.colorArrayOps[a]=o,this.samples===1&&(o.store=!0,o.resolve=!1);const h=(r=(i=this.renderTarget)==null?void 0:i._colorBuffers)==null?void 0:r[a];if((n=this.renderTarget)!=null&&n.mipmaps&&(h!=null&&h.mipmaps)){const d=sa(h._format);o.genMipmaps=!d}}}destroy(){}postInit(){}frameUpdate(){if(this._options&&this.renderTarget){const t=this._options.resizeSource??this.device.backBuffer,e=Math.floor(t.width*this.scaleX),s=Math.floor(t.height*this.scaleY);this.renderTarget.resize(e,s)}}before(){}execute(){}after(){}onEnable(){}onDisable(){}set enabled(t){this._enabled!==t&&(this._enabled=t,t?this.onEnable():this.onDisable())}get enabled(){return this._enabled}setClearColor(t){const e=this.colorArrayOps.length;for(let s=0;s<e;s++){const i=this.colorArrayOps[s];t&&(i.clearValue.copy(t),i.clearValueLinear.linear(t)),i.clear=!!t}}setClearDepth(t){t&&(this.depthStencilOps.clearDepthValue=t),this.depthStencilOps.clearDepth=t!==void 0}setClearStencil(t){t&&(this.depthStencilOps.clearStencilValue=t),this.depthStencilOps.clearStencil=t!==void 0}render(){if(this.enabled){const t=this.device,e=this.renderTarget!==void 0;b.call(()=>{this.log(t,t.renderPassIndex)}),this.before(),this.executeEnabled&&(e&&!this._skipStart&&t.startRenderPass(this),this.execute(),e&&!this._skipEnd&&t.endRenderPass(this)),this.after(),t.renderPassIndex++}}log(t,e=0){var s,i,r;if(Qs.get(Yp)||Qs.get(ta)){const n=this.renderTarget??(this.renderTarget===null?t.backBuffer:null),a=!!(n!=null&&n.impl.assignedColorTexture)||(n==null?void 0:n.impl.suppliedColorFramebuffer)!==void 0,o=((s=n==null?void 0:n._colorBuffers)==null?void 0:s.length)??(a?1:0),h=n==null?void 0:n.depth,d=n==null?void 0:n.stencil,u=n==null?void 0:n.mipLevel,f=n?` RT: ${n?n.name:"NULL"} ${o>0?`[Color${o>1?` x ${o}`:""}]`:""}${h?"[Depth]":""}${d?"[Stencil]":""} ${n.width} x ${n.height}${this.samples>0?` samples: ${this.samples}`:""}${u>0?` mipLevel: ${u}`:""}`:"",p=this._skipStart?"++":e.toString().padEnd(2," ");b.trace(Yp,`${p}: ${this.name.padEnd(20," ")}${this.executeEnabled?"":" DISABLED "}${f.padEnd(30)}`);for(let m=0;m<o;m++){const _=this.colorArrayOps[m],g=(i=At.get(a?t.backBufferFormat:n.getColorBuffer(m).format))==null?void 0:i.name;b.trace(ta,`    color[${m}]: ${_.clear?"clear":"load"}->${_.store?"store":"discard"} ${_.resolve?"resolve ":""}${_.genMipmaps?"mipmaps ":""} [format: ${g}] ${_.clear?`[clear: ${_.clearValue.toString(!0,!0)}]`:""}`)}if(this.depthStencilOps){const m=`${n.depthBuffer?` [format: ${(r=At.get(n.depthBuffer.format))==null?void 0:r.name}]`:""}`;h&&b.trace(ta,`    depthOps: ${this.depthStencilOps.clearDepth?"clear":"load"}->${this.depthStencilOps.storeDepth?"store":"discard"}${this.depthStencilOps.resolveDepth?" resolve":""}${m}${this.depthStencilOps.clearDepth?` [clear: ${this.depthStencilOps.clearDepthValue}]`:""}`),d&&b.trace(ta,`    stencOps: ${this.depthStencilOps.clearStencil?"clear":"load"}->${this.depthStencilOps.storeStencil?"store":"discard"}${m}${this.depthStencilOps.clearStencil?` [clear: ${this.depthStencilOps.clearStencilValue}]`:""}`)}}}}function yb(l){this.array[this.index]=l}function xb(l,t){this.array[this.index]=l,this.array[this.index+1]=t}function Sb(l,t,e){this.array[this.index]=l,this.array[this.index+1]=t,this.array[this.index+2]=e}function vb(l,t,e,s){this.array[this.index]=l,this.array[this.index+1]=t,this.array[this.index+2]=e,this.array[this.index+3]=s}function bb(l,t,e){this.array[l]=t[e]}function wb(l,t,e){this.array[l]=t[e],this.array[l+1]=t[e+1]}function Tb(l,t,e){this.array[l]=t[e],this.array[l+1]=t[e+1],this.array[l+2]=t[e+2]}function Ab(l,t,e){this.array[l]=t[e],this.array[l+1]=t[e+1],this.array[l+2]=t[e+2],this.array[l+3]=t[e+3]}function Eb(l,t,e){t[e]=this.array[l]}function Cb(l,t,e){t[e]=this.array[l],t[e+1]=this.array[l+1]}function Mb(l,t,e){t[e]=this.array[l],t[e+1]=this.array[l+1],t[e+2]=this.array[l+2]}function Pb(l,t,e){t[e]=this.array[l],t[e+1]=this.array[l+1],t[e+2]=this.array[l+2],t[e+3]=this.array[l+3]}class Rb{constructor(t,e,s){switch(this.index=0,this.numComponents=e.numComponents,s.interleaved?this.array=new fa[e.dataType](t,e.offset):this.array=new fa[e.dataType](t,e.offset,s.vertexCount*e.numComponents),this.stride=e.stride/this.array.constructor.BYTES_PER_ELEMENT,e.numComponents){case 1:this.set=yb,this.getToArray=Eb,this.setFromArray=bb;break;case 2:this.set=xb,this.getToArray=Cb,this.setFromArray=wb;break;case 3:this.set=Sb,this.getToArray=Mb,this.setFromArray=Tb;break;case 4:this.set=vb,this.getToArray=Pb,this.setFromArray=Ab;break}}get(t){return this.array[this.index+t]}set(t,e,s,i){}getToArray(t,e,s){}setFromArray(t,e,s){}}class vo{constructor(t){this.vertexBuffer=t,this.vertexFormatSize=t.getFormat().size,this.buffer=this.vertexBuffer.lock(),this.accessors=[],this.element={};const e=this.vertexBuffer.getFormat();for(let s=0;s<e.elements.length;s++){const i=e.elements[s];this.accessors[s]=new Rb(this.buffer,i,e),this.element[i.name]=this.accessors[s]}}next(t=1){let e=0;const s=this.accessors,i=this.accessors.length;for(;e<i;){const r=s[e++];r.index+=t*r.stride}}end(){this.vertexBuffer.unlock()}writeData(t,e,s){const i=this.element[t];if(i){s>this.vertexBuffer.numVertices&&(b.error(`NumVertices provided to setData: ${s} is larger than space in VertexBuffer: ${this.vertexBuffer.numVertices}`),s=this.vertexBuffer.numVertices);const r=i.numComponents;if(this.vertexBuffer.getFormat().interleaved){let n=0;for(let a=0;a<s;a++)i.setFromArray(n,e,a*r),n+=i.stride}else if(e.length>s*r){const n=s*r;if(ArrayBuffer.isView(e))e=e.subarray(0,n),i.array.set(e);else for(let a=0;a<n;a++)i.array[a]=e[a]}else i.array.set(e)}}readData(t,e){const s=this.element[t];let i=0;if(s){i=this.vertexBuffer.numVertices;let r;const n=s.numComponents;if(this.vertexBuffer.getFormat().interleaved){Array.isArray(e)&&(e.length=0),s.index=0;let a=0;for(r=0;r<i;r++)s.getToArray(a,e,r*n),a+=s.stride}else if(ArrayBuffer.isView(e))e.set(s.array);else{e.length=0;const a=i*n;for(r=0;r<a;r++)e[r]=s.array[r]}}return i}}const Dm="mousedown",Lm="mousemove",Fm="mouseup",Du="mousewheel",Ib=-1;class Db{constructor(t,e){c(this,"key",null);c(this,"element",null);c(this,"event",null);e&&(this.key=e.keyCode,this.element=e.target,this.event=e)}}const Al=new Db;function gd(l){return Al.key=l.keyCode,Al.element=l.target,Al.event=l,Al}function El(l){return typeof l=="string"?l.toUpperCase().charCodeAt(0):l}const Lb={9:"Tab",13:"Enter",16:"Shift",17:"Control",18:"Alt",27:"Escape",37:"Left",38:"Up",39:"Right",40:"Down",46:"Delete",91:"Win"};class km extends de{constructor(e,s={}){super();c(this,"_element",null);c(this,"_keymap",{});c(this,"_lastmap",{});this._keyDownHandler=this._handleKeyDown.bind(this),this._keyUpHandler=this._handleKeyUp.bind(this),this._keyPressHandler=this._handleKeyPress.bind(this),this._visibilityChangeHandler=this._handleVisibilityChange.bind(this),this._windowBlurHandler=this._handleWindowBlur.bind(this),e&&this.attach(e),this.preventDefault=s.preventDefault||!1,this.stopPropagation=s.stopPropagation||!1}attach(e){this._element&&this.detach(),this._element=e,this._element.addEventListener("keydown",this._keyDownHandler,!1),this._element.addEventListener("keypress",this._keyPressHandler,!1),this._element.addEventListener("keyup",this._keyUpHandler,!1),document.addEventListener("visibilitychange",this._visibilityChangeHandler,!1),window.addEventListener("blur",this._windowBlurHandler,!1)}detach(){if(!this._element){b.warn("Unable to detach keyboard. It is not attached to an element.");return}this._element.removeEventListener("keydown",this._keyDownHandler),this._element.removeEventListener("keypress",this._keyPressHandler),this._element.removeEventListener("keyup",this._keyUpHandler),this._element=null,document.removeEventListener("visibilitychange",this._visibilityChangeHandler,!1),window.removeEventListener("blur",this._windowBlurHandler,!1)}toKeyIdentifier(e){e=El(e);const s=Lb[e.toString()];if(s)return s;let i=e.toString(16).toUpperCase();const r=i.length;for(let n=0;n<4-r;n++)i=`0${i}`;return`U+${i}`}_handleKeyDown(e){const s=e.keyCode||e.charCode;if(s===void 0)return;const i=this.toKeyIdentifier(s);this._keymap[i]=!0,this.fire("keydown",gd(e)),this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()}_handleKeyUp(e){const s=e.keyCode||e.charCode;if(s===void 0)return;const i=this.toKeyIdentifier(s);delete this._keymap[i],this.fire("keyup",gd(e)),this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()}_handleKeyPress(e){this.fire("keypress",gd(e)),this.preventDefault&&e.preventDefault(),this.stopPropagation&&e.stopPropagation()}_handleVisibilityChange(){document.visibilityState==="hidden"&&this._handleWindowBlur()}_handleWindowBlur(){this._keymap={},this._lastmap={}}update(){for(const e in this._lastmap)delete this._lastmap[e];for(const e in this._keymap)this._keymap.hasOwnProperty(e)&&(this._lastmap[e]=this._keymap[e])}isPressed(e){const s=El(e),i=this.toKeyIdentifier(s);return!!this._keymap[i]}wasPressed(e){const s=El(e),i=this.toKeyIdentifier(s);return!!this._keymap[i]&&!this._lastmap[i]}wasReleased(e){const s=El(e),i=this.toKeyIdentifier(s);return!this._keymap[i]&&!!this._lastmap[i]}}c(km,"EVENT_KEYDOWN","keydown"),c(km,"EVENT_KEYUP","keyup");function Lu(){return!!(document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement)}class ia{constructor(t,e){c(this,"x",0);c(this,"y",0);c(this,"dx",0);c(this,"dy",0);c(this,"button",Ib);c(this,"wheelDelta",0);c(this,"element");c(this,"ctrlKey",!1);c(this,"altKey",!1);c(this,"shiftKey",!1);c(this,"metaKey",!1);c(this,"event");let s={x:0,y:0};if(e){if(e instanceof ia)throw Error("Expected MouseEvent");s=t._getTargetCoords(e)}else e={};if(s)this.x=s.x,this.y=s.y;else if(Lu())this.x=0,this.y=0;else return;e.type==="wheel"&&(e.deltaY>0?this.wheelDelta=1:e.deltaY<0&&(this.wheelDelta=-1)),Lu()?(this.dx=e.movementX||e.webkitMovementX||e.mozMovementX||0,this.dy=e.movementY||e.webkitMovementY||e.mozMovementY||0):(this.dx=this.x-t._lastX,this.dy=this.y-t._lastY),(e.type==="mousedown"||e.type==="mouseup")&&(this.button=e.button),this.buttons=t._buttons.slice(0),this.element=e.target,this.ctrlKey=e.ctrlKey??!1,this.altKey=e.altKey??!1,this.shiftKey=e.shiftKey??!1,this.metaKey=e.metaKey??!1,this.event=e}}class Cl extends de{constructor(e){super();c(this,"_lastX",0);c(this,"_lastY",0);c(this,"_buttons",[!1,!1,!1]);c(this,"_lastbuttons",[!1,!1,!1]);c(this,"_target",null);c(this,"_attached",!1);this._upHandler=this._handleUp.bind(this),this._downHandler=this._handleDown.bind(this),this._moveHandler=this._handleMove.bind(this),this._wheelHandler=this._handleWheel.bind(this),this._contextMenuHandler=s=>{s.preventDefault()},this.attach(e)}static isPointerLocked(){return Lu()}attach(e){if(this._target=e,this._attached)return;this._attached=!0;const s={passive:!1},i=be.passiveEvents?s:!1;window.addEventListener("mouseup",this._upHandler,i),window.addEventListener("mousedown",this._downHandler,i),window.addEventListener("mousemove",this._moveHandler,i),window.addEventListener("wheel",this._wheelHandler,i)}detach(){if(!this._attached)return;this._attached=!1,this._target=null;const e={passive:!1},s=be.passiveEvents?e:!1;window.removeEventListener("mouseup",this._upHandler,s),window.removeEventListener("mousedown",this._downHandler,s),window.removeEventListener("mousemove",this._moveHandler,s),window.removeEventListener("wheel",this._wheelHandler,s)}disableContextMenu(){this._target&&this._target.addEventListener("contextmenu",this._contextMenuHandler)}enableContextMenu(){this._target&&this._target.removeEventListener("contextmenu",this._contextMenuHandler)}enablePointerLock(e,s){if(!document.body.requestPointerLock){s&&s();return}const i=()=>{e(),document.removeEventListener("pointerlockchange",i)},r=()=>{s(),document.removeEventListener("pointerlockerror",r)};e&&document.addEventListener("pointerlockchange",i,!1),s&&document.addEventListener("pointerlockerror",r,!1),document.body.requestPointerLock()}disablePointerLock(e){if(!document.exitPointerLock)return;const s=()=>{e(),document.removeEventListener("pointerlockchange",s)};e&&document.addEventListener("pointerlockchange",s,!1),document.exitPointerLock()}update(){this._lastbuttons[0]=this._buttons[0],this._lastbuttons[1]=this._buttons[1],this._lastbuttons[2]=this._buttons[2]}isPressed(e){return this._buttons[e]}wasPressed(e){return this._buttons[e]&&!this._lastbuttons[e]}wasReleased(e){return!this._buttons[e]&&this._lastbuttons[e]}_handleUp(e){this._buttons[e.button]=!1;const s=new ia(this,e);s.event&&this.fire(Fm,s)}_handleDown(e){this._buttons[e.button]=!0;const s=new ia(this,e);s.event&&this.fire(Dm,s)}_handleMove(e){const s=new ia(this,e);s.event&&(this.fire(Lm,s),this._lastX=s.x,this._lastY=s.y)}_handleWheel(e){const s=new ia(this,e);s.event&&this.fire(Du,s)}_getTargetCoords(e){const s=this._target.getBoundingClientRect(),i=Math.floor(s.left),r=Math.floor(s.top);return e.clientX<i||e.clientX>=i+this._target.clientWidth||e.clientY<r||e.clientY>=r+this._target.clientHeight?null:{x:e.clientX-i,y:e.clientY-r}}}c(Cl,"EVENT_MOUSEMOVE",Lm),c(Cl,"EVENT_MOUSEDOWN",Dm),c(Cl,"EVENT_MOUSEUP",Fm),c(Cl,"EVENT_MOUSEWHEEL",Du);const Ee=class Ee{get(t,e,s){return typeof e=="function"&&(s=e,e={}),this.request("GET",t,e,s)}post(t,e,s,i){return typeof s=="function"&&(i=s,s={}),s.postdata=e,this.request("POST",t,s,i)}put(t,e,s,i){return typeof s=="function"&&(i=s,s={}),s.postdata=e,this.request("PUT",t,s,i)}del(t,e,s){return typeof e=="function"&&(s=e,e={}),this.request("DELETE",t,e,s)}request(t,e,s,i){let r,n,a,o=!1;if(typeof s=="function"&&(i=s,s={}),s.retry&&(s=Object.assign({retries:0,maxRetries:5},s)),s.callback=i,s.async==null&&(s.async=!0),s.headers==null&&(s.headers={}),s.postdata!=null)if(s.postdata instanceof Document)a=s.postdata;else if(s.postdata instanceof FormData)a=s.postdata;else if(s.postdata instanceof Object){let d=s.headers["Content-Type"];switch(d===void 0&&(s.headers["Content-Type"]=Ee.ContentType.FORM_URLENCODED,d=s.headers["Content-Type"]),d){case Ee.ContentType.FORM_URLENCODED:{a="";let u=!0;for(const f in s.postdata)if(s.postdata.hasOwnProperty(f)){u?u=!1:a+="&";const p=encodeURIComponent(f),m=encodeURIComponent(s.postdata[f]);a+=`${p}=${m}`}break}default:case Ee.ContentType.JSON:d==null&&(s.headers["Content-Type"]=Ee.ContentType.JSON),a=JSON.stringify(s.postdata);break}}else a=s.postdata;if(s.cache===!1){const d=ae();r=new ad(e),r.query?r.query=`${r.query}&ts=${d}`:r.query=`ts=${d}`,e=r.toString()}s.query&&(r=new ad(e),n=Eh(r.getQuery(),s.query),r.setQuery(n),e=r.toString());const h=new XMLHttpRequest;h.open(t,e,s.async),h.withCredentials=s.withCredentials!==void 0?s.withCredentials:!1,h.responseType=s.responseType||this._guessResponseType(e);for(const d in s.headers)s.headers.hasOwnProperty(d)&&h.setRequestHeader(d,s.headers[d]);h.onreadystatechange=()=>{this._onReadyStateChange(t,e,s,h)},h.onerror=()=>{this._onError(t,e,s,h),o=!0};try{h.send(a)}catch(d){o||s.error(h.status,h,d)}return h}_guessResponseType(t){const e=new ad(t),s=me.getExtension(e.path).toLowerCase();return Ee.binaryExtensions.indexOf(s)>=0?Ee.ResponseType.ARRAY_BUFFER:s===".json"?Ee.ResponseType.JSON:s===".xml"?Ee.ResponseType.DOCUMENT:Ee.ResponseType.TEXT}_isBinaryContentType(t){return[Ee.ContentType.BASIS,Ee.ContentType.BIN,Ee.ContentType.DDS,Ee.ContentType.GLB,Ee.ContentType.MP3,Ee.ContentType.MP4,Ee.ContentType.OGG,Ee.ContentType.OPUS,Ee.ContentType.WAV].indexOf(t)>=0}_isBinaryResponseType(t){return t===Ee.ResponseType.ARRAY_BUFFER||t===Ee.ResponseType.BLOB||t===Ee.ResponseType.JSON}_onReadyStateChange(t,e,s,i){if(i.readyState===4)switch(i.status){case 0:{i.responseURL&&i.responseURL.startsWith("file:///")?this._onSuccess(t,e,s,i):this._onError(t,e,s,i);break}case 200:case 201:case 206:case 304:{this._onSuccess(t,e,s,i);break}default:{this._onError(t,e,s,i);break}}}_onSuccess(t,e,s,i){let r,n;const a=i.getResponseHeader("Content-Type");a&&(n=a.split(";")[0].trim());try{this._isBinaryContentType(n)||this._isBinaryResponseType(i.responseType)?r=i.response:n===Ee.ContentType.JSON||e.split("?")[0].endsWith(".json")?r=JSON.parse(i.responseText):i.responseType===Ee.ResponseType.DOCUMENT||n===Ee.ContentType.XML?r=i.responseXML:r=i.responseText,s.callback(null,r)}catch(o){s.callback(o)}}_onError(t,e,s,i){if(!s.retrying)if(s.retry&&s.retries<s.maxRetries){s.retries++,s.retrying=!0;const r=z.clamp(Math.pow(2,s.retries)*Ee.retryDelay,0,s.maxRetryDelay||5e3);console.log(`${t}: ${e} - Error ${i.status}. Retrying in ${r} ms`),setTimeout(()=>{s.retrying=!1,this.request(t,e,s,s.callback)},r)}else s.callback(i.status===0?"Network error":i.status,null)}};c(Ee,"ContentType",{AAC:"audio/aac",BASIS:"image/basis",BIN:"application/octet-stream",DDS:"image/dds",FORM_URLENCODED:"application/x-www-form-urlencoded",GIF:"image/gif",GLB:"model/gltf-binary",JPEG:"image/jpeg",JSON:"application/json",MP3:"audio/mpeg",MP4:"audio/mp4",OGG:"audio/ogg",OPUS:'audio/ogg; codecs="opus"',PNG:"image/png",TEXT:"text/plain",WAV:"audio/x-wav",XML:"application/xml"}),c(Ee,"ResponseType",{TEXT:"text",ARRAY_BUFFER:"arraybuffer",BLOB:"blob",DOCUMENT:"document",JSON:"json"}),c(Ee,"binaryExtensions",[".model",".wav",".ogg",".mp3",".mp4",".m4a",".aac",".dds",".basis",".glb",".opus"]),c(Ee,"retryDelay",100);let ps=Ee;const Ye=new ps;function Ni(){return typeof AudioContext<"u"||typeof webkitAudioContext<"u"}class Vh{constructor(t,e,s={}){if(this.volume=s.volume??1,this.loop=s.loop??!1,this.pitch=s.pitch??1,this.sound=e,this.paused=!1,this.suspended=!1,this.manager=t,this.source=null,Ni()){this.startTime=0,this.startOffset=0;const i=t.context;this.gain=i.createGain()}else e.audio&&(this.source=e.audio.cloneNode(!1),this.source.pause())}getVolume(){return this.volume}getLoop(){return this.loop}setLoop(t){this.loop=t,this.source&&(this.source.loop=t)}getPitch(){return this.pitch}onManagerVolumeChange(){this.setVolume(this.getVolume())}onManagerSuspend(){this.isPlaying()&&!this.suspended&&(this.suspended=!0,this.pause())}onManagerResume(){this.suspended&&(this.suspended=!1,this.unpause())}play(){if(this.source)throw new Error("Call stop() before calling play()");this._createSource(),this.source&&(this.startTime=this.manager.context.currentTime,this.source.start(0,this.startOffset%this.source.buffer.duration),this.setVolume(this.volume),this.setLoop(this.loop),this.setPitch(this.pitch),this.manager.on("volumechange",this.onManagerVolumeChange,this),this.manager.on("suspend",this.onManagerSuspend,this),this.manager.on("resume",this.onManagerResume,this),this.manager.suspended&&this.onManagerSuspend())}pause(){this.source&&(this.paused=!0,this.startOffset+=this.manager.context.currentTime-this.startTime,this.source.stop(0),this.source=null)}unpause(){if(this.source||!this.paused){console.warn("Call pause() before unpausing.");return}this._createSource(),this.source&&(this.startTime=this.manager.context.currentTime,this.source.start(0,this.startOffset%this.source.buffer.duration),this.setVolume(this.volume),this.setLoop(this.loop),this.setPitch(this.pitch),this.paused=!1)}stop(){this.source&&(this.source.stop(0),this.source=null),this.manager.off("volumechange",this.onManagerVolumeChange,this),this.manager.off("suspend",this.onManagerSuspend,this),this.manager.off("resume",this.onManagerResume,this)}setVolume(t){t=z.clamp(t,0,1),this.volume=t,this.gain&&(this.gain.gain.value=t*this.manager.volume)}setPitch(t){this.pitch=t,this.source&&(this.source.playbackRate.value=t)}isPlaying(){return!this.paused&&this.source.playbackState===this.source.PLAYING_STATE}getDuration(){return this.source?this.source.buffer.duration:0}_createSource(){const t=this.manager.context;this.sound.buffer&&(this.source=t.createBufferSource(),this.source.buffer=this.sound.buffer,this.source.connect(this.gain),this.gain.connect(t.destination),this.loop||(this.source.onended=this.pause.bind(this)))}}Ni()||Object.assign(Vh.prototype,{play:function(){this.source&&(this.paused=!1,this.setVolume(this.volume),this.setLoop(this.loop),this.setPitch(this.pitch),this.source.play()),this.manager.on("volumechange",this.onManagerVolumeChange,this),this.manager.on("suspend",this.onManagerSuspend,this),this.manager.on("resume",this.onManagerResume,this),this.manager.suspended&&this.onManagerSuspend()},pause:function(){this.source&&(this.paused=!0,this.source.pause())},unpause:function(){this.source&&(this.paused=!1,this.source.play())},stop:function(){this.source&&this.source.pause(),this.manager.off("volumechange",this.onManagerVolumeChange,this),this.manager.off("suspend",this.onManagerSuspend,this),this.manager.off("resume",this.onManagerResume,this)},setVolume:function(l){l=z.clamp(l,0,1),this.volume=l,this.source&&(this.source.volume=l*this.manager.volume)},setPitch:function(l){this.pitch=l,this.source&&(this.source.playbackRate=l)},getDuration:function(){return this.source&&!isNaN(this.source.duration)?this.source.duration:0},isPlaying:function(){return!this.source.paused}});const Fb=1e4;class Fu extends Vh{constructor(t,e,s){super(t,e,s),this.position=new A,this.velocity=new A,Ni()?this.panner=t.context.createPanner():(this.maxDistance=Fb,this.minDistance=1,this.rollOffFactor=1,this.distanceModel=Nf)}getPosition(){return this.position}setPosition(t){this.position.copy(t);const e=this.panner;"positionX"in e?(e.positionX.value=t.x,e.positionY.value=t.y,e.positionZ.value=t.z):e.setPosition&&e.setPosition(t.x,t.y,t.z)}getVelocity(){return b.warn("Channel3d#getVelocity is not implemented."),this.velocity}setVelocity(t){b.warn("Channel3d#setVelocity is not implemented."),this.velocity.copy(t)}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){this.panner.maxDistance=t}getMinDistance(){return this.panner.refDistance}setMinDistance(t){this.panner.refDistance=t}getRollOffFactor(){return this.panner.rolloffFactor}setRollOffFactor(t){this.panner.rolloffFactor=t}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){this.panner.distanceModel=t}_createSource(){const t=this.manager.context;this.source=t.createBufferSource(),this.source.buffer=this.sound.buffer,this.source.connect(this.panner),this.panner.connect(this.gain),this.gain.connect(t.destination),this.loop||(this.source.onended=this.pause.bind(this))}}if(!Ni()){let l=new A;const t=function(e,s,i,r,n,a){l=l.sub2(e,s);const o=l.length();if(o<i)return 1;if(o>r)return 0;let h=0;return a===mc?h=1-n*(o-i)/(r-i):a===Nf?h=i/(i+n*(o-i)):a===dy&&(h=Math.pow(o/i,-n)),z.clamp(h,0,1)};Object.assign(Fu.prototype,{setPosition:function(e){if(this.position.copy(e),this.source){const i=this.manager.listener.getPosition(),r=t(i,this.position,this.minDistance,this.maxDistance,this.rollOffFactor,this.distanceModel),n=this.getVolume();this.source.volume=n*r}},getMaxDistance:function(){return this.maxDistance},setMaxDistance:function(e){this.maxDistance=e},getMinDistance:function(){return this.minDistance},setMinDistance:function(e){this.minDistance=e},getRollOffFactor:function(){return this.rollOffFactor},setRollOffFactor:function(e){this.rollOffFactor=e},getDistanceModel:function(){return this.distanceModel},setDistanceModel:function(e){this.distanceModel=e}})}class kb{constructor(t){c(this,"_manager");c(this,"position",new A);c(this,"orientation",new q);this._manager=t}getPosition(){return this.position}setPosition(t){this.position.copy(t);const e=this.listener;e&&("positionX"in e?(e.positionX.value=t.x,e.positionY.value=t.y,e.positionZ.value=t.z):e.setPosition&&e.setPosition(t.x,t.y,t.z))}setOrientation(t){this.orientation.copy(t);const e=this.listener;if(e){const s=t.data;"forwardX"in e?(e.forwardX.value=-s[8],e.forwardY.value=-s[9],e.forwardZ.value=-s[10],e.upX.value=s[4],e.upY.value=s[5],e.upZ.value=s[6]):e.setOrientation&&e.setOrientation(-s[8],-s[9],-s[10],s[4],s[5],s[6])}}getOrientation(){return this.orientation}get listener(){const t=this._manager.context;return t?t.listener:null}}const Ml="running",Om=["click","touchstart","mousedown"];class Ob extends de{constructor(){super(),this._context=null,this.AudioContext=typeof AudioContext<"u"&&AudioContext||typeof webkitAudioContext<"u"&&webkitAudioContext,this.AudioContext||b.warn("No support for 3D audio found"),this._unlockHandlerFunc=this._unlockHandler.bind(this),this._userSuspended=!1,this.listener=new kb(this),this._volume=1}set volume(t){t=z.clamp(t,0,1),this._volume=t,this.fire("volumechange",t)}get volume(){return this._volume}get suspended(){return this._userSuspended}get context(){return!this._context&&this.AudioContext&&(this._context=new this.AudioContext,this._context.state!==Ml&&this._registerUnlockListeners()),this._context}suspend(){this._userSuspended||(this._userSuspended=!0,this._context&&this._context.state===Ml&&this._suspend())}resume(){this._userSuspended&&(this._userSuspended=!1,this._context&&this._context.state!==Ml&&this._resume())}destroy(){var t;this.fire("destroy"),this._context&&(this._removeUnlockListeners(),(t=this._context)==null||t.close(),this._context=null)}playSound(t,e={}){let s=null;return Vh&&(s=new Vh(this,t,e),s.play()),s}playSound3d(t,e,s={}){let i=null;return Fu&&(i=new Fu(this,t,s),i.setPosition(e),s.volume&&i.setVolume(s.volume),s.loop&&i.setLoop(s.loop),s.maxDistance&&i.setMaxDistance(s.maxDistance),s.minDistance&&i.setMinDistance(s.minDistance),s.rollOffFactor&&i.setRollOffFactor(s.rollOffFactor),s.distanceModel&&i.setDistanceModel(s.distanceModel),i.play()),i}_resume(){this._context.resume().then(()=>{const t=this._context.createBufferSource();t.buffer=this._context.createBuffer(1,1,this._context.sampleRate),t.connect(this._context.destination),t.start(0),t.onended=e=>{t.disconnect(0),this.fire("resume")}},t=>{b.error(`Attempted to resume the AudioContext on SoundManager.resume(), but it was rejected ${t}`)}).catch(t=>{b.error(`Attempted to resume the AudioContext on SoundManager.resume(), but threw an exception ${t}`)})}_suspend(){this._context.suspend().then(()=>{this.fire("suspend")},t=>{b.error(`Attempted to suspend the AudioContext on SoundManager.suspend(), but it was rejected ${t}`)}).catch(t=>{b.error(`Attempted to suspend the AudioContext on SoundManager.suspend(), but threw an exception ${t}`)})}_unlockHandler(){this._removeUnlockListeners(),!this._userSuspended&&this._context.state!==Ml&&this._resume()}_registerUnlockListeners(){Om.forEach(t=>{window.addEventListener(t,this._unlockHandlerFunc,!1)})}_removeUnlockListeners(){Om.forEach(t=>{window.removeEventListener(t,this._unlockHandlerFunc,!1)})}}class Bb{constructor(t){c(this,"audio");c(this,"buffer");t instanceof Audio?this.audio=t:this.buffer=t}get duration(){let t=0;return this.buffer?t=this.buffer.duration:this.audio&&(t=this.audio.duration),t||0}}const kt=0,ra=1,Ps=2;function Ot(l,t){return l%t||0}class ls extends de{constructor(e,s,i){super();c(this,"source",null);this._manager=e,this._volume=i.volume!==void 0?z.clamp(Number(i.volume)||0,0,1):1,this._pitch=i.pitch!==void 0?Math.max(.01,Number(i.pitch)||0):1,this._loop=!!(i.loop!==void 0&&i.loop),this._sound=s,this._state=Ps,this._suspended=!1,this._suspendEndEvent=0,this._suspendInstanceEvents=!1,this._playWhenLoaded=!0,this._startTime=Math.max(0,Number(i.startTime)||0),this._duration=Math.max(0,Number(i.duration)||0),this._startOffset=null,this._onPlayCallback=i.onPlay,this._onPauseCallback=i.onPause,this._onResumeCallback=i.onResume,this._onStopCallback=i.onStop,this._onEndCallback=i.onEnd,Ni()?(this._startedAt=0,this._currentTime=0,this._currentOffset=0,this._inputNode=null,this._connectorNode=null,this._firstNode=null,this._lastNode=null,this._waitingContextSuspension=!1,this._initializeNodes(),this._endedHandler=this._onEnded.bind(this)):(this._isReady=!1,this._loadedMetadataHandler=this._onLoadedMetadata.bind(this),this._timeUpdateHandler=this._onTimeUpdate.bind(this),this._endedHandler=this._onEnded.bind(this),this._createSource())}set currentTime(e){if(!(e<0))if(this._state===kt){const s=this._suspendInstanceEvents;this._suspendInstanceEvents=!0,this.stop(),this._startOffset=e,this.play(),this._suspendInstanceEvents=s}else this._startOffset=e,this._currentTime=e}get currentTime(){return this._startOffset!==null?this._startOffset:this._state===ra?this._currentTime:this._state===Ps||!this.source?0:(this._updateCurrentTime(),this._currentTime)}set duration(e){this._duration=Math.max(0,Number(e)||0);const s=this._state===kt;this.stop(),s&&this.play()}get duration(){return this._sound?this._duration?Ot(this._duration,this._sound.duration):this._sound.duration:0}get isPaused(){return this._state===ra}get isPlaying(){return this._state===kt}get isStopped(){return this._state===Ps}get isSuspended(){return this._suspended}set loop(e){this._loop=!!e,this.source&&(this.source.loop=this._loop)}get loop(){return this._loop}set pitch(e){this._currentOffset=this.currentTime,this._startedAt=this._manager.context.currentTime,this._pitch=Math.max(Number(e)||0,.01),this.source&&(this.source.playbackRate.value=this._pitch)}get pitch(){return this._pitch}set sound(e){this._sound=e,this._state!==Ps?this.stop():this._createSource()}get sound(){return this._sound}set startTime(e){this._startTime=Math.max(0,Number(e)||0);const s=this._state===kt;this.stop(),s&&this.play()}get startTime(){return this._startTime}set volume(e){e=z.clamp(e,0,1),this._volume=e,this.gain&&(this.gain.gain.value=e*this._manager.volume)}get volume(){return this._volume}_onPlay(){this.fire("play"),this._onPlayCallback&&this._onPlayCallback(this)}_onPause(){this.fire("pause"),this._onPauseCallback&&this._onPauseCallback(this)}_onResume(){this.fire("resume"),this._onResumeCallback&&this._onResumeCallback(this)}_onStop(){this.fire("stop"),this._onStopCallback&&this._onStopCallback(this)}_onEnded(){if(this._suspendEndEvent>0){this._suspendEndEvent--;return}this.fire("end"),this._onEndCallback&&this._onEndCallback(this),this.stop()}_onManagerVolumeChange(){this.volume=this._volume}_onManagerSuspend(){this._state===kt&&!this._suspended&&(this._suspended=!0,this.pause())}_onManagerResume(){this._suspended&&(this._suspended=!1,this.resume())}_initializeNodes(){this.gain=this._manager.context.createGain(),this._inputNode=this.gain,this._connectorNode=this.gain,this._connectorNode.connect(this._manager.context.destination)}play(){return this._state!==Ps&&this.stop(),this._state=kt,this._playWhenLoaded=!1,this._waitingContextSuspension?!1:this._manager.suspended?(this._manager.once("resume",this._playAudioImmediate,this),this._waitingContextSuspension=!0,!1):(this._playAudioImmediate(),!0)}_playAudioImmediate(){if(this._waitingContextSuspension=!1,this._state!==kt)return;this.source||this._createSource();let e=Ot(this._startOffset,this.duration);e=Ot(this._startTime+e,this._sound.duration),this._startOffset=null,this._duration?this.source.start(0,e,this._duration):this.source.start(0,e),this._startedAt=this._manager.context.currentTime,this._currentTime=0,this._currentOffset=e,this.volume=this._volume,this.loop=this._loop,this.pitch=this._pitch,this._manager.on("volumechange",this._onManagerVolumeChange,this),this._manager.on("suspend",this._onManagerSuspend,this),this._manager.on("resume",this._onManagerResume,this),this._manager.on("destroy",this._onManagerDestroy,this),this._suspendInstanceEvents||this._onPlay()}pause(){return this._playWhenLoaded=!1,this._state!==kt?!1:(this._state=ra,this._waitingContextSuspension||(this._updateCurrentTime(),this._suspendEndEvent++,this.source.stop(0),this.source=null,this._startOffset=null,this._suspendInstanceEvents||this._onPause()),!0)}resume(){if(this._state!==ra)return!1;let e=this.currentTime;return this._state=kt,this._waitingContextSuspension||(this.source||this._createSource(),this._startOffset!==null&&(e=Ot(this._startOffset,this.duration),e=Ot(this._startTime+e,this._sound.duration),this._startOffset=null),this._duration?this.source.start(0,e,this._duration):this.source.start(0,e),this._startedAt=this._manager.context.currentTime,this._currentOffset=e,this.volume=this._volume,this.loop=this._loop,this.pitch=this._pitch,this._playWhenLoaded=!1,this._suspendInstanceEvents||this._onResume()),!0}stop(){if(this._playWhenLoaded=!1,this._state===Ps)return!1;const e=this._state===kt;return this._state=Ps,this._waitingContextSuspension||(this._manager.off("volumechange",this._onManagerVolumeChange,this),this._manager.off("suspend",this._onManagerSuspend,this),this._manager.off("resume",this._onManagerResume,this),this._manager.off("destroy",this._onManagerDestroy,this),this._startedAt=0,this._currentTime=0,this._currentOffset=0,this._startOffset=null,this._suspendEndEvent++,e&&this.source&&this.source.stop(0),this.source=null,this._suspendInstanceEvents||this._onStop()),!0}setExternalNodes(e,s){if(!e){console.error("The firstNode must be a valid Audio Node");return}s||(s=e);const i=this._manager.context.destination;this._firstNode!==e&&(this._firstNode?this._connectorNode.disconnect(this._firstNode):this._connectorNode.disconnect(i),this._firstNode=e,this._connectorNode.connect(e)),this._lastNode!==s&&(this._lastNode&&this._lastNode.disconnect(i),this._lastNode=s,this._lastNode.connect(i))}clearExternalNodes(){const e=this._manager.context.destination;this._firstNode&&(this._connectorNode.disconnect(this._firstNode),this._firstNode=null),this._lastNode&&(this._lastNode.disconnect(e),this._lastNode=null),this._connectorNode.connect(e)}getExternalNodes(){return[this._firstNode,this._lastNode]}_createSource(){if(!this._sound)return null;const e=this._manager.context;return this._sound.buffer&&(this.source=e.createBufferSource(),this.source.buffer=this._sound.buffer,this.source.connect(this._inputNode),this.source.onended=this._endedHandler,this.source.loopStart=Ot(this._startTime,this.source.buffer.duration),this._duration&&(this.source.loopEnd=Math.max(this.source.loopStart,Ot(this._startTime+this._duration,this.source.buffer.duration)))),this.source}_updateCurrentTime(){this._currentTime=Ot((this._manager.context.currentTime-this._startedAt)*this._pitch+this._currentOffset,this.duration)}_onManagerDestroy(){this.source&&this._state===kt&&(this.source.stop(0),this.source=null)}}c(ls,"EVENT_PLAY","play"),c(ls,"EVENT_PAUSE","pause"),c(ls,"EVENT_RESUME","resume"),c(ls,"EVENT_STOP","stop"),c(ls,"EVENT_END","end");Ni()||(Object.assign(ls.prototype,{play:function(){return this._state!==Ps&&this.stop(),!this.source&&!this._createSource()?!1:(this.volume=this._volume,this.pitch=this._pitch,this.loop=this._loop,this.source.play(),this._state=kt,this._playWhenLoaded=!1,this._manager.on("volumechange",this._onManagerVolumeChange,this),this._manager.on("suspend",this._onManagerSuspend,this),this._manager.on("resume",this._onManagerResume,this),this._manager.on("destroy",this._onManagerDestroy,this),this._manager.suspended&&this._onManagerSuspend(),this._suspendInstanceEvents||this._onPlay(),!0)},pause:function(){return!this.source||this._state!==kt?!1:(this._suspendEndEvent++,this.source.pause(),this._playWhenLoaded=!1,this._state=ra,this._startOffset=null,this._suspendInstanceEvents||this._onPause(),!0)},resume:function(){return!this.source||this._state!==ra?!1:(this._state=kt,this._playWhenLoaded=!1,this.source.paused&&(this.source.play(),this._suspendInstanceEvents||this._onResume()),!0)},stop:function(){return!this.source||this._state===Ps?!1:(this._manager.off("volumechange",this._onManagerVolumeChange,this),this._manager.off("suspend",this._onManagerSuspend,this),this._manager.off("resume",this._onManagerResume,this),this._manager.off("destroy",this._onManagerDestroy,this),this._suspendEndEvent++,this.source.pause(),this._playWhenLoaded=!1,this._state=Ps,this._startOffset=null,this._suspendInstanceEvents||this._onStop(),!0)},setExternalNodes:function(){},clearExternalNodes:function(){},getExternalNodes:function(){return[null,null]},_onLoadedMetadata:function(){this.source.removeEventListener("loadedmetadata",this._loadedMetadataHandler),this._isReady=!0;let l=Ot(this._startOffset,this.duration);l=Ot(this._startTime+l,this._sound.duration),this._startOffset=null,this.source.currentTime=l},_createSource:function(){return this._sound&&this._sound.audio&&(this._isReady=!1,this.source=this._sound.audio.cloneNode(!0),this.source.addEventListener("loadedmetadata",this._loadedMetadataHandler),this.source.addEventListener("timeupdate",this._timeUpdateHandler),this.source.onended=this._endedHandler),this.source},_onTimeUpdate:function(){this._duration&&this.source.currentTime>Ot(this._startTime+this._duration,this.source.duration)&&(this.loop?this.source.currentTime=Ot(this._startTime,this.source.duration):(this.source.removeEventListener("timeupdate",this._timeUpdateHandler),this.source.pause(),this._onEnded()))},_onManagerDestroy:function(){this.source&&this.source.pause()}}),Object.defineProperty(ls.prototype,"volume",{get:function(){return this._volume},set:function(l){l=z.clamp(l,0,1),this._volume=l,this.source&&(this.source.volume=l*this._manager.volume)}}),Object.defineProperty(ls.prototype,"pitch",{get:function(){return this._pitch},set:function(l){this._pitch=Math.max(Number(l)||0,.01),this.source&&(this.source.playbackRate=this._pitch)}}),Object.defineProperty(ls.prototype,"sound",{get:function(){return this._sound},set:function(l){this.stop(),this._sound=l}}),Object.defineProperty(ls.prototype,"currentTime",{get:function(){return this._startOffset!==null?this._startOffset:this._state===Ps||!this.source?0:this.source.currentTime-this._startTime},set:function(l){l<0||(this._startOffset=l,this.source&&this._isReady&&(this.source.currentTime=Ot(this._startTime+Ot(l,this.duration),this._sound.duration),this._startOffset=null))}}));const Nb=1e4;class Kn extends ls{constructor(e,s,i={}){super(e,s,i);c(this,"_position",new A);c(this,"_velocity",new A);i.position&&(this.position=i.position),this.maxDistance=i.maxDistance!==void 0?Number(i.maxDistance):Nb,this.refDistance=i.refDistance!==void 0?Number(i.refDistance):1,this.rollOffFactor=i.rollOffFactor!==void 0?Number(i.rollOffFactor):1,this.distanceModel=i.distanceModel!==void 0?i.distanceModel:mc}_initializeNodes(){this.gain=this._manager.context.createGain(),this.panner=this._manager.context.createPanner(),this.panner.connect(this.gain),this._inputNode=this.panner,this._connectorNode=this.gain,this._connectorNode.connect(this._manager.context.destination)}set position(e){this._position.copy(e);const s=this.panner;"positionX"in s?(s.positionX.value=e.x,s.positionY.value=e.y,s.positionZ.value=e.z):s.setPosition&&s.setPosition(e.x,e.y,e.z)}get position(){return this._position}set velocity(e){b.warn("SoundInstance3d#velocity is not implemented."),this._velocity.copy(e)}get velocity(){return b.warn("SoundInstance3d#velocity is not implemented."),this._velocity}set maxDistance(e){this.panner.maxDistance=e}get maxDistance(){return this.panner.maxDistance}set refDistance(e){this.panner.refDistance=e}get refDistance(){return this.panner.refDistance}set rollOffFactor(e){this.panner.rolloffFactor=e}get rollOffFactor(){return this.panner.rolloffFactor}set distanceModel(e){this.panner.distanceModel=e}get distanceModel(){return this.panner.distanceModel}}if(!Ni()){let l=new A;const t=function(e,s,i,r,n,a){l=l.sub2(e,s);const o=l.length();if(o<i)return 1;if(o>r)return 0;let h=0;return a===mc?h=1-n*(o-i)/(r-i):a===Nf?h=i/(i+n*(o-i)):a===dy&&(h=Math.pow(o/i,-n)),z.clamp(h,0,1)};Object.defineProperty(Kn.prototype,"position",{get:function(){return this._position},set:function(e){if(this._position.copy(e),this.source){const i=this._manager.listener.getPosition(),r=t(i,this._position,this.refDistance,this.maxDistance,this.rollOffFactor,this.distanceModel),n=this.volume;this.source.volume=n*r*this._manager.volume}}}),Object.defineProperty(Kn.prototype,"maxDistance",{get:function(){return this._maxDistance},set:function(e){this._maxDistance=e}}),Object.defineProperty(Kn.prototype,"refDistance",{get:function(){return this._refDistance},set:function(e){this._refDistance=e}}),Object.defineProperty(Kn.prototype,"rollOffFactor",{get:function(){return this._rollOffFactor},set:function(e){this._rollOffFactor=e}}),Object.defineProperty(Kn.prototype,"distanceModel",{get:function(){return this._distanceModel},set:function(e){this._distanceModel=e}})}const a0=0,bp=1,Gt=2,hs=3,dn=4,wp=5,Xc=6,o0=7,l0=8,h0=9,c0=10,Ba="none",zb="linear",Tp=2,Ub=0,Vb=2,d0=15,zi=0,es=1,Ap=2,Ep=3,nl=4,le=0,Le=1,Fe=2,Tt=0,Gb=1,Hb=2,Wb=3,Cp=0,$b=1,zt=0,Wr=2,$r=3,fh=4,Gh=5,Rs=6,Hh=7,Wh=8,ku=9,nr=new Map([[Gh,{name:"PCF1_32F",format:Di,pcf:!0}],[zt,{name:"PCF3_32F",format:Di,pcf:!0}],[fh,{name:"PCF5_32F",format:Di,pcf:!0}],[Hh,{name:"PCF1_16F",format:ca,pcf:!0}],[Wh,{name:"PCF3_16F",format:ca,pcf:!0}],[ku,{name:"PCF5_16F",format:ca,pcf:!0}],[Wr,{name:"VSM_16F",format:it,vsm:!0}],[$r,{name:"VSM_32F",format:et,vsm:!0}],[Rs,{name:"PCSS_32F",format:Oi,pcss:!0}]]),Mp=1,Ou=0,u0=0,qs=0,qb=1,$h=0,Xb=1,Xs=0,pa=1,bo=0,Lr=1,Pl=2,f0=0,jb=1,Bm="mul",al=0,ph=1,Yb={[al]:"NONE",[ph]:"SRGB"},Pp=0,uF=1,fF=2,pF=3,mF=4,_F=5,p0=6,m0=["LINEAR","FILMIC","HEJL","ACES","ACES2","NEUTRAL","NONE"],Kb=0,Vo=1,Bu=2,Rp=1,jc=2,_0=4,g0=8,y0=16,Yc=32,Nu=64,x0=128,Ip=256,Dp=512,Kc=1024,Zc=2048,S0=4096,Qc=8192,zu=16384,ks=0,un=1,Lp=2,Ii=0,Uu=1,ms=1,dr=2,ar=4,xn=0,ol=1,ll=2,Na=3,Fp=4,Pi=0,ht=1,st=2,mh=1,Rl=0,_h=0,Zb=1,Qb=2,Nm=3,Jb=4,ew=5,kp=0,Vu=1,ye=0,Ve=1,wo="infinite",tw="box",sw="dome",Os="none",zm="bayer8",iw="prerender",rw="postrender",nw="prerender:layer",aw="postrender:layer",ow="precull",lw="postcull";class Jc{constructor(t,e,s){c(this,"uniformFormats",[]);c(this,"bindGroupFormats",[]);c(this,"vertexFormat");this.uniformFormats[Bh]=t,this.bindGroupFormats[Bh]=e,this.vertexFormat=s}hasUniform(t){for(let e=0;e<this.uniformFormats.length;e++){const s=this.uniformFormats[e];if(s!=null&&s.get(t))return!0}return!1}hasTexture(t){for(let e=0;e<this.bindGroupFormats.length;e++){const s=this.bindGroupFormats[e];if(s!=null&&s.getTexture(t))return!0}return!1}getVertexElement(t){var e;return(e=this.vertexFormat)==null?void 0:e.elements.find(s=>s.name===t)}generateKey(t){var s;let e=JSON.stringify(this.uniformFormats)+JSON.stringify(this.bindGroupFormats);return t.isWebGPU&&(e+=(s=this.vertexFormat)==null?void 0:s.shaderProcessingHashString),e}}const hw=`
uniform float alpha_ref;

void alphaTest(float a) {
    if (a < alpha_ref) discard;
}
`,cw=`
void addAmbient(vec3 worldNormal) {
    dDiffuseLight += light_globalAmbient;
}
`,dw=`
#ifndef ENV_ATLAS
#define ENV_ATLAS
uniform sampler2D texture_envAtlas;
#endif

void addAmbient(vec3 worldNormal) {
    vec3 dir = normalize(cubeMapRotate(worldNormal) * vec3(-1.0, 1.0, 1.0));
    vec2 uv = mapUv(toSphericalUv(dir), vec4(128.0, 256.0 + 128.0, 64.0, 32.0) / atlasSize);

    vec4 raw = texture2D(texture_envAtlas, uv);
    vec3 linear = $DECODE(raw);
    dDiffuseLight += processEnvironment(linear);
}
`,uw=`
uniform vec3 ambientSH[9];

void addAmbient(vec3 worldNormal) {
    vec3 n = cubeMapRotate(worldNormal);

    vec3 color =
        ambientSH[0] +
        ambientSH[1] * n.x +
        ambientSH[2] * n.y +
        ambientSH[3] * n.z +
        ambientSH[4] * n.x * n.z +
        ambientSH[5] * n.z * n.y +
        ambientSH[6] * n.y * n.x +
        ambientSH[7] * (3.0 * n.z * n.z - 1.0) +
        ambientSH[8] * (n.x * n.x - n.y * n.y);

    dDiffuseLight += processEnvironment(max(color, vec3(0.0)));
}
`,fw=`

#ifdef MAPTEXTURE
    #define AO_INTENSITY
#endif

#ifdef MAPVERTEX
    #define AO_INTENSITY
#endif

#ifdef AO_INTENSITY
    uniform float material_aoIntensity;
#endif

void getAO() {
    dAo = 1.0;

    #ifdef MAPTEXTURE
        float aoBase = texture2DBias($SAMPLER, $UV, textureBias).$CH;
        dAo *= addAoDetail(aoBase);
    #endif

    #ifdef MAPVERTEX
        dAo *= saturate(vVertexColor.$VC);
    #endif

    #ifdef AO_INTENSITY
        dAo = mix(1.0, dAo, material_aoIntensity);
    #endif
}
`,pw=`
float addAoDetail(float ao) {
#ifdef MAPTEXTURE
    float aoDetail = texture2DBias($SAMPLER, $UV, textureBias).$CH;
    return detailMode_$DETAILMODE(vec3(ao), vec3(aoDetail)).r;
#else
    return ao;
#endif
}
`,mw=`
void occludeDiffuse(float ao) {
    dDiffuseLight *= ao;
}
`,_w=`
uniform float material_occludeSpecularIntensity;

void occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {
    // approximated specular occlusion from AO
    float specPow = exp2(gloss * 11.0);
    // http://research.tri-ace.com/Data/cedec2011_RealtimePBR_Implementation_e.pptx
    float specOcc = saturate(pow(dot(worldNormal, viewDir) + ao, 0.01*specPow) - 1.0 + ao);
    specOcc = mix(1.0, specOcc, material_occludeSpecularIntensity);

    dSpecularLight *= specOcc;
    dReflection *= specOcc;
    
#ifdef LIT_SHEEN
    sSpecularLight *= specOcc;
    sReflection *= specOcc;
#endif
}
`,gw=`
void occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {
    // approximated specular occlusion from AO
    float specPow = exp2(gloss * 11.0);
    // http://research.tri-ace.com/Data/cedec2011_RealtimePBR_Implementation_e.pptx
    float specOcc = saturate(pow(dot(worldNormal, viewDir) + ao, 0.01*specPow) - 1.0 + ao);

    dSpecularLight *= specOcc;
    dReflection *= specOcc;
    
#ifdef LIT_SHEEN
    sSpecularLight *= specOcc;
    sReflection *= specOcc;
#endif
}
`,yw=`
void occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {
    dSpecularLight *= ao;
    dReflection *= ao;

#ifdef LIT_SHEEN
    sSpecularLight *= ao;
    sReflection *= ao;
#endif
}
`,xw=`
uniform float material_occludeSpecularIntensity;

void occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {
    float specOcc = mix(1.0, ao, material_occludeSpecularIntensity);
    dSpecularLight *= specOcc;
    dReflection *= specOcc;

#ifdef LIT_SHEEN
    sSpecularLight *= specOcc;
    sReflection *= specOcc;
#endif
}
`,Sw=`
uniform vec3 view_position;

uniform vec3 light_globalAmbient;

float square(float x) {
    return x*x;
}

float saturate(float x) {
    return clamp(x, 0.0, 1.0);
}

vec3 saturate(vec3 x) {
    return clamp(x, vec3(0.0), vec3(1.0));
}
`,vw=`
attribute vec4 vertex_tangent;
attribute vec2 vertex_texCoord0;
attribute vec2 vertex_texCoord1;
attribute vec4 vertex_color;

vec3 dPositionW;
mat4 dModelMatrix;

#include "transformCoreVS"
`,bw=`
#define NINESLICED

varying vec2 vMask;
varying vec2 vTiledUv;

uniform mediump vec4 innerOffset;
uniform mediump vec2 outerScale;
uniform mediump vec4 atlasRect;

vec2 nineSlicedUv;
`,ww=`
#define NINESLICED

varying vec2 vMask;
varying vec2 vTiledUv;

uniform mediump vec4 innerOffset;
uniform mediump vec2 outerScale;
uniform mediump vec4 atlasRect;
`,Tw=`
#define NINESLICED
#define NINESLICETILED

varying vec2 vMask;
varying vec2 vTiledUv;

uniform mediump vec4 innerOffset;
uniform mediump vec2 outerScale;
uniform mediump vec4 atlasRect;

vec2 nineSlicedUv;
`,Aw=`
// 2x2 bayer matrix [1 2][3 0], p in [0,1]
float bayer2(vec2 p) {
    return mod(2.0 * p.y + p.x + 1.0, 4.0);
}

// 4x4 matrix, p - pixel coordinate
float bayer4(vec2 p) {
    vec2 p1 = mod(p, 2.0);
    vec2 p2 = floor(0.5 * mod(p, 4.0));
    return 4.0 * bayer2(p1) + bayer2(p2);
}

// 8x8 matrix, p - pixel coordinate
float bayer8(vec2 p) {
    vec2 p1 = mod(p, 2.0);
    vec2 p2 = floor(0.5 * mod(p, 4.0));
    vec2 p4 = floor(0.25 * mod(p, 8.0));
    return 4.0 * (4.0 * bayer2(p1) + bayer2(p2)) + bayer2(p4);
}
`,Ew=`
varying vec2 vUv0;

uniform sampler2D source;
uniform vec2 pixelOffset;

#ifdef GAUSS
uniform float weight[SAMPLES];
#endif

void main(void) {
    vec3 moments = vec3(0.0);
    vec2 uv = vUv0 - pixelOffset * (float(SAMPLES) * 0.5);
    for (int i=0; i<SAMPLES; i++) {
        vec4 c = texture2D(source, uv + pixelOffset * float(i));

        #ifdef GAUSS
        moments += c.xyz * weight[i];
        #else
        moments += c.xyz;
        #endif
    }

    #ifndef GAUSS
    moments /= float(SAMPLES);
    #endif

    gl_FragColor = vec4(moments.x, moments.y, moments.z, 1.0);
}
`,Cw=`
#ifdef MAPFLOAT
uniform float material_clearCoat;
#endif

void getClearCoat() {
    ccSpecularity = 1.0;

    #ifdef MAPFLOAT
    ccSpecularity *= material_clearCoat;
    #endif

    #ifdef MAPTEXTURE
    ccSpecularity *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    ccSpecularity *= saturate(vVertexColor.$VC);
    #endif
}
`,Mw=`
#ifdef MAPFLOAT
uniform float material_clearCoatGloss;
#endif

void getClearCoatGlossiness() {
    ccGlossiness = 1.0;

    #ifdef MAPFLOAT
    ccGlossiness *= material_clearCoatGloss;
    #endif

    #ifdef MAPTEXTURE
    ccGlossiness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    ccGlossiness *= saturate(vVertexColor.$VC);
    #endif

    #ifdef MAPINVERT
    ccGlossiness = 1.0 - ccGlossiness;
    #endif

    ccGlossiness += 0.0000001;
}
`,Pw=`
#ifdef MAPTEXTURE
uniform float material_clearCoatBumpiness;
#endif

void getClearCoatNormal() {
#ifdef MAPTEXTURE
    vec3 normalMap = unpackNormal(texture2DBias($SAMPLER, $UV, textureBias));
    normalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_clearCoatBumpiness);
    ccNormalW = normalize(dTBN * normalMap);
#else
    ccNormalW = dVertexNormalW;
#endif
}
`,Rw=`
// Converts unnormalized direction vector to a cubemap face index [0..5] and uv coordinates within the face in [0..1] range.
// Additionally offset to a tile in atlas within 3x3 subdivision is provided
vec2 getCubemapFaceCoordinates(const vec3 dir, out float faceIndex, out vec2 tileOffset)
{
    vec3 vAbs = abs(dir);
    float ma;
    vec2 uv;
    if (vAbs.z >= vAbs.x && vAbs.z >= vAbs.y) {   // front / back

        faceIndex = dir.z < 0.0 ? 5.0 : 4.0;
        ma = 0.5 / vAbs.z;
        uv = vec2(dir.z < 0.0 ? -dir.x : dir.x, -dir.y);

        tileOffset.x = 2.0;
        tileOffset.y = dir.z < 0.0 ? 1.0 : 0.0;

    } else if(vAbs.y >= vAbs.x) {  // top index 2, bottom index 3

        faceIndex = dir.y < 0.0 ? 3.0 : 2.0;
        ma = 0.5 / vAbs.y;
        uv = vec2(dir.x, dir.y < 0.0 ? -dir.z : dir.z);

        tileOffset.x = 1.0;
        tileOffset.y = dir.y < 0.0 ? 1.0 : 0.0;

    } else {    // left / right

        faceIndex = dir.x < 0.0 ? 1.0 : 0.0;
        ma = 0.5 / vAbs.x;
        uv = vec2(dir.x < 0.0 ? dir.z : -dir.z, -dir.y);

        tileOffset.x = 0.0;
        tileOffset.y = dir.x < 0.0 ? 1.0 : 0.0;

    }
    return uv * ma + 0.5;
}

// converts unnormalized direction vector to a texture coordinate for a cubemap face stored within texture atlas described by the viewport
vec2 getCubemapAtlasCoordinates(const vec3 omniAtlasViewport, float shadowEdgePixels, float shadowTextureResolution, const vec3 dir) {

    float faceIndex;
    vec2 tileOffset;
    vec2 uv = getCubemapFaceCoordinates(dir, faceIndex, tileOffset);

    // move uv coordinates inwards inside to compensate for larger fov when rendering shadow into atlas
    float atlasFaceSize = omniAtlasViewport.z;
    float tileSize = shadowTextureResolution * atlasFaceSize;
    float offset = shadowEdgePixels / tileSize;
    uv = uv * vec2(1.0 - offset * 2.0) + vec2(offset * 1.0);

    // scale uv coordinates to cube face area within the viewport
    uv *= atlasFaceSize;

    // offset into face of the atlas (3x3 grid)
    uv += tileOffset * atlasFaceSize;

    // offset into the atlas viewport
    uv += omniAtlasViewport.xy;

    return uv;
}
`,Iw=`
vec3 _getCookieClustered(TEXTURE_ACCEPT(tex), vec2 uv, float intensity, bool isRgb, vec4 cookieChannel) {
    vec4 pixel = mix(vec4(1.0), texture2DLod(tex, uv, 0.0), intensity);
    return isRgb == true ? pixel.rgb : vec3(dot(pixel, cookieChannel));
}

// getCookie2D for clustered lighting including channel selector
vec3 getCookie2DClustered(TEXTURE_ACCEPT(tex), mat4 transform, vec3 worldPosition, float intensity, bool isRgb, vec4 cookieChannel) {
    vec4 projPos = transform * vec4(worldPosition, 1.0);
    return _getCookieClustered(TEXTURE_PASS(tex), projPos.xy / projPos.w, intensity, isRgb, cookieChannel);
}

// getCookie for clustered omni light with the cookie texture being stored in the cookie atlas
vec3 getCookieCubeClustered(TEXTURE_ACCEPT(tex), vec3 dir, float intensity, bool isRgb, vec4 cookieChannel, float shadowTextureResolution, float shadowEdgePixels, vec3 omniAtlasViewport) {
    vec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, dir);
    return _getCookieClustered(TEXTURE_PASS(tex), uv, intensity, isRgb, cookieChannel);
}
`,Dw=`
// Clustered Omni Sampling using atlas

void _getShadowCoordPerspZbuffer(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos) {
    vec4 projPos = shadowMatrix * vec4(wPos, 1.0);
    projPos.xyz /= projPos.w;
    dShadowCoord = projPos.xyz;
    // depth bias is already applied on render
}

void getShadowCoordPerspZbufferNormalOffset(mat4 shadowMatrix, vec4 shadowParams, vec3 normal) {
    vec3 wPos = vPositionW + normal * shadowParams.y;
    _getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, wPos);
}

vec3 normalOffsetPointShadow(vec4 shadowParams, vec3 lightPos, inout vec3 lightDir, vec3 lightDirNorm, vec3 normal) {
    float distScale = length(lightDir);
    vec3 wPos = vPositionW + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale; //0.02
    vec3 dir = wPos - lightPos;
    return dir;
}

#if defined(CLUSTER_SHADOW_TYPE_PCF1)

float getShadowOmniClusteredPCF1(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {

    float shadowTextureResolution = shadowParams.x;
    vec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);

    float shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;
    return textureShadow(shadowMap, vec3(uv, shadowZ));
}

#endif

#if defined(CLUSTER_SHADOW_TYPE_PCF3)

float getShadowOmniClusteredPCF3(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {

    float shadowTextureResolution = shadowParams.x;
    vec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);

    float shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;
    vec3 shadowCoord = vec3(uv, shadowZ);
    return getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);
}

#endif

#if defined(CLUSTER_SHADOW_TYPE_PCF5)

float getShadowOmniClusteredPCF5(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {

    float shadowTextureResolution = shadowParams.x;
    vec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);

    float shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;
    vec3 shadowCoord = vec3(uv, shadowZ);
    return getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);
}

#endif

// Clustered Spot Sampling using atlas

#if defined(CLUSTER_SHADOW_TYPE_PCF1)

float getShadowSpotClusteredPCF1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return textureShadow(shadowMap, shadowCoord);
}

#endif

#if defined(CLUSTER_SHADOW_TYPE_PCF3)

float getShadowSpotClusteredPCF3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return getShadowSpotPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);
}

#endif

#if defined(CLUSTER_SHADOW_TYPE_PCF5)

float getShadowSpotClusteredPCF5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);
}
#endif
`,Lw=`
uniform highp sampler2D clusterWorldTexture;
uniform highp sampler2D lightsTexture8;
uniform highp sampler2D lightsTextureFloat;

// complex ifdef expression are not supported, handle it here
// defined(CLUSTER_COOKIES) || defined(CLUSTER_SHADOWS)
#if defined(CLUSTER_COOKIES)
    #define CLUSTER_COOKIES_OR_SHADOWS
#endif
#if defined(CLUSTER_SHADOWS)
    #define CLUSTER_COOKIES_OR_SHADOWS
#endif

#ifdef CLUSTER_SHADOWS
    // TODO: when VSM shadow is supported, it needs to use sampler2D in webgl2
    uniform sampler2DShadow shadowAtlasTexture;
#endif

#ifdef CLUSTER_COOKIES
    uniform sampler2D cookieAtlasTexture;
#endif

uniform int clusterMaxCells;

// 1.0 if clustered lighting can be skipped (0 lights in the clusters)
uniform float clusterSkip;

uniform vec3 clusterCellsCountByBoundsSize;
uniform vec3 clusterTextureSize;
uniform vec3 clusterBoundsMin;
uniform vec3 clusterBoundsDelta;
uniform vec3 clusterCellsDot;
uniform vec3 clusterCellsMax;
uniform vec2 clusterCompressionLimit0;
uniform vec2 shadowAtlasParams;

// structure storing light properties of a clustered light
// it's sorted to have all vectors aligned to 4 floats to limit padding
struct ClusterLightData {

    // area light sizes / orientation
    vec3 halfWidth;

    // type of the light (spot or omni)
    float lightType;

    // area light sizes / orientation
    vec3 halfHeight;

    // light index
    int lightIndex;

    // world space position
    vec3 position;

    // area light shape
    float shape;

    // world space direction (spot light only)
    vec3 direction;

    // light follow mode
    float falloffMode;

    // color
    vec3 color;

    // 0.0 if the light doesn't cast shadows
    float shadowIntensity;

    // atlas viewport for omni light shadow and cookie (.xy is offset to the viewport slot, .z is size of the face in the atlas)
    vec3 omniAtlasViewport;

    // range of the light
    float range;

    // channel mask - one of the channels has 1, the others are 0
    vec4 cookieChannelMask;

    // shadow bias values
    float shadowBias;
    float shadowNormalBias;

    // spot light inner and outer angle cosine
    float innerConeAngleCos;
    float outerConeAngleCos;

    // 1.0 if the light has a cookie texture
    float cookie;

    // 1.0 if cookie texture is rgb, otherwise it is using a single channel selectable by cookieChannelMask
    float cookieRgb;

    // intensity of the cookie
    float cookieIntensity;

    // light mask
    float mask;
};

// Note: on some devices (tested on Pixel 3A XL), this matrix when stored inside the light struct has lower precision compared to
// when stored outside, so we store it outside to avoid spot shadow flickering. This might need to be done to other / all members
// of the structure if further similar issues are observed.

// shadow (spot light only) / cookie projection matrix
mat4 lightProjectionMatrix;

// macros for light properties
#define isClusteredLightCastShadow(light) ( light.shadowIntensity > 0.0 )
#define isClusteredLightCookie(light) (light.cookie > 0.5 )
#define isClusteredLightCookieRgb(light) (light.cookieRgb > 0.5 )
#define isClusteredLightSpot(light) ( light.lightType > 0.5 )
#define isClusteredLightFalloffLinear(light) ( light.falloffMode < 0.5 )

// macros to test light shape
// Note: Following functions need to be called serially in listed order as they do not test both '>' and '<'
#define isClusteredLightArea(light) ( light.shape > 0.1 )
#define isClusteredLightRect(light) ( light.shape < 0.3 )
#define isClusteredLightDisk(light) ( light.shape < 0.6 )

// macro to test light mask (mesh accepts dynamic vs lightmapped lights)
#ifdef CLUSTER_MESH_DYNAMIC_LIGHTS
    // accept lights marked as dynamic or both dynamic and lightmapped
    #define acceptLightMask(light) ( light.mask < 0.75)
#else
    // accept lights marked as lightmapped or both dynamic and lightmapped
    #define acceptLightMask(light) ( light.mask > 0.25)
#endif

vec4 decodeClusterLowRange4Vec4(vec4 d0, vec4 d1, vec4 d2, vec4 d3) {
    return vec4(
        bytes2floatRange4(d0, -2.0, 2.0),
        bytes2floatRange4(d1, -2.0, 2.0),
        bytes2floatRange4(d2, -2.0, 2.0),
        bytes2floatRange4(d3, -2.0, 2.0)
    );
}

vec4 sampleLightsTexture8(const ClusterLightData clusterLightData, int index) {
    return texelFetch(lightsTexture8, ivec2(index, clusterLightData.lightIndex), 0);
}

vec4 sampleLightTextureF(const ClusterLightData clusterLightData, int index) {
    return texelFetch(lightsTextureFloat, ivec2(index, clusterLightData.lightIndex), 0);
}

void decodeClusterLightCore(inout ClusterLightData clusterLightData, float lightIndex) {

    // light index
    clusterLightData.lightIndex = int(lightIndex);

    // shared data from 8bit texture
    vec4 lightInfo = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_FLAGS);
    clusterLightData.lightType = lightInfo.x;
    clusterLightData.shape = lightInfo.y;
    clusterLightData.falloffMode = lightInfo.z;
    clusterLightData.shadowIntensity = lightInfo.w;

    // color
    vec4 colorA = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_COLOR_A);
    vec4 colorB = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_COLOR_B);
    clusterLightData.color = vec3(bytes2float2(colorA.xy), bytes2float2(colorA.zw), bytes2float2(colorB.xy)) * clusterCompressionLimit0.y;

    // cookie
    clusterLightData.cookie = colorB.z;

    // light mask
    clusterLightData.mask = colorB.w;

    vec4 lightPosRange = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_POSITION_RANGE);
    clusterLightData.position = lightPosRange.xyz;
    clusterLightData.range = lightPosRange.w;

    // spot light direction
    vec4 lightDir_Unused = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_SPOT_DIRECTION);
    clusterLightData.direction = lightDir_Unused.xyz;
}

void decodeClusterLightSpot(inout ClusterLightData clusterLightData) {

    // spot light cos angles
    vec4 coneAngle = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_SPOT_ANGLES);
    clusterLightData.innerConeAngleCos = bytes2float2(coneAngle.xy) * 2.0 - 1.0;
    clusterLightData.outerConeAngleCos = bytes2float2(coneAngle.zw) * 2.0 - 1.0;
}

void decodeClusterLightOmniAtlasViewport(inout ClusterLightData clusterLightData) {
    clusterLightData.omniAtlasViewport = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_0).xyz;
}

void decodeClusterLightAreaData(inout ClusterLightData clusterLightData) {
    clusterLightData.halfWidth = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_AREA_DATA_WIDTH).xyz;
    clusterLightData.halfHeight = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_AREA_DATA_HEIGHT).xyz;
}

void decodeClusterLightProjectionMatrixData(inout ClusterLightData clusterLightData) {
    
    // shadow matrix
    vec4 m0 = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_0);
    vec4 m1 = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_1);
    vec4 m2 = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_2);
    vec4 m3 = sampleLightTextureF(clusterLightData, CLUSTER_TEXTURE_F_PROJ_MAT_3);
    lightProjectionMatrix = mat4(m0, m1, m2, m3);
}

void decodeClusterLightShadowData(inout ClusterLightData clusterLightData) {
    
    // shadow biases
    vec4 biases = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_SHADOW_BIAS);
    clusterLightData.shadowBias = bytes2floatRange2(biases.xy, -1.0, 20.0),
    clusterLightData.shadowNormalBias = bytes2float2(biases.zw);
}

void decodeClusterLightCookieData(inout ClusterLightData clusterLightData) {

    vec4 cookieA = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_COOKIE_A);
    clusterLightData.cookieIntensity = cookieA.x;
    clusterLightData.cookieRgb = cookieA.y;

    clusterLightData.cookieChannelMask = sampleLightsTexture8(clusterLightData, CLUSTER_TEXTURE_8_COOKIE_B);
}

void evaluateLight(
    ClusterLightData light, 
    vec3 worldNormal, 
    vec3 viewDir, 
    vec3 reflectionDir,
#if defined(LIT_CLEARCOAT)
    vec3 clearcoatReflectionDir,
#endif
    float gloss, 
    vec3 specularity, 
    vec3 geometricNormal, 
    mat3 tbn, 
#if defined(LIT_IRIDESCENCE)
    vec3 iridescenceFresnel,
#endif
    vec3 clearcoat_worldNormal,
    float clearcoat_gloss,
    float sheen_gloss,
    float iridescence_intensity
) {

    vec3 cookieAttenuation = vec3(1.0);
    float diffuseAttenuation = 1.0;
    float falloffAttenuation = 1.0;

    // evaluate omni part of the light
    getLightDirPoint(light.position);

    #ifdef CLUSTER_AREALIGHTS

    // distance attenuation
    if (isClusteredLightArea(light)) { // area light

        // area lights
        decodeClusterLightAreaData(light);

        // handle light shape
        if (isClusteredLightRect(light)) {
            calcRectLightValues(light.position, light.halfWidth, light.halfHeight);
        } else if (isClusteredLightDisk(light)) {
            calcDiskLightValues(light.position, light.halfWidth, light.halfHeight);
        } else { // sphere
            calcSphereLightValues(light.position, light.halfWidth, light.halfHeight);
        }

        falloffAttenuation = getFalloffWindow(light.range, dLightDirW);

    } else

    #endif

    {   // punctual light

        if (isClusteredLightFalloffLinear(light))
            falloffAttenuation = getFalloffLinear(light.range, dLightDirW);
        else
            falloffAttenuation = getFalloffInvSquared(light.range, dLightDirW);
    }

    if (falloffAttenuation > 0.00001) {

        #ifdef CLUSTER_AREALIGHTS

        if (isClusteredLightArea(light)) { // area light

            // handle light shape
            if (isClusteredLightRect(light)) {
                diffuseAttenuation = getRectLightDiffuse(worldNormal, viewDir, dLightDirW, dLightDirNormW) * 16.0;
            } else if (isClusteredLightDisk(light)) {
                diffuseAttenuation = getDiskLightDiffuse(worldNormal, viewDir, dLightDirW, dLightDirNormW) * 16.0;
            } else { // sphere
                diffuseAttenuation = getSphereLightDiffuse(worldNormal, viewDir, dLightDirW, dLightDirNormW) * 16.0;
            }

        } else

        #endif

        {
            falloffAttenuation *= getLightDiffuse(worldNormal, viewDir, dLightDirW, dLightDirNormW); 
        }

        // spot light falloff
        if (isClusteredLightSpot(light)) {
            decodeClusterLightSpot(light);
            falloffAttenuation *= getSpotEffect(light.direction, light.innerConeAngleCos, light.outerConeAngleCos, dLightDirNormW);
        }

        #if defined(CLUSTER_COOKIES_OR_SHADOWS)

        if (falloffAttenuation > 0.00001) {

            // shadow / cookie
            if (isClusteredLightCastShadow(light) || isClusteredLightCookie(light)) {

                // shared shadow / cookie data depends on light type
                if (isClusteredLightSpot(light)) {
                    decodeClusterLightProjectionMatrixData(light);
                } else {
                    decodeClusterLightOmniAtlasViewport(light);
                }

                float shadowTextureResolution = shadowAtlasParams.x;
                float shadowEdgePixels = shadowAtlasParams.y;

                #ifdef CLUSTER_COOKIES

                // cookie
                if (isClusteredLightCookie(light)) {
                    decodeClusterLightCookieData(light);

                    if (isClusteredLightSpot(light)) {
                        cookieAttenuation = getCookie2DClustered(TEXTURE_PASS(cookieAtlasTexture), lightProjectionMatrix, vPositionW, light.cookieIntensity, isClusteredLightCookieRgb(light), light.cookieChannelMask);
                    } else {
                        cookieAttenuation = getCookieCubeClustered(TEXTURE_PASS(cookieAtlasTexture), dLightDirW, light.cookieIntensity, isClusteredLightCookieRgb(light), light.cookieChannelMask, shadowTextureResolution, shadowEdgePixels, light.omniAtlasViewport);
                    }
                }

                #endif

                #ifdef CLUSTER_SHADOWS

                // shadow
                if (isClusteredLightCastShadow(light)) {
                    decodeClusterLightShadowData(light);

                    vec4 shadowParams = vec4(shadowTextureResolution, light.shadowNormalBias, light.shadowBias, 1.0 / light.range);

                    if (isClusteredLightSpot(light)) {

                        // spot shadow
                        getShadowCoordPerspZbufferNormalOffset(lightProjectionMatrix, shadowParams, geometricNormal);
                        
                        #if defined(CLUSTER_SHADOW_TYPE_PCF1)
                            float shadow = getShadowSpotClusteredPCF1(SHADOWMAP_PASS(shadowAtlasTexture), dShadowCoord, shadowParams);
                        #elif defined(CLUSTER_SHADOW_TYPE_PCF3)
                            float shadow = getShadowSpotClusteredPCF3(SHADOWMAP_PASS(shadowAtlasTexture), dShadowCoord, shadowParams);
                        #elif defined(CLUSTER_SHADOW_TYPE_PCF5)
                            float shadow = getShadowSpotClusteredPCF5(SHADOWMAP_PASS(shadowAtlasTexture), dShadowCoord, shadowParams);
                        #elif defined(CLUSTER_SHADOW_TYPE_PCSS)
                            float shadow = getShadowSpotClusteredPCSS(SHADOWMAP_PASS(shadowAtlasTexture), dShadowCoord, shadowParams);
                        #endif
                        falloffAttenuation *= mix(1.0, shadow, light.shadowIntensity);

                    } else {

                        // omni shadow
                        vec3 dir = normalOffsetPointShadow(shadowParams, dLightPosW, dLightDirW, dLightDirNormW, geometricNormal);  // normalBias adjusted for distance

                        #if defined(CLUSTER_SHADOW_TYPE_PCF1)
                            float shadow = getShadowOmniClusteredPCF1(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);
                        #elif defined(CLUSTER_SHADOW_TYPE_PCF3)
                            float shadow = getShadowOmniClusteredPCF3(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);
                        #elif defined(CLUSTER_SHADOW_TYPE_PCF5)
                            float shadow = getShadowOmniClusteredPCF5(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);
                        #endif
                        falloffAttenuation *= mix(1.0, shadow, light.shadowIntensity);
                    }
                }

                #endif
            }
        }

        #endif

        // diffuse / specular / clearcoat
        #ifdef CLUSTER_AREALIGHTS

        if (isClusteredLightArea(light)) { // area light

            // area light diffuse
            {
                vec3 areaDiffuse = (diffuseAttenuation * falloffAttenuation) * light.color * cookieAttenuation;

                #if defined(LIT_SPECULAR)
                    areaDiffuse = mix(areaDiffuse, vec3(0), dLTCSpecFres);
                #endif

                // area light diffuse - it does not mix diffuse lighting into specular attenuation
                dDiffuseLight += areaDiffuse;
            }

            // specular and clear coat are material settings and get included by a define based on the material
            #ifdef LIT_SPECULAR

                // area light specular
                float areaLightSpecular;

                if (isClusteredLightRect(light)) {
                    areaLightSpecular = getRectLightSpecular(worldNormal, viewDir);
                } else if (isClusteredLightDisk(light)) {
                    areaLightSpecular = getDiskLightSpecular(worldNormal, viewDir);
                } else { // sphere
                    areaLightSpecular = getSphereLightSpecular(worldNormal, viewDir);
                }

                dSpecularLight += dLTCSpecFres * areaLightSpecular * falloffAttenuation * light.color * cookieAttenuation;

                #ifdef LIT_CLEARCOAT

                    // area light specular clear coat
                    float areaLightSpecularCC;

                    if (isClusteredLightRect(light)) {
                        areaLightSpecularCC = getRectLightSpecular(clearcoat_worldNormal, viewDir);
                    } else if (isClusteredLightDisk(light)) {
                        areaLightSpecularCC = getDiskLightSpecular(clearcoat_worldNormal, viewDir);
                    } else { // sphere
                        areaLightSpecularCC = getSphereLightSpecular(clearcoat_worldNormal, viewDir);
                    }

                    ccSpecularLight += ccLTCSpecFres * areaLightSpecularCC * falloffAttenuation * light.color  * cookieAttenuation;

                #endif

            #endif

        } else

        #endif

        {    // punctual light

            // punctual light diffuse
            {
                vec3 punctualDiffuse = falloffAttenuation * light.color * cookieAttenuation;

                #if defined(CLUSTER_AREALIGHTS)
                #if defined(LIT_SPECULAR)
                    punctualDiffuse = mix(punctualDiffuse, vec3(0), specularity);
                #endif
                #endif

                dDiffuseLight += punctualDiffuse;
            }
   
            // specular and clear coat are material settings and get included by a define based on the material
            #ifdef LIT_SPECULAR

                vec3 halfDir = normalize(-dLightDirNormW + viewDir);
                
                // specular
                #ifdef LIT_SPECULAR_FRESNEL
                    dSpecularLight += 
                        getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dLightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * 
                        getFresnel(
                            dot(viewDir, halfDir), 
                            gloss, 
                            specularity
                        #if defined(LIT_IRIDESCENCE)
                            , iridescenceFresnel,
                            iridescence_intensity
                        #endif
                            );
                #else
                    dSpecularLight += getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dLightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * specularity;
                #endif

                #ifdef LIT_CLEARCOAT
                    #ifdef LIT_SPECULAR_FRESNEL
                        ccSpecularLight += getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, dLightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * getFresnelCC(dot(viewDir, halfDir));
                    #else
                        ccSpecularLight += getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, dLightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation; 
                    #endif
                #endif

                #ifdef LIT_SHEEN
                    sSpecularLight += getLightSpecularSheen(halfDir, worldNormal, viewDir, dLightDirNormW, sheen_gloss) * falloffAttenuation * light.color * cookieAttenuation;
                #endif

            #endif
        }
    }

    // Write to global attenuation values (for lightmapper)
    dAtten = falloffAttenuation;
    dAttenD = diffuseAttenuation;
    dAtten3 = cookieAttenuation;
}

void evaluateClusterLight(
    float lightIndex, 
    vec3 worldNormal, 
    vec3 viewDir, 
    vec3 reflectionDir, 
#if defined(LIT_CLEARCOAT)
    vec3 clearcoatReflectionDir,
#endif
    float gloss, 
    vec3 specularity, 
    vec3 geometricNormal, 
    mat3 tbn, 
#if defined(LIT_IRIDESCENCE)
    vec3 iridescenceFresnel,
#endif
    vec3 clearcoat_worldNormal,
    float clearcoat_gloss,
    float sheen_gloss,
    float iridescence_intensity
) {

    // decode core light data from textures
    ClusterLightData clusterLightData;
    decodeClusterLightCore(clusterLightData, lightIndex);

    // evaluate light if it uses accepted light mask
    if (acceptLightMask(clusterLightData))
        evaluateLight(
            clusterLightData, 
            worldNormal, 
            viewDir, 
            reflectionDir, 
#if defined(LIT_CLEARCOAT)
            clearcoatReflectionDir, 
#endif
            gloss, 
            specularity, 
            geometricNormal, 
            tbn, 
#if defined(LIT_IRIDESCENCE)
            iridescenceFresnel,
#endif
            clearcoat_worldNormal,
            clearcoat_gloss,
            sheen_gloss,
            iridescence_intensity
        );
}

void addClusteredLights(
    vec3 worldNormal, 
    vec3 viewDir, 
    vec3 reflectionDir, 
#if defined(LIT_CLEARCOAT)
    vec3 clearcoatReflectionDir,
#endif
    float gloss, 
    vec3 specularity, 
    vec3 geometricNormal, 
    mat3 tbn, 
#if defined(LIT_IRIDESCENCE)
    vec3 iridescenceFresnel,
#endif
    vec3 clearcoat_worldNormal,
    float clearcoat_gloss,
    float sheen_gloss,
    float iridescence_intensity
) {

    // skip lights if no lights at all
    if (clusterSkip > 0.5)
        return;

    // world space position to 3d integer cell cordinates in the cluster structure
    vec3 cellCoords = floor((vPositionW - clusterBoundsMin) * clusterCellsCountByBoundsSize);

    // no lighting when cell coordinate is out of range
    if (!(any(lessThan(cellCoords, vec3(0.0))) || any(greaterThanEqual(cellCoords, clusterCellsMax)))) {

        // cell index (mapping from 3d cell coordinates to linear memory)
        float cellIndex = dot(clusterCellsDot, cellCoords);

        // convert cell index to uv coordinates
        float clusterV = floor(cellIndex * clusterTextureSize.y);
        float clusterU = cellIndex - (clusterV * clusterTextureSize.x);

        // loop over maximum number of light cells
        for (int lightCellIndex = 0; lightCellIndex < clusterMaxCells; lightCellIndex++) {

            // using a single channel texture with data in alpha channel
            float lightIndex = texelFetch(clusterWorldTexture, ivec2(int(clusterU) + lightCellIndex, clusterV), 0).x;

            if (lightIndex <= 0.0)
                    return;

            evaluateClusterLight(
                lightIndex * 255.0, 
                worldNormal, 
                viewDir, 
                reflectionDir,
#if defined(LIT_CLEARCOAT)
                clearcoatReflectionDir,
#endif
                gloss, 
                specularity, 
                geometricNormal, 
                tbn, 
#if defined(LIT_IRIDESCENCE)
                iridescenceFresnel,
#endif
                clearcoat_worldNormal,
                clearcoat_gloss,
                sheen_gloss,
                iridescence_intensity
            ); 
        }
    }
}
`,Fw=`
vec3 combineColor(vec3 albedo, vec3 sheenSpecularity, float clearcoatSpecularity) {
    vec3 ret = vec3(0);
#ifdef LIT_OLD_AMBIENT
    ret += (dDiffuseLight - light_globalAmbient) * albedo + material_ambient * light_globalAmbient;
#else
    ret += albedo * dDiffuseLight;
#endif
#ifdef LIT_SPECULAR
    ret += dSpecularLight;
#endif
#ifdef LIT_REFLECTIONS
    ret += dReflection.rgb * dReflection.a;
#endif

#ifdef LIT_SHEEN
    float sheenScaling = 1.0 - max(max(sheenSpecularity.r, sheenSpecularity.g), sheenSpecularity.b) * 0.157;
    ret = ret * sheenScaling + (sSpecularLight + sReflection.rgb) * sheenSpecularity;
#endif
#ifdef LIT_CLEARCOAT
    float clearCoatScaling = 1.0 - ccFresnel * clearcoatSpecularity;
    ret = ret * clearCoatScaling + (ccSpecularLight + ccReflection.rgb) * clearcoatSpecularity;
#endif

    return ret;
}
`,kw=`
// light cookie functionality for non-clustered lights
vec4 getCookie2D(sampler2D tex, mat4 transform, float intensity) {
    vec4 projPos = transform * vec4(vPositionW, 1.0);
    projPos.xy /= projPos.w;
    return mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);
}

vec4 getCookie2DClip(sampler2D tex, mat4 transform, float intensity) {
    vec4 projPos = transform * vec4(vPositionW, 1.0);
    projPos.xy /= projPos.w;
    if (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);
    return mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);
}

vec4 getCookie2DXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {
    vec4 projPos = transform * vec4(vPositionW, 1.0);
    projPos.xy /= projPos.w;
    projPos.xy += cookieOffset;
    vec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);
    return mix(vec4(1.0), texture2D(tex, uv), intensity);
}

vec4 getCookie2DClipXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {
    vec4 projPos = transform * vec4(vPositionW, 1.0);
    projPos.xy /= projPos.w;
    projPos.xy += cookieOffset;
    if (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);
    vec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);
    return mix(vec4(1.0), texture2D(tex, uv), intensity);
}

vec4 getCookieCube(samplerCube tex, mat4 transform, float intensity) {
    return mix(vec4(1.0), textureCube(tex, dLightDirNormW * mat3(transform)), intensity);
}
`,Ow=`
uniform vec3 envBoxMin;
uniform vec3 envBoxMax;

vec3 cubeMapProject(vec3 nrdir) {
    nrdir = cubeMapRotate(nrdir);

    vec3 rbmax = (envBoxMax - vPositionW) / nrdir;
    vec3 rbmin = (envBoxMin - vPositionW) / nrdir;

    vec3 rbminmax;
    rbminmax.x = nrdir.x>0.0? rbmax.x : rbmin.x;
    rbminmax.y = nrdir.y>0.0? rbmax.y : rbmin.y;
    rbminmax.z = nrdir.z>0.0? rbmax.z : rbmin.z;

    float fa = min(min(rbminmax.x, rbminmax.y), rbminmax.z);

    vec3 posonbox = vPositionW + nrdir * fa;
    vec3 envBoxPos = (envBoxMin + envBoxMax) * 0.5;
    return normalize(posonbox - envBoxPos);
}
`,Bw=`
vec3 cubeMapProject(vec3 dir) {
    return cubeMapRotate(dir);
}
`,Nw=`
#ifdef CUBEMAP_ROTATION
uniform mat3 cubeMapRotationMatrix;
#endif

vec3 cubeMapRotate(vec3 refDir) {
#ifdef CUBEMAP_ROTATION
    return refDir * cubeMapRotationMatrix;
#else
    return refDir;
#endif
}
`,zw=`
#ifdef DEBUG_ALBEDO_PASS
gl_FragColor = vec4(gammaCorrectOutput(dAlbedo), 1.0);
#endif

#ifdef DEBUG_UV0_PASS
gl_FragColor = vec4(litArgs_albedo , 1.0);
#endif

#ifdef DEBUG_WORLD_NORMAL_PASS
gl_FragColor = vec4(litArgs_worldNormal * 0.5 + 0.5, 1.0);
#endif

#ifdef DEBUG_OPACITY_PASS
gl_FragColor = vec4(vec3(litArgs_opacity) , 1.0);
#endif

#ifdef DEBUG_SPECULARITY_PASS
gl_FragColor = vec4(litArgs_specularity, 1.0);
#endif

#ifdef DEBUG_GLOSS_PASS
gl_FragColor = vec4(vec3(litArgs_gloss) , 1.0);
#endif

#ifdef DEBUG_METALNESS_PASS
gl_FragColor = vec4(vec3(litArgs_metalness) , 1.0);
#endif

#ifdef DEBUG_AO_PASS
gl_FragColor = vec4(vec3(litArgs_ao) , 1.0);
#endif

#ifdef DEBUG_EMISSION_PASS
gl_FragColor = vec4(gammaCorrectOutput(litArgs_emission), 1.0);
#endif
`,Uw=`
#ifdef DEBUG_LIGHTING_PASS
litArgs_albedo = vec3(0.5);
#endif

#ifdef DEBUG_UV0_PASS
#ifdef VARYING_VUV0
litArgs_albedo = vec3(vUv0, 0);
#else
litArgs_albedo = vec3(0);
#endif
#endif
`,v0=`

#ifndef _DECODE_INCLUDED_
#define _DECODE_INCLUDED_

vec3 decodeLinear(vec4 raw) {
    return raw.rgb;
}

float decodeGamma(float raw) {
    return pow(raw, 2.2);
}

vec3 decodeGamma(vec3 raw) {
    return pow(raw, vec3(2.2));
}

vec3 decodeGamma(vec4 raw) {
    return pow(raw.xyz, vec3(2.2));
}

vec3 decodeRGBM(vec4 raw) {
    vec3 color = (8.0 * raw.a) * raw.rgb;
    return color * color;
}

vec3 decodeRGBP(vec4 raw) {
    vec3 color = raw.rgb * (-raw.a * 7.0 + 8.0);
    return color * color;
}

vec3 decodeRGBE(vec4 raw) {
    if (raw.a == 0.0) {
        return vec3(0.0, 0.0, 0.0);
    } else {
        return raw.xyz * pow(2.0, raw.w * 255.0 - 128.0);
    }
}

vec4 passThrough(vec4 raw) {
    return raw;
}

#endif
`,Vw=`
vec3 detailMode_mul(vec3 c1, vec3 c2) {
    return c1 * c2;
}

vec3 detailMode_add(vec3 c1, vec3 c2) {
    return c1 + c2;
}

// https://en.wikipedia.org/wiki/Blend_modes#Screen
vec3 detailMode_screen(vec3 c1, vec3 c2) {
    return 1.0 - (1.0 - c1)*(1.0 - c2);
}

// https://en.wikipedia.org/wiki/Blend_modes#Overlay
vec3 detailMode_overlay(vec3 c1, vec3 c2) {
    return mix(1.0 - 2.0*(1.0 - c1)*(1.0 - c2), 2.0*c1*c2, step(c1, vec3(0.5)));
}

vec3 detailMode_min(vec3 c1, vec3 c2) {
    return min(c1, c2);
}

vec3 detailMode_max(vec3 c1, vec3 c2) {
    return max(c1, c2);
}
`,Gw=`
uniform vec3 material_diffuse;

void getAlbedo() {
    dAlbedo = material_diffuse.rgb;

#ifdef MAPTEXTURE
    vec3 albedoBase = $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;
    dAlbedo *= addAlbedoDetail(albedoBase);
#endif

#ifdef MAPVERTEX
    dAlbedo *= gammaCorrectInput(saturate(vVertexColor.$VC));
#endif
}
`,Hw=`
vec3 addAlbedoDetail(vec3 albedo) {
#ifdef MAPTEXTURE
    vec3 albedoDetail = $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;
    return detailMode_$DETAILMODE(albedo, albedoDetail);
#else
    return albedo;
#endif
}
`,Ww=`
uniform vec3 material_emissive;
uniform float material_emissiveIntensity;

void getEmission() {
    dEmission = material_emissive * material_emissiveIntensity;

    #ifdef MAPTEXTURE
    dEmission *= $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;
    #endif

    #ifdef MAPVERTEX
    dEmission *= gammaCorrectInput(saturate(vVertexColor.$VC));
    #endif
}
`,b0=`
vec4 encodeLinear(vec3 source) {
    return vec4(source, 1.0);
}

vec4 encodeGamma(vec3 source) {
    return vec4(pow(source + 0.0000001, vec3(1.0 / 2.2)), 1.0);
}

vec4 encodeRGBM(vec3 source) { // modified RGBM
    vec4 result;
    result.rgb = pow(source.rgb, vec3(0.5));
    result.rgb *= 1.0 / 8.0;

    result.a = saturate( max( max( result.r, result.g ), max( result.b, 1.0 / 255.0 ) ) );
    result.a = ceil(result.a * 255.0) / 255.0;

    result.rgb /= result.a;
    return result;
}

vec4 encodeRGBP(vec3 source) {
    // convert incoming linear to gamma(ish)
    vec3 gamma = pow(source, vec3(0.5));

    // calculate the maximum component clamped to 1..8
    float maxVal = min(8.0, max(1.0, max(gamma.x, max(gamma.y, gamma.z))));

    // calculate storage factor
    float v = 1.0 - ((maxVal - 1.0) / 7.0);

    // round the value for storage in 8bit channel
    v = ceil(v * 255.0) / 255.0;

    return vec4(gamma / (-v * 7.0 + 8.0), v);    
}

vec4 encodeRGBE(vec3 source) {
    float maxVal = max(source.x, max(source.y, source.z));
    if (maxVal < 1e-32) {
        return vec4(0, 0, 0, 0);
    } else {
        float e = ceil(log2(maxVal));
        return vec4(source / pow(2.0, e), (e + 128.0) / 255.0);
    }
}
`,$w=`
    gl_FragColor.rgb = combineColor(litArgs_albedo, litArgs_sheen_specularity, litArgs_clearcoat_specularity);

    gl_FragColor.rgb += litArgs_emission;
    gl_FragColor.rgb = addFog(gl_FragColor.rgb);
    gl_FragColor.rgb = toneMap(gl_FragColor.rgb);
    gl_FragColor.rgb = gammaCorrectOutput(gl_FragColor.rgb);
`,qw=`
`,Xw=`
// the envAtlas is fixed at 512 pixels. every equirect is generated with 1 pixel boundary.
const float atlasSize = 512.0;
const float seamSize = 1.0 / atlasSize;

// map a normalized equirect UV to the given rectangle (taking 1 pixel seam into account).
vec2 mapUv(vec2 uv, vec4 rect) {
    return vec2(mix(rect.x + seamSize, rect.x + rect.z - seamSize, uv.x),
                mix(rect.y + seamSize, rect.y + rect.w - seamSize, uv.y));
}

// map a normalized equirect UV and roughness level to the correct atlas rect.
vec2 mapRoughnessUv(vec2 uv, float level) {
    float t = 1.0 / exp2(level);
    return mapUv(uv, vec4(0, 1.0 - t, t, t * 0.5));
}

// map shiny level UV
vec2 mapShinyUv(vec2 uv, float level) {
    float t = 1.0 / exp2(level);
    return mapUv(uv, vec4(1.0 - t, 1.0 - t, t, t * 0.5));
}
`,jw=`
vec3 processEnvironment(vec3 color) {
    return color;
}
`,Yw=`
uniform float skyboxIntensity;

vec3 processEnvironment(vec3 color) {
    return color * skyboxIntensity;
}
`,Kw=`
float getFalloffWindow(float lightRadius, vec3 lightDir) {
    float sqrDist = dot(lightDir, lightDir);
    float invRadius = 1.0 / lightRadius;
    return square( saturate( 1.0 - square( sqrDist * square(invRadius) ) ) );
}

float getFalloffInvSquared(float lightRadius, vec3 lightDir) {
    float sqrDist = dot(lightDir, lightDir);
    float falloff = 1.0 / (sqrDist + 1.0);
    float invRadius = 1.0 / lightRadius;

    falloff *= 16.0;
    falloff *= square( saturate( 1.0 - square( sqrDist * square(invRadius) ) ) );

    return falloff;
}
`,Zw=`
float getFalloffLinear(float lightRadius, vec3 lightDir) {
    float d = length(lightDir);
    return max(((lightRadius - d) / lightRadius), 0.0);
}
`,Qw=`
// float unpacking functionality, complimentary to float-packing.js
float bytes2float2(vec2 data) {
    return dot(data, vec2(1.0, 1.0 / 255.0));
}

float bytes2float3(vec3 data) {
    return dot(data, vec3(1.0, 1.0 / 255.0, 1.0 / 65025.0));
}

float bytes2float4(vec4 data) {
    return dot(data, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));
}

float bytes2floatRange2(vec2 data, float min, float max) {
    return mix(min, max, bytes2float2(data));
}

float bytes2floatRange3(vec3 data, float min, float max) {
    return mix(min, max, bytes2float3(data));
}

float bytes2floatRange4(vec4 data, float min, float max) {
    return mix(min, max, bytes2float4(data));
}

float mantissaExponent2Float(vec4 pack)
{
    float value = bytes2floatRange3(pack.xyz, -1.0, 1.0);
    float exponent = floor(pack.w * 255.0 - 127.0);
    return value * exp2(exponent);
}
`,Jw=`

#ifndef FLOAT_AS_UINT
#define FLOAT_AS_UINT

// encode float value to RGBA8
vec4 float2uint(float value) {
    uint intBits = floatBitsToUint(value);
    return vec4(
        float((intBits >> 24u) & 0xFFu) / 255.0,
        float((intBits >> 16u) & 0xFFu) / 255.0,
        float((intBits >> 8u) & 0xFFu) / 255.0,
        float(intBits & 0xFFu) / 255.0
    );
}

// decode RGBA8 value to float
float uint2float(vec4 value) {
    uint intBits = 
        (uint(value.r * 255.0) << 24u) |
        (uint(value.g * 255.0) << 16u) |
        (uint(value.b * 255.0) << 8u) |
        uint(value.a * 255.0);

    return uintBitsToFloat(intBits);
}

#endif // FLOAT_AS_UINT
`,eT=`

float dBlendModeFogFactor = 1.0;

#if (FOG != NONE)
    uniform vec3 fog_color;

    #if (FOG == LINEAR)
        uniform float fog_start;
        uniform float fog_end;
    #else
        uniform float fog_density;
    #endif
#endif

float getFogFactor() {

    float depth = gl_FragCoord.z / gl_FragCoord.w;
    float fogFactor = 0.0;

    #if (FOG == LINEAR)
        fogFactor = (fog_end - depth) / (fog_end - fog_start);
    #elif (FOG == EXP)
        fogFactor = exp(-depth * fog_density);
    #elif (FOG == EXP2)
        fogFactor = exp(-depth * depth * fog_density * fog_density);
    #endif

    return clamp(fogFactor, 0.0, 1.0);
}

vec3 addFog(vec3 color) {

    #if (FOG != NONE)
        return mix(fog_color * dBlendModeFogFactor, color, getFogFactor());
    #endif

    return color;
}
`,tT=`
// Schlick's approximation
vec3 getFresnel(
        float cosTheta, 
        float gloss, 
        vec3 specularity
#if defined(LIT_IRIDESCENCE)
        , vec3 iridescenceFresnel, 
        float iridescenceIntensity
#endif
    ) {
    float fresnel = pow(1.0 - max(cosTheta, 0.0), 5.0);
    float glossSq = gloss * gloss;
    vec3 ret = specularity + (max(vec3(glossSq), specularity) - specularity) * fresnel;
#if defined(LIT_IRIDESCENCE)
    return mix(ret, iridescenceFresnel, iridescenceIntensity);
#else
    return ret;
#endif    
}

float getFresnelCC(float cosTheta) {
    float fresnel = pow(1.0 - max(cosTheta, 0.0), 5.0);
    return 0.04 + (1.0 - 0.04) * fresnel;
}
`,sT=`
varying vec2 vUv0;

uniform sampler2D source;

void main(void) {
    gl_FragColor = texture2D(source, vUv0);
}
`,iT=`
attribute vec2 vertex_position;

varying vec2 vUv0;

void main(void)
{
    gl_Position = vec4(vertex_position, 0.5, 1.0);
    vUv0 = vertex_position.xy*0.5+0.5;
}
`,rT=`

#include "decodePS"

#if (GAMMA == SRGB)

    float gammaCorrectInput(float color) {
        return decodeGamma(color);
    }

    vec3 gammaCorrectInput(vec3 color) {
        return decodeGamma(color);
    }

    vec4 gammaCorrectInput(vec4 color) {
        return vec4(decodeGamma(color.xyz), color.w);
    }

    vec3 gammaCorrectOutput(vec3 color) {
        return pow(color + 0.0000001, vec3(1.0 / 2.2));
    }

#else // NONE

    float gammaCorrectInput(float color) {
        return color;
    }

    vec3 gammaCorrectInput(vec3 color) {
        return color;
    }

    vec4 gammaCorrectInput(vec4 color) {
        return color;
    }

    vec3 gammaCorrectOutput(vec3 color) {
        return color;
    }

#endif
`,nT=`
#ifdef MAPFLOAT
uniform float material_gloss;
#endif

void getGlossiness() {
    dGlossiness = 1.0;

    #ifdef MAPFLOAT
    dGlossiness *= material_gloss;
    #endif

    #ifdef MAPTEXTURE
    dGlossiness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    dGlossiness *= saturate(vVertexColor.$VC);
    #endif

    #ifdef MAPINVERT
    dGlossiness = 1.0 - dGlossiness;
    #endif

    dGlossiness += 0.0000001;
}
`,aT=`
uniform mat4 matrix_model;
uniform mat4 matrix_view;
uniform mat4 matrix_projection;

// project the model space gaussian center to view and clip space
bool initCenter(vec3 modelCenter, out SplatCenter center) {
    mat4 modelView = matrix_view * matrix_model;
    vec4 centerView = modelView * vec4(modelCenter, 1.0);

    // early out if splat is behind the camera
    if (centerView.z > 0.0) {
        return false;
    }

    vec4 centerProj = matrix_projection * centerView;

    // ensure gaussians are not clipped by camera near and far
    centerProj.z = clamp(centerProj.z, -abs(centerProj.w), abs(centerProj.w));

    center.view = centerView.xyz / centerView.w;
    center.proj = centerProj;
    center.projMat00 = matrix_projection[0][0];
    center.modelView = modelView;
    return true;
}
`,oT=`

uniform mediump sampler2D splatColor;

vec4 readColor(in SplatSource source) {
    return texelFetch(splatColor, source.uv, 0);
}

`,lT=`

uniform mediump sampler2D splatThreshold;

float readThreshold(in SplatSource source) {
    return texelFetch(splatThreshold, source.uv, 0).r;
}

`,hT=`

// stores the source UV and order of the splat
struct SplatSource {
    uint order;         // render order
    uint id;            // splat id
    ivec2 uv;           // splat uv
    vec2 cornerUV;      // corner coordinates for this vertex of the gaussian (-1, -1)..(1, 1)
};

// stores the camera and clip space position of the gaussian center
struct SplatCenter {
    vec3 view;          // center in view space
    vec4 proj;          // center in clip space
    mat4 modelView;     // model-view matrix
    float projMat00;    // elememt [0][0] of the projection matrix
};

// stores the offset from center for the current gaussian
struct SplatCorner {
    vec2 offset;        // corner offset from center in clip space
    vec2 uv;            // corner uv
};

#if SH_BANDS > 0
    #if SH_BANDS == 1
        #define SH_COEFFS 3
    #elif SH_BANDS == 2
        #define SH_COEFFS 8
    #elif SH_BANDS == 3
        #define SH_COEFFS 15
    #endif
#endif

#if GSPLAT_COMPRESSED_DATA == true
    #include "gsplatCompressedDataVS"
    #include "gsplatCompressedSHVS"
#else
    #include "gsplatDataVS"
    #include "gsplatColorVS"
    #include "gsplatThresholdVS"
    #include "gsplatSHVS"
#endif

#include "gsplatSourceVS"
#include "gsplatCenterVS"
#include "gsplatCornerVS"
#include "gsplatOutputVS"

// modify the gaussian corner so it excludes gaussian regions with alpha
// less than e^{-4}
// clipMaring is the minimum alpha value for the fragment to be included
void clipCorner(inout SplatCorner corner, float alpha, float clipMarginal) {
    float clip = min(1.0, sqrt(log(alpha / clipMarginal) / 4.0));
    clip *=0.7;
    corner.offset *= clip;
    corner.uv *= clip;
}

// spherical Harmonics

#if SH_BANDS > 0

#define SH_C1 0.4886025119029199f

#if SH_BANDS > 1
    #define SH_C2_0 1.0925484305920792f
    #define SH_C2_1 -1.0925484305920792f
    #define SH_C2_2 0.31539156525252005f
    #define SH_C2_3 -1.0925484305920792f
    #define SH_C2_4 0.5462742152960396f
#endif

#if SH_BANDS > 2
    #define SH_C3_0 -0.5900435899266435f
    #define SH_C3_1 2.890611442640554f
    #define SH_C3_2 -0.4570457994644658f
    #define SH_C3_3 0.3731763325901154f
    #define SH_C3_4 -0.4570457994644658f
    #define SH_C3_5 1.445305721320277f
    #define SH_C3_6 -0.5900435899266435f
#endif

// see https://github.com/graphdeco-inria/gaussian-splatting/blob/main/utils/sh_utils.py
vec3 evalSH(in SplatSource source, in vec3 dir) {

    // read sh coefficients
    vec3 sh[SH_COEFFS];
    float scale;
    readSHData(source, sh, scale);

    float x = dir.x;
    float y = dir.y;
    float z = dir.z;

    // 1st degree
    vec3 result = SH_C1 * (-sh[0] * y + sh[1] * z - sh[2] * x);

#if SH_BANDS > 1
    // 2nd degree
    float xx = x * x;
    float yy = y * y;
    float zz = z * z;
    float xy = x * y;
    float yz = y * z;
    float xz = x * z;

    result +=
        sh[3] * (SH_C2_0 * xy) *  +
        sh[4] * (SH_C2_1 * yz) +
        sh[5] * (SH_C2_2 * (2.0 * zz - xx - yy)) +
        sh[6] * (SH_C2_3 * xz) +
        sh[7] * (SH_C2_4 * (xx - yy));
#endif

#if SH_BANDS > 2
    // 3rd degree
    result +=
        sh[8]  * (SH_C3_0 * y * (3.0 * xx - yy)) +
        sh[9]  * (SH_C3_1 * xy * z) +
        sh[10] * (SH_C3_2 * y * (4.0 * zz - xx - yy)) +
        sh[11] * (SH_C3_3 * z * (2.0 * zz - 3.0 * xx - 3.0 * yy)) +
        sh[12] * (SH_C3_4 * x * (4.0 * zz - xx - yy)) +
        sh[13] * (SH_C3_5 * z * (xx - yy)) +
        sh[14] * (SH_C3_6 * x * (xx - 3.0 * yy));
#endif

    return result * scale;
}
#endif
`,cT=`
uniform highp usampler2D packedTexture;
uniform highp usampler2D packedTimeTexture;
uniform highp sampler2D chunkTexture;

// work values
vec4 chunkDataA;    // x: min_x, y: min_y, z: min_z, w: max_x
vec4 chunkDataB;    // x: max_y, y: max_z, z: scale_min_x, w: scale_min_y
vec4 chunkDataC;    // x: scale_min_z, y: scale_max_x, z: scale_max_y, w: scale_max_z
vec4 chunkDataD;    // x: min_r, y: min_g, z: min_b, w: max_r
vec4 chunkDataE;    // x: max_g, y: max_b, z: min_motion_x, w: min_motion_y
vec4 chunkDataF;    // x: min_motion_z, y: max_motion_x, z: max_motion_y, w: max_motion_z
vec4 chunkDataT;    // x: min_time, y: max_time, z: min_time_scale, w: max_time_scale
uvec4 packedData;   // x: position bits, y: rotation bits, z: scale bits, w: color bits
uvec2 packedT;   // x: motion bits(x, y, z), y: time bits(t_scale, t, unused)

// tool for compute Marginal time
float computeMarginalT(float time, float muT, float sigmaT) {
    if (muT <= -10.0) {
        return 1.0;
    }
    float result = exp(-0.5 * (pow((time - muT), 2.0) / pow(sigmaT, 2.0)));
    return result;
}

vec3 unpack111011(uint bits) {
    return vec3(
        float(bits >> 21u) / 2047.0,
        float((bits >> 11u) & 0x3ffu) / 1023.0,
        float(bits & 0x7ffu) / 2047.0
    );
}

vec4 unpack8888(uint bits) {
    return vec4(
        float(bits >> 24u) / 255.0,
        float((bits >> 16u) & 0xffu) / 255.0,
        float((bits >> 8u) & 0xffu) / 255.0,
        float(bits & 0xffu) / 255.0
    );
}

const float norm = 1.0 / (sqrt(2.0) * 0.5);

vec4 unpackRotation(uint bits) {
    float a = (float((bits >> 20u) & 0x3ffu) / 1023.0 - 0.5) * norm;
    float b = (float((bits >> 10u) & 0x3ffu) / 1023.0 - 0.5) * norm;
    float c = (float(bits & 0x3ffu) / 1023.0 - 0.5) * norm;
    float m = sqrt(1.0 - (a * a + b * b + c * c));

    uint mode = bits >> 30u;
    if (mode == 0u) return vec4(m, a, b, c);
    if (mode == 1u) return vec4(a, m, b, c);
    if (mode == 2u) return vec4(a, b, m, c);
    return vec4(a, b, c, m);
}

mat3 quatToMat3(vec4 R) {
    float x = R.x;
    float y = R.y;
    float z = R.z;
    float w = R.w;
    return mat3(
        1.0 - 2.0 * (z * z + w * w),
              2.0 * (y * z + x * w),
              2.0 * (y * w - x * z),
              2.0 * (y * z - x * w),
        1.0 - 2.0 * (y * y + w * w),
              2.0 * (z * w + x * y),
              2.0 * (y * w + x * z),
              2.0 * (z * w - x * y),
        1.0 - 2.0 * (y * y + z * z)
    );
}

// read center
vec3 readCenter(SplatSource source) {
    uint w = uint(textureSize(chunkTexture, 0).x) / 5u;
    uint chunkId = source.id / 256u;
    ivec2 chunkUV = ivec2((chunkId % w) * 5u, chunkId / w);

    // read chunk and packed compressed data
    chunkDataA = texelFetch(chunkTexture, chunkUV, 0);
    chunkDataB = texelFetch(chunkTexture, chunkUV + ivec2(1, 0), 0);
    chunkDataC = texelFetch(chunkTexture, chunkUV + ivec2(2, 0), 0);
    chunkDataD = texelFetch(chunkTexture, chunkUV + ivec2(3, 0), 0);
    chunkDataE = texelFetch(chunkTexture, chunkUV + ivec2(4, 0), 0);
    packedData = texelFetch(packedTexture, source.uv, 0);

    return mix(chunkDataA.xyz, vec3(chunkDataA.w, chunkDataB.xy), unpack111011(packedData.x));
}

vec4 readColor(in SplatSource source) {
    vec4 r = unpack8888(packedData.w);
    return vec4(mix(chunkDataD.xyz, vec3(chunkDataD.w, chunkDataE.xy), r.rgb), r.w);
}

vec4 getRotation() {
    return unpackRotation(packedData.y);
}

vec3 getScale() {
    return exp(mix(vec3(chunkDataB.zw, chunkDataC.x), chunkDataC.yzw, unpack111011(packedData.z)));
}

// given a rotation matrix and scale vector, compute 3d covariance A and B
void readCovariance(in SplatSource source, out vec3 covA, out vec3 covB) {
    mat3 rot = quatToMat3(getRotation());
    vec3 scale = getScale();

    // M = S * R
    mat3 M = transpose(mat3(
        scale.x * rot[0],
        scale.y * rot[1],
        scale.z * rot[2]
    ));

    covA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));
    covB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));
}

float getMarginalT(in SplatSource source, in float time) {
    float marginal = 1.0;
    #ifdef IS_4D
        chunkDataT = texelFetch(chunkTexture, chunkUV + ivec2(6, 0), 0);
        packedT = texelFetch(packedTimeTexture, source.uv, 0).xy;
        vec3 timeData = mix(vec3(chunkDataT.z, chunkDataT.x, 0), vec3(chunkDataT.w, chunkDataT.y, 1), unpack111011(packedT.y));
        float tScale = exp(timeData.x);
        float muT = timeData.y;
        marginal = computeMarginalT(time, muT, tScale);
    #endif
    return marginal;
}

vec3 readCenter4D(SplatSource source, float time) {
    uint w = uint(textureSize(chunkTexture, 0).x) / 7u;
    uint chunkId = source.id / 256u;
    ivec2 chunkUV = ivec2((chunkId % w) * 7u, chunkId / w);

    // read chunk and packed compressed data
    chunkDataA = texelFetch(chunkTexture, chunkUV, 0);
    chunkDataB = texelFetch(chunkTexture, chunkUV + ivec2(1, 0), 0);
    chunkDataC = texelFetch(chunkTexture, chunkUV + ivec2(2, 0), 0);
    chunkDataD = texelFetch(chunkTexture, chunkUV + ivec2(3, 0), 0);
    chunkDataE = texelFetch(chunkTexture, chunkUV + ivec2(4, 0), 0);
    chunkDataF = texelFetch(chunkTexture, chunkUV + ivec2(5, 0), 0);
    chunkDataT = texelFetch(chunkTexture, chunkUV + ivec2(6, 0), 0);
    packedData = texelFetch(packedTexture, source.uv, 0);
    packedT = texelFetch(packedTimeTexture, source.uv, 0).xy;

    vec3 splatCenter = mix(chunkDataA.xyz, vec3(chunkDataA.w, chunkDataB.xy), unpack111011(packedData.x));
    #ifdef IS_4D
        vec3 time = mix(vec3(chunkDataT.z, chunkDataT.x, 0), vec3(chunkDataT.w, chunkDataT.y, 1), unpack111011(packedT.y));
        float muT = time.y;
        vec3 movingSpeed = mix(vec3(chunkDataE.zw, chunkDataF.x), chunkDataF.yzw, unpack111011(packedT.x));
        vec3 splatOffset = movingSpeed * (time - muT);
        splatCenter += splatOffset;
    #endif
    return splatCenter;
}
`,dT=`
#if SH_BANDS > 0

uniform highp usampler2D shTexture0;
uniform highp usampler2D shTexture1;
uniform highp usampler2D shTexture2;

vec4 unpack8888s(in uint bits) {
    return vec4((uvec4(bits) >> uvec4(0u, 8u, 16u, 24u)) & 0xffu) * (8.0 / 255.0) - 4.0;
}

void readSHData(in SplatSource source, out vec3 sh[15], out float scale) {
    // read the sh coefficients
    uvec4 shData0 = texelFetch(shTexture0, source.uv, 0);
    uvec4 shData1 = texelFetch(shTexture1, source.uv, 0);
    uvec4 shData2 = texelFetch(shTexture2, source.uv, 0);

    vec4 r0 = unpack8888s(shData0.x);
    vec4 r1 = unpack8888s(shData0.y);
    vec4 r2 = unpack8888s(shData0.z);
    vec4 r3 = unpack8888s(shData0.w);

    vec4 g0 = unpack8888s(shData1.x);
    vec4 g1 = unpack8888s(shData1.y);
    vec4 g2 = unpack8888s(shData1.z);
    vec4 g3 = unpack8888s(shData1.w);

    vec4 b0 = unpack8888s(shData2.x);
    vec4 b1 = unpack8888s(shData2.y);
    vec4 b2 = unpack8888s(shData2.z);
    vec4 b3 = unpack8888s(shData2.w);

    sh[0] =  vec3(r0.x, g0.x, b0.x);
    sh[1] =  vec3(r0.y, g0.y, b0.y);
    sh[2] =  vec3(r0.z, g0.z, b0.z);
    sh[3] =  vec3(r0.w, g0.w, b0.w);
    sh[4] =  vec3(r1.x, g1.x, b1.x);
    sh[5] =  vec3(r1.y, g1.y, b1.y);
    sh[6] =  vec3(r1.z, g1.z, b1.z);
    sh[7] =  vec3(r1.w, g1.w, b1.w);
    sh[8] =  vec3(r2.x, g2.x, b2.x);
    sh[9] =  vec3(r2.y, g2.y, b2.y);
    sh[10] = vec3(r2.z, g2.z, b2.z);
    sh[11] = vec3(r2.w, g2.w, b2.w);
    sh[12] = vec3(r3.x, g3.x, b3.x);
    sh[13] = vec3(r3.y, g3.y, b3.y);
    sh[14] = vec3(r3.z, g3.z, b3.z);

    scale = 1.0;
}

#endif
`,uT=`
uniform vec2 viewport;                  // viewport dimensions
uniform vec4 camera_params;             // 1 / far, far, near, isOrtho
uniform float uSplatScale;

// calculate the clip-space offset from the center for this gaussian
bool initCorner(SplatSource source, SplatCenter center, out SplatCorner corner, int pointCloudModeEnabled) {
    // get covariance
    vec3 covA, covB;
    readCovariance(source, covA, covB);

    mat3 Vrk = mat3(
        covA.x, covA.y, covA.z,
        covA.y, covB.x, covB.y,
        covA.z, covB.y, covB.z
    );

    float focal = viewport.x * center.projMat00;

    vec3 v = camera_params.w == 1.0 ? vec3(0.0, 0.0, 1.0) : center.view.xyz;
    float J1 = focal / v.z;
    vec2 J2 = -J1 / v.z * v.xy;
    mat3 J = mat3(
        J1, 0.0, J2.x,
        0.0, J1, J2.y,
        0.0, 0.0, 0.0
    );

    mat3 W = transpose(mat3(center.modelView));
    mat3 T = W * J;
    mat3 cov = transpose(T) * Vrk * T;

    float diagonal1 = cov[0][0] + 0.3;
    float offDiagonal = cov[0][1];
    float diagonal2 = cov[1][1] + 0.3;

    float mid = 0.5 * (diagonal1 + diagonal2);
    float radius = length(vec2((diagonal1 - diagonal2) / 2.0, offDiagonal));
    float lambda1 = mid + radius;
    float lambda2 = max(mid - radius, 0.1);
    if (pointCloudModeEnabled == 1) {
    lambda1 = lambda2 = 2.0;
    }

    float l1 = 2.0 * min(sqrt(2.0 * lambda1), 1024.0);
    float l2 = 2.0 * min(sqrt(2.0 * lambda2), 1024.0);

    // early-out gaussians smaller than 2 pixels
    if (l1 < 2.0 && l2 < 2.0) {
        return false;
    }

    // perform cull against x/y axes
    if (any(greaterThan(abs(center.proj.xy) - vec2(l1, l2) / viewport * center.proj.w, center.proj.ww))) {
        return false;
    }

    vec2 diagonalVector = normalize(vec2(offDiagonal, lambda1 - diagonal1));

    float scale = 1.0;
    if(uSplatScale > 0.0 && uSplatScale <= 1.2){
        scale = uSplatScale;
    }
    vec2 v1 = scale * l1 * diagonalVector;
    vec2 v2 = scale * l2 * vec2(diagonalVector.y, -diagonalVector.x);

    corner.offset = (source.cornerUV.x * v1 + source.cornerUV.y * v2) / viewport * center.proj.w;
    corner.uv = source.cornerUV;

    return true;
}
`,fT=`

uniform highp usampler2D transformA;
uniform highp sampler2D transformB;
uniform highp sampler2D transformR;

#ifdef IS_4D
uniform highp sampler2D transformTSpeed;
uniform highp sampler2D transformT;
#endif

// work values
vec2 sampledCov4D;
float muT;

// tool for compute Marginal time
float computeMarginalT(float time, float muT, float sigmaT) {
    if (muT <= -10.0) {
        return 1.0;
    }
    float result = exp(-0.5 * (pow((time - muT), 2.0) / pow(sigmaT, 2.0)));
    return result;
}

// read the model-space center of the gaussian
vec3 readCenter(SplatSource source) {
    // read transform data
    uvec4 tA = texelFetch(transformA, source.uv, 0);
    return uintBitsToFloat(tA.xyz);
}

mat3 quatToMat3(vec4 R) {
    float x = R.w;
    float y = R.x;
    float z = R.y;
    float w = R.z;
    return mat3(
        1.0 - 2.0 * (z * z + w * w),
              2.0 * (y * z + x * w),
              2.0 * (y * w - x * z),
              2.0 * (y * z - x * w),
        1.0 - 2.0 * (y * y + w * w),
              2.0 * (z * w + x * y),
              2.0 * (y * w + x * z),
              2.0 * (z * w - x * y),
        1.0 - 2.0 * (y * y + z * z)
    );
}

vec4 unpackRotation(vec3 packed) {
    return vec4(packed.xyz, sqrt(1.0 - dot(packed, packed)));
}

// sample covariance vectors
void readCovariance(in SplatSource source, out vec3 covA, out vec3 covB) {
    vec4 tB = texelFetch(transformB, source.uv, 0);

    vec3 tR = texelFetch(transformR, source.uv, 0).xyz;
    mat3 rot = quatToMat3(unpackRotation(tR));
    vec3 scale = tB.xyz;

    // M = S * R
    mat3 M = transpose(mat3(
        scale.x * rot[0],
        scale.y * rot[1],
        scale.z * rot[2]
    ));

    covA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));
    covB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));
}

// sample 4D covariance vectors
void readFTGSCovariance(in SplatSource source, out vec3 covA, out vec3 covB,out vec4 covariance4D) {
    vec4 tB = texelFetch(transformB, source.uv, 0);

    vec3 tR = texelFetch(transformR, source.uv, 0).xyz;
    mat3 rot = quatToMat3(unpackRotation(tR));
    vec3 scale = tB.xyz;

    // M = S * R
    mat3 M = transpose(mat3(
        scale.x * rot[0],
        scale.y * rot[1],
        scale.z * rot[2]
    ));

    covA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));
    covB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));

}


float getMarginalT(in SplatSource source, in float time) {
    float marginal = 1.0;
    #ifdef IS_4D
        // filter out splats that have too little influence to now in the time dimension.
        vec2 tData = texelFetch(transformT, source.uv, 0).xy;
        muT = tData.x;
        float tScale = tData.y;
        marginal = computeMarginalT(time, muT, tScale);
    #endif
    return marginal;
}

vec3 readCenter4D(SplatSource source, float time) {
    uvec4 tA = texelFetch(transformA, source.uv, 0);
    vec3 splatCenter  = uintBitsToFloat(tA.xyz);
    #ifdef IS_4D
    if(muT > -5.0 && muT < 40.0){
        vec3 movingSpeed = texelFetch(transformTSpeed, source.uv, 0).xyz;
        vec3 splatOffset = movingSpeed * (time - muT);
        splatCenter += splatOffset;
    }
    #endif

    return splatCenter;
}
`,pT=`

#include "tonemappingPS"
#include "decodePS"
#include "gammaPS"

// prepare the output color for the given gamma-space color
vec3 prepareOutputFromGamma(vec3 gammaColor) {
    #if TONEMAP == NONE
        #if GAMMA == NONE
            // convert to linear space
            return decodeGamma(gammaColor);
        #else
            // output gamma space color directly
            return gammaColor;
        #endif
    #else
        // apply tonemapping in linear space and output to linear or
        // gamma (which is handled by gammaCorrectOutput)
        return gammaCorrectOutput(toneMap(decodeGamma(gammaColor)));
    #endif
}
`,mT=`

#ifndef DITHER_NONE
    #include "bayerPS"
    #include "opacityDitherPS"
    varying float id;
#endif

#ifdef PICK_PASS
    uniform vec4 uColor;
#endif

varying mediump vec2 gaussianUV;
varying mediump vec4 gaussianColor;

void main(void) {
    discard;
}
`,_T=`

#if SH_BANDS > 0

// unpack signed 11 10 11 bits
vec3 unpack111011s(uint bits) {
    return vec3((uvec3(bits) >> uvec3(21u, 11u, 0u)) & uvec3(0x7ffu, 0x3ffu, 0x7ffu)) / vec3(2047.0, 1023.0, 2047.0) * 2.0 - 1.0;
}

// fetch quantized spherical harmonic coefficients
void fetchScale(in uvec4 t, out float scale, out vec3 a, out vec3 b, out vec3 c) {
    scale = uintBitsToFloat(t.x);
    a = unpack111011s(t.y);
    b = unpack111011s(t.z);
    c = unpack111011s(t.w);
}

// fetch quantized spherical harmonic coefficients
void fetch(in uvec4 t, out vec3 a, out vec3 b, out vec3 c, out vec3 d) {
    a = unpack111011s(t.x);
    b = unpack111011s(t.y);
    c = unpack111011s(t.z);
    d = unpack111011s(t.w);
}

void fetch(in uint t, out vec3 a) {
    a = unpack111011s(t);
}

#if SH_BANDS == 1
    uniform highp usampler2D splatSH_1to3;
    void readSHData(in SplatSource source, out vec3 sh[3], out float scale) {
        fetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);
    }
#elif SH_BANDS == 2
    uniform highp usampler2D splatSH_1to3;
    uniform highp usampler2D splatSH_4to7;
    uniform highp usampler2D splatSH_8to11;
    void readSHData(in SplatSource source, out vec3 sh[8], out float scale) {
        fetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);
        fetch(texelFetch(splatSH_4to7, source.uv, 0), sh[3], sh[4], sh[5], sh[6]);
        fetch(texelFetch(splatSH_8to11, source.uv, 0).x, sh[7]);
    }
#else
    uniform highp usampler2D splatSH_1to3;
    uniform highp usampler2D splatSH_4to7;
    uniform highp usampler2D splatSH_8to11;
    uniform highp usampler2D splatSH_12to15;
    void readSHData(in SplatSource source, out vec3 sh[15], out float scale) {
        fetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);
        fetch(texelFetch(splatSH_4to7, source.uv, 0), sh[3], sh[4], sh[5], sh[6]);
        fetch(texelFetch(splatSH_8to11, source.uv, 0), sh[7], sh[8], sh[9], sh[10]);
        fetch(texelFetch(splatSH_12to15, source.uv, 0), sh[11], sh[12], sh[13], sh[14]);
    }
#endif

#endif
`,gT=`
attribute vec3 vertex_position;         // xy: cornerUV, z: render order offset
attribute uint vertex_id_attrib;        // render order base

uniform uint numSplats;                 // total number of splats
uniform highp usampler2D splatOrder;    // per-splat index to source gaussian

// initialize the splat source structure
bool initSource(out SplatSource source) {
    uint w = uint(textureSize(splatOrder, 0).x);

    // calculate splat order
    source.order = vertex_id_attrib + uint(vertex_position.z);

    // return if out of range (since the last block of splats may be partially full)
    if (source.order >= numSplats) {
        return false;
    }

    ivec2 orderUV = ivec2(source.order % w, source.order / w);

    // read splat id
    source.id = texelFetch(splatOrder, orderUV, 0).r;

    // map id to uv
    source.uv = ivec2(source.id % w, source.id / w);

    // get the corner
    source.cornerUV = vertex_position.xy;

    return true;
}
`,yT=`
#include "gsplatCommonVS"

uniform int pointCloudModeEnabled;
uniform float uTime;

varying mediump vec2 gaussianUV;
varying mediump vec4 gaussianColor;

#ifndef DITHER_NONE
    varying float id;
#endif

mediump vec4 discardVec = vec4(0.0, 0.0, 2.0, 1.0);

void main(void) {
    // read gaussian details
    SplatSource source;
    if (!initSource(source)) {
        gl_Position = discardVec;
        return;
    }

    float marginal = getMarginalT(source, uTime);
    if (marginal < 0.05) {
        gl_Position = discardVec;
        return;
    }

    // vec3 modelCenter = readCenter(source);
    vec3 modelCenter = readCenter4D(source, uTime);

    SplatCenter center;
    if (!initCenter(modelCenter, center)) {
        gl_Position = discardVec;
        return;
    }

    // project center to screen space
    SplatCorner corner;
    if (!initCorner(source, center, corner, pointCloudModeEnabled)) {
        gl_Position = discardVec;
        return;
    }

    // read color
    vec4 clr = readColor(source);
    float threshold = readThreshold(source);
    if(marginal > 0.0) {
        clr.w *= marginal;
    }
    if(clr.w < threshold) {
        gl_Position = discardVec;
        return;
    }
    // evaluate spherical harmonics
    #if SH_BANDS > 0
        // calculate the model-space view direction
        vec3 dir = normalize(center.view * mat3(center.modelView));
        clr.xyz += evalSH(source, dir);
    #endif

    clipCorner(corner, clr.w, threshold);

    // pointCloudMode
    if (pointCloudModeEnabled == 1) {
        clr.a = 1.0;
    }
    // write output
    gl_Position = center.proj + vec4(corner.offset, 0, 0);
    gaussianUV = corner.uv;
    gaussianColor = vec4(prepareOutputFromGamma(max(clr.xyz, 0.0)), clr.w);
    //gaussianColor = vec4(center.proj.w, center.proj.w, center.proj.w, 1.0);
    gaussianColor = clamp(gaussianColor, 0.0, 1.0);

    #ifndef DITHER_NONE
        id = float(source.id);
    #endif
}
`,xT=`
uniform float material_iridescenceRefractionIndex;

#ifndef PI
#define PI 3.14159265
#endif

float iridescence_iorToFresnel(float transmittedIor, float incidentIor) {
    return pow((transmittedIor - incidentIor) / (transmittedIor + incidentIor), 2.0);
}

vec3 iridescence_iorToFresnel(vec3 transmittedIor, float incidentIor) {
    return pow((transmittedIor - vec3(incidentIor)) / (transmittedIor + vec3(incidentIor)), vec3(2.0));
}

vec3 iridescence_fresnelToIor(vec3 f0) {
    vec3 sqrtF0 = sqrt(f0);
    return (vec3(1.0) + sqrtF0) / (vec3(1.0) - sqrtF0);
}

vec3 iridescence_sensitivity(float opd, vec3 shift) {
    float phase = 2.0 * PI * opd * 1.0e-9;
    const vec3 val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);
    const vec3 pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);
    const vec3 var = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);

    vec3 xyz = val * sqrt(2.0 * PI * var) * cos(pos * phase + shift) * exp(-pow(phase, 2.0) * var);
    xyz.x += 9.7470e-14 * sqrt(2.0 * PI * 4.5282e+09) * cos(2.2399e+06 * phase + shift[0]) * exp(-4.5282e+09 * pow(phase, 2.0));
    xyz /= vec3(1.0685e-07);

    const mat3 XYZ_TO_REC709 = mat3(
        3.2404542, -0.9692660,  0.0556434,
       -1.5371385,  1.8760108, -0.2040259,
       -0.4985314,  0.0415560,  1.0572252
    );

    return XYZ_TO_REC709 * xyz;
}

float iridescence_fresnel(float cosTheta, float f0) {
    float x = clamp(1.0 - cosTheta, 0.0, 1.0);
    float x2 = x * x;
    float x5 = x * x2 * x2;
    return f0 + (1.0 - f0) * x5;
} 

vec3 iridescence_fresnel(float cosTheta, vec3 f0) {
    float x = clamp(1.0 - cosTheta, 0.0, 1.0);
    float x2 = x * x;
    float x5 = x * x2 * x2; 
    return f0 + (vec3(1.0) - f0) * x5;
}

vec3 calcIridescence(float outsideIor, float cosTheta, vec3 base_f0, float iridescenceThickness) {

    float iridescenceIor = mix(outsideIor, material_iridescenceRefractionIndex, smoothstep(0.0, 0.03, iridescenceThickness));
    float sinTheta2Sq = pow(outsideIor / iridescenceIor, 2.0) * (1.0 - pow(cosTheta, 2.0));
    float cosTheta2Sq = 1.0 - sinTheta2Sq;

    if (cosTheta2Sq < 0.0) {
        return vec3(1.0);
    }

    float cosTheta2 = sqrt(cosTheta2Sq);

    float r0 = iridescence_iorToFresnel(iridescenceIor, outsideIor);
    float r12 = iridescence_fresnel(cosTheta, r0);
    float r21 = r12;
    float t121 = 1.0 - r12;

    float phi12 = iridescenceIor < outsideIor ? PI : 0.0;
    float phi21 = PI - phi12;

    vec3 baseIor = iridescence_fresnelToIor(base_f0 + vec3(0.0001));
    vec3 r1 = iridescence_iorToFresnel(baseIor, iridescenceIor);
    vec3 r23 = iridescence_fresnel(cosTheta2, r1);

    vec3 phi23 = vec3(0.0);
    if (baseIor[0] < iridescenceIor) phi23[0] = PI;
    if (baseIor[1] < iridescenceIor) phi23[1] = PI;
    if (baseIor[2] < iridescenceIor) phi23[2] = PI;
    float opd = 2.0 * iridescenceIor * iridescenceThickness * cosTheta2;
    vec3 phi = vec3(phi21) + phi23; 

    vec3 r123Sq = clamp(r12 * r23, 1e-5, 0.9999);
    vec3 r123 = sqrt(r123Sq);
    vec3 rs = pow(t121, 2.0) * r23 / (1.0 - r123Sq);

    vec3 c0 = r12 + rs;
    vec3 i = c0;

    vec3 cm = rs - t121;
    for (int m = 1; m <= 2; m++) {
        cm *= r123;
        vec3 sm = 2.0 * iridescence_sensitivity(float(m) * opd, float(m) * phi);
        i += cm * sm;
    }
    return max(i, vec3(0.0));
}

vec3 getIridescence(float cosTheta, vec3 specularity, float iridescenceThickness) {
    return calcIridescence(1.0, cosTheta, specularity, iridescenceThickness);
}
`,ST=`
#ifdef MAPFLOAT
uniform float material_iridescence;
#endif

void getIridescence() {
    float iridescence = 1.0;

    #ifdef MAPFLOAT
    iridescence *= material_iridescence;
    #endif

    #ifdef MAPTEXTURE
    iridescence *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    dIridescence = iridescence; 
}
`,vT=`
uniform float material_iridescenceThicknessMax;

#ifdef MAPTEXTURE
uniform float material_iridescenceThicknessMin;
#endif

void getIridescenceThickness() {

    #ifdef MAPTEXTURE
    float blend = texture2DBias($SAMPLER, $UV, textureBias).$CH;
    float iridescenceThickness = mix(material_iridescenceThicknessMin, material_iridescenceThicknessMax, blend);
    #else
    float iridescenceThickness = material_iridescenceThicknessMax;
    #endif

    dIridescenceThickness = iridescenceThickness; 
}
`,bT=`
#ifdef MAPFLOAT
uniform float material_refractionIndex;
#endif

void getIor() {
#ifdef MAPFLOAT
    dIor = material_refractionIndex;
#else
    dIor = 1.0 / 1.5;
#endif
}
`,wT=`
float getLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {
    return max(dot(worldNormal, -lightDirNorm), 0.0);
}
`,TT=`
void getLightDirPoint(vec3 lightPosW) {
    dLightDirW = vPositionW - lightPosW;
    dLightDirNormW = normalize(dLightDirW);
    dLightPosW = lightPosW;
}
`,AT=`
void addLightMap(
    vec3 lightmap, 
    vec3 dir, 
    vec3 worldNormal, 
    vec3 viewDir, 
    vec3 reflectionDir, 
    float gloss, 
    vec3 specularity, 
    vec3 vertexNormal, 
    mat3 tbn
#if defined(LIT_IRIDESCENCE)
    vec3 iridescenceFresnel, 
    float iridescenceIntensity
#endif
) {
    dDiffuseLight += lightmap;
}
`,ET=`
void addLightMap(
    vec3 lightmap, 
    vec3 dir, 
    vec3 worldNormal, 
    vec3 viewDir, 
    vec3 reflectionDir, 
    float gloss, 
    vec3 specularity, 
    vec3 vertexNormal, 
    mat3 tbn
#if defined(LIT_IRIDESCENCE)
    vec3 iridescenceFresnel, 
    float iridescenceIntensity
#endif
) {
    if (dot(dir, dir) < 0.0001) {
        dDiffuseLight += lightmap;
    } else {
        float vlight = saturate(dot(dir, -vertexNormal));
        float flight = saturate(dot(dir, -worldNormal));
        float nlight = (flight / max(vlight, 0.01)) * 0.5;

        dDiffuseLight += lightmap * nlight * 2.0;

        vec3 halfDir = normalize(-dir + viewDir);
        vec3 specularLight = lightmap * getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dir, gloss, tbn);

#ifdef LIT_SPECULAR_FRESNEL
        specularLight *= 
            getFresnel(dot(viewDir, halfDir), 
            gloss, 
            specularity
        #if defined(LIT_IRIDESCENCE)
            , iridescenceFresnel,
            iridescenceIntensity
        #endif
            );
#endif

        dSpecularLight += specularLight;
    }
}
`,CT=`
uniform sampler2D texture_lightMap;
uniform sampler2D texture_dirLightMap;

void getLightMap() {
    dLightmap = $DECODE(texture2DBias(texture_lightMap, $UV, textureBias)).$CH;

    vec3 dir = texture2DBias(texture_dirLightMap, $UV, textureBias).xyz * 2.0 - 1.0;
    float dirDot = dot(dir, dir);
    dLightmapDir = (dirDot > 0.001) ? dir / sqrt(dirDot) : vec3(0.0);
}
`,MT=`
void getLightMap() {
    dLightmap = vec3(1.0);

    #ifdef MAPTEXTURE
    dLightmap *= $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;
    #endif

    #ifdef MAPVERTEX
    dLightmap *= saturate(vVertexColor.$VC);
    #endif
}
`,PT=`
// Anisotropic GGX
float calcLightSpecular(float gloss, vec3 worldNormal, vec3 viewDir, vec3 h, vec3 lightDirNorm, mat3 tbn) {
    float PI = 3.141592653589793;
    float roughness = max((1.0 - gloss) * (1.0 - gloss), 0.001);
    float anisotropy = material_anisotropy * roughness;
 
    float at = max((roughness + anisotropy), roughness / 4.0);
    float ab = max((roughness - anisotropy), roughness / 4.0);

    float NoH = dot(worldNormal, h);
    float ToH = dot(tbn[0], h);
    float BoH = dot(tbn[1], h);

    float a2 = at * ab;
    vec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);
    float v2 = dot(v, v);
    float w2 = a2 / v2;
    float D = a2 * w2 * w2 * (1.0 / PI);

    float ToV = dot(tbn[0], viewDir);
    float BoV = dot(tbn[1], viewDir);
    float ToL = dot(tbn[0], -lightDirNorm);
    float BoL = dot(tbn[1], -lightDirNorm);
    float NoV = dot(worldNormal, viewDir);
    float NoL = dot(worldNormal, -lightDirNorm);

    float lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));
    float lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));
    float G = 0.5 / (lambdaV + lambdaL);

    return D * G;
}

float getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {
    return calcLightSpecular(gloss, worldNormal, viewDir, h, lightDirNorm, tbn);
}
`,RT=`
// Energy-conserving (hopefully) Blinn-Phong
float calcLightSpecular(float gloss, vec3 worldNormal, vec3 h) {
    float nh = max( dot( h, worldNormal ), 0.0 );

    float specPow = exp2(gloss * 11.0); // glossiness is linear, power is not; 0 - 2048

    // Hack: On Mac OS X, calling pow with zero for the exponent generates hideous artifacts so bias up a little
    specPow = max(specPow, 0.0001);

    return pow(nh, specPow) * (specPow + 2.0) / 8.0;
}

float getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {
    return calcLightSpecular(gloss, worldNormal, h);
}
`,IT=`

float sheenD(vec3 normal, vec3 h, float roughness) {
    float invR = 1.0 / (roughness * roughness);
    float cos2h = max(dot(normal, h), 0.0);
    cos2h *= cos2h;
    float sin2h = max(1.0 - cos2h, 0.0078125);
    return (2.0 + invR) * pow(sin2h, invR * 0.5) / (2.0 * PI);
}

float sheenV(vec3 normal, vec3 viewDir, vec3 light) {
    float NoV = max(dot(normal, viewDir), 0.000001);
    float NoL = max(dot(normal, light), 0.000001);
    return 1.0 / (4.0 * (NoL + NoV - NoL * NoV));
}

float getLightSpecularSheen(vec3 h, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float sheenGloss) {
    float D = sheenD(worldNormal, h, sheenGloss);
    float V = sheenV(worldNormal, viewDir, -lightDirNorm);
    return D * V;
}
`,DT=`

#ifndef LINEARIZE_DEPTH
#define LINEARIZE_DEPTH

float linearizeDepth(float z, vec4 cameraParams) {
    if (cameraParams.w == 0.0)
        return (cameraParams.z * cameraParams.y) / (cameraParams.y + z * (cameraParams.z - cameraParams.y));
    else
        return cameraParams.z + z * (cameraParams.y - cameraParams.z);
}

#ifndef CAMERAPLANES
#define CAMERAPLANES
uniform vec4 camera_params; // x: 1 / camera_far,      y: camera_far,     z: camera_near,        w: is_ortho
#endif

float linearizeDepth(float z) {
    return linearizeDepth(z, camera_params);
}
#endif
`,LT=`

// Surface albedo absorbance
vec3 litArgs_albedo;

// Transparency
float litArgs_opacity;

// Emission color
vec3 litArgs_emission;

// Normal direction in world space
vec3 litArgs_worldNormal;

// Ambient occlusion amount, range [0..1]
float litArgs_ao;

// Light map color
vec3 litArgs_lightmap;

// Light map direction
vec3 litArgs_lightmapDir;

// Surface metalness factor, range [0..1]
float litArgs_metalness;

// The f0 specularity factor
vec3 litArgs_specularity;

// Specularity intensity factor, range [0..1]
float litArgs_specularityFactor;

// The microfacet glossiness factor, range [0..1]
float litArgs_gloss;

// Glossiness of the sheen layer, range [0..1]
float litArgs_sheen_gloss;

// The color of the f0 specularity factor for the sheen layer
vec3 litArgs_sheen_specularity;

// Transmission factor (refraction), range [0..1]
float litArgs_transmission;

// Uniform thickness of medium, used by transmission, range [0..inf]
float litArgs_thickness;

// Index of refraction
float litArgs_ior;

// Dispersion, range [0..1] typically, but can be higher
float litArgs_dispersion;

// Iridescence effect intensity, range [0..1]
float litArgs_iridescence_intensity;

// Thickness of the iridescent microfilm layer, value is in nanometers, range [0..1000]
float litArgs_iridescence_thickness;

// The normal used for the clearcoat layer
vec3 litArgs_clearcoat_worldNormal;

// Intensity of the clearcoat layer, range [0..1]
float litArgs_clearcoat_specularity;

// Glossiness of clearcoat layer, range [0..1]
float litArgs_clearcoat_gloss;

`,FT=`
// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines
// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt
// code: https://github.com/selfshadow/ltc_code/

mat3 transposeMat3( const in mat3 m ) {
    mat3 tmp;
    tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
    tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
    tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
    return tmp;
}

vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
    const float LUT_SIZE = 64.0;
    const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
    const float LUT_BIAS = 0.5 / LUT_SIZE;
    float dotNV = saturate( dot( N, V ) );
    // texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )
    vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
    uv = uv * LUT_SCALE + LUT_BIAS;
    return uv;
}

float LTC_ClippedSphereFormFactor( const in vec3 f ) {
    // Real-Time Area Lighting: a Journey from Research to Production (p.102)
    // An approximation of the form factor of a horizon-clipped rectangle.
    float l = length( f );
    return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}

vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
    float x = dot( v1, v2 );
    float y = abs( x );
    // rational polynomial approximation to theta / sin( theta ) / 2PI
    float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
    float b = 3.4175940 + ( 4.1616724 + y ) * y;
    float v = a / b;
    float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
    return cross( v1, v2 ) * theta_sintheta;
}

struct Coords {
    vec3 coord0;
    vec3 coord1;
    vec3 coord2;
    vec3 coord3;
};

float LTC_EvaluateRect( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in Coords rectCoords) {
    // bail if point is on back side of plane of light
    // assumes ccw winding order of light vertices
    vec3 v1 = rectCoords.coord1 - rectCoords.coord0;
    vec3 v2 = rectCoords.coord3 - rectCoords.coord0;
    
    vec3 lightNormal = cross( v1, v2 );
    // if( dot( lightNormal, P - rectCoords.coord0 ) < 0.0 ) return 0.0;
    float factor = sign(-dot( lightNormal, P - rectCoords.coord0 ));

    // construct orthonormal basis around N
    vec3 T1, T2;
    T1 = normalize( V - N * dot( V, N ) );
    T2 =  factor * cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system
    // compute transform
    mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
    // transform rect
    vec3 coords[ 4 ];
    coords[ 0 ] = mat * ( rectCoords.coord0 - P );
    coords[ 1 ] = mat * ( rectCoords.coord1 - P );
    coords[ 2 ] = mat * ( rectCoords.coord2 - P );
    coords[ 3 ] = mat * ( rectCoords.coord3 - P );
    // project rect onto sphere
    coords[ 0 ] = normalize( coords[ 0 ] );
    coords[ 1 ] = normalize( coords[ 1 ] );
    coords[ 2 ] = normalize( coords[ 2 ] );
    coords[ 3 ] = normalize( coords[ 3 ] );
    // calculate vector form factor
    vec3 vectorFormFactor = vec3( 0.0 );
    vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
    vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
    vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
    vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
    // adjust for horizon clipping
    float result = LTC_ClippedSphereFormFactor( vectorFormFactor );

    return result;
}

Coords dLTCCoords;
Coords getLTCLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){
    Coords coords;
    coords.coord0 = lightPos + halfWidth - halfHeight;
    coords.coord1 = lightPos - halfWidth - halfHeight;
    coords.coord2 = lightPos - halfWidth + halfHeight;
    coords.coord3 = lightPos + halfWidth + halfHeight;
    return coords;
}

float dSphereRadius;
Coords getSphereLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){
    // used for simple sphere light falloff
    // also, the code only handles a spherical light, it cannot be non-uniformly scaled in world space, and so we enforce it here
    dSphereRadius = max(length(halfWidth), length(halfHeight));

    // Billboard the 2d light quad to reflection vector, as it's used for specular. This allows us to use disk math for the sphere.
    vec3 f = reflect(normalize(lightPos - view_position), vNormalW);
    vec3 w = normalize(cross(f, halfHeight));
    vec3 h = normalize(cross(f, w));

    return getLTCLightCoords(lightPos, w * dSphereRadius, h * dSphereRadius);
}

// used for LTC LUT texture lookup
vec2 dLTCUV;
#ifdef LIT_CLEARCOAT
vec2 ccLTCUV;
#endif
vec2 getLTCLightUV(float gloss, vec3 worldNormal, vec3 viewDir)
{
    float roughness = max((1.0 - gloss) * (1.0 - gloss), 0.001);
    return LTC_Uv( worldNormal, viewDir, roughness );
}

//used for energy conservation and to modulate specular
vec3 dLTCSpecFres;
#ifdef LIT_CLEARCOAT
vec3 ccLTCSpecFres;
#endif
vec3 getLTCLightSpecFres(vec2 uv, vec3 specularity)
{
    vec4 t2 = texture2DLod(areaLightsLutTex2, uv, 0.0);
    return specularity * t2.x + ( vec3( 1.0 ) - specularity) * t2.y;
}

void calcLTCLightValues(float gloss, vec3 worldNormal, vec3 viewDir, vec3 specularity, float clearcoatGloss, vec3 clearcoatWorldNormal, float clearcoatSpecularity)
{
    dLTCUV = getLTCLightUV(gloss, worldNormal, viewDir);
    dLTCSpecFres = getLTCLightSpecFres(dLTCUV, specularity); 

#ifdef LIT_CLEARCOAT
    ccLTCUV = getLTCLightUV(clearcoatGloss, clearcoatWorldNormal, viewDir);
    ccLTCSpecFres = getLTCLightSpecFres(ccLTCUV, vec3(clearcoatSpecularity));
#endif
}

void calcRectLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)
{
    dLTCCoords = getLTCLightCoords(lightPos, halfWidth, halfHeight);
}
void calcDiskLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)
{
    calcRectLightValues(lightPos, halfWidth, halfHeight);
}
void calcSphereLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight)
{
    dLTCCoords = getSphereLightCoords(lightPos, halfWidth, halfHeight);
}

// An extended version of the implementation from
// "How to solve a cubic equation, revisited"
// http://momentsingraphics.de/?p=105
vec3 SolveCubic(vec4 Coefficient)
{
    float pi = 3.14159;
    // Normalize the polynomial
    Coefficient.xyz /= Coefficient.w;
    // Divide middle coefficients by three
    Coefficient.yz /= 3.0;

    float A = Coefficient.w;
    float B = Coefficient.z;
    float C = Coefficient.y;
    float D = Coefficient.x;

    // Compute the Hessian and the discriminant
    vec3 Delta = vec3(
        -Coefficient.z * Coefficient.z + Coefficient.y,
        -Coefficient.y * Coefficient.z + Coefficient.x,
        dot(vec2(Coefficient.z, -Coefficient.y), Coefficient.xy)
    );

    float Discriminant = dot(vec2(4.0 * Delta.x, -Delta.y), Delta.zy);

    vec3 RootsA, RootsD;

    vec2 xlc, xsc;

    // Algorithm A
    {
        float A_a = 1.0;
        float C_a = Delta.x;
        float D_a = -2.0 * B * Delta.x + Delta.y;

        // Take the cubic root of a normalized complex number
        float Theta = atan(sqrt(Discriminant), -D_a) / 3.0;

        float x_1a = 2.0 * sqrt(-C_a) * cos(Theta);
        float x_3a = 2.0 * sqrt(-C_a) * cos(Theta + (2.0 / 3.0) * pi);

        float xl;
        if ((x_1a + x_3a) > 2.0 * B)
            xl = x_1a;
        else
            xl = x_3a;

        xlc = vec2(xl - B, A);
    }

    // Algorithm D
    {
        float A_d = D;
        float C_d = Delta.z;
        float D_d = -D * Delta.y + 2.0 * C * Delta.z;

        // Take the cubic root of a normalized complex number
        float Theta = atan(D * sqrt(Discriminant), -D_d) / 3.0;

        float x_1d = 2.0 * sqrt(-C_d) * cos(Theta);
        float x_3d = 2.0 * sqrt(-C_d) * cos(Theta + (2.0 / 3.0) * pi);

        float xs;
        if (x_1d + x_3d < 2.0 * C)
            xs = x_1d;
        else
            xs = x_3d;

        xsc = vec2(-D, xs + C);
    }

    float E =  xlc.y * xsc.y;
    float F = -xlc.x * xsc.y - xlc.y * xsc.x;
    float G =  xlc.x * xsc.x;

    vec2 xmc = vec2(C * F - B * G, -B * F + C * E);

    vec3 Root = vec3(xsc.x / xsc.y, xmc.x / xmc.y, xlc.x / xlc.y);

    if (Root.x < Root.y && Root.x < Root.z)
        Root.xyz = Root.yxz;
    else if (Root.z < Root.x && Root.z < Root.y)
        Root.xyz = Root.xzy;

    return Root;
}

float LTC_EvaluateDisk(vec3 N, vec3 V, vec3 P, mat3 Minv, Coords points)
{
    // construct orthonormal basis around N
    vec3 T1, T2;
    T1 = normalize(V - N * dot(V, N));
    T2 = cross(N, T1);

    // rotate area light in (T1, T2, N) basis
    //mat3 R = transpose(mat3(T1, T2, N));
    mat3 R = transposeMat3( mat3( T1, T2, N ) );
    // polygon (allocate 5 vertices for clipping)
    vec3 L_[ 3 ];
    L_[ 0 ] = R * ( points.coord0 - P );
    L_[ 1 ] = R * ( points.coord1 - P );
    L_[ 2 ] = R * ( points.coord2 - P );

    vec3 Lo_i = vec3(0);

    // init ellipse
    vec3 C  = 0.5 * (L_[0] + L_[2]);
    vec3 V1 = 0.5 * (L_[1] - L_[2]);
    vec3 V2 = 0.5 * (L_[1] - L_[0]);

    C  = Minv * C;
    V1 = Minv * V1;
    V2 = Minv * V2;

    //if(dot(cross(V1, V2), C) > 0.0)
    //    return 0.0;

    // compute eigenvectors of ellipse
    float a, b;
    float d11 = dot(V1, V1);
    float d22 = dot(V2, V2);
    float d12 = dot(V1, V2);
    if (abs(d12) / sqrt(d11 * d22) > 0.0001)
    {
        float tr = d11 + d22;
        float det = -d12 * d12 + d11 * d22;

        // use sqrt matrix to solve for eigenvalues
        det = sqrt(det);
        float u = 0.5 * sqrt(tr - 2.0 * det);
        float v = 0.5 * sqrt(tr + 2.0 * det);
        float e_max = (u + v) * (u + v);
        float e_min = (u - v) * (u - v);

        vec3 V1_, V2_;

        if (d11 > d22)
        {
            V1_ = d12 * V1 + (e_max - d11) * V2;
            V2_ = d12 * V1 + (e_min - d11) * V2;
        }
        else
        {
            V1_ = d12*V2 + (e_max - d22)*V1;
            V2_ = d12*V2 + (e_min - d22)*V1;
        }

        a = 1.0 / e_max;
        b = 1.0 / e_min;
        V1 = normalize(V1_);
        V2 = normalize(V2_);
    }
    else
    {
        a = 1.0 / dot(V1, V1);
        b = 1.0 / dot(V2, V2);
        V1 *= sqrt(a);
        V2 *= sqrt(b);
    }

    vec3 V3 = normalize(cross(V1, V2));
    if (dot(C, V3) < 0.0)
        V3 *= -1.0;

    float L  = dot(V3, C);
    float x0 = dot(V1, C) / L;
    float y0 = dot(V2, C) / L;

    float E1 = inversesqrt(a);
    float E2 = inversesqrt(b);

    a *= L * L;
    b *= L * L;

    float c0 = a * b;
    float c1 = a * b * (1.0 + x0 * x0 + y0 * y0) - a - b;
    float c2 = 1.0 - a * (1.0 + x0 * x0) - b * (1.0 + y0 * y0);
    float c3 = 1.0;

    vec3 roots = SolveCubic(vec4(c0, c1, c2, c3));
    float e1 = roots.x;
    float e2 = roots.y;
    float e3 = roots.z;

    vec3 avgDir = vec3(a * x0 / (a - e2), b * y0 / (b - e2), 1.0);

    mat3 rotate = mat3(V1, V2, V3);

    avgDir = rotate * avgDir;
    avgDir = normalize(avgDir);

    float L1 = sqrt(-e2 / e3);
    float L2 = sqrt(-e2 / e1);

    float formFactor = max(0.0, L1 * L2 * inversesqrt((1.0 + L1 * L1) * (1.0 + L2 * L2)));
    
    const float LUT_SIZE = 64.0;
    const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
    const float LUT_BIAS = 0.5 / LUT_SIZE;

    // use tabulated horizon-clipped sphere
    vec2 uv = vec2(avgDir.z * 0.5 + 0.5, formFactor);
    uv = uv*LUT_SCALE + LUT_BIAS;

    float scale = texture2DLod(areaLightsLutTex2, uv, 0.0).w;

    return formFactor*scale;
}

float getRectLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {
    return LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mat3( 1.0 ), dLTCCoords );
}

float getDiskLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {
    return LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mat3( 1.0 ), dLTCCoords );
}

float getSphereLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {
    // NB: this could be improved further with distance based wrap lighting
    float falloff = dSphereRadius / (dot(lightDir, lightDir) + dSphereRadius);
    return getLightDiffuse(worldNormal, viewDir, lightDir, lightDirNorm) * falloff;
}

mat3 getLTCLightInvMat(vec2 uv)
{
    vec4 t1 = texture2DLod(areaLightsLutTex1, uv, 0.0);

    return mat3(
        vec3( t1.x, 0, t1.y ),
        vec3(    0, 1,    0 ),
        vec3( t1.z, 0, t1.w )
    );
}

float calcRectLightSpecular(vec3 worldNormal, vec3 viewDir, vec2 uv) {
    mat3 mInv = getLTCLightInvMat(uv);
    return LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );
}

float getRectLightSpecular(vec3 worldNormal, vec3 viewDir) {
    return calcRectLightSpecular(worldNormal, viewDir, dLTCUV);
}

float calcDiskLightSpecular(vec3 worldNormal, vec3 viewDir, vec2 uv) {
    mat3 mInv = getLTCLightInvMat(uv);
    return LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );
}

float getDiskLightSpecular(vec3 worldNormal, vec3 viewDir) {
    return calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);
}

float getSphereLightSpecular(vec3 worldNormal, vec3 viewDir) {
    return calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);
}
`,kT=`
#ifdef MAPFLOAT
uniform float material_metalness;
#endif

void getMetalness() {
    float metalness = 1.0;

    #ifdef MAPFLOAT
    metalness *= material_metalness;
    #endif

    #ifdef MAPTEXTURE
    metalness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    metalness *= saturate(vVertexColor.$VC);
    #endif

    dMetalness = metalness;
}
`,OT=`
uniform sampler2D texture_msdfMap;

float median(float r, float g, float b) {
    return max(min(r, g), min(max(r, g), b));
}

float map (float min, float max, float v) {
    return (v - min) / (max - min);
}

uniform float font_sdfIntensity; // intensity is used to boost the value read from the SDF, 0 is no boost, 1.0 is max boost
uniform float font_pxrange;      // the number of pixels between inside and outside the font in SDF
uniform float font_textureWidth; // the width of the texture atlas

#ifdef UNIFORM_TEXT_PARAMETERS
uniform vec4 outline_color;
uniform float outline_thickness;
uniform vec4 shadow_color;
uniform vec2 shadow_offset;
#else
varying vec4 outline_color;
varying float outline_thickness;
varying vec4 shadow_color;
varying vec2 shadow_offset;
#endif

vec4 applyMsdf(vec4 color) {

    // Convert to linear space before processing
    // TODO: ideally this would receive the color in linear space, but that would require larger changes
    // on the engine side, with the way premultiplied alpha is handled as well.
    color.rgb = gammaCorrectInput(color.rgb);

    // sample the field
    vec3 tsample = texture2D(texture_msdfMap, vUv0).rgb;
    vec2 uvShdw = vUv0 - shadow_offset;
    vec3 ssample = texture2D(texture_msdfMap, uvShdw).rgb;
    // get the signed distance value
    float sigDist = median(tsample.r, tsample.g, tsample.b);
    float sigDistShdw = median(ssample.r, ssample.g, ssample.b);

    // smoothing limit - smaller value makes for sharper but more aliased text, especially on angles
    // too large value (0.5) creates a dark glow around the letters
    float smoothingMax = 0.2;

    // smoothing depends on size of texture on screen
    vec2 w = fwidth(vUv0);
    float smoothing = clamp(w.x * font_textureWidth / font_pxrange, 0.0, smoothingMax);

    float mapMin = 0.05;
    float mapMax = clamp(1.0 - font_sdfIntensity, mapMin, 1.0);

    // remap to a smaller range (used on smaller font sizes)
    float sigDistInner = map(mapMin, mapMax, sigDist);
    float sigDistOutline = map(mapMin, mapMax, sigDist + outline_thickness);
    sigDistShdw = map(mapMin, mapMax, sigDistShdw + outline_thickness);

    float center = 0.5;
    // calculate smoothing and use to generate opacity
    float inside = smoothstep(center-smoothing, center+smoothing, sigDistInner);
    float outline = smoothstep(center-smoothing, center+smoothing, sigDistOutline);
    float shadow = smoothstep(center-smoothing, center+smoothing, sigDistShdw);

    vec4 tcolor = (outline > inside) ? outline * vec4(outline_color.a * outline_color.rgb, outline_color.a) : vec4(0.0);
    tcolor = mix(tcolor, color, inside);

    vec4 scolor = (shadow > outline) ? shadow * vec4(shadow_color.a * shadow_color.rgb, shadow_color.a) : tcolor;
    tcolor = mix(scolor, tcolor, outline);

    // Convert back to gamma space before returning
    tcolor.rgb = gammaCorrectOutput(tcolor.rgb);
    
    return tcolor;
}
`,BT=`

vec3 getSpecularModulate(in vec3 specularity, in vec3 albedo, in float metalness, in float f0) {
    vec3 dielectricF0 = f0 * specularity;
    return mix(dielectricF0, albedo, metalness);
}

vec3 getAlbedoModulate(in vec3 albedo, in float metalness) {
    return albedo * (1.0 - metalness);
}
`,NT=`
attribute vec3 vertex_outlineParameters;
attribute vec3 vertex_shadowParameters;

varying vec4 outline_color;
varying float outline_thickness;
varying vec4 shadow_color;
varying vec2 shadow_offset;

void unpackMsdfParams() {
    vec3 little = mod(vertex_outlineParameters, 256.);
    vec3 big = (vertex_outlineParameters - little) / 256.;

    outline_color.rb = little.xy / 255.;
    outline_color.ga = big.xy / 255.;

    // _outlineThicknessScale === 0.2
    outline_thickness = little.z / 255. * 0.2;

    little = mod(vertex_shadowParameters, 256.);
    big = (vertex_shadowParameters - little) / 256.;

    shadow_color.rb = little.xy / 255.;
    shadow_color.ga = big.xy / 255.;

    // vec2(little.z, big.z) / 127. - 1. remaps shadow offset from [0, 254] to [-1, 1]
    // _shadowOffsetScale === 0.005
    shadow_offset = (vec2(little.z, big.z) / 127. - 1.) * 0.005;
}
`,zT=`
mat3 dNormalMatrix;

vec3 getNormal() {
    dNormalMatrix = getNormalMatrix(dModelMatrix);
    vec3 localNormal = getLocalNormal(vertex_normal);
    return normalize(dNormalMatrix * localNormal);
}
`,UT=`

attribute vec3 vertex_normal;

#ifdef MORPHING_NORMAL
    #ifdef MORPHING_INT
        uniform highp usampler2D morphNormalTex;
    #else
        uniform highp sampler2D morphNormalTex;
    #endif
#endif

vec3 getLocalNormal(vec3 vertexNormal) {

    vec3 localNormal = vertex_normal;

    #ifdef MORPHING_NORMAL

        ivec2 morphUV = getTextureMorphCoords();

        #ifdef MORPHING_INT
            vec3 morphNormal = vec3(texelFetch(morphNormalTex, ivec2(morphUV), 0).xyz) / 65535.0 * 2.0 - 1.0;
        #else
            vec3 morphNormal = texelFetch(morphNormalTex, ivec2(morphUV), 0).xyz;
        #endif

        localNormal += morphNormal;

    #endif

    return localNormal;
}

#ifdef SKIN
    mat3 getNormalMatrix(mat4 modelMatrix) {
        return mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);
    }
#elif defined(INSTANCING)
    mat3 getNormalMatrix(mat4 modelMatrix) {
        return mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);
    }
#else
    mat3 getNormalMatrix(mat4 modelMatrix) {
        return matrix_normal;
    }
#endif
`,VT=`
#ifdef MAPTEXTURE
uniform float material_normalDetailMapBumpiness;

vec3 blendNormals(vec3 n1, vec3 n2) {
    // https://blog.selfshadow.com/publications/blending-in-detail/#detail-oriented
    n1 += vec3(0, 0, 1);
    n2 *= vec3(-1, -1, 1);
    return n1 * dot(n1, n2) / n1.z - n2;
}
#endif

vec3 addNormalDetail(vec3 normalMap) {
#ifdef MAPTEXTURE
    vec3 normalDetailMap = unpackNormal(texture2DBias($SAMPLER, $UV, textureBias));
    normalDetailMap = mix(vec3(0.0, 0.0, 1.0), normalDetailMap, material_normalDetailMapBumpiness);
    return blendNormals(normalMap, normalDetailMap);
#else
    return normalMap;
#endif
}
`,GT=`
#ifdef MAPTEXTURE
uniform float material_bumpiness;
#endif

void getNormal() {
#ifdef MAPTEXTURE
    vec3 normalMap = unpackNormal(texture2DBias($SAMPLER, $UV, textureBias));
    normalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_bumpiness);
    dNormalW = normalize(dTBN * addNormalDetail(normalMap));
#else
    dNormalW = dVertexNormalW;
#endif
}
`,HT=`
vec3 unpackNormal(vec4 nmap) {
    vec3 normal;
    normal.xy = nmap.wy * 2.0 - 1.0;
    normal.z = sqrt(1.0 - saturate(dot(normal.xy, normal.xy)));
    return normal;
}
`,WT=`
vec3 unpackNormal(vec4 nmap) {
    return nmap.xyz * 2.0 - 1.0;
}
`,$T=`
uniform float material_opacity;

void getOpacity() {
    dAlpha = material_opacity;

    #ifdef MAPTEXTURE
    dAlpha *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    dAlpha *= clamp(vVertexColor.$VC, 0.0, 1.0);
    #endif
}
`,qT=`

uniform vec4 blueNoiseJitter;

#ifdef DITHER_BLUENOISE
    uniform sampler2D blueNoiseTex32;
#endif

void opacityDither(float alpha, float id) {
    #ifdef DITHER_BAYER8

        float noise = bayer8(floor(mod(gl_FragCoord.xy + blueNoiseJitter.xy + id, 8.0))) / 64.0;

    #else

        #ifdef DITHER_BLUENOISE
            vec2 uv = fract(gl_FragCoord.xy / 32.0 + blueNoiseJitter.xy + id);
            float noise = texture2DLod(blueNoiseTex32, uv, 0.0).y;
        #endif

        #ifdef DITHER_IGNNOISE
            // based on https://www.iryoku.com/next-generation-post-processing-in-call-of-duty-advanced-warfare/
            vec3 magic = vec3(0.06711056, 0.00583715, 52.9829189);
            float noise = fract(magic.z * fract(dot(gl_FragCoord.xy + blueNoiseJitter.xy + id, magic.xy)));
        #endif

    #endif

    // convert the noise to linear space, as that is specified in sRGB space (stores perceptual values)
    noise = pow(noise, 2.2);

    if (alpha < noise)
        discard;
}
`,XT=`
`,jT=`
gl_FragColor.a = litArgs_opacity;
`,YT=`
    gl_FragColor.a = 1.0;
`,KT=`
gl_FragColor.rgb *= litArgs_opacity;
gl_FragColor.a = litArgs_opacity;
`,ZT=`
varying vec2 vUv0;

uniform sampler2D source;

void main(void) {
    gl_FragColor = texture2D(source, vUv0);
}
`,QT=`

uniform vec3 material_sheen;

void getSheen() {
    vec3 sheenColor = material_sheen;

    #ifdef MAPTEXTURE
    sheenColor *= $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;
    #endif

    #ifdef MAPVERTEX
    sheenColor *= saturate(vVertexColor.$VC);
    #endif

    sSpecularity = sheenColor;
}
`,JT=`
uniform float material_sheenGloss;

void getSheenGlossiness() {
    float sheenGlossiness = material_sheenGloss;

    #ifdef MAPTEXTURE
    sheenGlossiness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    sheenGlossiness *= saturate(vVertexColor.$VC);
    #endif

    #ifdef MAPINVERT
    sheenGlossiness = 1.0 - sheenGlossiness;
    #endif

    sheenGlossiness += 0.0000001;
    sGlossiness = sheenGlossiness;
}
`,eA=`
uniform float material_heightMapFactor;

void getParallax() {
    float parallaxScale = material_heightMapFactor;

    float height = texture2DBias($SAMPLER, $UV, textureBias).$CH;
    height = height * parallaxScale - parallaxScale*0.5;
    vec3 viewDirT = dViewDirW * dTBN;

    viewDirT.z += 0.42;
    dUvOffset = height * (viewDirT.xy / viewDirT.z);
}
`,tA=`
varying vec4 texCoordsAlphaLife;

uniform sampler2D colorMap;
uniform sampler2D colorParam;
uniform float graphSampleSize;
uniform float graphNumSamples;

#ifndef CAMERAPLANES
#define CAMERAPLANES
uniform vec4 camera_params;
#endif

uniform float softening;
uniform float colorMult;

float saturate(float x) {
    return clamp(x, 0.0, 1.0);
}

void main(void) {
    vec4 tex  = texture2D(colorMap, vec2(texCoordsAlphaLife.x, 1.0 - texCoordsAlphaLife.y));
    vec4 ramp = texture2D(colorParam, vec2(texCoordsAlphaLife.w, 0.0));
    ramp.rgb *= colorMult;

    ramp.a += texCoordsAlphaLife.z;

    vec3 rgb = tex.rgb * ramp.rgb;
    float a  = tex.a * ramp.a;
`,sA=`
vec3 unpack3NFloats(float src) {
    float r = fract(src);
    float g = fract(src * 256.0);
    float b = fract(src * 65536.0);
    return vec3(r, g, b);
}

float saturate(float x) {
    return clamp(x, 0.0, 1.0);
}

vec4 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc) {
    return mix( texture2D(tex,tc), texture2D(tex,tc + graphSampleSize), fract(tc.x*graphNumSamples) );
}

vec4 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc, out vec3 w) {
    vec4 a = texture2D(tex,tc);
    vec4 b = texture2D(tex,tc + graphSampleSize);
    float c = fract(tc.x*graphNumSamples);

    vec3 unpackedA = unpack3NFloats(a.w);
    vec3 unpackedB = unpack3NFloats(b.w);
    w = mix(unpackedA, unpackedB, c);

    return mix(a, b, c);
}

vec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix) {
    float c = cos(pRotation);
    float s = sin(pRotation);

    mat2 m = mat2(c, -s, s, c);
    rotMatrix = m;

    return m * quadXY;
}

vec3 billboard(vec3 InstanceCoords, vec2 quadXY) {
    #ifdef SCREEN_SPACE
        vec3 pos = vec3(-1, 0, 0) * quadXY.x + vec3(0, -1, 0) * quadXY.y;
    #else
        vec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;
    #endif

    return pos;
}

vec3 customFace(vec3 InstanceCoords, vec2 quadXY) {
    vec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;
    return pos;
}

vec2 safeNormalize(vec2 v) {
    float l = length(v);
    return (l > 1e-06) ? v / l : v;
}

void main(void) {
    vec3 meshLocalPos = particle_vertexData.xyz;
    float id = floor(particle_vertexData.w);

    float rndFactor = fract(sin(id + 1.0 + seed));
    vec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));

    float uv = id / numParticlesPot;
    readInput(uv);

#ifdef LOCAL_SPACE
    inVel = mat3(matrix_model) * inVel;
#endif
    vec2 velocityV = safeNormalize((mat3(matrix_view) * inVel).xy); // should be removed by compiler if align/stretch is not used

    float particleLifetime = lifetime;

    if (inLife <= 0.0 || inLife > particleLifetime || !inShow) meshLocalPos = vec3(0.0);
    vec2 quadXY = meshLocalPos.xy;
    float nlife = clamp(inLife / particleLifetime, 0.0, 1.0);

    vec3 paramDiv;
    vec4 params = tex1Dlod_lerp(TEXTURE_PASS(internalTex2), vec2(nlife, 0), paramDiv);
    float scale = params.y;
    float scaleDiv = paramDiv.x;
    float alphaDiv = paramDiv.z;

    scale += (scaleDiv * 2.0 - 1.0) * scaleDivMult * fract(rndFactor*10000.0);

#ifndef USE_MESH
    texCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);
#else
    texCoordsAlphaLife = vec4(particle_uv, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);
#endif

    vec3 particlePos = inPos;
    vec3 particlePosMoved = vec3(0.0);

    mat2 rotMatrix;
`,iA=`
    float animFrame = min(floor(texCoordsAlphaLife.w * animTexParams.y) + animTexParams.x, animTexParams.z);
`,rA=`
    float animFrame = floor(mod(texCoordsAlphaLife.w * animTexParams.y + animTexParams.x, animTexParams.z + 1.0));
`,nA=`
    float animationIndex;

    if (animTexIndexParams.y == 1.0) {
        animationIndex = floor((animTexParams.w + 1.0) * rndFactor3.z) * (animTexParams.z + 1.0);
    } else {
        animationIndex = animTexIndexParams.x * (animTexParams.z + 1.0);
    }

    float atlasX = (animationIndex + animFrame) * animTexTilesParams.x;
    float atlasY = 1.0 - floor(atlasX + 1.0) * animTexTilesParams.y;
    atlasX = fract(atlasX);

    texCoordsAlphaLife.xy *= animTexTilesParams.xy;
    texCoordsAlphaLife.xy += vec2(atlasX, atlasY);
`,aA=`
void readInput(float uv) {
    vec4 tex = texture2D(particleTexIN, vec2(uv, 0.25));
    vec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.75));

    inPos = tex.xyz;
    inVel = tex2.xyz;
    inAngle = (tex.w < 0.0? -tex.w : tex.w) - 1000.0;
    inShow = tex.w >= 0.0;
    inLife = tex2.w;
}
`,oA=`
//RG=X, BA=Y
//RG=Z, BA=A
//RGB=V, A=visMode
//RGBA=life

#define PI2 6.283185307179586

uniform vec3 inBoundsSize;
uniform vec3 inBoundsCenter;

uniform float maxVel;

float decodeFloatRG(vec2 rg) {
    return rg.y*(1.0/255.0) + rg.x;
}

float decodeFloatRGBA( vec4 rgba ) {
  return dot( rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/160581375.0) );
}

void readInput(float uv) {
    vec4 tex0 = texture2D(particleTexIN, vec2(uv, 0.125));
    vec4 tex1 = texture2D(particleTexIN, vec2(uv, 0.375));
    vec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.625));
    vec4 tex3 = texture2D(particleTexIN, vec2(uv, 0.875));

    inPos = vec3(decodeFloatRG(tex0.rg), decodeFloatRG(tex0.ba), decodeFloatRG(tex1.rg));
    inPos = (inPos - vec3(0.5)) * inBoundsSize + inBoundsCenter;

    inVel = tex2.xyz;
    inVel = (inVel - vec3(0.5)) * maxVel;

    inAngle = decodeFloatRG(tex1.ba) * PI2;
    inShow = tex2.a > 0.5;

    inLife = decodeFloatRGBA(tex3);
    float maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));
    float maxPosLife = lifetime+1.0;
    inLife = inLife * (maxNegLife + maxPosLife) - maxNegLife;
}
`,lA=`
void writeOutput() {
    if (gl_FragCoord.y<1.0) {
        gl_FragColor = vec4(outPos, (outAngle + 1000.0) * visMode);
    } else {
        gl_FragColor = vec4(outVel, outLife);
    }
}
`,hA=`
uniform vec3 outBoundsMul;
uniform vec3 outBoundsAdd;

vec2 encodeFloatRG( float v ) {
    vec2 enc = vec2(1.0, 255.0) * v;
    enc = fract(enc);
    enc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);
    return enc;
}

vec4 encodeFloatRGBA( float v ) {
    vec4 enc = vec4(1.0, 255.0, 65025.0, 160581375.0) * v;
    enc = fract(enc);
    enc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);
    return enc;
}

void writeOutput() {
    outPos = outPos * outBoundsMul + outBoundsAdd;
    outAngle = fract(outAngle / PI2);

    outVel = (outVel / maxVel) + vec3(0.5); // TODO: mul

    float maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));
    float maxPosLife = lifetime+1.0;
    outLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);

    if (gl_FragCoord.y < 1.0) {
        gl_FragColor = vec4(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));
    } else if (gl_FragCoord.y < 2.0) {
        gl_FragColor = vec4(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));
    } else if (gl_FragCoord.y < 3.0) {
        gl_FragColor = vec4(outVel, visMode*0.5+0.5);
    } else {
        gl_FragColor = encodeFloatRGBA(outLife);
    }
}
`,cA=`
uniform mat3 spawnBounds;
uniform vec3 spawnPosInnerRatio;

vec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {
    vec3 pos = inBounds - vec3(0.5);

    vec3 posAbs = abs(pos);
    vec3 maxPos = vec3(max(posAbs.x, max(posAbs.y, posAbs.z)));

    vec3 edge = maxPos + (vec3(0.5) - maxPos) * spawnPosInnerRatio;

    pos.x = edge.x * (maxPos.x == posAbs.x ? sign(pos.x) : 2.0 * pos.x);
    pos.y = edge.y * (maxPos.y == posAbs.y ? sign(pos.y) : 2.0 * pos.y);
    pos.z = edge.z * (maxPos.z == posAbs.z ? sign(pos.z) : 2.0 * pos.z);

#ifndef LOCAL_SPACE
    return emitterPos + spawnBounds * pos;
#else
    return spawnBounds * pos;
#endif
}

void addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {
    localVelocity -= vec3(0, 0, initialVelocity);
}
`,dA=`
    writeOutput();
}
`,uA=`
varying vec2 vUv0;

uniform highp sampler2D particleTexIN;
uniform highp sampler2D internalTex0;
uniform highp sampler2D internalTex1;
uniform highp sampler2D internalTex2;
uniform highp sampler2D internalTex3;

uniform mat3 emitterMatrix;
uniform mat3 emitterMatrixInv;
uniform vec3 emitterScale;

uniform vec3 emitterPos;
uniform vec3 frameRandom;
uniform vec3 localVelocityDivMult;
uniform vec3 velocityDivMult;
uniform float delta;
uniform float rate;
uniform float rateDiv;
uniform float lifetime;
uniform float numParticles;
uniform float rotSpeedDivMult;
uniform float radialSpeedDivMult;
uniform float seed;
uniform float startAngle;
uniform float startAngle2;
uniform float initialVelocity;

uniform float graphSampleSize;
uniform float graphNumSamples;

vec3 inPos;
vec3 inVel;
float inAngle;
bool inShow;
float inLife;
float visMode;

vec3 outPos;
vec3 outVel;
float outAngle;
bool outShow;
float outLife;
`,fA=`
    if (outLife >= lifetime) {
        outLife -= max(lifetime, (numParticles - 1.0) * particleRate);
        visMode = -1.0;
    }
`,pA=`
    visMode = outLife < 0.0? -1.0: visMode;
`,mA=`
    if (outLife >= lifetime) {
        outLife -= max(lifetime, (numParticles - 1.0) * particleRate);
        visMode = 1.0;
    }
    visMode = outLife < 0.0? 1.0: visMode;
`,_A=`
uniform float spawnBoundsSphere;
uniform float spawnBoundsSphereInnerRatio;

vec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {
    float rnd4 = fract(rndFactor * 1000.0);
    vec3 norm = normalize(inBounds.xyz - vec3(0.5));
    float r = rnd4 * (1.0 - spawnBoundsSphereInnerRatio) + spawnBoundsSphereInnerRatio;
#ifndef LOCAL_SPACE
    return emitterPos + norm * r * spawnBoundsSphere;
#else
    return norm * r * spawnBoundsSphere;
#endif
}

void addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {
    localVelocity += normalize(inBounds - vec3(0.5)) * initialVelocity;
}
`,gA=`
float saturate(float x) {
    return clamp(x, 0.0, 1.0);
}

vec3 unpack3NFloats(float src) {
    float r = fract(src);
    float g = fract(src * 256.0);
    float b = fract(src * 65536.0);
    return vec3(r, g, b);
}

vec3 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc, out vec3 w) {
    vec4 a = texture2D(tex, tc);
    vec4 b = texture2D(tex, tc + graphSampleSize);
    float c = fract(tc.x * graphNumSamples);

    vec3 unpackedA = unpack3NFloats(a.w);
    vec3 unpackedB = unpack3NFloats(b.w);
    w = mix(unpackedA, unpackedB, c);

    return mix(a.xyz, b.xyz, c);
}

#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)
vec4 hash41(float p) {
    vec4 p4 = fract(vec4(p) * HASHSCALE4);
    p4 += dot(p4, p4.wzxy+19.19);
    return fract(vec4((p4.x + p4.y)*p4.z, (p4.x + p4.z)*p4.y, (p4.y + p4.z)*p4.w, (p4.z + p4.w)*p4.x));
}

void main(void) {
    if (gl_FragCoord.x > numParticles) discard;

    readInput(vUv0.x);
    visMode = inShow? 1.0 : -1.0;

    vec4 rndFactor = hash41(gl_FragCoord.x + seed);

    float particleRate = rate + rateDiv * rndFactor.x;

    outLife = inLife + delta;
    float nlife = clamp(outLife / lifetime, 0.0, 1.0);

    vec3 localVelocityDiv;
    vec3 velocityDiv;
    vec3 paramDiv;
    vec3 localVelocity = tex1Dlod_lerp(TEXTURE_PASS(internalTex0), vec2(nlife, 0), localVelocityDiv);
    vec3 velocity =      tex1Dlod_lerp(TEXTURE_PASS(internalTex1), vec2(nlife, 0), velocityDiv);
    vec3 params =        tex1Dlod_lerp(TEXTURE_PASS(internalTex2), vec2(nlife, 0), paramDiv);
    float rotSpeed = params.x;
    float rotSpeedDiv = paramDiv.y;

    vec3 radialParams = tex1Dlod_lerp(TEXTURE_PASS(internalTex3), vec2(nlife, 0), paramDiv);
    float radialSpeed = radialParams.x;
    float radialSpeedDiv = radialParams.y;

    bool respawn = inLife <= 0.0 || outLife >= lifetime;
    inPos = respawn ? calcSpawnPosition(rndFactor.xyz, rndFactor.x) : inPos;
    inAngle = respawn ? mix(startAngle, startAngle2, rndFactor.x) : inAngle;

#ifndef LOCAL_SPACE
    vec3 radialVel = inPos - emitterPos;
#else
    vec3 radialVel = inPos;
#endif
    radialVel = (dot(radialVel, radialVel) > 1.0E-8) ? radialSpeed * normalize(radialVel) : vec3(0.0);
    radialVel += (radialSpeedDiv * vec3(2.0) - vec3(1.0)) * radialSpeedDivMult * rndFactor.xyz;

    localVelocity +=    (localVelocityDiv * vec3(2.0) - vec3(1.0)) * localVelocityDivMult * rndFactor.xyz;
    velocity +=         (velocityDiv * vec3(2.0) - vec3(1.0)) * velocityDivMult * rndFactor.xyz;
    rotSpeed +=         (rotSpeedDiv * 2.0 - 1.0) * rotSpeedDivMult * rndFactor.y;

    addInitialVelocity(localVelocity, rndFactor.xyz);

#ifndef LOCAL_SPACE
    outVel = emitterMatrix * localVelocity + (radialVel + velocity) * emitterScale;
#else
    outVel = (localVelocity + radialVel) / emitterScale + emitterMatrixInv * velocity;
#endif

    outPos = inPos + outVel * delta;
    outAngle = inAngle + rotSpeed * delta;
`,yA=`
    quadXY = rotate(quadXY, inAngle, rotMatrix);
    vec3 localPos = billboard(particlePos, quadXY);
`,xA=`
    dBlendModeFogFactor = 0.0;
    rgb *= saturate(gammaCorrectInput(max(a, 0.0)));
    if ((rgb.r + rgb.g + rgb.b) < 0.000001) discard;
`,SA=`
    rgb = mix(vec3(1.0), rgb, vec3(a));
    if (rgb.r + rgb.g + rgb.b > 2.99) discard;
`,vA=`
    if (a < 0.01) discard;
`,bA=`
attribute vec4 particle_vertexData;   // XYZ = world pos, W = life
attribute vec4 particle_vertexData2;  // X = angle, Y = scale, Z = alpha, W = velocity.x
attribute vec4 particle_vertexData3;  // XYZ = particle local pos, W = velocity.y
attribute float particle_vertexData4; // particle id

// type depends on useMesh property. Start with X = velocity.z, Y = particle ID and for mesh particles proceeds with Z = mesh UV.x, W = mesh UV.y
// Note: This generates a duplicate attribute warning, as the scanning we do is very simple.
#ifndef USE_MESH
attribute vec2 particle_vertexData5;
#else
attribute vec4 particle_vertexData5;
#endif

uniform mat4 matrix_viewProjection;
uniform mat4 matrix_model;

#ifndef VIEWMATRIX
#define VIEWMATRIX
uniform mat4 matrix_view;
#endif

uniform mat3 matrix_normal;
uniform mat4 matrix_viewInverse;

uniform float numParticles;
uniform float lifetime;
uniform float stretch;
uniform float seed;
uniform vec3 wrapBounds;
uniform vec3 emitterScale;
uniform vec3 faceTangent;
uniform vec3 faceBinorm;

#ifdef PARTICLE_GPU
    uniform highp sampler2D internalTex0;
    uniform highp sampler2D internalTex1;
    uniform highp sampler2D internalTex2;
#endif
uniform vec3 emitterPos;

varying vec4 texCoordsAlphaLife;

vec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix)
{
    float c = cos(pRotation);
    float s = sin(pRotation);
    //vec4 rotationMatrix = vec4(c, -s, s, c);

    mat2 m = mat2(c, -s, s, c);
    rotMatrix = m;

    return m * quadXY;
}

vec3 billboard(vec3 InstanceCoords, vec2 quadXY)
{
    vec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;
    return pos;
}

vec3 customFace(vec3 InstanceCoords, vec2 quadXY)
{
    vec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;
    return pos;
}

void main(void)
{
    vec3 particlePos = particle_vertexData.xyz;
    vec3 inPos = particlePos;
    vec3 vertPos = particle_vertexData3.xyz;
    vec3 inVel = vec3(particle_vertexData2.w, particle_vertexData3.w, particle_vertexData5.x);

    float id = floor(particle_vertexData4);
    float rndFactor = fract(sin(id + 1.0 + seed));
    vec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));

#ifdef LOCAL_SPACE
    inVel = mat3(matrix_model) * inVel;
#endif
    vec2 velocityV = normalize((mat3(matrix_view) * inVel).xy); // should be removed by compiler if align/stretch is not used

    vec2 quadXY = vertPos.xy;

#ifdef USE_MESH
    texCoordsAlphaLife = vec4(particle_vertexData5.zw, particle_vertexData2.z, particle_vertexData.w);
#else
    texCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, particle_vertexData2.z, particle_vertexData.w);
#endif
    mat2 rotMatrix;

    float inAngle = particle_vertexData2.x;
    vec3 particlePosMoved = vec3(0.0);
    vec3 meshLocalPos = particle_vertexData3.xyz;
`,wA=`
    localPos *= particle_vertexData2.y * emitterScale;
    localPos += particlePos;

    gl_Position = matrix_viewProjection * vec4(localPos, 1.0);
`,TA=`
    quadXY = rotate(quadXY, inAngle, rotMatrix);
    vec3 localPos = customFace(particlePos, quadXY);
`,AA=`
    rgb = addFog(rgb);
    rgb = toneMap(rgb);
    rgb = gammaCorrectOutput(rgb);
    gl_FragColor = vec4(rgb, a);
}
`,EA=`
    localPos *= scale * emitterScale;
    localPos += particlePos;

    #ifdef SCREEN_SPACE
    gl_Position = vec4(localPos.x, localPos.y, 0.0, 1.0);
    #else
    gl_Position = matrix_viewProjection * vec4(localPos.xyz, 1.0);
    #endif
`,CA=`
    vec3 negNormal = normal*0.5+0.5;
    vec3 posNormal = -normal*0.5+0.5;
    negNormal *= negNormal;
    posNormal *= posNormal;
`,MA=`
attribute vec4 particle_vertexData; // XYZ = particle position, W = particle ID + random factor
#ifdef USE_MESH
attribute vec2 particle_uv;         // mesh UV
#endif

uniform mat4 matrix_viewProjection;
uniform mat4 matrix_model;
uniform mat3 matrix_normal;
uniform mat4 matrix_viewInverse;

#ifndef VIEWMATRIX
#define VIEWMATRIX
uniform mat4 matrix_view;
#endif

uniform float numParticles;
uniform float numParticlesPot;
uniform float graphSampleSize;
uniform float graphNumSamples;
uniform float stretch;
uniform vec3 wrapBounds;
uniform vec3 emitterScale;
uniform vec3 emitterPos;
uniform vec3 faceTangent;
uniform vec3 faceBinorm;
uniform float rate;
uniform float rateDiv;
uniform float lifetime;
uniform float deltaRandomnessStatic;
uniform float scaleDivMult;
uniform float alphaDivMult;
uniform float seed;
uniform float delta;
uniform sampler2D particleTexOUT;
uniform sampler2D particleTexIN;

#ifdef PARTICLE_GPU
    uniform highp sampler2D internalTex0;
    uniform highp sampler2D internalTex1;
    uniform highp sampler2D internalTex2;
#endif

#ifndef CAMERAPLANES
#define CAMERAPLANES
uniform vec4 camera_params;
#endif

varying vec4 texCoordsAlphaLife;

vec3 inPos;
vec3 inVel;
float inAngle;
bool inShow;
float inLife;
`,PA=`
    vec3 negNormal = max(normal, vec3(0.0));
    vec3 posNormal = max(-normal, vec3(0.0));
`,RA=`
    vec3 light = negNormal.x*lightCube[0] + posNormal.x*lightCube[1] +
                        negNormal.y*lightCube[2] + posNormal.y*lightCube[3] +
                        negNormal.z*lightCube[4] + posNormal.z*lightCube[5];

    rgb *= light;
`,IA=`
    particlePos = (matrix_model * vec4(particlePos, 1.0)).xyz;
`,DA=`
    vec3 localPos = meshLocalPos;
    localPos.xy = rotate(localPos.xy, inAngle, rotMatrix);
    localPos.yz = rotate(localPos.yz, inAngle, rotMatrix);

    billboard(particlePos, quadXY);
`,LA=`
    Normal = normalize(localPos + matrix_viewInverse[2].xyz);
`,FA=`
    vec3 normalMap = normalize(texture2D(normalMap, vec2(texCoordsAlphaLife.x, 1.0 - texCoordsAlphaLife.y)).xyz * 2.0 - 1.0);
    vec3 normal = ParticleMat * normalMap;
`,kA=`
    inAngle = atan(velocityV.x, velocityV.y); // not the fastest way, but easier to plug in; TODO: create rot matrix right from vectors

`,OA=`
    float depth = getLinearScreenDepth();
    float particleDepth = vDepth;
    float depthDiff = saturate(abs(particleDepth - depth) * softening);
    a *= depthDiff;
`,BA=`
    vDepth = getLinearDepth(localPos);
`,NA=`
    vec3 moveDir = inVel * stretch;
    vec3 posPrev = particlePos - moveDir;
    posPrev += particlePosMoved;

    vec2 centerToVertexV = normalize((mat3(matrix_view) * localPos).xy);

    float interpolation = dot(-velocityV, centerToVertexV) * 0.5 + 0.5;

    particlePos = mix(particlePos, posPrev, interpolation);
`,zA=`
    mat3 rot3 = mat3(rotMatrix[0][0], rotMatrix[0][1], 0.0, rotMatrix[1][0], rotMatrix[1][1], 0.0, 0.0, 0.0, 1.0);
    ParticleMat = mat3(-matrix_viewInverse[0].xyz, -matrix_viewInverse[1].xyz, matrix_viewInverse[2].xyz) * rot3;
`,UA=`
    vec3 origParticlePos = particlePos;
    particlePos -= matrix_model[3].xyz;
    particlePos = mod(particlePos, wrapBounds) - wrapBounds * 0.5;
    particlePos += matrix_model[3].xyz;
    particlePosMoved = particlePos - origParticlePos;
`,VA=`
uniform uint meshInstanceId;

vec4 getPickOutput() {
    const vec4 inv = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);
    const uvec4 shifts = uvec4(16, 8, 0, 24);
    uvec4 col = (uvec4(meshInstanceId) >> shifts) & uvec4(0xff);
    return vec4(col) * inv;
}
`,GA=`
void getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {
    dReflDirW = normalize(-reflect(viewDir, worldNormal));
}
`,HA=`
void getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {
    float roughness = sqrt(1.0 - min(gloss, 1.0));
    float anisotropy = material_anisotropy * roughness;
    vec3 anisotropicDirection = anisotropy >= 0.0 ? tbn[1] : tbn[0];
    vec3 anisotropicTangent = cross(anisotropicDirection, viewDir);
    vec3 anisotropicNormal = cross(anisotropicTangent, anisotropicDirection);
    vec3 bentNormal = normalize(mix(normalize(worldNormal), normalize(anisotropicNormal), anisotropy));
    dReflDirW = reflect(-viewDir, bentNormal);
}
`,WA=`
#ifdef LIT_CLEARCOAT
void addReflectionCC(vec3 reflDir, float gloss) {
    ccReflection += calcReflection(reflDir, gloss);
}
#endif
`,$A=`
uniform samplerCube texture_cubeMap;
uniform float material_reflectivity;

vec3 calcReflection(vec3 reflDir, float gloss) {
    vec3 lookupVec = cubeMapProject(reflDir);
    lookupVec.x *= -1.0;
    return $DECODE(textureCube(texture_cubeMap, lookupVec));
}

void addReflection(vec3 reflDir, float gloss) {   
    dReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);
}
`,qA=`
#ifndef ENV_ATLAS
#define ENV_ATLAS
uniform sampler2D texture_envAtlas;
#endif
uniform samplerCube texture_cubeMap;
uniform float material_reflectivity;

vec3 calcReflection(vec3 reflDir, float gloss) {
    vec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);
    vec2 uv = toSphericalUv(dir);

    // calculate roughness level
    float level = saturate(1.0 - gloss) * 5.0;
    float ilevel = floor(level);
    float flevel = level - ilevel;

    vec3 sharp = $DECODE_CUBEMAP(textureCube(texture_cubeMap, dir));
    vec3 roughA = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel)));
    vec3 roughB = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));

    return processEnvironment(mix(sharp, mix(roughA, roughB, flevel), min(level, 1.0)));
}

void addReflection(vec3 reflDir, float gloss) {   
    dReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);
}
`,XA=`
#ifndef ENV_ATLAS
#define ENV_ATLAS
uniform sampler2D texture_envAtlas;
#endif
uniform float material_reflectivity;

// calculate mip level for shiny reflection given equirect coords uv.
float shinyMipLevel(vec2 uv) {
    vec2 dx = dFdx(uv);
    vec2 dy = dFdy(uv);

    // calculate second dF at 180 degrees
    vec2 uv2 = vec2(fract(uv.x + 0.5), uv.y);
    vec2 dx2 = dFdx(uv2);
    vec2 dy2 = dFdy(uv2);

    // calculate min of both sets of dF to handle discontinuity at the azim edge
    float maxd = min(max(dot(dx, dx), dot(dy, dy)), max(dot(dx2, dx2), dot(dy2, dy2)));

    return clamp(0.5 * log2(maxd) - 1.0 + textureBias, 0.0, 5.0);
}

vec3 calcReflection(vec3 reflDir, float gloss) {
    vec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);
    vec2 uv = toSphericalUv(dir);

    // calculate roughness level
    float level = saturate(1.0 - gloss) * 5.0;
    float ilevel = floor(level);

    // accessing the shiny (top level) reflection - perform manual mipmap lookup
    float level2 = shinyMipLevel(uv * atlasSize);
    float ilevel2 = floor(level2);

    vec2 uv0, uv1;
    float weight;
    if (ilevel == 0.0) {
        uv0 = mapShinyUv(uv, ilevel2);
        uv1 = mapShinyUv(uv, ilevel2 + 1.0);
        weight = level2 - ilevel2;
    } else {
        // accessing rough reflection - just sample the same part twice
        uv0 = uv1 = mapRoughnessUv(uv, ilevel);
        weight = 0.0;
    }

    vec3 linearA = $DECODE(texture2D(texture_envAtlas, uv0));
    vec3 linearB = $DECODE(texture2D(texture_envAtlas, uv1));
    vec3 linear0 = mix(linearA, linearB, weight);
    vec3 linear1 = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));

    return processEnvironment(mix(linear0, linear1, level - ilevel));
}

void addReflection(vec3 reflDir, float gloss) {   
    dReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);
}
`,jA=`
#ifndef VIEWMATRIX
#define VIEWMATRIX
uniform mat4 matrix_view;
#endif
uniform sampler2D texture_sphereMap;
uniform float material_reflectivity;

vec3 calcReflection(vec3 reflDir, float gloss) {
    vec3 reflDirV = (mat3(matrix_view) * reflDir).xyz;

    float m = 2.0 * sqrt( dot(reflDirV.xy, reflDirV.xy) + (reflDirV.z+1.0)*(reflDirV.z+1.0) );
    vec2 sphereMapUv = reflDirV.xy / m + 0.5;

    return $DECODE(texture2D(texture_sphereMap, sphereMapUv));
}

void addReflection(vec3 reflDir, float gloss) {   
    dReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);
}
`,YA=`

void addReflectionSheen(vec3 worldNormal, vec3 viewDir, float gloss) {
    float NoV = dot(worldNormal, viewDir);
    float alphaG = gloss * gloss;

    // Avoid using a LUT and approximate the values analytically
    float a = gloss < 0.25 ? -339.2 * alphaG + 161.4 * gloss - 25.9 : -8.48 * alphaG + 14.3 * gloss - 9.95;
    float b = gloss < 0.25 ? 44.0 * alphaG - 23.7 * gloss + 3.26 : 1.97 * alphaG - 3.27 * gloss + 0.72;
    float DG = exp( a * NoV + b ) + ( gloss < 0.25 ? 0.0 : 0.1 * ( gloss - 0.25 ) );
    sReflection += calcReflection(worldNormal, 0.0) * saturate(DG);
}
`,KA=`
vec3 refract2(vec3 viewVec, vec3 normal, float IOR) {
    float vn = dot(viewVec, normal);
    float k = 1.0 - IOR * IOR * (1.0 - vn * vn);
    vec3 refrVec = IOR * viewVec - (IOR * vn + sqrt(k)) * normal;
    return refrVec;
}

void addRefraction(
    vec3 worldNormal, 
    vec3 viewDir, 
    float thickness, 
    float gloss, 
    vec3 specularity, 
    vec3 albedo, 
    float transmission,
    float refractionIndex,
    float dispersion
#if defined(LIT_IRIDESCENCE)
    , vec3 iridescenceFresnel,
    float iridescenceIntensity
#endif 
) {
    // use same reflection code with refraction vector
    vec4 tmpRefl = dReflection;
    vec3 reflectionDir = refract2(-viewDir, worldNormal, refractionIndex);
    dReflection = vec4(0);
    addReflection(reflectionDir, gloss);
    dDiffuseLight = mix(dDiffuseLight, dReflection.rgb * albedo, transmission);
    dReflection = tmpRefl;
}
`,ZA=`
uniform float material_invAttenuationDistance;
uniform vec3 material_attenuation;

vec3 evalRefractionColor(vec3 refractionVector, float gloss, float refractionIndex) {

    // The refraction point is the entry point + vector to exit point
    vec4 pointOfRefraction = vec4(vPositionW + refractionVector, 1.0);

    // Project to texture space so we can sample it
    vec4 projectionPoint = matrix_viewProjection * pointOfRefraction;

    // use built-in getGrabScreenPos function to convert screen position to grab texture uv coords
    vec2 uv = getGrabScreenPos(projectionPoint);

    // Use IOR and roughness to select mip
    float iorToRoughness = (1.0 - gloss) * clamp((1.0 / refractionIndex) * 2.0 - 2.0, 0.0, 1.0);
    float refractionLod = log2(uScreenSize.x) * iorToRoughness;
    vec3 refraction = texture2DLod(uSceneColorMap, uv, refractionLod).rgb;

    return refraction;
}

void addRefraction(
    vec3 worldNormal, 
    vec3 viewDir, 
    float thickness, 
    float gloss, 
    vec3 specularity, 
    vec3 albedo, 
    float transmission,
    float refractionIndex,
    float dispersion
#if defined(LIT_IRIDESCENCE)
    , vec3 iridescenceFresnel,
    float iridescenceIntensity
#endif
) {

    // Extract scale from the model transform
    vec3 modelScale;
    modelScale.x = length(vec3(matrix_model[0].xyz));
    modelScale.y = length(vec3(matrix_model[1].xyz));
    modelScale.z = length(vec3(matrix_model[2].xyz));

    // Calculate the refraction vector, scaled by the thickness and scale of the object
    vec3 scale = thickness * modelScale;
    vec3 refractionVector = normalize(refract(-viewDir, worldNormal, refractionIndex)) * scale;
    vec3 refraction = evalRefractionColor(refractionVector, gloss, refractionIndex);

    #ifdef DISPERSION
        // based on the dispersion material property, calculate modified refraction index values
        // for R and B channels and evaluate the refraction color for them.
        float halfSpread = (1.0 / refractionIndex - 1.0) * 0.025 * dispersion;

        float refractionIndexR = refractionIndex - halfSpread;
        refractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexR)) * scale;
        refraction.r = evalRefractionColor(refractionVector, gloss, refractionIndexR).r;

        float refractionIndexB = refractionIndex + halfSpread;
        refractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexB)) * scale;
        refraction.b = evalRefractionColor(refractionVector, gloss, refractionIndexB).b;
    #endif

    // Transmittance is our final refraction color
    vec3 transmittance;
    if (material_invAttenuationDistance != 0.0)
    {
        vec3 attenuation = -log(material_attenuation) * material_invAttenuationDistance;
        transmittance = exp(-attenuation * length(refractionVector));
    }
    else
    {
        transmittance = refraction;
    }

    // Apply fresnel effect on refraction
    vec3 fresnel = vec3(1.0) - 
        getFresnel(
            dot(viewDir, worldNormal), 
            gloss, 
            specularity
        #if defined(LIT_IRIDESCENCE)
            , iridescenceFresnel,
            iridescenceIntensity
        #endif
        );
    dDiffuseLight = mix(dDiffuseLight, refraction * transmittance * fresnel, transmission);
}
`,QA=`
// This shader requires the following #DEFINEs:
//
// PROCESS_FUNC - must be one of reproject, prefilter
// DECODE_FUNC - must be one of decodeRGBM, decodeRGBE, decodeGamma or decodeLinear
// ENCODE_FUNC - must be one of encodeRGBM, encodeRGBE, encideGamma or encodeLinear
// SOURCE_FUNC - must be one of sampleCubemap, sampleEquirect, sampleOctahedral
// TARGET_FUNC - must be one of getDirectionCubemap, getDirectionEquirect, getDirectionOctahedral
//
// When filtering:
// NUM_SAMPLES - number of samples
// NUM_SAMPLES_SQRT - sqrt of number of samples

varying vec2 vUv0;

// source
#ifdef CUBEMAP_SOURCE
    uniform samplerCube sourceCube;
#else
    uniform sampler2D sourceTex;
#endif

#ifdef USE_SAMPLES_TEX
    // samples
    uniform sampler2D samplesTex;
    uniform vec2 samplesTexInverseSize;
#endif

// params:
// x - target cubemap face 0..6
// y - target image total pixels
// z - source cubemap size
uniform vec3 params;

float targetFace() { return params.x; }
float targetTotalPixels() { return params.y; }
float sourceTotalPixels() { return params.z; }

float PI = 3.141592653589793;

float saturate(float x) {
    return clamp(x, 0.0, 1.0);
}

${v0}
${b0}

//-- supported projections

vec3 modifySeams(vec3 dir, float scale) {
    vec3 adir = abs(dir);
    float M = max(max(adir.x, adir.y), adir.z);
    return dir / M * vec3(
        adir.x == M ? 1.0 : scale,
        adir.y == M ? 1.0 : scale,
        adir.z == M ? 1.0 : scale
    );
}

vec2 toSpherical(vec3 dir) {
    return vec2(dir.xz == vec2(0.0) ? 0.0 : atan(dir.x, dir.z), asin(dir.y));
}

vec3 fromSpherical(vec2 uv) {
    return vec3(cos(uv.y) * sin(uv.x),
                sin(uv.y),
                cos(uv.y) * cos(uv.x));
}

vec3 getDirectionEquirect() {
    return fromSpherical((vec2(vUv0.x, 1.0 - vUv0.y) * 2.0 - 1.0) * vec2(PI, PI * 0.5));
}

// octahedral code, based on https://jcgt.org/published/0003/02/01/
// "Survey of Efficient Representations for Independent Unit Vectors" by Cigolle, Donow, Evangelakos, Mara, McGuire, Meyer

float signNotZero(float k){
    return(k >= 0.0) ? 1.0 : -1.0;
}

vec2 signNotZero(vec2 v) {
    return vec2(signNotZero(v.x), signNotZero(v.y));
}

// Returns a unit vector. Argument o is an octahedral vector packed via octEncode, on the [-1, +1] square
vec3 octDecode(vec2 o) {
    vec3 v = vec3(o.x, 1.0 - abs(o.x) - abs(o.y), o.y);
    if (v.y < 0.0) {
        v.xz = (1.0 - abs(v.zx)) * signNotZero(v.xz);
    }
    return normalize(v);
}

vec3 getDirectionOctahedral() {
    return octDecode(vec2(vUv0.x, 1.0 - vUv0.y) * 2.0 - 1.0);
}

// Assumes that v is a unit vector. The result is an octahedral vector on the [-1, +1] square
vec2 octEncode(in vec3 v) {
    float l1norm = abs(v.x) + abs(v.y) + abs(v.z);
    vec2 result = v.xz * (1.0 / l1norm);
    if (v.y < 0.0) {
        result = (1.0 - abs(result.yx)) * signNotZero(result.xy);
    }
    return result;
}

/////////////////////////////////////////////////////////////////////

#ifdef CUBEMAP_SOURCE
    vec4 sampleCubemap(vec3 dir) {
        return textureCube(sourceCube, modifySeams(dir, 1.0));
    }

    vec4 sampleCubemap(vec2 sph) {
    return sampleCubemap(fromSpherical(sph));
}

    vec4 sampleCubemap(vec3 dir, float mipLevel) {
        return textureCubeLod(sourceCube, modifySeams(dir, 1.0), mipLevel);
    }

    vec4 sampleCubemap(vec2 sph, float mipLevel) {
        return sampleCubemap(fromSpherical(sph), mipLevel);
    }
#else

    vec4 sampleEquirect(vec2 sph) {
        vec2 uv = sph / vec2(PI * 2.0, PI) + 0.5;
        return texture2D(sourceTex, vec2(uv.x, 1.0 - uv.y));
    }

    vec4 sampleEquirect(vec3 dir) {
        return sampleEquirect(toSpherical(dir));
    }

    vec4 sampleEquirect(vec2 sph, float mipLevel) {
        vec2 uv = sph / vec2(PI * 2.0, PI) + 0.5;
        return texture2DLod(sourceTex, vec2(uv.x, 1.0 - uv.y), mipLevel);
    }

    vec4 sampleEquirect(vec3 dir, float mipLevel) {
        return sampleEquirect(toSpherical(dir), mipLevel);
    }

    vec4 sampleOctahedral(vec3 dir) {
        vec2 uv = octEncode(dir) * 0.5 + 0.5;
        return texture2D(sourceTex, vec2(uv.x, 1.0 - uv.y));
    }

    vec4 sampleOctahedral(vec2 sph) {
        return sampleOctahedral(fromSpherical(sph));
    }

    vec4 sampleOctahedral(vec3 dir, float mipLevel) {
        vec2 uv = octEncode(dir) * 0.5 + 0.5;
        return texture2DLod(sourceTex, vec2(uv.x, 1.0 - uv.y), mipLevel);
    }

    vec4 sampleOctahedral(vec2 sph, float mipLevel) {
        return sampleOctahedral(fromSpherical(sph), mipLevel);
    }

#endif

vec3 getDirectionCubemap() {
    vec2 st = vUv0 * 2.0 - 1.0;
    float face = targetFace();

    vec3 vec;
    if (face == 0.0) {
        vec = vec3(1, -st.y, -st.x);
    } else if (face == 1.0) {
        vec = vec3(-1, -st.y, st.x);
    } else if (face == 2.0) {
        vec = vec3(st.x, 1, st.y);
    } else if (face == 3.0) {
        vec = vec3(st.x, -1, -st.y);
    } else if (face == 4.0) {
        vec = vec3(st.x, -st.y, 1);
    } else {
        vec = vec3(-st.x, -st.y, -1);
    }

    return normalize(modifySeams(vec, 1.0));
}

mat3 matrixFromVector(vec3 n) { // frisvad
    float a = 1.0 / (1.0 + n.z);
    float b = -n.x * n.y * a;
    vec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);
    vec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);
    return mat3(b1, b2, n);
}

mat3 matrixFromVectorSlow(vec3 n) {
    vec3 up = (1.0 - abs(n.y) <= 0.0000001) ? vec3(0.0, 0.0, n.y > 0.0 ? 1.0 : -1.0) : vec3(0.0, 1.0, 0.0);
    vec3 x = normalize(cross(up, n));
    vec3 y = cross(n, x);
    return mat3(x, y, n);
}

vec4 reproject() {
    if (NUM_SAMPLES <= 1) {
        // single sample
        return ENCODE_FUNC(DECODE_FUNC(SOURCE_FUNC(TARGET_FUNC())));
    } else {
        // multi sample
        vec3 t = TARGET_FUNC();
        vec3 tu = dFdx(t);
        vec3 tv = dFdy(t);

        vec3 result = vec3(0.0);
        for (float u = 0.0; u < NUM_SAMPLES_SQRT; ++u) {
            for (float v = 0.0; v < NUM_SAMPLES_SQRT; ++v) {
                result += DECODE_FUNC(SOURCE_FUNC(normalize(t +
                                                            tu * (u / NUM_SAMPLES_SQRT - 0.5) +
                                                            tv * (v / NUM_SAMPLES_SQRT - 0.5))));
            }
        }
        return ENCODE_FUNC(result / (NUM_SAMPLES_SQRT * NUM_SAMPLES_SQRT));
    }
}

vec4 unpackFloat = vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0);

#ifdef USE_SAMPLES_TEX
    void unpackSample(int i, out vec3 L, out float mipLevel) {
        float u = (float(i * 4) + 0.5) * samplesTexInverseSize.x;
        float v = (floor(u) + 0.5) * samplesTexInverseSize.y;

        vec4 raw;
        raw.x = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;
        raw.y = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;
        raw.z = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;
        raw.w = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat);

        L.xyz = raw.xyz * 2.0 - 1.0;
        mipLevel = raw.w * 8.0;
    }

    // convolve an environment given pre-generated samples
    vec4 prefilterSamples() {
        // construct vector space given target direction
        mat3 vecSpace = matrixFromVectorSlow(TARGET_FUNC());

        vec3 L;
        float mipLevel;

        vec3 result = vec3(0.0);
        float totalWeight = 0.0;
        for (int i = 0; i < NUM_SAMPLES; ++i) {
            unpackSample(i, L, mipLevel);
            result += DECODE_FUNC(SOURCE_FUNC(vecSpace * L, mipLevel)) * L.z;
            totalWeight += L.z;
        }

        return ENCODE_FUNC(result / totalWeight);
    }

    // unweighted version of prefilterSamples
    vec4 prefilterSamplesUnweighted() {
        // construct vector space given target direction
        mat3 vecSpace = matrixFromVectorSlow(TARGET_FUNC());

        vec3 L;
        float mipLevel;

        vec3 result = vec3(0.0);
        float totalWeight = 0.0;
        for (int i = 0; i < NUM_SAMPLES; ++i) {
            unpackSample(i, L, mipLevel);
            result += DECODE_FUNC(SOURCE_FUNC(vecSpace * L, mipLevel));
        }

        return ENCODE_FUNC(result / float(NUM_SAMPLES));
    }
#endif

void main(void) {
    gl_FragColor = PROCESS_FUNC();
}
`,JA=`

vec4 SampleTextureCatmullRom(TEXTURE_ACCEPT(tex), vec2 uv, vec2 texSize) {
    // We're going to sample a a 4x4 grid of texels surrounding the target UV coordinate. We'll do this by rounding
    // down the sample location to get the exact center of our "starting" texel. The starting texel will be at
    // location [1, 1] in the grid, where [0, 0] is the top left corner.
    vec2 samplePos = uv * texSize;
    vec2 texPos1 = floor(samplePos - 0.5) + 0.5;

    // Compute the fractional offset from our starting texel to our original sample location, which we'll
    // feed into the Catmull-Rom spline function to get our filter weights.
    vec2 f = samplePos - texPos1;

    // Compute the Catmull-Rom weights using the fractional offset that we calculated earlier.
    // These equations are pre-expanded based on our knowledge of where the texels will be located,
    // which lets us avoid having to evaluate a piece-wise function.
    vec2 w0 = f * (-0.5 + f * (1.0 - 0.5 * f));
    vec2 w1 = 1.0 + f * f * (-2.5 + 1.5 * f);
    vec2 w2 = f * (0.5 + f * (2.0 - 1.5 * f));
    vec2 w3 = f * f * (-0.5 + 0.5 * f);

    // Work out weighting factors and sampling offsets that will let us use bilinear filtering to
    // simultaneously evaluate the middle 2 samples from the 4x4 grid.
    vec2 w12 = w1 + w2;
    vec2 offset12 = w2 / (w1 + w2);

    // Compute the final UV coordinates we'll use for sampling the texture
    vec2 texPos0 = (texPos1 - 1.0) / texSize;
    vec2 texPos3 = (texPos1 + 2.0) / texSize;
    vec2 texPos12 = (texPos1 + offset12) / texSize;

    vec4 result = vec4(0.0);
    result += texture2DLod(tex, vec2(texPos0.x, texPos0.y), 0.0) * w0.x * w0.y;
    result += texture2DLod(tex, vec2(texPos12.x, texPos0.y), 0.0) * w12.x * w0.y;
    result += texture2DLod(tex, vec2(texPos3.x, texPos0.y), 0.0) * w3.x * w0.y;

    result += texture2DLod(tex, vec2(texPos0.x, texPos12.y), 0.0) * w0.x * w12.y;
    result += texture2DLod(tex, vec2(texPos12.x, texPos12.y), 0.0) * w12.x * w12.y;
    result += texture2DLod(tex, vec2(texPos3.x, texPos12.y), 0.0) * w3.x * w12.y;

    result += texture2DLod(tex, vec2(texPos0.x, texPos3.y), 0.0) * w0.x * w3.y;
    result += texture2DLod(tex, vec2(texPos12.x, texPos3.y), 0.0) * w12.x * w3.y;
    result += texture2DLod(tex, vec2(texPos3.x, texPos3.y), 0.0) * w3.x * w3.y;

    return result;
}
`,eE=`
uniform highp sampler2D uSceneDepthMap;

#ifndef SCREENSIZE
#define SCREENSIZE
uniform vec4 uScreenSize;
#endif

#ifndef VIEWMATRIX
#define VIEWMATRIX
uniform mat4 matrix_view;
#endif

#ifndef LINEARIZE_DEPTH
#ifndef CAMERAPLANES
#define CAMERAPLANES
uniform vec4 camera_params; // x: 1 / camera_far,      y: camera_far,     z: camera_near,        w: is_ortho
#endif

#define LINEARIZE_DEPTH
float linearizeDepth(float z) {
    if (camera_params.w == 0.0)
        return (camera_params.z * camera_params.y) / (camera_params.y + z * (camera_params.z - camera_params.y));
    else
        return camera_params.z + z * (camera_params.y - camera_params.z);
}
#endif // LINEARIZE_DEPTH

float delinearizeDepth(float linearDepth) {
    if (camera_params.w == 0.0) {
        return (camera_params.y * (camera_params.z - linearDepth)) / (linearDepth * (camera_params.z - camera_params.y));
    } else {
        return (linearDepth - camera_params.z) / (camera_params.y - camera_params.z);
    }
}

// Retrieves rendered linear camera depth by UV
float getLinearScreenDepth(vec2 uv) {
    #ifdef SCENE_DEPTHMAP_LINEAR
        #ifdef SCENE_DEPTHMAP_FLOAT
            return texture2D(uSceneDepthMap, uv).r;
        #else

            ivec2 textureSize = textureSize(uSceneDepthMap, 0);
            ivec2 texel = ivec2(uv * vec2(textureSize));
            vec4 data = texelFetch(uSceneDepthMap, texel, 0);

            uint intBits = 
                (uint(data.r * 255.0) << 24u) |
                (uint(data.g * 255.0) << 16u) |
                (uint(data.b * 255.0) << 8u) |
                uint(data.a * 255.0);

            return uintBitsToFloat(intBits);
        #endif
    #else
        return linearizeDepth(texture2D(uSceneDepthMap, uv).r);
    #endif
}

#ifndef VERTEXSHADER
// Retrieves rendered linear camera depth under the current pixel
float getLinearScreenDepth() {
    vec2 uv = gl_FragCoord.xy * uScreenSize.zw;
    return getLinearScreenDepth(uv);
}
#endif

// Generates linear camera depth for the given world position
float getLinearDepth(vec3 pos) {
    return -(matrix_view * vec4(pos, 1.0)).z;
}
`,tE=`

// function which selects a shadow projection matrix index based on cascade distances 
int getShadowCascadeIndex(vec4 shadowCascadeDistances, int shadowCascadeCount) {

    // depth in 0 .. far plane range
    float depth = 1.0 / gl_FragCoord.w;

    // 1.0 if depth >= distance, 0.0 otherwise
    vec4 comparisons = step(shadowCascadeDistances, vec4(depth));

    // sum is the index
    int cascadeIndex = int(dot(comparisons, vec4(1.0)));

    // limit to actual number of used cascades
    return min(cascadeIndex, shadowCascadeCount - 1);
}

// function which modifies cascade index to dither between cascades
int ditherShadowCascadeIndex(int cascadeIndex, vec4 shadowCascadeDistances, int shadowCascadeCount, float blendFactor) {
 
    if (cascadeIndex < shadowCascadeCount - 1) {
        float currentRangeEnd = shadowCascadeDistances[cascadeIndex];
        float transitionStart = blendFactor * currentRangeEnd; // Start overlap factor away from the end distance
        float depth = 1.0 / gl_FragCoord.w;

        if (depth > transitionStart) {
            // Calculate a transition factor (0.0 to 1.0) within the overlap range
            float transitionFactor = smoothstep(transitionStart, currentRangeEnd, depth);

            // Add pseudo-random dithering
            // TODO: replace by user selectable dithering method
            float dither = fract(sin(dot(gl_FragCoord.xy, vec2(12.9898, 78.233))) * 43758.5453);
            if (dither < transitionFactor) {
                cascadeIndex += 1;
            }
        }
    }

    return cascadeIndex;
}

void fadeShadow(vec4 shadowCascadeDistances) {                  
    // if the pixel is past the shadow distance, remove shadow
    // this enforces straight line instead of corner of shadow which moves when camera rotates  
    float depth = 1.0 / gl_FragCoord.w;
    if (depth > shadowCascadeDistances.w) {
        dShadowCoord.z = -9999999.0;
    }
}
`,sE=`
float VSM$(TEXTURE_ACCEPT(tex), vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {
    vec3 moments = texture2D(tex, texCoords).xyz;
    return calculateEVSM(moments, Z, vsmBias, exponent);
}

float getShadowVSM$(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {
    return VSM$(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);
}

float getShadowSpotVSM$(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {
    return VSM$(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, length(lightDir) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);
}
`,iE=`
float VSM$(TEXTURE_ACCEPT(tex), vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {
    float pixelSize = 1.0 / resolution;
    texCoords -= vec2(pixelSize);
    vec3 s00 = texture2D(tex, texCoords).xyz;
    vec3 s10 = texture2D(tex, texCoords + vec2(pixelSize, 0)).xyz;
    vec3 s01 = texture2D(tex, texCoords + vec2(0, pixelSize)).xyz;
    vec3 s11 = texture2D(tex, texCoords + vec2(pixelSize)).xyz;
    vec2 fr = fract(texCoords * resolution);
    vec3 h0 = mix(s00, s10, fr.x);
    vec3 h1 = mix(s01, s11, fr.x);
    vec3 moments = mix(h0, h1, fr.y);
    return calculateEVSM(moments, Z, vsmBias, exponent);
}

float getShadowVSM$(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {
    return VSM$(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);
}

float getShadowSpotVSM$(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {
    return VSM$(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, length(lightDir) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);
}
`,rE=`

/**
 * PCSS is a shadow sampling method that provides contact hardening soft shadows, used for omni and spot lights.
 * Based on: 
 * - https://www.gamedev.net/tutorials/programming/graphics/effect-area-light-shadows-part-1-pcss-r4971/
 * - https://github.com/pboechat/PCSS 
 */

#define PCSS_SAMPLE_COUNT 16

uniform float pcssDiskSamples[PCSS_SAMPLE_COUNT];
uniform float pcssSphereSamples[PCSS_SAMPLE_COUNT];

vec2 vogelDisk(int sampleIndex, float count, float phi, float r) {
    const float GoldenAngle = 2.4;
    float theta = float(sampleIndex) * GoldenAngle + phi;

    float sine = sin(theta);
    float cosine = cos(theta);
    return vec2(r * cosine, r * sine);
}

vec3 vogelSphere(int sampleIndex, float count, float phi, float r) {
    const float GoldenAngle = 2.4;
    float theta = float(sampleIndex) * GoldenAngle + phi;

    float weight = float(sampleIndex) / count;
    return vec3(cos(theta) * r, weight, sin(theta) * r);
}

float noise(vec2 screenPos) {
    const float PHI = 1.61803398874989484820459;  // Φ = Golden Ratio   
    return fract(sin(dot(screenPos * PHI, screenPos)) * screenPos.x);
}

float viewSpaceDepth(float depth, mat4 invProjection) {
    float z = depth * 2.0 - 1.0;
    vec4 clipSpace = vec4(0.0, 0.0, z, 1.0);
    vec4 viewSpace = invProjection * clipSpace;
    return viewSpace.z;
}

float PCSSBlockerDistance(TEXTURE_ACCEPT(shadowMap), vec2 sampleCoords[PCSS_SAMPLE_COUNT], vec2 shadowCoords, vec2 searchSize, float z, vec4 cameraParams) {

    float blockers = 0.0;
    float averageBlocker = 0.0;
    for (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {
        vec2 offset = sampleCoords[i] * searchSize;
        vec2 sampleUV = shadowCoords + offset;

        float blocker = texture2DLod(shadowMap, sampleUV, 0.0).r;
        float isBlocking = step(blocker, z);
        blockers += isBlocking;
        averageBlocker += blocker * isBlocking;
    }

    if (blockers > 0.0)
        return averageBlocker / blockers;
    return -1.0;
}

float PCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoords, vec4 cameraParams, vec2 shadowSearchArea) {
    float receiverDepth = linearizeDepth(shadowCoords.z, cameraParams);

    vec2 samplePoints[PCSS_SAMPLE_COUNT];
    float noise = noise( gl_FragCoord.xy ) * 2.0 * PI;
    for (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {
        float pcssPresample = pcssDiskSamples[i];
        samplePoints[i] = vogelDisk(i, float(PCSS_SAMPLE_COUNT), noise, pcssPresample);
    }

    float averageBlocker = PCSSBlockerDistance(TEXTURE_PASS(shadowMap), samplePoints, shadowCoords.xy, shadowSearchArea, receiverDepth, cameraParams);
    if (averageBlocker == -1.0) {
        return 1.0;
    } else {
        float depthDifference = (receiverDepth - averageBlocker) / 3.0;
        vec2 filterRadius = depthDifference * shadowSearchArea;

        float shadow = 0.0;

        for (int i = 0; i < PCSS_SAMPLE_COUNT; i ++)
        {
            vec2 sampleUV = samplePoints[i] * filterRadius;
            sampleUV = shadowCoords.xy + sampleUV;

            float depth = texture2DLod(shadowMap, sampleUV, 0.0).r;
            shadow += step(receiverDepth, depth);
        }
        return shadow / float(PCSS_SAMPLE_COUNT);
    } 
}

#ifndef WEBGPU

float PCSSCubeBlockerDistance(samplerCube shadowMap, vec3 lightDirNorm, vec3 samplePoints[PCSS_SAMPLE_COUNT], float z, float shadowSearchArea) {
    float blockers = 0.0;
    float averageBlocker = 0.0;
    for (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {
        vec3 sampleDir = lightDirNorm + samplePoints[i] * shadowSearchArea;
        sampleDir = normalize(sampleDir);

        float blocker = textureCubeLod(shadowMap, sampleDir, 0.0).r;
        float isBlocking = step(blocker, z);
        blockers += isBlocking;
        averageBlocker += blocker * isBlocking;
    }

    if (blockers > 0.0)
        return averageBlocker / blockers;
    return -1.0;
}

float PCSSCube(samplerCube shadowMap, vec4 shadowParams, vec3 shadowCoords, vec4 cameraParams, float shadowSearchArea, vec3 lightDir) {
    
    vec3 samplePoints[PCSS_SAMPLE_COUNT];
    float noise = noise( gl_FragCoord.xy ) * 2.0 * PI;
    for (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {
        float r = pcssSphereSamples[i];
        samplePoints[i] = vogelSphere(i, float(PCSS_SAMPLE_COUNT), noise, r);
    }

    float receiverDepth = length(lightDir) * shadowParams.w + shadowParams.z;
    vec3 lightDirNorm = normalize(lightDir);
    
    float averageBlocker = PCSSCubeBlockerDistance(shadowMap, lightDirNorm, samplePoints, receiverDepth, shadowSearchArea);
    if (averageBlocker == -1.0) {
        return 1.0;
    } else {

        float filterRadius = ((receiverDepth - averageBlocker) / averageBlocker) * shadowSearchArea;

        float shadow = 0.0;
        for (int i = 0; i < PCSS_SAMPLE_COUNT; i++)
        {
            vec3 offset = samplePoints[i] * filterRadius;
            vec3 sampleDir = lightDirNorm + offset;
            sampleDir = normalize(sampleDir);

            float depth = textureCubeLod(shadowMap, sampleDir, 0.0).r;
            shadow += step(receiverDepth, depth);
        }
        return shadow / float(PCSS_SAMPLE_COUNT);
    }
}

float getShadowPointPCSS(samplerCube shadowMap, vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {
    return PCSSCube(shadowMap, shadowParams, shadowCoord, cameraParams, shadowSearchArea.x, lightDir);
}

#endif

float getShadowSpotPCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {
    return PCSS(TEXTURE_PASS(shadowMap), shadowCoord, cameraParams, shadowSearchArea);
}

`,nE=`

vec3 getShadowSampleCoord$LIGHT(mat4 shadowTransform, vec4 shadowParams, vec3 worldPosition, vec3 lightPos, inout vec3 lightDir, vec3 lightDirNorm, vec3 normal) {

    vec3 surfacePosition = worldPosition;

#ifdef SHADOW_SAMPLE_POINT
    #ifdef SHADOW_SAMPLE_NORMAL_OFFSET
        float distScale = length(lightDir);
        surfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;
        lightDir = surfacePosition - lightPos;
        return lightDir;
    #endif
#else
    #ifdef SHADOW_SAMPLE_SOURCE_ZBUFFER
        #ifdef SHADOW_SAMPLE_NORMAL_OFFSET
            surfacePosition = surfacePosition + normal * shadowParams.y;
        #endif
    #else
        #ifdef SHADOW_SAMPLE_NORMAL_OFFSET
            #ifdef SHADOW_SAMPLE_ORTHO
                float distScale = 1.0;
            #else
                float distScale = abs(dot(vPositionW - lightPos, lightDirNorm));
            #endif
            surfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;
        #endif
    #endif

    vec4 positionInShadowSpace = shadowTransform * vec4(surfacePosition, 1.0);
    #ifdef SHADOW_SAMPLE_ORTHO
        positionInShadowSpace.z = saturate(positionInShadowSpace.z) - 0.0001;
    #else
        #ifdef SHADOW_SAMPLE_SOURCE_ZBUFFER
            positionInShadowSpace.xyz /= positionInShadowSpace.w;
        #else
            positionInShadowSpace.xy /= positionInShadowSpace.w;
            positionInShadowSpace.z = length(lightDir) * shadowParams.w;
        #endif
    #endif

    #ifdef SHADOW_SAMPLE_Z_BIAS
        positionInShadowSpace.z += getShadowBias(shadowParams.x, shadowParams.z);
    #endif
    surfacePosition = positionInShadowSpace.xyz;
#endif

    return surfacePosition;
}
`,aE=`

/**
 * Soft directional shadows PCSS - with and without blocker search.
 */

highp float fractSinRand( const in vec2 uv ) {
    const highp float a = 12.9898, b = 78.233, c = 43758.5453;
    highp float dt = dot(uv.xy, vec2(a, b)), sn = mod(dt, PI);
    return fract(sin(sn) * c);
}

// struct to hold precomputed constants and current state
struct PoissonDiskData {
    float invNumSamples;
    float angleStep;
    float initialAngle;
    float currentRadius;
    float currentAngle;
};

// prepare the Poisson disk constants and initialize the current state in the struct
void preparePoissonConstants(out PoissonDiskData data, int sampleCount, int numRings, float randomSeed) {
    const float pi2 = 6.28318530718;
    data.invNumSamples = 1.0 / float(sampleCount);
    data.angleStep = pi2 * float(numRings) * data.invNumSamples;
    data.initialAngle = randomSeed * pi2;
    data.currentRadius = data.invNumSamples;
    data.currentAngle = data.initialAngle;
}

// generate a Poisson sample using the precomputed struct
vec2 generatePoissonSample(inout PoissonDiskData data) {
    vec2 offset = vec2(cos(data.currentAngle), sin(data.currentAngle)) * pow(data.currentRadius, 0.75);
    data.currentRadius += data.invNumSamples;
    data.currentAngle += data.angleStep;
    return offset;
}

void PCSSFindBlocker(TEXTURE_ACCEPT(shadowMap), out float avgBlockerDepth, out int numBlockers,
    vec2 shadowCoords, float z, int shadowBlockerSamples, float penumbraSize, float invShadowMapSize, float randomSeed) {

    PoissonDiskData poissonData;
    preparePoissonConstants(poissonData, shadowBlockerSamples, 11, randomSeed);

    float searchWidth = penumbraSize * invShadowMapSize;
    float blockerSum = 0.0;
    numBlockers = 0;

    for( int i = 0; i < shadowBlockerSamples; ++i ) {
        vec2 poissonUV = generatePoissonSample(poissonData);
        vec2 sampleUV = shadowCoords + poissonUV * searchWidth;
        float shadowMapDepth = texture2DLod(shadowMap, sampleUV, 0.0).r;
        if ( shadowMapDepth < z ) {
            blockerSum += shadowMapDepth;
            numBlockers++;
        }
    }
    avgBlockerDepth = blockerSum / float(numBlockers);
}

float PCSSFilter(TEXTURE_ACCEPT(shadowMap), vec2 uv, float receiverDepth, int shadowSamples, float filterRadius, float randomSeed) {
 
    PoissonDiskData poissonData;
    preparePoissonConstants(poissonData, shadowSamples, 11, randomSeed);

    float sum = 0.0f;
    for ( int i = 0; i < shadowSamples; ++i )
    {
        vec2 poissonUV = generatePoissonSample(poissonData);
        vec2 sampleUV = uv + poissonUV * filterRadius;
        float depth = texture2DLod(shadowMap, sampleUV, 0.0).r;
        sum += step(receiverDepth, depth);
    }
    return sum / float(shadowSamples);
} 

float getPenumbra(float dblocker, float dreceiver, float penumbraSize, float penumbraFalloff) {
    float dist = dreceiver - dblocker;
    float penumbra = 1.0 - pow(1.0 - dist, penumbraFalloff);
    return penumbra * penumbraSize;
}

float PCSSDirectional(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoords, vec4 cameraParams, vec4 softShadowParams) {

    float receiverDepth = shadowCoords.z;
    float randomSeed = fractSinRand(gl_FragCoord.xy);
    int shadowSamples = int(softShadowParams.x);
    int shadowBlockerSamples = int(softShadowParams.y);
    float penumbraSize = softShadowParams.z;
    float penumbraFalloff = softShadowParams.w;

    // normalized inverse shadow map size to preserve the shadow softness regardless of the shadow resolution
    int shadowMapSize = textureSize(shadowMap, 0).x;
    float invShadowMapSize = 1.0 / float(shadowMapSize);
    invShadowMapSize *= float(shadowMapSize) / 2048.0;

    float penumbra;

    // contact hardening path
    if (shadowBlockerSamples > 0) {

        // find average blocker depth
        float avgBlockerDepth = 0.0;
        int numBlockers = 0;
        PCSSFindBlocker(TEXTURE_PASS(shadowMap), avgBlockerDepth, numBlockers, shadowCoords.xy, receiverDepth, shadowBlockerSamples, penumbraSize, invShadowMapSize, randomSeed);

        // early out when no blockers are present
        if (numBlockers < 1)
            return 1.0f;

        // penumbra size is based on the blocker depth
        penumbra = getPenumbra(avgBlockerDepth, shadowCoords.z, penumbraSize, penumbraFalloff);

    } else {

        // constant filter size, no contact hardening
        penumbra = penumbraSize;
    }

    float filterRadius = penumbra * invShadowMapSize;

    // filtering
    return PCSSFilter(TEXTURE_PASS(shadowMap), shadowCoords.xy, receiverDepth, shadowSamples, filterRadius, randomSeed);
}

float getShadowPCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec4 softShadowParams, vec3 lightDir) {
    return PCSSDirectional(TEXTURE_PASS(shadowMap), shadowCoord, cameraParams, softShadowParams);
}

`,oE=`
// ----- Directional/Spot Sampling -----

float _getShadowPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {
    float z = shadowCoord.z;
    vec2 uv = shadowCoord.xy * shadowParams.x; // 1 unit - 1 texel
    float shadowMapSizeInv = 1.0 / shadowParams.x;
    vec2 base_uv = floor(uv + 0.5);
    float s = (uv.x + 0.5 - base_uv.x);
    float t = (uv.y + 0.5 - base_uv.y);
    base_uv -= vec2(0.5);
    base_uv *= shadowMapSizeInv;

    float sum = 0.0;

    float uw0 = (3.0 - 2.0 * s);
    float uw1 = (1.0 + 2.0 * s);

    float u0 = (2.0 - s) / uw0 - 1.0;
    float u1 = s / uw1 + 1.0;

    float vw0 = (3.0 - 2.0 * t);
    float vw1 = (1.0 + 2.0 * t);

    float v0 = (2.0 - t) / vw0 - 1.0;
    float v1 = t / vw1 + 1.0;

    u0 = u0 * shadowMapSizeInv + base_uv.x;
    v0 = v0 * shadowMapSizeInv + base_uv.y;

    u1 = u1 * shadowMapSizeInv + base_uv.x;
    v1 = v1 * shadowMapSizeInv + base_uv.y;

    sum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));
    sum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));
    sum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));
    sum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));

    sum *= 1.0f / 16.0;
    return sum;
}

float getShadowPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return _getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);
}

float getShadowSpotPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return _getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);
}

float getShadowPCF1x1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return textureShadow(shadowMap, shadowCoord);
}

float getShadowSpotPCF1x1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return textureShadow(shadowMap, shadowCoord);
}

// ----- Omni Sampling -----

#ifndef WEBGPU

float getShadowPointPCF3x3(samplerCubeShadow shadowMap, vec4 shadowParams, vec3 dir) {
    
    // Calculate shadow depth from the light direction
    float shadowZ = length(dir) * shadowParams.w + shadowParams.z;

    // offset
    float z = 1.0 / float(textureSize(shadowMap, 0));
    vec3 tc = normalize(dir);

    // average 4 samples - not a strict 3x3 PCF but that's tricky with cubemaps
    mediump vec4 shadows;
    shadows.x = texture(shadowMap, vec4(tc + vec3( z, z, z), shadowZ));
    shadows.y = texture(shadowMap, vec4(tc + vec3(-z,-z, z), shadowZ));
    shadows.z = texture(shadowMap, vec4(tc + vec3(-z, z,-z), shadowZ));
    shadows.w = texture(shadowMap, vec4(tc + vec3( z,-z,-z), shadowZ));

    return dot(shadows, vec4(0.25));
}

float getShadowPointPCF1x1(samplerCubeShadow shadowMap, vec3 shadowCoord, vec4 shadowParams, vec3 lightDir) {
    float shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;
    return texture(shadowMap, vec4(lightDir, shadowZ));
}

float getShadowPointPCF3x3(samplerCubeShadow shadowMap, vec3 shadowCoord, vec4 shadowParams, vec3 lightDir) {
    return getShadowPointPCF3x3(shadowMap, shadowParams, lightDir);
}

#endif
`,lE=`
float _getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {
    // http://the-witness.net/news/2013/09/shadow-mapping-summary-part-1/

    float z = shadowCoord.z;
    vec2 uv = shadowCoord.xy * shadowParams.x; // 1 unit - 1 texel
    float shadowMapSizeInv = 1.0 / shadowParams.x;
    vec2 base_uv = floor(uv + 0.5);
    float s = (uv.x + 0.5 - base_uv.x);
    float t = (uv.y + 0.5 - base_uv.y);
    base_uv -= vec2(0.5);
    base_uv *= shadowMapSizeInv;


    float uw0 = (4.0 - 3.0 * s);
    float uw1 = 7.0;
    float uw2 = (1.0 + 3.0 * s);

    float u0 = (3.0 - 2.0 * s) / uw0 - 2.0;
    float u1 = (3.0 + s) / uw1;
    float u2 = s / uw2 + 2.0;

    float vw0 = (4.0 - 3.0 * t);
    float vw1 = 7.0;
    float vw2 = (1.0 + 3.0 * t);

    float v0 = (3.0 - 2.0 * t) / vw0 - 2.0;
    float v1 = (3.0 + t) / vw1;
    float v2 = t / vw2 + 2.0;

    float sum = 0.0;

    u0 = u0 * shadowMapSizeInv + base_uv.x;
    v0 = v0 * shadowMapSizeInv + base_uv.y;

    u1 = u1 * shadowMapSizeInv + base_uv.x;
    v1 = v1 * shadowMapSizeInv + base_uv.y;

    u2 = u2 * shadowMapSizeInv + base_uv.x;
    v2 = v2 * shadowMapSizeInv + base_uv.y;

    sum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));
    sum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));
    sum += uw2 * vw0 * textureShadow(shadowMap, vec3(u2, v0, z));

    sum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));
    sum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));
    sum += uw2 * vw1 * textureShadow(shadowMap, vec3(u2, v1, z));

    sum += uw0 * vw2 * textureShadow(shadowMap, vec3(u0, v2, z));
    sum += uw1 * vw2 * textureShadow(shadowMap, vec3(u1, v2, z));
    sum += uw2 * vw2 * textureShadow(shadowMap, vec3(u2, v2, z));

    sum *= 1.0f / 144.0;

    sum = saturate(sum);

    return sum;
}

float getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);
}

float getShadowSpotPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {
    return _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);
}
`,hE=`
float linstep(float a, float b, float v) {
    return saturate((v - a) / (b - a));
}

float reduceLightBleeding(float pMax, float amount) {
   // Remove the [0, amount] tail and linearly rescale (amount, 1].
   return linstep(amount, 1.0, pMax);
}

float chebyshevUpperBound(vec2 moments, float mean, float minVariance, float lightBleedingReduction) {
    // Compute variance
    float variance = moments.y - (moments.x * moments.x);
    variance = max(variance, minVariance);

    // Compute probabilistic upper bound
    float d = mean - moments.x;
    float pMax = variance / (variance + (d * d));

    pMax = reduceLightBleeding(pMax, lightBleedingReduction);

    // One-tailed Chebyshev
    return (mean <= moments.x ? 1.0 : pMax);
}

float calculateEVSM(vec3 moments, float Z, float vsmBias, float exponent) {
    Z = 2.0 * Z - 1.0;
    float warpedDepth = exp(exponent * Z);

    moments.xy += vec2(warpedDepth, warpedDepth*warpedDepth) * (1.0 - moments.z);

    float VSMBias = vsmBias;//0.01 * 0.25;
    float depthScale = VSMBias * exponent * warpedDepth;
    float minVariance1 = depthScale * depthScale;
    return chebyshevUpperBound(moments.xy, warpedDepth, minVariance1, 0.1);
}
`,cE=`
attribute float vertex_boneIndices;

uniform highp sampler2D texture_poseMap;
uniform vec4 texture_poseMapSize;

mat4 getBoneMatrix(const in float i) {
    float j = i * 3.0;
    float dx = texture_poseMapSize.z;
    float dy = texture_poseMapSize.w;

    float y = floor(j * dx);
    float x = j - (y * texture_poseMapSize.x);
    y = dy * (y + 0.5);

    // read elements of 4x3 matrix
    vec4 v1 = texture2D(texture_poseMap, vec2(dx * (x + 0.5), y));
    vec4 v2 = texture2D(texture_poseMap, vec2(dx * (x + 1.5), y));
    vec4 v3 = texture2D(texture_poseMap, vec2(dx * (x + 2.5), y));

    // transpose to 4x4 matrix
    return mat4(
        v1.x, v2.x, v3.x, 0,
        v1.y, v2.y, v3.y, 0,
        v1.z, v2.z, v3.z, 0,
        v1.w, v2.w, v3.w, 1
    );
}
`,dE=`

attribute vec4 vertex_boneWeights;
attribute vec4 vertex_boneIndices;

uniform highp sampler2D texture_poseMap;
uniform vec4 texture_poseMapSize;

void getBoneMatrix(const in float index, out vec4 v1, out vec4 v2, out vec4 v3) {

    float i = float(index);
    float j = i * 3.0;
    float dx = texture_poseMapSize.z;
    float dy = texture_poseMapSize.w;
    
    float y = floor(j * dx);
    float x = j - (y * texture_poseMapSize.x);
    y = dy * (y + 0.5);

    // read elements of 4x3 matrix
    v1 = texture2D(texture_poseMap, vec2(dx * (x + 0.5), y));
    v2 = texture2D(texture_poseMap, vec2(dx * (x + 1.5), y));
    v3 = texture2D(texture_poseMap, vec2(dx * (x + 2.5), y));
}

mat4 getSkinMatrix(const in vec4 indices, const in vec4 weights) {
    // get 4 bone matrices
    vec4 a1, a2, a3;
    getBoneMatrix(indices.x, a1, a2, a3);

    vec4 b1, b2, b3;
    getBoneMatrix(indices.y, b1, b2, b3);

    vec4 c1, c2, c3;
    getBoneMatrix(indices.z, c1, c2, c3);

    vec4 d1, d2, d3;
    getBoneMatrix(indices.w, d1, d2, d3);

    // multiply them by weights and add up to get final 4x3 matrix
    vec4 v1 = a1 * weights.x + b1 * weights.y + c1 * weights.z + d1 * weights.w;
    vec4 v2 = a2 * weights.x + b2 * weights.y + c2 * weights.z + d2 * weights.w;
    vec4 v3 = a3 * weights.x + b3 * weights.y + c3 * weights.z + d3 * weights.w;

    // add up weights
    float one = dot(weights, vec4(1.0));

    // transpose to 4x4 matrix
    return mat4(
        v1.x, v2.x, v3.x, 0,
        v1.y, v2.y, v3.y, 0,
        v1.z, v2.z, v3.z, 0,
        v1.w, v2.w, v3.w, one
    );
}
`,uE=`
    #include "envMultiplyPS"
    #include "gammaPS"
    #include "tonemappingPS"

    varying vec3 vViewDir;
    uniform float skyboxHighlightMultiplier;

    #ifdef SKY_CUBEMAP

        uniform samplerCube texture_cubeMap;

        #ifdef SKYMESH
            varying vec3 vWorldPos;
            uniform mat3 cubeMapRotationMatrix;
            uniform vec3 projectedSkydomeCenter;
        #endif

    #else // env-atlas

        #include "sphericalPS"
        #include "envAtlasPS"

        uniform sampler2D texture_envAtlas;
        uniform float mipLevel;

    #endif

    void main(void) {

        #ifdef SKY_CUBEMAP

            #ifdef SKYMESH

                // get vector from world space pos to tripod origin
                vec3 envDir = normalize(vWorldPos - projectedSkydomeCenter);
                vec3 dir = envDir * cubeMapRotationMatrix;

            #else

                vec3 dir = vViewDir;

            #endif

            dir.x *= -1.0;
            vec3 linear = __INJECT_SKYBOX_DECODE_FNC(textureCube(texture_cubeMap, dir));

        #else // env-atlas

            vec3 dir = vViewDir * vec3(-1.0, 1.0, 1.0);
            vec2 uv = toSphericalUv(normalize(dir));

            vec3 linear = __INJECT_SKYBOX_DECODE_FNC(texture2D(texture_envAtlas, mapRoughnessUv(uv, mipLevel)));

        #endif

        // our HDR encodes values up to 64, so allow extra brightness for the clipped values
        if (any(greaterThanEqual(linear, vec3(64.0)))) {
            linear *= skyboxHighlightMultiplier;
        }

        gl_FragColor = vec4(gammaCorrectOutput(toneMap(processEnvironment(linear))), 1.0);
    }
`,fE=`
attribute vec3 aPosition;

#ifndef VIEWMATRIX
#define VIEWMATRIX
uniform mat4 matrix_view;
#endif

uniform mat4 matrix_projectionSkybox;
uniform mat3 cubeMapRotationMatrix;

varying vec3 vViewDir;

#ifdef SKYMESH
    uniform mat4 matrix_model;
    varying vec3 vWorldPos;
#endif

void main(void) {

    mat4 view = matrix_view;

    #ifdef SKYMESH

        vec4 worldPos = matrix_model * vec4(aPosition, 1.0);
        vWorldPos = worldPos.xyz;
        gl_Position = matrix_projectionSkybox * view * worldPos;

    #else

        view[3][0] = view[3][1] = view[3][2] = 0.0;
        gl_Position = matrix_projectionSkybox * view * vec4(aPosition, 1.0);
        vViewDir = aPosition * cubeMapRotationMatrix;

    #endif

    // Force skybox to far Z, regardless of the clip planes on the camera
    // Subtract a tiny fudge factor to ensure floating point errors don't
    // still push pixels beyond far Z. See:
    // https://community.khronos.org/t/skybox-problem/61857

    gl_Position.z = gl_Position.w - 1.0e-7;
}
`,pE=`

#ifdef MAPCOLOR
uniform vec3 material_specular;
#endif

void getSpecularity() {
    vec3 specularColor = vec3(1,1,1);

    #ifdef MAPCOLOR
    specularColor *= material_specular;
    #endif

    #ifdef MAPTEXTURE
    specularColor *= $DECODE(texture2DBias($SAMPLER, $UV, textureBias)).$CH;
    #endif

    #ifdef MAPVERTEX
    specularColor *= saturate(vVertexColor.$VC);
    #endif

    dSpecularity = specularColor;
}
`,mE=`
// equirectangular helper functions
const float PI = 3.141592653589793;

vec2 toSpherical(vec3 dir) {
    return vec2(dir.xz == vec2(0.0) ? 0.0 : atan(dir.x, dir.z), asin(dir.y));
}

vec2 toSphericalUv(vec3 dir) {
    vec2 uv = toSpherical(dir) / vec2(PI * 2.0, PI) + 0.5;
    return vec2(uv.x, 1.0 - uv.y);
}
`,_E=`

#ifdef MAPFLOAT
uniform float material_specularityFactor;
#endif

void getSpecularityFactor() {
    float specularityFactor = 1.0;

    #ifdef MAPFLOAT
    specularityFactor *= material_specularityFactor;
    #endif

    #ifdef MAPTEXTURE
    specularityFactor *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    specularityFactor *= saturate(vVertexColor.$VC);
    #endif

    dSpecularityFactor = specularityFactor;
}
`,gE=`
float getSpotEffect(vec3 lightSpotDir, float lightInnerConeAngle, float lightOuterConeAngle, vec3 lightDirNorm) {
    float cosAngle = dot(lightDirNorm, lightSpotDir);
    return smoothstep(lightOuterConeAngle, lightInnerConeAngle, cosAngle);
}
`,yE=`
void main(void) {
    dReflection = vec4(0);

    #ifdef LIT_CLEARCOAT
    ccSpecularLight = vec3(0);
    ccReflection = vec3(0);
    #endif
`,xE=`
void main(void) {
    gl_Position = getPosition();
`,SE=`
    nineSlicedUv = vUv0;
    nineSlicedUv.y = 1.0 - nineSlicedUv.y;

`,vE=`
    vec2 tileMask = step(vMask, vec2(0.99999));
    vec2 tileSize = 0.5 * (innerOffset.xy + innerOffset.zw);
    vec2 tileScale = vec2(1.0) / (vec2(1.0) - tileSize);
    vec2 clampedUv = mix(innerOffset.xy * 0.5, vec2(1.0) - innerOffset.zw * 0.5, fract((vTiledUv - tileSize) * tileScale));
    clampedUv = clampedUv * atlasRect.zw + atlasRect.xy;
    nineSlicedUv = vUv0 * tileMask + clampedUv * (vec2(1.0) - tileMask);
    nineSlicedUv.y = 1.0 - nineSlicedUv.y;
    
`,bE=`
float exponent = VSM_EXPONENT;

depth = 2.0 * depth - 1.0;
depth =  exp(exponent * depth);
gl_FragColor = vec4(depth, depth*depth, 1.0, 1.0);
`,wE=`
vec3 getTangent() {
    return normalize(dNormalMatrix * vertex_tangent.xyz);
}

vec3 getBinormal() {
    return cross(vNormalW, vTangentW) * vertex_tangent.w;
}
`,TE=`
void getTBN(vec3 tangent, vec3 binormal, vec3 normal) {
    dTBN = mat3(normalize(tangent), normalize(binormal), normalize(normal));
}
`,AE=`
uniform float tbnBasis;

// http://www.thetenthplanet.de/archives/1180
void getTBN(vec3 tangent, vec3 binormal, vec3 normal) {
    vec2 uv = $UV;

    // get edge vectors of the pixel triangle
    vec3 dp1 = dFdx( vPositionW );
    vec3 dp2 = dFdy( vPositionW );
    vec2 duv1 = dFdx( uv );
    vec2 duv2 = dFdy( uv );

    // solve the linear system
    vec3 dp2perp = cross( dp2, normal );
    vec3 dp1perp = cross( normal, dp1 );
    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;
    vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;

    // construct a scale-invariant frame
    float denom = max( dot(T,T), dot(B,B) );
    float invmax = (denom == 0.0) ? 0.0 : tbnBasis / sqrt( denom );
    dTBN = mat3(T * invmax, -B * invmax, normal );
}
`,EE=`
void getTBN(vec3 tangent, vec3 binormal, vec3 normal) {

    vec3 B = cross(normal, vObjectSpaceUpW);
    vec3 T = cross(normal, B);

    if (dot(B,B)==0.0) // deal with case when vObjectSpaceUpW normal are parallel
    {
        float major=max(max(normal.x, normal.y), normal.z);

        if (normal.x == major)
        {
            B=cross(normal, vec3(0,1,0));
            T=cross(normal, B);
        }
        else if (normal.y == major)
        {
            B=cross(normal, vec3(0,0,1));
            T=cross(normal, B);
        }
        else if (normal.z == major)
        {
            B=cross(normal, vec3(1,0,0));
            T=cross(normal, B);
        }
    }

    dTBN = mat3(normalize(T), normalize(B), normalize(normal));
}
`,CE=`
#ifdef MAPFLOAT
uniform float material_thickness;
#endif

void getThickness() {
    dThickness = 1.0;

    #ifdef MAPFLOAT
    dThickness *= material_thickness;
    #endif

    #ifdef MAPTEXTURE
    dThickness *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    dThickness *= saturate(vVertexColor.$VC);
    #endif
}
`,ME=`

#if (TONEMAP == NONE)
    #include "tonemappingNonePS"
#elif TONEMAP == FILMIC
    #include "tonemappingFilmicPS"
#elif TONEMAP == LINEAR
    #include "tonemappingLinearPS"
#elif TONEMAP == HEJL
    #include "tonemappingHejlPS"
#elif TONEMAP == ACES
    #include "tonemappingAcesPS"
#elif TONEMAP == ACES2
    #include "tonemappingAces2PS"
#elif TONEMAP == NEUTRAL
    #include "tonemappingNeutralPS"
#endif

`,PE=`
uniform float exposure;

vec3 toneMap(vec3 color) {
    float tA = 2.51;
    float tB = 0.03;
    float tC = 2.43;
    float tD = 0.59;
    float tE = 0.14;
    vec3 x = color * exposure;
    return (x*(tA*x+tB))/(x*(tC*x+tD)+tE);
}
`,RE=`
uniform float exposure;

// ACES approximation by Stephen Hill

// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT
const mat3 ACESInputMat = mat3(
    0.59719, 0.35458, 0.04823,
    0.07600, 0.90834, 0.01566,
    0.02840, 0.13383, 0.83777
);

// ODT_SAT => XYZ => D60_2_D65 => sRGB
const mat3 ACESOutputMat = mat3(
     1.60475, -0.53108, -0.07367,
    -0.10208,  1.10813, -0.00605,
    -0.00327, -0.07276,  1.07602
);

vec3 RRTAndODTFit(vec3 v) {
    vec3 a = v * (v + 0.0245786) - 0.000090537;
    vec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;
    return a / b;
}

vec3 toneMap(vec3 color) {
    color *= exposure / 0.6;
    color = color * ACESInputMat;

    // Apply RRT and ODT
    color = RRTAndODTFit(color);
    color = color * ACESOutputMat;

    // Clamp to [0, 1]
    color = clamp(color, 0.0, 1.0);

    return color;
}
`,IE=`
const float A =  0.15;
const float B =  0.50;
const float C =  0.10;
const float D =  0.20;
const float E =  0.02;
const float F =  0.30;
const float W =  11.2;

uniform float exposure;

vec3 uncharted2Tonemap(vec3 x) {
   return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;
}

vec3 toneMap(vec3 color) {
    color = uncharted2Tonemap(color * exposure);
    vec3 whiteScale = 1.0 / uncharted2Tonemap(vec3(W,W,W));
    color = color * whiteScale;

    return color;
}
`,DE=`
uniform float exposure;

vec3 toneMap(vec3 color) {
    color *= exposure;
    const float  A = 0.22, B = 0.3, C = .1, D = 0.2, E = .01, F = 0.3;
    const float Scl = 1.25;

    vec3 h = max( vec3(0.0), color - vec3(0.004) );
    return (h*((Scl*A)*h+Scl*vec3(C*B,C*B,C*B))+Scl*vec3(D*E,D*E,D*E)) / (h*(A*h+vec3(B,B,B))+vec3(D*F,D*F,D*F)) - Scl*vec3(E/F,E/F,E/F);
}
`,LE=`
uniform float exposure;

vec3 toneMap(vec3 color) {
    return color * exposure;
}
`,FE=`
uniform float exposure;

vec3 toneMap(vec3 color) {

    color *= exposure;

    float startCompression = 0.8 - 0.04;
    float desaturation = 0.15;

    float x = min(color.r, min(color.g, color.b));
    float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
    color -= offset;

    float peak = max(color.r, max(color.g, color.b));
    if (peak < startCompression) return color;

    float d = 1. - startCompression;
    float newPeak = 1. - d * d / (peak + d - startCompression);
    color *= newPeak / peak;

    float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
    return mix(color, newPeak * vec3(1, 1, 1), g);
}
`,kE=`
vec3 toneMap(vec3 color) {
    return color;
}
`,OE=`
#ifdef PIXELSNAP
uniform vec4 uScreenSize;
#endif

#ifdef SCREENSPACE
uniform float projectionFlipY;
#endif

vec4 evalWorldPosition(vec3 vertexPosition, mat4 modelMatrix) {

    vec3 localPos = getLocalPosition(vertexPosition);

    #ifdef NINESLICED
        // outer and inner vertices are at the same position, scale both
        localPos.xz *= outerScale;

        // offset inner vertices inside
        // (original vertices must be in [-1;1] range)
        vec2 positiveUnitOffset = clamp(vertexPosition.xz, vec2(0.0), vec2(1.0));
        vec2 negativeUnitOffset = clamp(-vertexPosition.xz, vec2(0.0), vec2(1.0));
        localPos.xz += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;

        vTiledUv = (localPos.xz - outerScale + innerOffset.xy) * -0.5 + 1.0; // uv = local pos - inner corner

        localPos.xz *= -0.5; // move from -1;1 to -0.5;0.5
        localPos = localPos.xzy;
    #endif

    vec4 posW = modelMatrix * vec4(localPos, 1.0);

    #ifdef SCREENSPACE
        posW.zw = vec2(0.0, 1.0);
    #endif

    return posW;
}

vec4 getPosition() {

    dModelMatrix = getModelMatrix();

    vec4 posW = evalWorldPosition(vertex_position.xyz, dModelMatrix);
    dPositionW = posW.xyz;

    vec4 screenPos;
    #ifdef UV1LAYOUT
    screenPos = vec4(vertex_texCoord1.xy * 2.0 - 1.0, 0.5, 1);
        #ifdef WEBGPU
        screenPos.y *= -1.0;
        #endif
    #else
    #ifdef SCREENSPACE
    screenPos = posW;
    screenPos.y *= projectionFlipY;
    #else
    screenPos = matrix_viewProjection * posW;
    #endif

    #ifdef PIXELSNAP
    // snap vertex to a pixel boundary
    screenPos.xy = (screenPos.xy * 0.5) + 0.5;
    screenPos.xy *= uScreenSize.xy;
    screenPos.xy = floor(screenPos.xy);
    screenPos.xy *= uScreenSize.zw;
    screenPos.xy = (screenPos.xy * 2.0) - 1.0;
    #endif
    #endif

    return screenPos;
}

vec3 getWorldPosition() {
    return dPositionW;
}
`,BE=`

attribute vec4 vertex_position;

uniform mat4 matrix_viewProjection;
uniform mat4 matrix_model;
uniform mat3 matrix_normal;

#ifdef MORPHING
    uniform vec2 morph_tex_params;
    attribute uint morph_vertex_id;

    ivec2 getTextureMorphCoords() {

        // turn morph_vertex_id into int grid coordinates
        ivec2 textureSize = ivec2(morph_tex_params);
        int morphGridV = int(morph_vertex_id) / textureSize.x;
        int morphGridU = int(morph_vertex_id) - (morphGridV * textureSize.x);
        #ifdef WEBGPU
            // flipY
            morphGridV = textureSize.y - morphGridV - 1;
        #endif
        return ivec2(morphGridU, morphGridV);
    }

    #ifdef MORPHING_POSITION
        #ifdef MORPHING_INT
            uniform vec3 aabbSize;
            uniform vec3 aabbMin;
            uniform usampler2D morphPositionTex;
        #else
            uniform highp sampler2D morphPositionTex;
        #endif
    #endif
#endif

#ifdef defined(BATCH)
    #include "skinBatchVS"

    mat4 getModelMatrix() {
        return getBoneMatrix(vertex_boneIndices);
    }

#elif defined(SKIN)
    #include "skinVS"

    mat4 getModelMatrix() {
        return matrix_model * getSkinMatrix(vertex_boneIndices, vertex_boneWeights);
    }

#elif defined(INSTANCING)

    #include "transformInstancingVS"

#else

    mat4 getModelMatrix() {
        return matrix_model;
    }

#endif

vec3 getLocalPosition(vec3 vertexPosition) {

    vec3 localPos = vertexPosition;

    #ifdef MORPHING_POSITION

        ivec2 morphUV = getTextureMorphCoords();

        #ifdef MORPHING_INT
            vec3 morphPos = vec3(texelFetch(morphPositionTex, ivec2(morphUV), 0).xyz) / 65535.0 * aabbSize + aabbMin;
        #else
            vec3 morphPos = texelFetch(morphPositionTex, ivec2(morphUV), 0).xyz;
        #endif

        localPos += morphPos;

    #endif

    return localPos;
}

`,NE=`

attribute vec4 instance_line1;
attribute vec4 instance_line2;
attribute vec4 instance_line3;
attribute vec4 instance_line4;

mat4 getModelMatrix() {
    return matrix_model * mat4(instance_line1, instance_line2, instance_line3, instance_line4);
}
`,zE=`

#ifdef MAPFLOAT
uniform float material_refraction;
#endif

void getRefraction() {
    float refraction = 1.0;

    #ifdef MAPFLOAT
    refraction = material_refraction;
    #endif

    #ifdef MAPTEXTURE
    refraction *= texture2DBias($SAMPLER, $UV, textureBias).$CH;
    #endif

    #ifdef MAPVERTEX
    refraction *= saturate(vVertexColor.$VC);
    #endif

    dTransmission = refraction;
}
`,UE=`
uniform float twoSidedLightingNegScaleFactor;
void handleTwoSidedLighting() {
    dTBN[2] *= gl_FrontFacing ? twoSidedLightingNegScaleFactor : -twoSidedLightingNegScaleFactor;
}
`,VE=`
#ifdef NINESLICED
vec2 getUv0() {
    vec2 uv = vertex_position.xz;

    // offset inner vertices inside
    // (original vertices must be in [-1;1] range)
    vec2 positiveUnitOffset = clamp(vertex_position.xz, vec2(0.0), vec2(1.0));
    vec2 negativeUnitOffset = clamp(-vertex_position.xz, vec2(0.0), vec2(1.0));
    uv += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;

    uv = uv * -0.5 + 0.5;
    uv = uv * atlasRect.zw + atlasRect.xy;

    vMask = vertex_texCoord0.xy;

    return uv;
}
#else
vec2 getUv0() {
    return vertex_texCoord0;
}
#endif
`,GE=`
vec2 getUv1() {
    return vertex_texCoord1;
}
`,HE=`
void getViewDir() {
    dViewDirW = normalize(view_position - vPositionW);
}
`,WE=`
#ifndef VIEWMATRIX
#define VIEWMATRIX
uniform mat4 matrix_view;
#endif

vec3 getViewNormal() {
    return mat3(matrix_view) * vNormalW;
}
`,j={alphaTestPS:hw,ambientConstantPS:cw,ambientEnvPS:dw,ambientSHPS:uw,aoPS:fw,aoDetailMapPS:pw,aoDiffuseOccPS:mw,aoSpecOccPS:_w,aoSpecOccConstPS:gw,aoSpecOccConstSimplePS:yw,aoSpecOccSimplePS:xw,basePS:Sw,baseVS:vw,baseNineSlicedPS:bw,baseNineSlicedVS:ww,baseNineSlicedTiledPS:Tw,bayerPS:Aw,blurVSMPS:Ew,clearCoatPS:Cw,clearCoatGlossPS:Mw,clearCoatNormalPS:Pw,clusteredLightCookiesPS:Iw,clusteredLightShadowsPS:Dw,clusteredLightUtilsPS:Rw,clusteredLightPS:Lw,combinePS:Fw,cookiePS:kw,cubeMapProjectBoxPS:Ow,cubeMapProjectNonePS:Bw,cubeMapRotatePS:Nw,debugOutputPS:zw,debugProcessFrontendPS:Uw,detailModesPS:Vw,diffusePS:Gw,diffuseDetailMapPS:Hw,decodePS:v0,emissivePS:Ww,encodePS:b0,endPS:$w,endVS:qw,envAtlasPS:Xw,envConstPS:jw,envMultiplyPS:Yw,falloffInvSquaredPS:Kw,falloffLinearPS:Zw,floatUnpackingPS:Qw,floatAsUintPS:Jw,fogPS:eT,fresnelSchlickPS:tT,fullscreenQuadPS:sT,fullscreenQuadVS:iT,gammaPS:rT,gles3PS:e0,gles3VS:t0,glossPS:nT,gsplatCenterVS:aT,gsplatCornerVS:uT,gsplatColorVS:oT,gsplatThresholdVS:lT,gsplatCommonVS:hT,gsplatCompressedDataVS:cT,gsplatCompressedSHVS:dT,gsplatDataVS:fT,gsplatOutputVS:pT,gsplatPS:mT,gsplatSHVS:_T,gsplatSourceVS:gT,gsplatVS:yT,iridescenceDiffractionPS:xT,iridescencePS:ST,iridescenceThicknessPS:vT,iorPS:bT,lightDiffuseLambertPS:wT,lightDirPointPS:TT,lightmapAddPS:AT,lightmapDirAddPS:ET,lightmapDirPS:CT,lightmapSinglePS:MT,lightSpecularAnisoGGXPS:PT,lightSpecularBlinnPS:RT,lightSheenPS:IT,linearizeDepthPS:DT,litShaderArgsPS:LT,ltcPS:FT,metalnessPS:kT,metalnessModulatePS:BT,msdfPS:OT,msdfVS:NT,normalVS:zT,normalCoreVS:UT,normalDetailMapPS:VT,normalMapPS:GT,normalXYPS:HT,normalXYZPS:WT,opacityPS:$T,opacityDitherPS:qT,outputPS:XT,outputAlphaPS:jT,outputAlphaOpaquePS:YT,outputAlphaPremulPS:KT,outputTex2DPS:ZT,sheenPS:QT,sheenGlossPS:JT,parallaxPS:eA,particlePS:tA,particleVS:sA,particleAnimFrameClampVS:iA,particleAnimFrameLoopVS:rA,particleAnimTexVS:nA,particleInputFloatPS:aA,particleInputRgba8PS:oA,particleOutputFloatPS:lA,particleOutputRgba8PS:hA,particleUpdaterAABBPS:cA,particleUpdaterEndPS:dA,particleUpdaterInitPS:uA,particleUpdaterNoRespawnPS:fA,particleUpdaterOnStopPS:pA,particleUpdaterRespawnPS:mA,particleUpdaterSpherePS:_A,particleUpdaterStartPS:gA,particle_billboardVS:yA,particle_blendAddPS:xA,particle_blendMultiplyPS:SA,particle_blendNormalPS:vA,particle_cpuVS:bA,particle_cpu_endVS:wA,particle_customFaceVS:TA,particle_endPS:AA,particle_endVS:EA,particle_halflambertPS:CA,particle_initVS:MA,particle_lambertPS:PA,particle_lightingPS:RA,particle_localShiftVS:IA,particle_meshVS:DA,particle_normalVS:LA,particle_normalMapPS:FA,particle_pointAlongVS:kA,particle_softPS:OA,particle_softVS:BA,particle_stretchVS:NA,particle_TBNVS:zA,particle_wrapVS:UA,pickPS:VA,reflDirPS:GA,reflDirAnisoPS:HA,reflectionCCPS:WA,reflectionCubePS:$A,reflectionEnvHQPS:qA,reflectionEnvPS:XA,reflectionSpherePS:jA,reflectionSheenPS:YA,refractionCubePS:KA,refractionDynamicPS:ZA,reprojectPS:QA,sampleCatmullRomPS:JA,screenDepthPS:eE,shadowCascadesPS:tE,shadowEVSMPS:sE,shadowEVSMnPS:iE,shadowPCSSPS:rE,shadowSampleCoordPS:nE,shadowSoftPS:aE,shadowStandardPS:oE,shadowStandardGL2PS:lE,shadowVSM_commonPS:hE,skinBatchVS:cE,skinVS:dE,skyboxPS:uE,skyboxVS:fE,specularPS:pE,sphericalPS:mE,specularityFactorPS:_E,spotPS:gE,startPS:yE,startVS:xE,startNineSlicedPS:SE,startNineSlicedTiledPS:vE,storeEVSMPS:bE,tangentBinormalVS:wE,TBNPS:TE,TBNderivativePS:AE,TBNObjectSpacePS:EE,thicknessPS:CE,tonemappingPS:ME,tonemappingAcesPS:PE,tonemappingAces2PS:RE,tonemappingFilmicPS:IE,tonemappingHejlPS:DE,tonemappingLinearPS:LE,tonemappingNeutralPS:FE,tonemappingNonePS:kE,transformVS:OE,transformCoreVS:BE,transformInstancingVS:NE,transmissionPS:zE,twoSidedLightingPS:UE,uv0VS:VE,uv1VS:GE,viewDirPS:HE,viewNormalVS:WE,webgpuPS:s0,webgpuVS:i0},w0=new Ht;function za(l){const t=w0.get(l);return b.assert(t),t}function $E(l,t){b.assert(t),w0.get(l,()=>t)}class Nt{static begin(){return`void main(void)
{
`}static end(){return`}
`}static definesHash(t){const e=Array.from(t).sort((s,i)=>s[0]>i[0]?1:-1);return cn(JSON.stringify(e))}}const qE=new Ht;class XE{constructor(t,e,s={}){c(this,"index");c(this,"name");c(this,"defines",new Map);b.assert(/^[a-z]\w*$/i.test(t),`ShaderPass name can only contain letters, numbers and underscores and start with a letter: ${t}`),this.name=t,this.index=e,Object.assign(this,s),this.buildShaderDefines()}buildShaderDefines(){let t;this.isShadow?t="SHADOW":this.isForward?t="FORWARD":this.index===ll?t="DEPTH":this.index===Na&&(t="PICK"),this.defines.set(`${t}_PASS`,""),this.defines.set(`${this.name.toUpperCase()}_PASS`,"")}}class ti{constructor(){c(this,"passesNamed",new Map);c(this,"passesIndexed",[]);c(this,"nextIndex",0);const t=(e,s,i)=>{const r=this.allocate(e,i);b.assert(r.index===s)};t("forward",xn,{isForward:!0}),t("prepass",ol),t("depth",ll),t("pick",Na),t("shadow",Fp)}static get(t){return b.assert(t),qE.get(t,()=>new ti)}allocate(t,e){let s=this.passesNamed.get(t);return s===void 0&&(s=new XE(t,this.nextIndex,e),this.passesNamed.set(s.name,s),this.passesIndexed[s.index]=s,this.nextIndex++),s}getByIndex(t){const e=this.passesIndexed[t];return b.assert(e),e}getByName(t){return this.passesNamed.get(t)}}function Bs(l,t,e,s,i,r=!1,n={}){b.assert(!0),typeof r=="boolean"?n.useTransformFeedback=r:typeof r=="object"&&(n={...n,...r});const a=za(l);let o=a.getCachedShader(s);return o||(o=new r0(l,Ft.createDefinition(l,{...n,name:s,vertexCode:t,fragmentCode:e,attributes:i})),a.setCachedShader(s,o)),o}class jE extends Nt{constructor(t,e){super(),this.key=t,this.shaderDefinition=e}generateKey(t){return this.key}createShaderDefinition(t,e){return this.shaderDefinition}}function YE(l,t){b.assert(l);const e=l.definition,i=`${e.name??"shader"}-id-${l.id}`,r=new jE(i,e),n="shader",a=za(l.device);b.assert(!a.isRegistered(n)),a.register(n,r);const o=a.getProgram(n,{},t);return l.definition.shaderLanguage===Fh&&(o.meshUniformBufferFormat=e.meshUniformBufferFormat,o.meshBindGroupFormat=e.meshBindGroupFormat),a.unregister(n),o}const Op=(l,t)=>{const e=new Map(l.defines);return t.cameraShaderParams.defines.forEach((i,r)=>e.set(r,i)),ti.get(t.device).getByIndex(t.pass).defines.forEach((i,r)=>e.set(r,i)),e},KE={type:lr,base:0,count:4,indexed:!1},$a=new ee,qa=new ee,yd=new Ky;class Gu{constructor(t){c(this,"uniformBuffer");c(this,"bindGroup");const e=t.device;if(this.shader=t,b.assert(t),e.supportsUniformBuffers){const s=new Jc;this.shader=YE(t,s);const i=this.shader.meshUniformBufferFormat;i&&(this.uniformBuffer=new vp(e,i,!1));const r=this.shader.meshBindGroupFormat;b.assert(r),this.bindGroup=new xp(e,r),gn.setName(this.bindGroup,`QuadRender-MeshBindGroup_${this.bindGroup.id}`)}}destroy(){var t,e;(t=this.uniformBuffer)==null||t.destroy(),this.uniformBuffer=null,(e=this.bindGroup)==null||e.destroy(),this.bindGroup=null}render(t,e){const s=this.shader.device;G.pushGpuMarker(s,"QuadRender"),t&&($a.set(s.vx,s.vy,s.vw,s.vh),qa.set(s.sx,s.sy,s.sw,s.sh),e=e??t,s.setViewport(t.x,t.y,t.z,t.w),s.setScissor(e.x,e.y,e.z,e.w)),s.setVertexBuffer(s.quadVertexBuffer,0);const i=this.shader;if(s.setShader(i),s.supportsUniformBuffers){s.setBindGroup(Bh,s.emptyBindGroup);const r=this.bindGroup;r.update(),s.setBindGroup(jy,r);const n=this.uniformBuffer;n?(n.update(yd),s.setBindGroup(Ru,yd.bindGroup,yd.offsets)):s.setBindGroup(Ru,s.emptyBindGroup)}s.draw(KE),t&&(s.setViewport($a.x,$a.y,$a.z,$a.w),s.setScissor(qa.x,qa.y,qa.z,qa.w)),G.popGpuMarker(s)}}class ZE extends gs{constructor(t,e,s,i){super(t),this.quad=e,this.rect=s,this.scissorRect=i}execute(){const{device:t}=this;G.pushGpuMarker(t,`${this.name}:${this.quad.shader.name}`),t.setCullMode(vt),t.setDepthState(us.NODEPTH),t.setStencilState(null,null),this.quad.render(this.rect,this.scissorRect),G.popGpuMarker(t)}}const QE=new ee;function fn(l,t,e,s,i){b.assert(t!==void 0);const r=arguments[5];b.call(()=>{r!==void 0&&b.warnOnce("pc.drawQuadWithShader no longer accepts useBlend parameter, and blending state needs to be set up using GraphicsDevice.setBlendState.")});const n=new Gu(e);s||(s=QE,s.x=0,s.y=0,s.z=t?t.width:l.width,s.w=t?t.height:l.height);const a=new ZE(l,n,s,i);a.init(t),a.colorOps.clear=!1,a.depthStencilOps.clearDepth=!1,l.isWebGPU&&t===null&&l.samples>1&&(a.colorOps.store=!0),a.render(),n.destroy()}class Um{constructor(t,e,s){c(this,"_aabb",new ve);c(this,"origMeshInstances");c(this,"meshInstance",null);c(this,"dynamic");c(this,"batchGroupId");this.origMeshInstances=t,this.dynamic=e,this.batchGroupId=s}destroy(t,e){this.meshInstance&&(this.removeFromLayers(t,e),this.meshInstance.destroy(),this.meshInstance=null)}addToLayers(t,e){for(let s=0;s<e.length;s++){const i=t.layers.getLayerById(e[s]);i&&i.addMeshInstances([this.meshInstance])}}removeFromLayers(t,e){for(let s=0;s<e.length;s++){const i=t.layers.getLayerById(e[s]);i&&i.removeMeshInstances([this.meshInstance])}}updateBoundingBox(){this._aabb.copy(this.origMeshInstances[0].aabb);for(let t=1;t<this.origMeshInstances.length;t++)this._aabb.add(this.origMeshInstances[t].aabb);this.meshInstance.aabb=this._aabb,this.meshInstance._aabbVer=0}get model(){b.removed("pc.Batch#model was removed. Use pc.Batch#meshInstance to access batched mesh instead.")}}class rt{constructor(t,e,s,i,r=[zi]){c(this,"_ui",!1);c(this,"_sprite",!1);c(this,"_obj",{model:[],element:[],sprite:[],render:[]});c(this,"id");c(this,"name");c(this,"dynamic");c(this,"maxAabbSize");c(this,"layers");this.id=t,this.name=e,this.dynamic=s,this.maxAabbSize=i,this.layers=r}}c(rt,"MODEL","model"),c(rt,"ELEMENT","element"),c(rt,"SPRITE","sprite"),c(rt,"RENDER","render");const Vm=new q;class hl{constructor(t){c(this,"bones");c(this,"boneTextureSize");this._dirty=!0,this._rootBone=null,this._skinUpdateIndex=-1,this._updateBeforeCull=!0,t&&this.initSkin(t)}set rootBone(t){this._rootBone=t}get rootBone(){return this._rootBone}init(t,e){const s=e*3;let i=Math.ceil(Math.sqrt(s));i=z.roundUp(i,3);const r=Math.ceil(s/i);this.boneTexture=new ce(t,{width:i,height:r,format:et,mipmaps:!1,minFilter:fe,magFilter:fe,name:"skin"}),this.boneTextureSize=[i,r,1/i,1/r],this.matrixPalette=this.boneTexture.lock({mode:ky}),this.boneTexture.unlock()}destroy(){this.boneTexture&&(this.boneTexture.destroy(),this.boneTexture=null)}resolve(t,e){this.rootBone=t;const s=this.skin,i=[];for(let r=0;r<s.boneNames.length;r++){const n=s.boneNames[r];let a=t.findByName(n);a||(b.error(`Failed to find bone [${n}] in the entity hierarchy, RenderComponent on ${e.name}, rootBone: ${t.name}`),a=e),i.push(a)}this.bones=i}initSkin(t){this.skin=t,this.bones=[];const e=t.inverseBindPose.length;this.init(t.device,e),this.matrices=[];for(let s=0;s<e;s++)this.matrices[s]=new q}uploadBones(t){this.boneTexture.upload()}_updateMatrices(t,e){if(this._skinUpdateIndex!==e){this._skinUpdateIndex=e,Vm.copy(t.getWorldTransform()).invert();for(let s=this.bones.length-1;s>=0;s--)this.matrices[s].mulAffine2(Vm,this.bones[s].getWorldTransform()),this.matrices[s].mulAffine2(this.matrices[s],this.skin.inverseBindPose[s])}}updateMatrices(t,e){this._updateBeforeCull&&this._updateMatrices(t,e)}updateMatrixPalette(t,e){this._updateMatrices(t,e);const s=this.matrixPalette,i=this.bones.length;for(let r=0;r<i;r++){const n=this.matrices[r].data,a=r*12;s[a]=n[0],s[a+1]=n[4],s[a+2]=n[8],s[a+3]=n[12],s[a+4]=n[1],s[a+5]=n[5],s[a+6]=n[9],s[a+7]=n[13],s[a+8]=n[2],s[a+9]=n[6],s[a+10]=n[10],s[a+11]=n[14]}this.uploadBones(this.skin.device)}}class Gm extends hl{constructor(t,e,s){super();const i=e.length;this.init(t,i),this.device=t,this.rootNode=s,this.bones=e}updateMatrices(t,e){}updateMatrixPalette(t,e){const s=this.matrixPalette,i=this.bones.length;for(let r=0;r<i;r++){const n=this.bones[r].getWorldTransform().data,a=r*12;s[a]=n[0],s[a+1]=n[4],s[a+2]=n[8],s[a+3]=n[12],s[a+4]=n[1],s[a+5]=n[5],s[a+6]=n[9],s[a+7]=n[13],s[a+8]=n[2],s[a+9]=n[6],s[a+10]=n[10],s[a+11]=n[14]}this.uploadBones(this.device)}}let JE=0;class js{constructor(){this.initDefaults()}initDefaults(){this.recreate=!1,this.verticesUsage=ts,this.indicesUsage=ts,this.maxVertices=0,this.maxIndices=0,this.vertexCount=0,this.indexCount=0,this.vertexStreamsUpdated=!1,this.indexStreamUpdated=!1,this.vertexStreamDictionary={},this.indices=null}_changeVertexCount(t,e){this.vertexCount?b.assert(this.vertexCount===t,`Vertex stream ${e} has ${t} vertices, which does not match already set streams with ${this.vertexCount} vertices.`):this.vertexCount=t}}c(js,"DEFAULT_COMPONENTS_POSITION",3),c(js,"DEFAULT_COMPONENTS_NORMAL",3),c(js,"DEFAULT_COMPONENTS_UV",2),c(js,"DEFAULT_COMPONENTS_COLORS",4);class eC{constructor(t,e,s,i,r){this.data=t,this.componentCount=e,this.dataType=s,this.dataTypeNormalize=i,this.asInt=r}}class ke extends qc{constructor(e,s){super();c(this,"indexBuffer",[null]);c(this,"vertexBuffer",null);c(this,"primitive",[{type:0,base:0,count:0}]);c(this,"skin",null);c(this,"boneAabb",null);c(this,"_aabbVer",0);c(this,"_aabb",new ve);c(this,"_geometryData",null);c(this,"_morph",null);c(this,"_storageIndex",!1);c(this,"_storageVertex",!1);this.id=JE++,b.assert(e,"Mesh constructor takes a GraphicsDevice as a parameter, and it was not provided."),this.device=e,this._storageIndex=(s==null?void 0:s.storageIndex)||!1,this._storageVertex=(s==null?void 0:s.storageVertex)||!1}static fromGeometry(e,s,i={}){const r=new ke(e,i),{positions:n,normals:a,tangents:o,colors:h,uvs:d,uvs1:u,blendIndices:f,blendWeights:p,indices:m}=s;return n&&r.setPositions(n),a&&r.setNormals(a),o&&r.setVertexStream(si,o,4),h&&r.setColors32(h),d&&r.setUvs(0,d),u&&r.setUvs(1,u),f&&r.setVertexStream(Jt,f,4,f.length/4,Zr),p&&r.setVertexStream(ei,p,4),m&&r.setIndices(m),r.update(),r}set morph(e){e!==this._morph&&(this._morph&&this._morph.decRefCount(),this._morph=e,e&&e.incRefCount())}get morph(){return this._morph}set aabb(e){this._aabb=e,this._aabbVer++}get aabb(){return this._aabb}destroy(){const e=this.morph;e&&(this.morph=null,e.refCount<1&&e.destroy()),this.vertexBuffer&&(this.vertexBuffer.destroy(),this.vertexBuffer=null);for(let s=0;s<this.indexBuffer.length;s++)this._destroyIndexBuffer(s);this.indexBuffer.length=0,this._geometryData=null}_destroyIndexBuffer(e){this.indexBuffer[e]&&(this.indexBuffer[e].destroy(),this.indexBuffer[e]=null)}_initBoneAabbs(e){this.boneAabb=[],this.boneUsed=[];let s,i,r,n,a;const o=[],h=[],d=this.boneUsed,u=this.skin.boneNames.length;let f,p,m;for(let M=0;M<u;M++)o[M]=new A(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),h[M]=new A(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);const _=new vo(this.vertexBuffer),g=_.element[Xe],y=_.element[ei],w=_.element[Jt],C=this.vertexBuffer.numVertices;for(let M=0;M<C;M++){for(let S=0;S<4;S++)if(y.array[y.index+S]>0){const E=w.array[w.index+S];if(d[E]=!0,s=g.array[g.index],i=g.array[g.index+1],r=g.array[g.index+2],n=h[E],a=o[E],a.x>s&&(a.x=s),a.y>i&&(a.y=i),a.z>r&&(a.z=r),n.x<s&&(n.x=s),n.y<i&&(n.y=i),n.z<r&&(n.z=r),e){let T=f=s,R=p=i,D=m=r;for(let P=0;P<e.length;P++){const L=e[P],k=L.deltaPositions[M*3],H=L.deltaPositions[M*3+1],N=L.deltaPositions[M*3+2];k<0?T+=k:f+=k,H<0?R+=H:p+=H,N<0?D+=N:m+=N}a.x>T&&(a.x=T),a.y>R&&(a.y=R),a.z>D&&(a.z=D),n.x<f&&(n.x=f),n.y<p&&(n.y=p),n.z<m&&(n.z=m)}}_.next()}const x=this.vertexBuffer.getFormat().elements.find(M=>M.name===Xe);if(x&&x.normalize){const M=(()=>{switch(x.dataType){case Fc:return S=>Math.max(S/127,-1);case Zr:return S=>S/255;case kc:return S=>Math.max(S/32767,-1);case rl:return S=>S/65535;default:return S=>S}})();for(let S=0;S<u;S++)if(d[S]){const v=o[S],E=h[S];v.set(M(v.x),M(v.y),M(v.z)),E.set(M(E.x),M(E.y),M(E.z))}}for(let M=0;M<u;M++){const S=new ve;S.setMinMax(o[M],h[M]),this.boneAabb.push(S)}}_initGeometryData(){this._geometryData||(this._geometryData=new js,this.vertexBuffer&&(this._geometryData.vertexCount=this.vertexBuffer.numVertices,this._geometryData.maxVertices=this.vertexBuffer.numVertices),this.indexBuffer.length>0&&this.indexBuffer[0]&&(this._geometryData.indexCount=this.indexBuffer[0].numIndices,this._geometryData.maxIndices=this.indexBuffer[0].numIndices))}clear(e,s,i=0,r=0){this._initGeometryData(),this._geometryData.initDefaults(),this._geometryData.recreate=!0,this._geometryData.maxVertices=i,this._geometryData.maxIndices=r,this._geometryData.verticesUsage=e?ts:Ph,this._geometryData.indicesUsage=s?ts:Ph}setVertexStream(e,s,i,r,n=Re,a=!1,o=!1){this._initGeometryData();const h=r||s.length/i;this._geometryData._changeVertexCount(h,e),this._geometryData.vertexStreamsUpdated=!0,this._geometryData.vertexStreamDictionary[e]=new eC(s,i,n,a,o)}getVertexStream(e,s){let i=0,r=!1;if(this._geometryData){const n=this._geometryData.vertexStreamDictionary[e];n&&(r=!0,i=this._geometryData.vertexCount,ArrayBuffer.isView(s)?s.set(n.data):(s.length=0,s.push(n.data)))}return r||this.vertexBuffer&&(i=new vo(this.vertexBuffer).readData(e,s)),i}setPositions(e,s=js.DEFAULT_COMPONENTS_POSITION,i){this.setVertexStream(Xe,e,s,i,Re,!1)}setNormals(e,s=js.DEFAULT_COMPONENTS_NORMAL,i){this.setVertexStream(ss,e,s,i,Re,!1)}setUvs(e,s,i=js.DEFAULT_COMPONENTS_UV,r){this.setVertexStream(lm+e,s,i,r,Re,!1)}setColors(e,s=js.DEFAULT_COMPONENTS_COLORS,i){this.setVertexStream(It,e,s,i,Re,!1)}setColors32(e,s){this.setVertexStream(It,e,js.DEFAULT_COMPONENTS_COLORS,s,Zr,!0)}setIndices(e,s){this._initGeometryData(),this._geometryData.indexStreamUpdated=!0,this._geometryData.indices=e,this._geometryData.indexCount=s||e.length}getPositions(e){return this.getVertexStream(Xe,e)}getNormals(e){return this.getVertexStream(ss,e)}getUvs(e,s){return this.getVertexStream(lm+e,s)}getColors(e){return this.getVertexStream(It,e)}getIndices(e){let s=0;if(this._geometryData&&this._geometryData.indices){const i=this._geometryData.indices;if(s=this._geometryData.indexCount,ArrayBuffer.isView(e))e.set(i);else{e.length=0;for(let r=0,n=i.length;r<n;r++)e.push(i[r])}}else this.indexBuffer.length>0&&this.indexBuffer[0]&&(s=this.indexBuffer[0].readData(e));return s}update(e=Fs,s=!0){if(this._geometryData){if(s){const n=this._geometryData.vertexStreamDictionary[Xe];n&&n.componentCount===3&&(this._aabb.compute(n.data,this._geometryData.vertexCount),this._aabbVer++)}let i=this._geometryData.recreate;this._geometryData.vertexCount>this._geometryData.maxVertices&&(i=!0,this._geometryData.maxVertices=this._geometryData.vertexCount),i&&this.vertexBuffer&&(this.vertexBuffer.destroy(),this.vertexBuffer=null);let r=this._geometryData.recreate;this._geometryData.indexCount>this._geometryData.maxIndices&&(r=!0,this._geometryData.maxIndices=this._geometryData.indexCount),r&&this.indexBuffer.length>0&&this.indexBuffer[0]&&(this.indexBuffer[0].destroy(),this.indexBuffer[0]=null),this._geometryData.vertexStreamsUpdated&&this._updateVertexBuffer(),this._geometryData.indexStreamUpdated&&this._updateIndexBuffer(),this.primitive[0].type=e,this.indexBuffer.length>0&&this.indexBuffer[0]?this._geometryData.indexStreamUpdated&&(this.primitive[0].count=this._geometryData.indexCount,this.primitive[0].indexed=!0):this._geometryData.vertexStreamsUpdated&&(this.primitive[0].count=this._geometryData.vertexCount,this.primitive[0].indexed=!1),this._geometryData.vertexCount=0,this._geometryData.indexCount=0,this._geometryData.vertexStreamsUpdated=!1,this._geometryData.indexStreamUpdated=!1,this._geometryData.recreate=!1,this.updateRenderStates()}}_buildVertexFormat(e){const s=[];for(const i in this._geometryData.vertexStreamDictionary){const r=this._geometryData.vertexStreamDictionary[i];s.push({semantic:i,components:r.componentCount,type:r.dataType,normalize:r.dataTypeNormalize,asInt:r.asInt})}return new Dt(this.device,s,e)}_updateVertexBuffer(){if(!this.vertexBuffer){const i=this._geometryData.maxVertices,r=this._buildVertexFormat(i);this.vertexBuffer=new fs(this.device,r,i,{usage:this._geometryData.verticesUsage,storage:this._storageVertex})}const e=new vo(this.vertexBuffer),s=this._geometryData.vertexCount;for(const i in this._geometryData.vertexStreamDictionary){const r=this._geometryData.vertexStreamDictionary[i];e.writeData(i,r.data,s),delete this._geometryData.vertexStreamDictionary[i]}e.end()}_updateIndexBuffer(){if(this.indexBuffer.length<=0||!this.indexBuffer[0]){const s=this._geometryData.maxVertices,i=s>65535||s===0?or:Fi,r=this._storageIndex?{storage:!0}:void 0;this.indexBuffer[0]=new cr(this.device,i,this._geometryData.maxIndices,this._geometryData.indicesUsage,void 0,r)}const e=this._geometryData.indices;e&&(this.indexBuffer[0].writeData(e,this._geometryData.indexCount),this._geometryData.indices=null)}prepareRenderState(e){e===Lr?this.generateWireframe():e===Pl&&(this.primitive[Pl]={type:Dc,base:0,count:this.vertexBuffer?this.vertexBuffer.numVertices:0,indexed:!1})}updateRenderStates(){this.primitive[Pl]&&this.prepareRenderState(Pl),this.primitive[Lr]&&this.prepareRenderState(Lr)}generateWireframe(){this._destroyIndexBuffer(Lr);const e=this.vertexBuffer.numVertices,s=[];let i;if(this.indexBuffer.length>0&&this.indexBuffer[0]){const a=[[0,1],[1,2],[2,0]],o=this.primitive[bo].base,h=this.primitive[bo].count,d=this.indexBuffer[bo],u=new Nh[d.format](d.storage),f=new Set;for(let p=o;p<o+h;p+=3)for(let m=0;m<3;m++){const _=u[p+a[m][0]],g=u[p+a[m][1]],y=_>g?g*e+_:_*e+g;f.has(y)||(f.add(y),s.push(_,g))}i=d.format}else{for(let a=0;a<e;a+=3)s.push(a,a+1,a+1,a+2,a+2,a);i=s.length>65535?or:Fi}const r=new cr(this.vertexBuffer.device,i,s.length);new Nh[r.format](r.storage).set(s),r.unlock(),this.primitive[Lr]={type:Lc,base:0,count:s.length,indexed:!0},this.indexBuffer[Lr]=r}}const Hm=new q,xd=new A,Wm=new ie,Sd=new ie,$m=new A,qm=new A,tC=new q,sC=new ie,Wt=new A,Xa=new q,$t=new ie,Cn=new ie,Xm=new q,vd=new A,Il=new A;function jm(l,t){return l instanceof Function?l:e=>{let s=e[l];return s instanceof Function&&(s=s()),s===t}}function T0(l,t){if(t(l))return l;const e=l._children,s=e.length;for(let i=0;i<s;++i){const r=T0(e[i],t);if(r)return r}return null}class Oe extends de{constructor(e="Untitled"){super();c(this,"name");c(this,"tags",new yo(this));c(this,"localPosition",new A);c(this,"localRotation",new ie);c(this,"localScale",new A(1,1,1));c(this,"localEulerAngles",new A);c(this,"position",new A);c(this,"rotation",new ie);c(this,"eulerAngles",new A);c(this,"_scale",null);c(this,"localTransform",new q);c(this,"_dirtyLocal",!1);c(this,"_aabbVer",0);c(this,"_frozen",!1);c(this,"worldTransform",new q);c(this,"_dirtyWorld",!1);c(this,"_worldScaleSign",0);c(this,"_normalMatrix",new Js);c(this,"_dirtyNormal",!0);c(this,"_right",null);c(this,"_up",null);c(this,"_forward",null);c(this,"_parent",null);c(this,"_children",[]);c(this,"_graphDepth",0);c(this,"_enabled",!0);c(this,"_enabledInHierarchy",!1);c(this,"scaleCompensation",!1);this.name=e}get right(){return this._right||(this._right=new A),this.getWorldTransform().getX(this._right).normalize()}get up(){return this._up||(this._up=new A),this.getWorldTransform().getY(this._up).normalize()}get forward(){return this._forward||(this._forward=new A),this.getWorldTransform().getZ(this._forward).normalize().mulScalar(-1)}get normalMatrix(){const e=this._normalMatrix;return this._dirtyNormal&&(e.invertMat4(this.getWorldTransform()).transpose(),this._dirtyNormal=!1),e}set enabled(e){var s;this._enabled!==e&&(this._enabled=e,(e&&((s=this._parent)!=null&&s.enabled)||!e)&&this._notifyHierarchyStateChanged(this,e))}get enabled(){return this._enabled&&this._enabledInHierarchy}get parent(){return this._parent}get path(){let e=this._parent;if(!e)return"";let s=this.name;for(;e&&e._parent;)s=`${e.name}/${s}`,e=e._parent;return s}get root(){let e=this;for(;e._parent;)e=e._parent;return e}get children(){return this._children}get graphDepth(){return this._graphDepth}_notifyHierarchyStateChanged(e,s){e._onHierarchyStateChanged(s);const i=e._children;for(let r=0,n=i.length;r<n;r++)i[r]._enabled&&this._notifyHierarchyStateChanged(i[r],s)}_onHierarchyStateChanged(e){this._enabledInHierarchy=e,e&&!this._frozen&&this._unfreezeParentToRoot()}_cloneInternal(e){e.name=this.name;const s=this.tags._list;e.tags.clear();for(let i=0;i<s.length;i++)e.tags.add(s[i]);e.localPosition.copy(this.localPosition),e.localRotation.copy(this.localRotation),e.localScale.copy(this.localScale),e.localEulerAngles.copy(this.localEulerAngles),e.position.copy(this.position),e.rotation.copy(this.rotation),e.eulerAngles.copy(this.eulerAngles),e.localTransform.copy(this.localTransform),e._dirtyLocal=this._dirtyLocal,e.worldTransform.copy(this.worldTransform),e._dirtyWorld=this._dirtyWorld,e._dirtyNormal=this._dirtyNormal,e._aabbVer=this._aabbVer+1,e._enabled=this._enabled,e.scaleCompensation=this.scaleCompensation,e._enabledInHierarchy=!1}clone(){const e=new this.constructor;return this._cloneInternal(e),e}copy(e){return e._cloneInternal(this),this}destroy(){this.remove();const e=this._children;for(;e.length;){const s=e.pop();s._parent=null,s.destroy()}this.fire("destroy",this),this.off()}find(e,s){const i=[],r=jm(e,s);return this.forEach(n=>{r(n)&&i.push(n)}),i}findOne(e,s){const i=jm(e,s);return T0(this,i)}findByTag(){const e=arguments,s=[],i=(r,n)=>{n&&r.tags.has(...e)&&s.push(r);for(let a=0;a<r._children.length;a++)i(r._children[a],!0)};return i(this,!1),s}findByName(e){return this.findOne("name",e)}findByPath(e){const s=Array.isArray(e)?e:e.split("/");let i=this;for(let r=0,n=s.length;r<n;++r)if(i=i.children.find(a=>a.name===s[r]),!i)return null;return i}forEach(e,s){e.call(s,this);const i=this._children,r=i.length;for(let n=0;n<r;++n)i[n].forEach(e,s)}isDescendantOf(e){let s=this._parent;for(;s;){if(s===e)return!0;s=s._parent}return!1}isAncestorOf(e){return e.isDescendantOf(this)}getEulerAngles(){return this.getWorldTransform().getEulerAngles(this.eulerAngles),this.eulerAngles}getLocalEulerAngles(){return this.localRotation.getEulerAngles(this.localEulerAngles),this.localEulerAngles}getLocalPosition(){return this.localPosition}getLocalRotation(){return this.localRotation}getLocalScale(){return this.localScale}getLocalTransform(){return this._dirtyLocal&&(this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale),this._dirtyLocal=!1),this.localTransform}getPosition(){return this.getWorldTransform().getTranslation(this.position),this.position}getRotation(){return this.rotation.setFromMat4(this.getWorldTransform()),this.rotation}getScale(){return this._scale||(this._scale=new A),this.getWorldTransform().getScale(this._scale)}getWorldTransform(){return!this._dirtyLocal&&!this._dirtyWorld?this.worldTransform:(this._parent&&this._parent.getWorldTransform(),this._sync(),this.worldTransform)}get worldScaleSign(){return this._worldScaleSign===0&&(this._worldScaleSign=this.getWorldTransform().scaleSign),this._worldScaleSign}remove(){var e;(e=this._parent)==null||e.removeChild(this)}reparent(e,s){this.remove(),e&&(s>=0?e.insertChild(this,s):e.addChild(this))}setLocalEulerAngles(e,s,i){this.localRotation.setFromEulerAngles(e,s,i),this._dirtyLocal||this._dirtifyLocal()}setLocalPosition(e,s,i){e instanceof A?this.localPosition.copy(e):this.localPosition.set(e,s,i),this._dirtyLocal||this._dirtifyLocal()}setLocalRotation(e,s,i,r){e instanceof ie?this.localRotation.copy(e):this.localRotation.set(e,s,i,r),this._dirtyLocal||this._dirtifyLocal()}setLocalScale(e,s,i){e instanceof A?this.localScale.copy(e):this.localScale.set(e,s,i),this._dirtyLocal||this._dirtifyLocal()}_dirtifyLocal(){this._dirtyLocal||(this._dirtyLocal=!0,this._dirtyWorld||this._dirtifyWorld())}_unfreezeParentToRoot(){let e=this._parent;for(;e;)e._frozen=!1,e=e._parent}_dirtifyWorld(){this._dirtyWorld||this._unfreezeParentToRoot(),this._dirtifyWorldInternal()}_dirtifyWorldInternal(){if(!this._dirtyWorld){this._frozen=!1,this._dirtyWorld=!0;for(let e=0;e<this._children.length;e++)this._children[e]._dirtyWorld||this._children[e]._dirtifyWorldInternal()}this._dirtyNormal=!0,this._worldScaleSign=0,this._aabbVer++}setPosition(e,s,i){e instanceof A?Wt.copy(e):Wt.set(e,s,i),this._parent===null?this.localPosition.copy(Wt):(Xa.copy(this._parent.getWorldTransform()).invert(),Xa.transformPoint(Wt,this.localPosition)),this._dirtyLocal||this._dirtifyLocal()}setRotation(e,s,i,r){if(e instanceof ie?$t.copy(e):$t.set(e,s,i,r),this._parent===null)this.localRotation.copy($t);else{const n=this._parent.getRotation();Cn.copy(n).invert(),this.localRotation.copy(Cn).mul($t)}this._dirtyLocal||this._dirtifyLocal()}setPositionAndRotation(e,s){if(this._parent===null)this.localPosition.copy(e),this.localRotation.copy(s);else{const i=this._parent.getWorldTransform();Xa.copy(i).invert(),Xa.transformPoint(e,this.localPosition),this.localRotation.setFromMat4(Xa).mul(s)}this._dirtyLocal||this._dirtifyLocal()}setEulerAngles(e,s,i){if(this.localRotation.setFromEulerAngles(e,s,i),this._parent!==null){const r=this._parent.getRotation();Cn.copy(r).invert(),this.localRotation.mul2(Cn,this.localRotation)}this._dirtyLocal||this._dirtifyLocal()}addChild(e){this._prepareInsertChild(e),this._children.push(e),this._onInsertChild(e)}addChildAndSaveTransform(e){const s=e.getPosition(),i=e.getRotation();this._prepareInsertChild(e),e.setPosition(tC.copy(this.worldTransform).invert().transformPoint(s)),e.setRotation(sC.copy(this.getRotation()).invert().mul(i)),this._children.push(e),this._onInsertChild(e)}insertChild(e,s){this._prepareInsertChild(e),this._children.splice(s,0,e),this._onInsertChild(e)}_prepareInsertChild(e){e.remove(),b.assert(e!==this,`GraphNode ${e==null?void 0:e.name} cannot be a child of itself`),b.assert(!this.isDescendantOf(e),`GraphNode ${e==null?void 0:e.name} cannot add an ancestor as a child`)}_fireOnHierarchy(e,s,i){this.fire(e,i);for(let r=0;r<this._children.length;r++)this._children[r]._fireOnHierarchy(s,s,i)}_onInsertChild(e){e._parent=this;const s=e._enabled&&this.enabled;e._enabledInHierarchy!==s&&(e._enabledInHierarchy=s,e._notifyHierarchyStateChanged(e,s)),e._updateGraphDepth(),e._dirtifyWorld(),this._frozen&&e._unfreezeParentToRoot(),e._fireOnHierarchy("insert","inserthierarchy",this),this.fire&&this.fire("childinsert",e)}_updateGraphDepth(){this._graphDepth=this._parent?this._parent._graphDepth+1:0;for(let e=0,s=this._children.length;e<s;e++)this._children[e]._updateGraphDepth()}removeChild(e){const s=this._children.indexOf(e);s!==-1&&(this._children.splice(s,1),e._parent=null,e._fireOnHierarchy("remove","removehierarchy",this),this.fire("childremove",e))}_sync(){if(this._dirtyLocal&&(this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale),this._dirtyLocal=!1),this._dirtyWorld){if(this._parent===null)this.worldTransform.copy(this.localTransform);else if(this.scaleCompensation){let e;const s=this._parent;let i=this.localScale,r=s;if(r){for(;r&&r.scaleCompensation;)r=r._parent;r&&(r=r._parent,r&&(e=r.worldTransform.getScale(),$m.mul2(e,this.localScale),i=$m))}Sd.setFromMat4(s.worldTransform),Wm.mul2(Sd,this.localRotation);let n=s.worldTransform;s.scaleCompensation&&(qm.mul2(e,s.getLocalScale()),Hm.setTRS(s.worldTransform.getTranslation(xd),Sd,qm),n=Hm),n.transformPoint(this.localPosition,xd),this.worldTransform.setTRS(xd,Wm,i)}else this.worldTransform.mulAffine2(this._parent.worldTransform,this.localTransform);this._dirtyWorld=!1}}syncHierarchy(){if(!this._enabled||this._frozen)return;this._frozen=!0,(this._dirtyLocal||this._dirtyWorld)&&this._sync();const e=this._children;for(let s=0,i=e.length;s<i;s++)e[s].syncHierarchy()}lookAt(e,s,i,r=0,n=1,a=0){if(e instanceof A)vd.copy(e),s instanceof A?Il.copy(s):Il.copy(A.UP);else{if(i===void 0)return;vd.set(e,s,i),Il.set(r,n,a)}Xm.setLookAt(this.getPosition(),vd,Il),$t.setFromMat4(Xm),this.setRotation($t)}translate(e,s,i){e instanceof A?Wt.copy(e):Wt.set(e,s,i),Wt.add(this.getPosition()),this.setPosition(Wt)}translateLocal(e,s,i){e instanceof A?Wt.copy(e):Wt.set(e,s,i),this.localRotation.transformVector(Wt,Wt),this.localPosition.add(Wt),this._dirtyLocal||this._dirtifyLocal()}rotate(e,s,i){if($t.setFromEulerAngles(e,s,i),this._parent===null)this.localRotation.mul2($t,this.localRotation);else{const r=this.getRotation(),n=this._parent.getRotation();Cn.copy(n).invert(),$t.mul2(Cn,$t),this.localRotation.mul2($t,r)}this._dirtyLocal||this._dirtifyLocal()}rotateLocal(e,s,i){$t.setFromEulerAngles(e,s,i),this.localRotation.mul($t),this._dirtyLocal||this._dirtifyLocal()}}const A0=new Ht;function cl(l){const t=A0.get(l);return b.assert(t),t}function iC(l,t){b.assert(t),A0.get(l,()=>t)}class rC{constructor(){c(this,"cache",new Map)}destroy(){this.cache.forEach((t,e)=>{e.destroy()}),this.cache.clear()}incRef(t){const e=(this.cache.get(t)||0)+1;this.cache.set(t,e)}decRef(t){if(t){let e=this.cache.get(t);e&&(e--,e===0?(this.cache.delete(t),t.destroy()):this.cache.set(t,e))}}}class Ai{static incRef(t){this.cache.incRef(t)}static decRef(t){this.cache.decRef(t)}static destroy(){this.cache.destroy()}}c(Ai,"cache",new rC);let nC=0;const aC=new ve,Dl=new ve,bd=new Bf,wd=new Set,xr=new Uint32Array(4);class oC{constructor(t){c(this,"vertexBuffer",null);c(this,"_destroyVertexBuffer",!1);this.count=t}destroy(){var t;this._destroyVertexBuffer&&((t=this.vertexBuffer)==null||t.destroy()),this.vertexBuffer=null}}class lC{constructor(){c(this,"shader");c(this,"bindGroup",null);c(this,"uniformBuffer",null);c(this,"hashes")}getBindGroup(t){if(!this.bindGroup){const e=this.shader;b.assert(e);const s=e.meshBindGroupFormat;b.assert(s),this.bindGroup=new xp(t,s),gn.setName(this.bindGroup,`MeshBindGroup_${this.bindGroup.id}`)}return this.bindGroup}getUniformBuffer(t){if(!this.uniformBuffer){const e=this.shader;b.assert(e);const s=e.meshUniformBufferFormat;b.assert(s),this.uniformBuffer=new vp(t,s,!1)}return this.uniformBuffer}destroy(){var t,e;(t=this.bindGroup)==null||t.destroy(),this.bindGroup=null,(e=this.uniformBuffer)==null||e.destroy(),this.uniformBuffer=null}}const Gr=class Gr{constructor(t,e,s=null){c(this,"castShadow",!1);c(this,"cull",!0);c(this,"drawOrder",0);c(this,"node");c(this,"visible",!0);c(this,"visibleThisFrame",!1);c(this,"flipFacesFactor",1);c(this,"gsplatInstance",null);c(this,"id",nC++);c(this,"isVisibleFunc",null);c(this,"instancingData",null);c(this,"parameters",{});c(this,"pick",!0);c(this,"stencilFront",null);c(this,"stencilBack",null);c(this,"transparent",!1);c(this,"_aabb",new ve);c(this,"_aabbVer",-1);c(this,"_aabbMeshVer",-1);c(this,"_customAabb",null);c(this,"_updateAabb",!0);c(this,"_updateAabbFunc",null);c(this,"_key",[0,0]);c(this,"_layer",d0);c(this,"_material",null);c(this,"_skinInstance",null);c(this,"_morphInstance",null);c(this,"_receiveShadow",!0);c(this,"_renderStyle",bo);c(this,"_screenSpace",!1);c(this,"_shaderCache",new Map);c(this,"_shaderDefs",ms<<16);c(this,"_calculateSortDistance",null);if(b.assert(!(t instanceof Oe),"Incorrect parameters for MeshInstance's constructor. Use new MeshInstance(mesh, material, node)"),this.node=s,this._mesh=t,t.incRefCount(),this.material=e,t.vertexBuffer){const i=t.vertexBuffer.format;this._shaderDefs|=i.hasUv0?_0:0,this._shaderDefs|=i.hasUv1?g0:0,this._shaderDefs|=i.hasColor?y0:0,this._shaderDefs|=i.hasTangents?Dp:0}this.updateKey()}set renderStyle(t){this._renderStyle=t,this.mesh.prepareRenderState(t)}get renderStyle(){return this._renderStyle}set mesh(t){t!==this._mesh&&(this._mesh&&this._mesh.decRefCount(),this._mesh=t,t&&t.incRefCount())}get mesh(){return this._mesh}set aabb(t){this._aabb=t}get aabb(){if(!this._updateAabb)return this._aabb;if(this._updateAabbFunc)return this._updateAabbFunc(this._aabb);let t=this._customAabb,e=!!t;if(!t){if(t=aC,this.skinInstance){if(!this.mesh.boneAabb){const r=this._morphInstance?this._morphInstance.morph._targets:null;this.mesh._initBoneAabbs(r)}const s=this.mesh.boneUsed;let i=!0;for(let r=0;r<this.mesh.boneAabb.length;r++)s[r]&&(Dl.setFromTransformedAabb(this.mesh.boneAabb[r],this.skinInstance.matrices[r]),i?(i=!1,t.center.copy(Dl.center),t.halfExtents.copy(Dl.halfExtents)):t.add(Dl));e=!0}else if(this.node._aabbVer!==this._aabbVer||this.mesh._aabbVer!==this._aabbMeshVer){if(this.mesh?(t.center.copy(this.mesh.aabb.center),t.halfExtents.copy(this.mesh.aabb.halfExtents)):(t.center.set(0,0,0),t.halfExtents.set(0,0,0)),this.mesh&&this.mesh.morph){const s=this.mesh.morph.aabb;t._expand(s.getMin(),s.getMax())}e=!0,this._aabbVer=this.node._aabbVer,this._aabbMeshVer=this.mesh._aabbVer}}return e&&this._aabb.setFromTransformedAabb(t,this.node.getWorldTransform()),this._aabb}clearShaders(){this._shaderCache.forEach(t=>{t.destroy()}),this._shaderCache.clear()}getShaderInstance(t,e,s,i,r,n,a){var u;const o=this._shaderDefs;xr[0]=t,xr[1]=e,xr[2]=o,xr[3]=i.hash;const h=Qy(xr);let d=this._shaderCache.get(h);if(!d){const f=this._material;if(d=new lC,d.shader=f.variants.get(h),d.hashes=new Uint32Array(xr),!d.shader){G.pushGpuMarker(this.mesh.device,`Node: ${this.node.name}`);const p=f.getShaderVariant({device:this.mesh.device,scene:s,objDefs:o,cameraShaderParams:i,pass:t,sortedLights:a,viewUniformFormat:r,viewBindGroupFormat:n,vertexFormat:(u=this.mesh.vertexBuffer)==null?void 0:u.format});G.popGpuMarker(this.mesh.device),f.variants.set(h,p),d.shader=p}this._shaderCache.set(h,d)}return b.call(()=>{Wv.equals(d.hashes,xr)||b.errorOnce("Hash collision in the shader cache for mesh instance. This is very unlikely but still possible. Please report this issue.")}),d}set material(t){this.clearShaders();const e=this._material;e&&e.removeMeshInstanceRef(this),this._material=t,t&&(t.addMeshInstanceRef(this),this.transparent=t.transparent,this.updateKey())}get material(){return this._material}set layer(t){this._layer=t,this.updateKey()}get layer(){return this._layer}_updateShaderDefs(t){t!==this._shaderDefs&&(this._shaderDefs=t,this.clearShaders())}set calculateSortDistance(t){this._calculateSortDistance=t}get calculateSortDistance(){return this._calculateSortDistance}set receiveShadow(t){this._receiveShadow!==t&&(this._receiveShadow=t,this._updateShaderDefs(t?this._shaderDefs&-2:this._shaderDefs|Rp))}get receiveShadow(){return this._receiveShadow}set batching(t){this._updateShaderDefs(t?this._shaderDefs|zu:this._shaderDefs&-16385)}get batching(){return(this._shaderDefs&zu)!==0}set skinInstance(t){this._skinInstance=t,this._updateShaderDefs(t?this._shaderDefs|jc:this._shaderDefs&-3),this._setupSkinUpdate()}get skinInstance(){return this._skinInstance}set morphInstance(t){var s;(s=this._morphInstance)==null||s.destroy(),this._morphInstance=t;let e=this._shaderDefs;e=t&&t.morph.morphPositions?e|Kc:e&-1025,e=t&&t.morph.morphNormals?e|Zc:e&-2049,e=t&&t.morph.intRenderFormat?e|Qc:e&-8193,this._updateShaderDefs(e)}get morphInstance(){return this._morphInstance}set screenSpace(t){this._screenSpace!==t&&(this._screenSpace=t,this._updateShaderDefs(t?this._shaderDefs|Ip:this._shaderDefs&-257))}get screenSpace(){return this._screenSpace}set key(t){this._key[Ii]=t}get key(){return this._key[Ii]}set mask(t){const e=this._shaderDefs&65535;this._updateShaderDefs(e|t<<16)}get mask(){return this._shaderDefs>>16}set instancingCount(t){this.instancingData&&(this.instancingData.count=t)}get instancingCount(){return this.instancingData?this.instancingData.count:0}destroy(){var e,s,i;const t=this.mesh;t&&(this.mesh=null,t.refCount<1&&t.destroy()),this.setRealtimeLightmap(Gr.lightmapParamNames[0],null),this.setRealtimeLightmap(Gr.lightmapParamNames[1],null),(e=this._skinInstance)==null||e.destroy(),this._skinInstance=null,(s=this.morphInstance)==null||s.destroy(),this.morphInstance=null,this.clearShaders(),this.material=null,(i=this.instancingData)==null||i.destroy()}static _prepareRenderStyleForArray(t,e){if(t){for(let s=0;s<t.length;s++){t[s]._renderStyle=e;const i=t[s].mesh;wd.has(i)||(wd.add(i),i.prepareRenderState(e))}wd.clear()}}_isVisible(t){return this.visible?this.isVisibleFunc?this.isVisibleFunc(t):(bd.center=this.aabb.center,bd.radius=this._aabb.halfExtents.length(),t.frustum.containsSphere(bd)>0):!1}updateKey(){const t=this.material,e=t.alphaToCoverage||t.alphaTest?Gt:t.blendType;this._key[Ii]=(this.layer&15)<<27|(e===hs?1:0)<<26|(t.id&33554431)<<0}setInstancing(t,e=!1){t?(this.instancingData=new oC(t.numVertices),this.instancingData.vertexBuffer=t,t.format.instancing=!0,this.cull=e):(this.instancingData=null,this.cull=!0),this._updateShaderDefs(t?this._shaderDefs|Yc:this._shaderDefs&-33)}ensureMaterial(t){this.material||(b.warn(`Mesh attached to entity '${this.node.name}' does not have a material, using a default one.`),this.material=cl(t))}clearParameters(){this.parameters={}}getParameters(){return this.parameters}getParameter(t){return this.parameters[t]}setParameter(t,e,s=4294967295){const i=this.parameters[t];i?(i.data=e,i.passFlags=s):this.parameters[t]={scopeId:null,data:e,passFlags:s}}setRealtimeLightmap(t,e){const s=this.getParameter(t);s!==e&&(s&&Ai.decRef(s.data),e?(Ai.incRef(e),this.setParameter(t,e)):this.deleteParameter(t))}deleteParameter(t){this.parameters[t]&&delete this.parameters[t]}setParameters(t,e){const s=this.parameters;for(const i in s){const r=s[i];r.passFlags&e&&(r.scopeId||(r.scopeId=t.scope.resolve(i)),r.scopeId.setValue(r.data))}}setLightmapped(t){t?this.mask=(this.mask|dr)&-6:(this.setRealtimeLightmap(Gr.lightmapParamNames[0],null),this.setRealtimeLightmap(Gr.lightmapParamNames[1],null),this._shaderDefs&=-4289,this.mask=(this.mask|ms)&-7)}setCustomAabb(t){t?this._customAabb?this._customAabb.copy(t):this._customAabb=t.clone():(this._customAabb=null,this._aabbVer=-1),this._setupSkinUpdate()}_setupSkinUpdate(){this._skinInstance&&(this._skinInstance._updateBeforeCull=!this._customAabb)}};c(Gr,"lightmapParamNames",["texture_lightMap","texture_dirLightMap"]);let Be=Gr;const hC=[0,1,3,2,3,1],cC=[0,1,3,0,3,2],Ym=new Js;function Km(l,t){if(l&&!t||!l&&t)return!1;if(l=l.data,t=t.data,l===t)return!0;if(l instanceof Float32Array&&t instanceof Float32Array){if(l.length!==t.length)return!1;for(let e=0;e<l.length;e++)if(l[e]!==t[e])return!1;return!0}return!1}function dC(l,t){for(const e in l)if(l.hasOwnProperty(e)&&!Km(l[e],t[e]))return!1;for(const e in t)if(t.hasOwnProperty(e)&&!Km(t[e],l[e]))return!1;return!0}function Td(l){return l.node.worldTransform.scaleSign}class uC{constructor(t,e,s){this.device=t,this.rootNode=e,this.scene=s,this._init=!1,this._batchGroups={},this._batchGroupCounter=0,this._batchList=[],this._dirtyGroups=[],this._stats={createTime:0,updateLastFrameTime:0}}destroy(){this.device=null,this.rootNode=null,this.scene=null,this._batchGroups={},this._batchList=[],this._dirtyGroups=[]}addGroup(t,e,s,i,r){if(i===void 0&&(i=this._batchGroupCounter,this._batchGroupCounter++),this._batchGroups[i]){b.error(`Batch group with id ${i} already exists.`);return}const n=new rt(i,t,e,s,r);return this._batchGroups[i]=n,n}removeGroup(t){if(!this._batchGroups[t]){b.error(`Batch group with id ${t} doesn't exist.`);return}const e=[];for(let s=0;s<this._batchList.length;s++)this._batchList[s].batchGroupId===t?this.destroyBatch(this._batchList[s]):e.push(this._batchList[s]);this._batchList=e,this._removeModelsFromBatchGroup(this.rootNode,t),delete this._batchGroups[t]}markGroupDirty(t){this._dirtyGroups.indexOf(t)<0&&this._dirtyGroups.push(t)}getGroupByName(t){const e=this._batchGroups;for(const s in e)if(e.hasOwnProperty(s)&&e[s].name===t)return e[s];return null}getBatches(t){const e=[],s=this._batchList.length;for(let i=0;i<s;i++){const r=this._batchList[i];r.batchGroupId===t&&e.push(r)}return e}_removeModelsFromBatchGroup(t,e){if(t.enabled){t.model&&t.model.batchGroupId===e&&(t.model.batchGroupId=-1),t.render&&t.render.batchGroupId===e&&(t.render.batchGroupId=-1),t.element&&t.element.batchGroupId===e&&(t.element.batchGroupId=-1),t.sprite&&t.sprite.batchGroupId===e&&(t.sprite.batchGroupId=-1);for(let s=0;s<t._children.length;s++)this._removeModelsFromBatchGroup(t._children[s],e)}}insert(t,e,s){const i=this._batchGroups[e];b.assert(i,`Invalid batch ${e} insertion`),i&&i._obj[t].indexOf(s)<0&&(i._obj[t].push(s),this.markGroupDirty(e))}remove(t,e,s){const i=this._batchGroups[e];if(b.assert(i,`Invalid batch ${e} insertion`),i){const r=i._obj[t].indexOf(s);r>=0&&(i._obj[t].splice(r,1),this.markGroupDirty(e))}}_extractRender(t,e,s,i){return t.render&&(e=i[t.render.batchGroupId]=e.concat(t.render.meshInstances),t.render.removeFromLayers()),e}_extractModel(t,e,s,i){return t.model&&t.model.model&&(e=i[t.model.batchGroupId]=e.concat(t.model.meshInstances),t.model.removeModelFromLayers(),t.model._batchGroup=s),e}_extractElement(t,e,s){if(!t.element)return;let i=!1;t.element._text&&t.element._text._model.meshInstances.length>0?(e.push(t.element._text._model.meshInstances[0]),t.element.removeModelFromLayers(t.element._text._model),i=!0):t.element._image&&(e.push(t.element._image._renderable.meshInstance),t.element.removeModelFromLayers(t.element._image._renderable.model),t.element._image._renderable.unmaskMeshInstance&&(e.push(t.element._image._renderable.unmaskMeshInstance),(!t.element._image._renderable.unmaskMeshInstance.stencilFront||!t.element._image._renderable.unmaskMeshInstance.stencilBack)&&(t.element._dirtifyMask(),t.element._onPrerender())),i=!0),i&&(s._ui=!0,t.element._batchGroup=s)}_collectAndRemoveMeshInstances(t,e){for(let s=0;s<e.length;s++){const i=e[s],r=this._batchGroups[i];if(!r)continue;let n=t[i];n||(n=t[i]=[]);for(let a=0;a<r._obj.model.length;a++)n=this._extractModel(r._obj.model[a],n,r,t);for(let a=0;a<r._obj.render.length;a++)n=this._extractRender(r._obj.render[a],n,r,t);for(let a=0;a<r._obj.element.length;a++)this._extractElement(r._obj.element[a],n,r);for(let a=0;a<r._obj.sprite.length;a++){const o=r._obj.sprite[a];o.sprite&&o.sprite._meshInstance&&(r.dynamic||o.sprite.sprite._renderMode===Pi)&&(n.push(o.sprite._meshInstance),o.sprite.removeModelFromLayers(),r._sprite=!0,o.sprite._batchGroup=r)}}}generate(t){const e={};t||(t=Object.keys(this._batchGroups));const s=[];for(let o=0;o<this._batchList.length;o++){if(t.indexOf(this._batchList[o].batchGroupId)<0){s.push(this._batchList[o]);continue}this.destroyBatch(this._batchList[o])}if(this._batchList=s,this._collectAndRemoveMeshInstances(e,t),t===this._dirtyGroups)this._dirtyGroups.length=0;else{const o=[];for(let h=0;h<this._dirtyGroups.length;h++)t.indexOf(this._dirtyGroups[h])<0&&o.push(this._dirtyGroups[h]);this._dirtyGroups=o}let i,r,n,a;for(const o in e)if(e.hasOwnProperty(o)){if(i=e[o],n=this._batchGroups[o],!n){b.error(`batch group ${o} not found`);continue}r=this.prepare(i,n.dynamic,n.maxAabbSize,n._ui||n._sprite);for(let h=0;h<r.length;h++)a=this.create(r[h],n.dynamic,parseInt(o,10)),a&&a.addToLayers(this.scene,n.layers)}}prepare(t,e,s=Number.POSITIVE_INFINITY,i){if(t.length===0)return[];const r=s*.5,n=1024,a=4294967295,o=new ve,h=new ve;let d=null,u;const f=[];let p=0;i&&t.sort((y,w)=>y.drawOrder-w.drawOrder);let m=t,_;const g=i?function(y){d?d.add(y.aabb):d=y.aabb.clone(),_.push(y)}:function(y){_.push(y)};for(;m.length>0;){f[p]=[m[0]],_=[];const y=m[0].material,w=m[0].layer,C=m[0]._shaderDefs,x=m[0].parameters,M=m[0].stencilFront;let S=m[0].mesh.vertexBuffer.getNumVertices();const v=m[0].drawOrder;o.copy(m[0].aabb);const E=Td(m[0]),T=m[0].mesh.vertexBuffer.format.batchingHash,R=m[0].mesh.primitive[0].indexed;d=null;for(let D=1;D<m.length;D++){const P=m[D];if(e&&f[p].length>=n){_=_.concat(m.slice(D));break}if(y!==P.material||w!==P.layer||T!==P.mesh.vertexBuffer.format.batchingHash||R!==P.mesh.primitive[0].indexed||C!==P._shaderDefs||S+P.mesh.vertexBuffer.getNumVertices()>a){g(P);continue}if(h.copy(o),h.add(P.aabb),h.halfExtents.x>r||h.halfExtents.y>r||h.halfExtents.z>r){g(P);continue}if(M&&(!(u=P.stencilFront)||M.func!==u.func||M.zpass!==u.zpass)){g(P);continue}if(E!==Td(P)){g(P);continue}if(!dC(x,P.parameters)){g(P);continue}if(i&&d&&d.intersects(P.aabb)&&P.drawOrder!==v){g(P);continue}o.add(P.aabb),S+=P.mesh.vertexBuffer.getNumVertices(),f[p].push(P)}p++,m=_}return f}collectBatchedMeshData(t,e){let s=null,i=0,r=0,n=null;for(let a=0;a<t.length;a++)if(t[a].visible){const o=t[a].mesh,h=o.vertexBuffer.numVertices;if(i+=h,o.primitive[0].indexed)r+=o.primitive[0].count;else{const d=o.primitive[0].type;(d===Kr||d===lr)&&o.primitive[0].count===4&&(r+=6)}if(!s){n=t[a].material,s={};const d=o.vertexBuffer.format.elements;for(let u=0;u<d.length;u++){const f=d[u].name;s[f]={numComponents:d[u].numComponents,dataType:d[u].dataType,normalize:d[u].normalize,count:0}}e&&(s[Jt]={numComponents:1,dataType:Re,normalize:!1,count:0})}}return{streams:s,batchNumVerts:i,batchNumIndices:r,material:n}}create(t,e,s){const i=ae();this._init||(this.vertexFormats={},this._init=!0);let r=null,n,a,o,h=null;const d=this.collectBatchedMeshData(t,e);if(d.streams){const u=d.streams;let f=d.material;const p=d.batchNumVerts,m=d.batchNumIndices;h=new Um(t,e,s),this._batchList.push(h);let _,g,y,w=0,C=0,x;const M=p<=65535?Uint16Array:Uint32Array,S=new M(m);for(n in u)r=u[n],r.typeArrayType=fa[r.dataType],r.elementByteSize=So[r.dataType],r.buffer=new r.typeArrayType(p*r.numComponents);for(let T=0;T<t.length;T++)if(t[T].visible){a=t[T].mesh,o=a.vertexBuffer.numVertices,e||(x=t[T].node.getWorldTransform());for(n in u)if(n!==Jt){r=u[n];const R=new r.typeArrayType(r.buffer.buffer,r.elementByteSize*r.count),D=a.getVertexStream(n,R)*r.numComponents;if(r.count+=D,!e&&r.numComponents>=3){if(n===Xe){const P=x.data,L=P[0],k=P[1],H=P[2],N=P[4],I=P[5],F=P[6],O=P[8],B=P[9],U=P[10],V=P[12],X=P[13],Z=P[14];let K,J,se;for(let _e=0;_e<D;_e+=r.numComponents)K=R[_e],J=R[_e+1],se=R[_e+2],R[_e]=K*L+J*N+se*O+V,R[_e+1]=K*k+J*I+se*B+X,R[_e+2]=K*H+J*F+se*U+Z}else if(n===ss||n===si){Ym.invertMat4(x).transpose();const[P,L,k,H,N,I,F,O,B]=Ym.data;let U,V,X;for(let Z=0;Z<D;Z+=r.numComponents)U=R[Z],V=R[Z+1],X=R[Z+2],R[Z]=U*P+V*H+X*F,R[Z+1]=U*L+V*N+X*O,R[Z+2]=U*k+V*I+X*B}}}if(e){r=u[Jt];for(let R=0;R<o;R++)r.buffer[r.count++]=T}if(a.primitive[0].indexed){_=a.primitive[0].base,g=a.primitive[0].count;const R=a.indexBuffer[0].getFormat();y=new Nh[R](a.indexBuffer[0].storage)}else{const R=a.primitive[0].type;if(R===Kr||R===lr)if(a.primitive[0].count===4)_=0,g=6,y=R===Kr?hC:cC;else{g=0;continue}}for(let R=0;R<g;R++)S[R+C]=y[_+R]+w;C+=g,w+=o}a=new ke(this.device);for(n in u)r=u[n],a.setVertexStream(n,r.buffer,r.numComponents,void 0,r.dataType,r.normalize);S.length>0&&a.setIndices(S),a.update(Fs,!1),e&&(f=f.clone(),f.update());const v=new Be(a,f,this.rootNode);v.castShadow=h.origMeshInstances[0].castShadow,v.parameters=h.origMeshInstances[0].parameters,v.layer=h.origMeshInstances[0].layer,v._shaderDefs=h.origMeshInstances[0]._shaderDefs,v.batching=!0,v.cull=h.origMeshInstances[0].cull;const E=this._batchGroups[s];if(E&&E._ui&&(v.cull=!1),e){const T=[];for(let R=0;R<h.origMeshInstances.length;R++)T.push(h.origMeshInstances[R].node);v.skinInstance=new Gm(this.device,T,this.rootNode)}v._updateAabb=!1,v.drawOrder=h.origMeshInstances[0].drawOrder,v.stencilFront=h.origMeshInstances[0].stencilFront,v.stencilBack=h.origMeshInstances[0].stencilBack,v.flipFacesFactor=Td(h.origMeshInstances[0]),v.castShadow=h.origMeshInstances[0].castShadow,h.meshInstance=v,h.updateBoundingBox()}return this._stats.createTime+=ae()-i,h}updateAll(){this._dirtyGroups.length>0&&this.generate(this._dirtyGroups);const t=ae();for(let e=0;e<this._batchList.length;e++)this._batchList[e].dynamic&&this._batchList[e].updateBoundingBox();this._stats.updateLastFrameTime=ae()-t}clone(t,e){const s=new Um(e,t.dynamic,t.batchGroupId);this._batchList.push(s);const i=[];for(let r=0;r<e.length;r++)i.push(e[r].node);return s.meshInstance=new Be(t.meshInstance.mesh,t.meshInstance.material,t.meshInstance.node),s.meshInstance._updateAabb=!1,s.meshInstance.parameters=e[0].parameters,s.meshInstance.cull=e[0].cull,s.meshInstance.layer=e[0].layer,t.dynamic&&(s.meshInstance.skinInstance=new Gm(this.device,i,this.rootNode)),s.meshInstance.castShadow=t.meshInstance.castShadow,s}destroyBatch(t){t.destroy(this.scene,this._batchGroups[t.batchGroupId].layers)}}const Zm="uSceneColorMap";class fC extends gs{constructor(){super(...arguments);c(this,"colorRenderTarget",null);c(this,"source",null)}destroy(){super.destroy(),this.releaseRenderTarget(this.colorRenderTarget)}shouldReallocate(e,s,i){if((e==null?void 0:e.colorBuffer.format)!==i)return!0;const n=(s==null?void 0:s.width)||this.device.width,a=(s==null?void 0:s.height)||this.device.height;return!e||n!==e.width||a!==e.height}allocateRenderTarget(e,s,i,r){const n=new ce(i,{name:Zm,format:r,width:s?s.colorBuffer.width:i.width,height:s?s.colorBuffer.height:i.height,mipmaps:!0,minFilter:an,magFilter:at,addressU:oe,addressV:oe});return e?(e.destroyFrameBuffers(),e._colorBuffer=n,e._colorBuffers=[n]):e=new St({name:"ColorGrabRT",colorBuffer:n,depth:!1,stencil:!1,autoResolve:!1}),e}releaseRenderTarget(e){e&&(e.destroyTextureBuffers(),e.destroy())}frameUpdate(){const e=this.device,s=this.source,i=(s==null?void 0:s.colorBuffer.format)??this.device.backBufferFormat;this.shouldReallocate(this.colorRenderTarget,s==null?void 0:s.colorBuffer,i)&&(this.releaseRenderTarget(this.colorRenderTarget),this.colorRenderTarget=this.allocateRenderTarget(this.colorRenderTarget,s,e,i));const r=this.colorRenderTarget.colorBuffer;e.scope.resolve(Zm).setValue(r)}execute(){const e=this.device;G.pushGpuMarker(e,"GRAB-COLOR");const s=this.source,i=this.colorRenderTarget.colorBuffer;e.isWebGPU?(e.copyRenderTarget(s,this.colorRenderTarget,!0,!1),e.mipmapRenderer.generate(this.colorRenderTarget.colorBuffer.impl)):(e.copyRenderTarget(s,this.colorRenderTarget,!0,!1),e.activeTexture(e.maxCombinedTextures-1),e.bindTexture(i),e.gl.generateMipmap(i.impl._glTarget)),G.popGpuMarker(e)}}const Qm="uSceneDepthMap";class pC extends gs{constructor(e,s){super(e);c(this,"depthRenderTarget",null);c(this,"camera",null);this.camera=s}destroy(){super.destroy(),this.releaseRenderTarget(this.depthRenderTarget)}shouldReallocate(e,s){const i=(s==null?void 0:s.width)||this.device.width,r=(s==null?void 0:s.height)||this.device.height;return!e||i!==e.width||r!==e.height}allocateRenderTarget(e,s,i,r,n){const a=new ce(i,{name:Qm,format:r,width:s?s.colorBuffer.width:i.width,height:s?s.colorBuffer.height:i.height,mipmaps:!1,minFilter:fe,magFilter:fe,addressU:oe,addressV:oe});return e?(e.destroyFrameBuffers(),n?e._depthBuffer=a:(e._colorBuffer=a,e._colorBuffers=[a])):e=new St({name:"DepthGrabRT",colorBuffer:n?null:a,depthBuffer:n?a:null,depth:!n,stencil:i.supportsStencil,autoResolve:!1}),e}releaseRenderTarget(e){e&&(e.destroyTextureBuffers(),e.destroy())}before(){var h,d;const e=this.camera,s=this.device,i=(e==null?void 0:e.renderTarget)??s.backBuffer;let r=!0,n=i.stencil?Ec:Di;s.isWebGPU&&i.samples>1&&(n=Oi,r=!1);const a=((h=e.renderTarget)==null?void 0:h.depthBuffer)??((d=e.renderTarget)==null?void 0:d.colorBuffer);this.shouldReallocate(this.depthRenderTarget,a)&&(this.releaseRenderTarget(this.depthRenderTarget),this.depthRenderTarget=this.allocateRenderTarget(this.depthRenderTarget,e.renderTarget,s,n,r));const o=r?this.depthRenderTarget.depthBuffer:this.depthRenderTarget.colorBuffer;s.scope.resolve(Qm).setValue(o)}execute(){const e=this.device;if(G.pushGpuMarker(e,"GRAB-DEPTH"),e.isWebGL2&&e.renderTarget.samples>1){const s=e.renderTarget.impl._glFrameBuffer,i=this.depthRenderTarget;e.renderTarget=i,e.updateBegin(),this.depthRenderTarget.impl.internalResolve(e,s,i.impl._glFrameBuffer,this.depthRenderTarget,e.gl.DEPTH_BUFFER_BIT)}else e.copyRenderTarget(e.renderTarget,this.depthRenderTarget,!1,!0);G.popGpuMarker(e)}}class E0{constructor(){c(this,"_gammaCorrection",ph);c(this,"_toneMapping",Pp);c(this,"_srgbRenderTarget",!1);c(this,"_ssaoEnabled",!1);c(this,"_fog",Ba);c(this,"_sceneDepthMapLinear",!1);c(this,"_hash");c(this,"_defines",new Map);c(this,"_definesDirty",!0)}get hash(){if(this._hash===void 0){const t=`${this.gammaCorrection}_${this.toneMapping}_${this.srgbRenderTarget}_${this.fog}_${this.ssaoEnabled}_${this.sceneDepthMapLinear}`;this._hash=cn(t)}return this._hash}get defines(){const t=this._defines;return this._definesDirty&&(this._definesDirty=!1,t.clear(),this._sceneDepthMapLinear&&t.set("SCENE_DEPTHMAP_LINEAR",!0),t.set("FOG",this._fog.toUpperCase()),t.set("TONEMAP",m0[this._toneMapping]),t.set("GAMMA",Yb[this.shaderOutputGamma])),t}markDirty(){this._hash=void 0,this._definesDirty=!0}set fog(t){this._fog!==t&&(this._fog=t,this.markDirty())}get fog(){return this._fog}set ssaoEnabled(t){this._ssaoEnabled!==t&&(this._ssaoEnabled=t,this.markDirty())}get ssaoEnabled(){return this._ssaoEnabled}set gammaCorrection(t){this._gammaCorrectionAssigned=!0,this._gammaCorrection!==t&&(this._gammaCorrection=t,this.markDirty())}get gammaCorrection(){return this._gammaCorrection}set toneMapping(t){this._toneMapping!==t&&(this._toneMapping=t,this.markDirty())}get toneMapping(){return this._toneMapping}set srgbRenderTarget(t){this._srgbRenderTarget!==t&&(this._srgbRenderTarget=t,this.markDirty())}get srgbRenderTarget(){return this._srgbRenderTarget}set sceneDepthMapLinear(t){this._sceneDepthMapLinear!==t&&(this._sceneDepthMapLinear=t,this.markDirty())}get sceneDepthMapLinear(){return this._sceneDepthMapLinear}get shaderOutputGamma(){return this._gammaCorrection===ph&&!this._srgbRenderTarget?ph:al}}const Mn=new A,ja=new A,Jm=new A,e_=new q,mC=[new A,new A,new A,new A,new A,new A,new A,new A];class dl{constructor(){c(this,"shaderPassInfo",null);c(this,"renderPassColorGrab",null);c(this,"renderPassDepthGrab",null);c(this,"fogParams",null);c(this,"shaderParams",new E0);c(this,"renderPasses",[]);c(this,"jitter",0);this._aspectRatio=16/9,this._aspectRatioMode=kp,this._calculateProjection=null,this._calculateTransform=null,this._clearColor=new Y(.75,.75,.75,1),this._clearColorBuffer=!0,this._clearDepth=1,this._clearDepthBuffer=!0,this._clearStencil=0,this._clearStencilBuffer=!0,this._cullFaces=!0,this._farClip=1e3,this._flipFaces=!1,this._fov=45,this._frustumCulling=!0,this._horizontalFov=!1,this._layers=[zi,es,Ap,nl,Ep],this._layersSet=new Set(this._layers),this._nearClip=.1,this._node=null,this._orthoHeight=10,this._projection=Xs,this._rect=new ee(0,0,1,1),this._renderTarget=null,this._scissorRect=new ee(0,0,1,1),this._scissorRectClear=!1,this._aperture=16,this._shutter=1/1e3,this._sensitivity=1e3,this._projMat=new q,this._projMatDirty=!0,this._projMatSkybox=new q,this._viewMat=new q,this._viewMatDirty=!0,this._viewProjMat=new q,this._viewProjMatDirty=!0,this._shaderMatricesVersion=0,this._viewProjInverse=new q,this._viewProjCurrent=null,this._viewProjPrevious=new q,this._jitters=[0,0,0,0],this.frustum=new wS,this._xr=null,this._xrProperties={horizontalFov:this._horizontalFov,fov:this._fov,aspectRatio:this._aspectRatio,farClip:this._farClip,nearClip:this._nearClip}}destroy(){var t,e;(t=this.renderPassColorGrab)==null||t.destroy(),this.renderPassColorGrab=null,(e=this.renderPassDepthGrab)==null||e.destroy(),this.renderPassDepthGrab=null,this.renderPasses.length=0}_storeShaderMatrices(t,e,s,i){this._shaderMatricesVersion!==i&&(this._shaderMatricesVersion=i,this._viewProjPrevious.copy(this._viewProjCurrent??t),this._viewProjCurrent??(this._viewProjCurrent=new q),this._viewProjCurrent.copy(t),this._viewProjInverse.invert(t),this._jitters[2]=this._jitters[0],this._jitters[3]=this._jitters[1],this._jitters[0]=e,this._jitters[1]=s)}get fullSizeClearRect(){const t=this._scissorRectClear?this.scissorRect:this._rect;return t.x===0&&t.y===0&&t.z===1&&t.w===1}set aspectRatio(t){this._aspectRatio!==t&&(this._aspectRatio=t,this._projMatDirty=!0)}get aspectRatio(){var t;return(t=this.xr)!=null&&t.active?this._xrProperties.aspectRatio:this._aspectRatio}set aspectRatioMode(t){this._aspectRatioMode!==t&&(this._aspectRatioMode=t,this._projMatDirty=!0)}get aspectRatioMode(){return this._aspectRatioMode}set calculateProjection(t){this._calculateProjection=t,this._projMatDirty=!0}get calculateProjection(){return this._calculateProjection}set calculateTransform(t){this._calculateTransform=t}get calculateTransform(){return this._calculateTransform}set clearColor(t){this._clearColor.copy(t)}get clearColor(){return this._clearColor}set clearColorBuffer(t){this._clearColorBuffer=t}get clearColorBuffer(){return this._clearColorBuffer}set clearDepth(t){this._clearDepth=t}get clearDepth(){return this._clearDepth}set clearDepthBuffer(t){this._clearDepthBuffer=t}get clearDepthBuffer(){return this._clearDepthBuffer}set clearStencil(t){this._clearStencil=t}get clearStencil(){return this._clearStencil}set clearStencilBuffer(t){this._clearStencilBuffer=t}get clearStencilBuffer(){return this._clearStencilBuffer}set cullFaces(t){this._cullFaces=t}get cullFaces(){return this._cullFaces}set farClip(t){this._farClip!==t&&(this._farClip=t,this._projMatDirty=!0)}get farClip(){var t;return(t=this.xr)!=null&&t.active?this._xrProperties.farClip:this._farClip}set flipFaces(t){this._flipFaces=t}get flipFaces(){return this._flipFaces}set fov(t){this._fov!==t&&(this._fov=t,this._projMatDirty=!0)}get fov(){var t;return(t=this.xr)!=null&&t.active?this._xrProperties.fov:this._fov}set frustumCulling(t){this._frustumCulling=t}get frustumCulling(){return this._frustumCulling}set horizontalFov(t){this._horizontalFov!==t&&(this._horizontalFov=t,this._projMatDirty=!0)}get horizontalFov(){var t;return(t=this.xr)!=null&&t.active?this._xrProperties.horizontalFov:this._horizontalFov}set layers(t){this._layers=t.slice(0),this._layersSet=new Set(this._layers)}get layers(){return this._layers}get layersSet(){return this._layersSet}set nearClip(t){this._nearClip!==t&&(this._nearClip=t,this._projMatDirty=!0)}get nearClip(){var t;return(t=this.xr)!=null&&t.active?this._xrProperties.nearClip:this._nearClip}set node(t){this._node=t}get node(){return this._node}set orthoHeight(t){this._orthoHeight!==t&&(this._orthoHeight=t,this._projMatDirty=!0)}get orthoHeight(){return this._orthoHeight}set projection(t){this._projection!==t&&(this._projection=t,this._projMatDirty=!0)}get projection(){return this._projection}get projectionMatrix(){return this._evaluateProjectionMatrix(),this._projMat}set rect(t){this._rect.copy(t)}get rect(){return this._rect}set renderTarget(t){this._renderTarget=t}get renderTarget(){return this._renderTarget}set scissorRect(t){this._scissorRect.copy(t)}get scissorRect(){return this._scissorRect}get viewMatrix(){if(this._viewMatDirty){const t=this._node.getWorldTransform();this._viewMat.copy(t).invert(),this._viewMatDirty=!1}return this._viewMat}set aperture(t){this._aperture=t}get aperture(){return this._aperture}set sensitivity(t){this._sensitivity=t}get sensitivity(){return this._sensitivity}set shutter(t){this._shutter=t}get shutter(){return this._shutter}set xr(t){this._xr!==t&&(this._xr=t,this._projMatDirty=!0)}get xr(){return this._xr}clone(){return new dl().copy(this)}copy(t){return this._aspectRatio=t._aspectRatio,this._farClip=t._farClip,this._fov=t._fov,this._horizontalFov=t._horizontalFov,this._nearClip=t._nearClip,this._xrProperties.aspectRatio=t._xrProperties.aspectRatio,this._xrProperties.farClip=t._xrProperties.farClip,this._xrProperties.fov=t._xrProperties.fov,this._xrProperties.horizontalFov=t._xrProperties.horizontalFov,this._xrProperties.nearClip=t._xrProperties.nearClip,this.aspectRatioMode=t.aspectRatioMode,this.calculateProjection=t.calculateProjection,this.calculateTransform=t.calculateTransform,this.clearColor=t.clearColor,this.clearColorBuffer=t.clearColorBuffer,this.clearDepth=t.clearDepth,this.clearDepthBuffer=t.clearDepthBuffer,this.clearStencil=t.clearStencil,this.clearStencilBuffer=t.clearStencilBuffer,this.cullFaces=t.cullFaces,this.flipFaces=t.flipFaces,this.frustumCulling=t.frustumCulling,this.layers=t.layers,this.orthoHeight=t.orthoHeight,this.projection=t.projection,this.rect=t.rect,this.renderTarget=t.renderTarget,this.scissorRect=t.scissorRect,this.aperture=t.aperture,this.shutter=t.shutter,this.sensitivity=t.sensitivity,this.shaderPassInfo=t.shaderPassInfo,this.jitter=t.jitter,this._projMatDirty=!0,this}_enableRenderPassColorGrab(t,e){var s;e?this.renderPassColorGrab||(this.renderPassColorGrab=new fC(t)):((s=this.renderPassColorGrab)==null||s.destroy(),this.renderPassColorGrab=null)}_enableRenderPassDepthGrab(t,e,s){var i;s?this.renderPassDepthGrab||(this.renderPassDepthGrab=new pC(t,this)):((i=this.renderPassDepthGrab)==null||i.destroy(),this.renderPassDepthGrab=null)}_updateViewProjMat(){(this._projMatDirty||this._viewMatDirty||this._viewProjMatDirty)&&(this._viewProjMat.mul2(this.projectionMatrix,this.viewMatrix),this._viewProjMatDirty=!1)}worldToScreen(t,e,s,i=new A){this._updateViewProjMat(),this._viewProjMat.transformPoint(t,i);const r=this._viewProjMat.data,n=t.x*r[3]+t.y*r[7]+t.z*r[11]+1*r[15];return i.x=(i.x/n+1)*.5*e,i.y=(1-i.y/n)*.5*s,i}screenToWorld(t,e,s,i,r,n=new A){const a=this.farClip-this.nearClip;if(Mn.set(t/i,(r-e)/r,s/a),Mn.mulScalar(2),Mn.sub(A.ONE),this._projection===Xs){q._getPerspectiveHalfSize(ja,this.fov,this.aspectRatio,this.nearClip,this.horizontalFov),ja.x*=Mn.x,ja.y*=Mn.y;const o=this._node.getWorldTransform();ja.z=-this.nearClip,o.transformPoint(ja,Jm);const h=this._node.getPosition();n.sub2(Jm,h),n.normalize(),n.mulScalar(s),n.add(h)}else this._updateViewProjMat(),e_.copy(this._viewProjMat).invert(),e_.transformPoint(Mn,n);return n}_evaluateProjectionMatrix(){if(this._projMatDirty){if(this._projection===Xs)this._projMat.setPerspective(this.fov,this.aspectRatio,this.nearClip,this.farClip,this.horizontalFov),this._projMatSkybox.copy(this._projMat);else{const t=this._orthoHeight,e=t*this.aspectRatio;this._projMat.setOrtho(-e,e,-t,t,this.nearClip,this.farClip),this._projMatSkybox.setPerspective(this.fov,this.aspectRatio,this.nearClip,this.farClip)}this._projMatDirty=!1}}getProjectionMatrixSkybox(){return this._evaluateProjectionMatrix(),this._projMatSkybox}getExposure(){const t=Math.log2(this._aperture*this._aperture/this._shutter*100/this._sensitivity);return 1/(Math.pow(2,t)*1.2)}getScreenSize(t){if(this._projection===Xs){const e=this._node.getPosition().distance(t.center);if(e<t.radius)return 1;const s=Math.asin(t.radius/e),i=Math.tan(s),r=Math.tan(this.fov/2*z.DEG_TO_RAD);return Math.min(i/r,1)}return z.clamp(t.radius/this._orthoHeight,0,1)}getFrustumCorners(t=this.nearClip,e=this.farClip){const s=this.fov*Math.PI/180;let i,r;this.projection===Xs?this.horizontalFov?(i=t*Math.tan(s/2),r=i/this.aspectRatio):(r=t*Math.tan(s/2),i=r*this.aspectRatio):(r=this._orthoHeight,i=r*this.aspectRatio);const n=mC;return n[0].x=i,n[0].y=-r,n[0].z=-t,n[1].x=i,n[1].y=r,n[1].z=-t,n[2].x=-i,n[2].y=r,n[2].z=-t,n[3].x=-i,n[3].y=-r,n[3].z=-t,this._projection===Xs&&(this.horizontalFov?(i=e*Math.tan(s/2),r=i/this.aspectRatio):(r=e*Math.tan(s/2),i=r*this.aspectRatio)),n[4].x=i,n[4].y=-r,n[4].z=-e,n[5].x=i,n[5].y=r,n[5].z=-e,n[6].x=-i,n[6].y=r,n[6].z=-e,n[7].x=-i,n[7].y=-r,n[7].z=-e,n}setXrProperties(t){Object.assign(this._xrProperties,t),this._projMatDirty=!0}}const t_=new q,s_=new q,i_=new q,er=class er{static create(t,e,s){const i=new dl;switch(i.node=new Oe(t),i.aspectRatio=1,i.aspectRatioMode=Vu,i._scissorRectClear=!0,e){case Le:i.node.setRotation(er.pointLightRotations[s]),i.fov=90,i.projection=Xs;break;case Fe:i.projection=Xs;break;case le:i.projection=pa;break}return i}static evalSpotCookieMatrix(t){let e=er._spotCookieCamera;e||(e=er.create("SpotCookieCamera",Fe),er._spotCookieCamera=e),e.fov=t._outerConeAngle*2;const s=e._node;s.setPosition(t._node.getPosition()),s.setRotation(t._node.getRotation()),s.rotateLocal(-90,0,0),t_.setTRS(s.getPosition(),s.getRotation(),A.ONE).invert(),s_.mul2(e.projectionMatrix,t_);const i=t.cookieMatrix,r=t.atlasViewport;return i_.setViewport(r.x,r.y,r.z,r.w),i.mul2(i_,s_),i}};c(er,"pointLightRotations",[new ie().setFromEulerAngles(0,90,180),new ie().setFromEulerAngles(0,-90,180),new ie().setFromEulerAngles(90,0,0),new ie().setFromEulerAngles(-90,0,0),new ie().setFromEulerAngles(0,180,180),new ie().setFromEulerAngles(0,0,180)]),c(er,"_spotCookieCamera",null);let Ia=er;const r_=1e-6,is=new A,Sr=new Float32Array(6),_C=new A(-.5,0,0),gC=new A(0,0,.5),vr={FLAGS:0,COLOR_A:1,COLOR_B:2,SPOT_ANGLES:3,SHADOW_BIAS:4,COOKIE_A:5,COOKIE_B:6,COUNT:7},pt={POSITION_RANGE:0,SPOT_DIRECTION:1,PROJ_MAT_0:2,ATLAS_VIEWPORT:2,PROJ_MAT_1:3,PROJ_MAT_2:4,PROJ_MAT_3:5,AREA_DATA_WIDTH:6,AREA_DATA_HEIGHT:7,COUNT:8};let Ad;class C0{constructor(t){c(this,"areaLightsEnabled",!1);this.device=t,this.cookiesEnabled=!1,this.shadowsEnabled=!1,this.areaLightsEnabled=!1,this.maxLights=255;const e=vr.COUNT;this.lights8=new Uint8ClampedArray(4*e*this.maxLights),this.lightsTexture8=this.createTexture(this.device,e,this.maxLights,Te,"LightsTexture8"),this._lightsTexture8Id=this.device.scope.resolve("lightsTexture8");const s=pt.COUNT;this.lightsFloat=new Float32Array(4*s*this.maxLights),this.lightsTextureFloat=this.createTexture(this.device,s,this.maxLights,et,"LightsTextureFloat"),this._lightsTextureFloatId=this.device.scope.resolve("lightsTextureFloat"),this.invMaxColorValue=0,this.invMaxAttenuation=0,this.boundsMin=new A,this.boundsDelta=new A}static getShaderDefines(){const t=(e,s)=>Object.keys(e).map(i=>`#define ${s}${i} ${e[i]}`).join(`
`);return Ad||(Ad=`

                ${t(vr,"CLUSTER_TEXTURE_8_")}
                ${t(pt,"CLUSTER_TEXTURE_F_")}
            `),Ad}destroy(){var t,e;(t=this.lightsTexture8)==null||t.destroy(),this.lightsTexture8=null,(e=this.lightsTextureFloat)==null||e.destroy(),this.lightsTextureFloat=null}createTexture(t,e,s,i,r){return new ce(t,{name:r,width:e,height:s,mipmaps:!1,format:i,addressU:oe,addressV:oe,type:Bi,magFilter:fe,minFilter:fe,anisotropy:1})}setCompressionRanges(t,e){this.invMaxColorValue=1/e,this.invMaxAttenuation=1/t}setBounds(t,e){this.boundsMin.copy(t),this.boundsDelta.copy(e)}uploadTextures(){this.lightsTextureFloat.lock().set(this.lightsFloat),this.lightsTextureFloat.unlock(),this.lightsTexture8.lock().set(this.lights8),this.lightsTexture8.unlock()}updateUniforms(){this._lightsTexture8Id.setValue(this.lightsTexture8),this._lightsTextureFloatId.setValue(this.lightsTextureFloat)}getSpotDirection(t,e){e._node.getWorldTransform().getY(t).mulScalar(-1),t.normalize()}getLightAreaSizes(t){const e=t._node.getWorldTransform();return e.transformVector(_C,is),Sr[0]=is.x,Sr[1]=is.y,Sr[2]=is.z,e.transformVector(gC,is),Sr[3]=is.x,Sr[4]=is.y,Sr[5]=is.z,Sr}addLightDataFlags(t,e,s,i,r,n){t[e+0]=i?255:0,t[e+1]=this.areaLightsEnabled?s._shape*64:0,t[e+2]=s._falloffMode*255,t[e+3]=r?n*255:0}addLightDataColor(t,e,s,i){const r=this.invMaxColorValue,n=s._colorLinear;Bt.float2Bytes(n[0]*r,t,e+0,2),Bt.float2Bytes(n[1]*r,t,e+2,2),Bt.float2Bytes(n[2]*r,t,e+4,2),t[e+6]=i?255:0;const a=!!(s.mask&ms),o=!!(s.mask&dr);t[e+7]=a&&o?127:o?255:0}addLightDataSpotAngles(t,e,s){Bt.float2Bytes(s._innerConeAngleCos*(.5-r_)+.5,t,e+0,2),Bt.float2Bytes(s._outerConeAngleCos*(.5-r_)+.5,t,e+2,2)}addLightDataShadowBias(t,e,s){const i=s.getRenderData(null,0),r=s._getUniformBiasValues(i);Bt.float2BytesRange(r.bias,t,e,-1,20,2),Bt.float2Bytes(r.normalBias,t,e+2,2)}addLightDataCookies(t,e,s){const i=s._cookieChannel==="rgb";if(t[e+0]=Math.floor(s.cookieIntensity*255),t[e+1]=i?255:0,!i){const r=s._cookieChannel;t[e+4]=r==="rrr"?255:0,t[e+5]=r==="ggg"?255:0,t[e+6]=r==="bbb"?255:0,t[e+7]=r==="aaa"?255:0}}addLightData(t,e){const s=t._type===Fe,i=t.atlasViewportAllocated,r=this.cookiesEnabled&&!!t._cookie&&i,n=this.areaLightsEnabled&&t.shape!==Tt,a=this.shadowsEnabled&&t.castShadows&&i,o=t._node.getPosition();let h=null,d=null;s?a?h=t.getRenderData(null,0).shadowMatrix:r&&(h=Ia.evalSpotCookieMatrix(t)):(a||r)&&(d=t.atlasViewport);const u=this.lights8,f=e*this.lightsTexture8.width*4;this.addLightDataFlags(u,f+4*vr.FLAGS,t,s,a,t.shadowIntensity),this.addLightDataColor(u,f+4*vr.COLOR_A,t,r),s&&this.addLightDataSpotAngles(u,f+4*vr.SPOT_ANGLES,t),t.castShadows&&this.addLightDataShadowBias(u,f+4*vr.SHADOW_BIAS,t),r&&this.addLightDataCookies(u,f+4*vr.COOKIE_A,t);const p=this.lightsFloat,m=e*this.lightsTextureFloat.width*4;if(p[m+4*pt.POSITION_RANGE+0]=o.x,p[m+4*pt.POSITION_RANGE+1]=o.y,p[m+4*pt.POSITION_RANGE+2]=o.z,p[m+4*pt.POSITION_RANGE+3]=t.attenuationEnd,s&&(this.getSpotDirection(is,t),p[m+4*pt.SPOT_DIRECTION+0]=is.x,p[m+4*pt.SPOT_DIRECTION+1]=is.y,p[m+4*pt.SPOT_DIRECTION+2]=is.z),h){const _=h.data;for(let g=0;g<16;g++)p[m+4*pt.PROJ_MAT_0+g]=_[g]}if(d&&(p[m+4*pt.ATLAS_VIEWPORT+0]=d.x,p[m+4*pt.ATLAS_VIEWPORT+1]=d.y,p[m+4*pt.ATLAS_VIEWPORT+2]=d.z/3),n){const _=this.getLightAreaSizes(t);p[m+4*pt.AREA_DATA_WIDTH+0]=_[0],p[m+4*pt.AREA_DATA_WIDTH+1]=_[1],p[m+4*pt.AREA_DATA_WIDTH+2]=_[2],p[m+4*pt.AREA_DATA_HEIGHT+0]=_[3],p[m+4*pt.AREA_DATA_HEIGHT+1]=_[4],p[m+4*pt.AREA_DATA_HEIGHT+2]=_[5]}}}const Ll=new A,Fl=new A,kl=new A,Ed=new ve,n_=1e-6,a_=4096;class o_{constructor(){this.light=null,this.min=new A,this.max=new A}}class Hu{constructor(t){c(this,"clusterTexture");this.device=t,this.name="Untitled",this.reportCount=0,this.boundsMin=new A,this.boundsMax=new A,this.boundsDelta=new A,this._cells=new A(1,1,1),this._cellsLimit=new A,this.cells=this._cells,this.maxCellLightCount=4,this._maxAttenuation=0,this._maxColorValue=0,this._usedLights=[],this._usedLights.push(new o_),this.lightsBuffer=new C0(t),this.registerUniforms(t)}set maxCellLightCount(t){t!==this._maxCellLightCount&&(this._maxCellLightCount=t,this._cellsDirty=!0)}get maxCellLightCount(){return this._maxCellLightCount}set cells(t){Ll.copy(t).floor(),this._cells.equals(Ll)||(this._cells.copy(Ll),this._cellsLimit.copy(Ll).sub(A.ONE),this._cellsDirty=!0)}get cells(){return this._cells}destroy(){this.lightsBuffer.destroy(),this.releaseClusterTexture()}releaseClusterTexture(){this.clusterTexture&&(this.clusterTexture.destroy(),this.clusterTexture=null)}registerUniforms(t){this._clusterSkipId=t.scope.resolve("clusterSkip"),this._clusterMaxCellsId=t.scope.resolve("clusterMaxCells"),this._clusterWorldTextureId=t.scope.resolve("clusterWorldTexture"),this._clusterTextureSizeId=t.scope.resolve("clusterTextureSize"),this._clusterTextureSizeData=new Float32Array(3),this._clusterBoundsMinId=t.scope.resolve("clusterBoundsMin"),this._clusterBoundsMinData=new Float32Array(3),this._clusterBoundsDeltaId=t.scope.resolve("clusterBoundsDelta"),this._clusterBoundsDeltaData=new Float32Array(3),this._clusterCellsCountByBoundsSizeId=t.scope.resolve("clusterCellsCountByBoundsSize"),this._clusterCellsCountByBoundsSizeData=new Float32Array(3),this._clusterCellsDotId=t.scope.resolve("clusterCellsDot"),this._clusterCellsDotData=new Float32Array(3),this._clusterCellsMaxId=t.scope.resolve("clusterCellsMax"),this._clusterCellsMaxData=new Float32Array(3),this._clusterCompressionLimit0Id=t.scope.resolve("clusterCompressionLimit0"),this._clusterCompressionLimit0Data=new Float32Array(2)}updateParams(t){t&&(this.cells=t.cells,this.maxCellLightCount=t.maxLightsPerCell,this.lightsBuffer.cookiesEnabled=t.cookiesEnabled,this.lightsBuffer.shadowsEnabled=t.shadowsEnabled,this.lightsBuffer.areaLightsEnabled=t.areaLightsEnabled)}updateCells(){if(this._cellsDirty){this._cellsDirty=!1;const t=this._cells.x,e=this._cells.y,s=this._cells.z,i=t*e*s,r=this.maxCellLightCount*i;let n=Math.ceil(Math.sqrt(r));n=z.roundUp(n,this.maxCellLightCount);const a=Math.ceil(r/n);b.assert(n<=a_&&a<=a_,"Clustered lights parameters cause the texture size to be over the limit, please adjust them."),this._clusterCellsMaxData[0]=t,this._clusterCellsMaxData[1]=e,this._clusterCellsMaxData[2]=s,this._clusterCellsDotData[0]=this.maxCellLightCount,this._clusterCellsDotData[1]=t*s*this.maxCellLightCount,this._clusterCellsDotData[2]=t*this.maxCellLightCount,this.clusters=new Uint8ClampedArray(r),this.counts=new Int32Array(i),this._clusterTextureSizeData[0]=n,this._clusterTextureSizeData[1]=1/n,this._clusterTextureSizeData[2]=1/a,this.releaseClusterTexture(),this.clusterTexture=this.lightsBuffer.createTexture(this.device,n,a,ap,"ClusterTexture")}}uploadTextures(){this.clusterTexture.lock().set(this.clusters),this.clusterTexture.unlock(),this.lightsBuffer.uploadTextures()}updateUniforms(){this._clusterSkipId.setValue(this._usedLights.length>1?0:1),this.lightsBuffer.updateUniforms(),this._clusterWorldTextureId.setValue(this.clusterTexture),this._clusterMaxCellsId.setValue(this.maxCellLightCount);const t=this.boundsDelta;this._clusterCellsCountByBoundsSizeData[0]=this._cells.x/t.x,this._clusterCellsCountByBoundsSizeData[1]=this._cells.y/t.y,this._clusterCellsCountByBoundsSizeData[2]=this._cells.z/t.z,this._clusterCellsCountByBoundsSizeId.setValue(this._clusterCellsCountByBoundsSizeData),this._clusterBoundsMinData[0]=this.boundsMin.x,this._clusterBoundsMinData[1]=this.boundsMin.y,this._clusterBoundsMinData[2]=this.boundsMin.z,this._clusterBoundsDeltaData[0]=t.x,this._clusterBoundsDeltaData[1]=t.y,this._clusterBoundsDeltaData[2]=t.z,this._clusterCompressionLimit0Data[0]=this._maxAttenuation,this._clusterCompressionLimit0Data[1]=this._maxColorValue,this._clusterTextureSizeId.setValue(this._clusterTextureSizeData),this._clusterBoundsMinId.setValue(this._clusterBoundsMinData),this._clusterBoundsDeltaId.setValue(this._clusterBoundsDeltaData),this._clusterCellsDotId.setValue(this._clusterCellsDotData),this._clusterCellsMaxId.setValue(this._clusterCellsMaxData),this._clusterCompressionLimit0Id.setValue(this._clusterCompressionLimit0Data)}evalLightCellMinMax(t,e,s){e.copy(t.min),e.sub(this.boundsMin),e.div(this.boundsDelta),e.mul2(e,this.cells),e.floor(),s.copy(t.max),s.sub(this.boundsMin),s.div(this.boundsDelta),s.mul2(s,this.cells),s.ceil(),e.max(A.ZERO),s.min(this._cellsLimit)}collectLights(t){const e=this.lightsBuffer.maxLights,s=this._usedLights;let i=1;t.forEach(r=>{const n=!!(r.mask&(ms|dr)),a=r.type===Fe&&r._outerConeAngle===0;if(r.enabled&&r.type!==le&&r.visibleThisFrame&&r.intensity>0&&n&&!a)if(i<e){let o;i<s.length?o=s[i]:(o=new o_,s.push(o)),o.light=r,r.getBoundingBox(Ed),o.min.copy(Ed.getMin()),o.max.copy(Ed.getMax()),i++}else b.warnOnce(`Clustered lighting: more than ${e-1} lights in the frame, ignoring some.`)}),s.length=i}evaluateBounds(){const t=this._usedLights,e=this.boundsMin,s=this.boundsMax;if(t.length>1){e.copy(t[1].min),s.copy(t[1].max);for(let i=2;i<t.length;i++)e.min(t[i].min),s.max(t[i].max)}else e.set(0,0,0),s.set(1,1,1);this.boundsDelta.sub2(s,e),this.lightsBuffer.setBounds(e,this.boundsDelta)}evaluateCompressionLimits(){let t=0,e=0;const s=this._usedLights;for(let i=1;i<s.length;i++){const r=s[i].light;t=Math.max(r.attenuationEnd,t);const n=r._colorLinear;e=Math.max(n[0],e),e=Math.max(n[1],e),e=Math.max(n[2],e)}this._maxAttenuation=t+n_,this._maxColorValue=e+n_,this.lightsBuffer.setCompressionRanges(this._maxAttenuation,this._maxColorValue)}updateClusters(t){this.counts.fill(0),this.clusters.fill(0),this.lightsBuffer.areaLightsEnabled=t?t.areaLightsEnabled:!1;const e=this._cells.x,s=this._cells.z,i=this.counts,r=this._maxCellLightCount,n=this.clusters,a=this.maxCellLightCount;let o=!1;const h=this._usedLights;for(let d=1;d<h.length;d++){const u=h[d],f=u.light;this.lightsBuffer.addLightData(f,d),this.evalLightCellMinMax(u,Fl,kl);const p=Fl.x,m=kl.x,_=Fl.y,g=kl.y,y=Fl.z,w=kl.z;for(let C=p;C<=m;C++)for(let x=y;x<=w;x++)for(let M=_;M<=g;M++){const S=C+e*(x+M*s),v=i[S];v<r?(n[a*S+v]=d,i[S]=v+1):o=!0}}o&&this.reportCount<5&&(console.warn(`Too many lights in light cluster ${this.name}, please adjust parameters.${this.reportCount===4?" Giving up on reporting it.":""}`),this.reportCount++)}update(t,e=null){this.updateParams(e),this.updateCells(),this.collectLights(t),this.evaluateBounds(),this.evaluateCompressionLimits(),this.updateClusters(e),this.uploadTextures()}activate(){this.updateUniforms()}}const l_=2.399963229728653,ul={circlePoint(l){const t=Math.sqrt(Math.random()),e=Math.random()*2*Math.PI;l.x=t*Math.cos(e),l.y=t*Math.sin(e)},circlePointDeterministic(l,t,e){const s=t*l_,i=Math.sqrt(t)/Math.sqrt(e);l.x=i*Math.cos(s),l.y=i*Math.sin(s)},spherePointDeterministic(l,t,e,s=0,i=1){s=1-2*s,i=1-2*i;const r=z.lerp(s,i,t/e),n=Math.sqrt(1-r*r),a=l_*t;l.x=Math.cos(a)*n,l.y=r,l.z=Math.sin(a)*n},radicalInverse(l){let t=(l<<16|l>>>16)>>>0;return t=((t&1431655765)<<1|(t&2863311530)>>>1)>>>0,t=((t&858993459)<<2|(t&3435973836)>>>2)>>>0,t=((t&252645135)<<4|(t&4042322160)>>>4)>>>0,t=((t&16711935)<<8|(t&4278255360)>>>8)>>>0,t*23283064365386963e-26}},yC={linear:"decodeLinear",srgb:"decodeGamma",rgbm:"decodeRGBM",rgbe:"decodeRGBE",rgbp:"decodeRGBP"},xC={linear:"encodeLinear",srgb:"encodeGamma",rgbm:"encodeRGBM",rgbe:"encodeRGBE",rgbp:"encodeRGBP"};class Ds{static decodeFunc(t){return yC[t]||"decodeGamma"}static encodeFunc(t){return xC[t]||"encodeGamma"}static getScreenDepthChunk(t,e){return`
            ${e.sceneDepthMapLinear?"#define SCENE_DEPTHMAP_LINEAR":""}
            ${t.textureFloatRenderable?"#define SCENE_DEPTHMAP_FLOAT":""}
            ${j.screenDepthPS}
        `}}const h_=l=>{switch(l){case Pu:return"Cubemap";case QS:return"Octahedral";default:return"Equirect"}},Ol=(l,t,e)=>{if(l<=0)t[e+0]=0,t[e+1]=0,t[e+2]=0,t[e+3]=0;else if(l>=1)t[e+0]=255,t[e+1]=0,t[e+2]=0,t[e+3]=0;else{let s=1*l%1,i=255*l%1,r=65025*l%1;const n=16581375*l%1;s-=i/255,i-=r/255,r-=n/255,t[e+0]=Math.min(255,Math.floor(s*256)),t[e+1]=Math.min(255,Math.floor(i*256)),t[e+2]=Math.min(255,Math.floor(r*256)),t[e+3]=Math.min(255,Math.floor(n*256))}},SC=l=>{const t=l.length,e=Math.min(t,512),s=Math.ceil(t/e),i=new Uint8Array(e*s*4);let r=0;for(let n=0;n<t;n+=4)Ol(l[n+0]*.5+.5,i,r+0),Ol(l[n+1]*.5+.5,i,r+4),Ol(l[n+2]*.5+.5,i,r+8),Ol(l[n+3]/8,i,r+12),r+=16;return{width:e,height:s,data:i}},vC=(l,t,e,s)=>{const i=e*2*Math.PI,r=Math.pow(1-t,1/(s+1)),n=Math.sqrt(1-r*r);l.set(Math.cos(i)*n,Math.sin(i)*n,r).normalize()},bC=(l,t,e)=>{const s=e*2*Math.PI,i=Math.sqrt(1-t),r=Math.sqrt(t);l.set(Math.cos(s)*r,Math.sin(s)*r,i).normalize()},wC=(l,t,e,s)=>{const i=e*2*Math.PI,r=Math.sqrt((1-t)/(1+(s*s-1)*t)),n=Math.sqrt(1-r*r);l.set(Math.cos(i)*n,Math.sin(i)*n,r).normalize()},TC=(l,t)=>{const e=l*t,s=t/(1-l*l+e*e);return s*s*(1/Math.PI)},AC=(l,t)=>{const e=new A,s=[];for(let i=0;i<l;++i)vC(e,i/l,ul.radicalInverse(i),t),s.push(e.x,e.y,e.z,0);return s},EC=(l,t)=>{const e=t/l,s=new A,i=[];for(let r=0;r<l;++r){bC(s,r/l,ul.radicalInverse(r));const n=s.z/Math.PI,a=.5*Math.log2(e/n);i.push(s.x,s.y,s.z,a)}return i},CC={16:{2:26,8:20,32:17,128:16,512:16},32:{2:53,8:40,32:34,128:32,512:32},128:{2:214,8:163,32:139,128:130,512:128},1024:{2:1722,8:1310,32:1114,128:1041,512:1025}},MC=(l,t)=>{const e=CC[l];return e&&e[t]||l},PC=(l,t,e)=>{const s=e/l,i=1-Math.log2(t)/11,r=i*i,n=new A,a=new A,o=new A(0,0,1),h=[],d=MC(l,t);for(let u=0;u<d;++u){wC(n,u/d,ul.radicalInverse(u),r);const f=n.z;if(a.set(n.x,n.y,n.z).mulScalar(2*f).sub(o),a.z>0){const p=TC(Math.min(1,f),r)/4+.001,m=.5*Math.log2(s/p);h.push(a.x,a.y,a.z,m)}}for(;h.length<l*4;)h.push(0,0,0,0);return h},RC=(l,t,e)=>{const s=SC(e);return new ce(l,{name:t,width:s.width,height:s.height,mipmaps:!1,minFilter:fe,magFilter:fe,levels:[s.data]})};class M0{constructor(t=!0){c(this,"map",new Map);this.destroyContent=t}destroy(){this.destroyContent&&this.map.forEach((t,e)=>{t.destroy()})}get(t,e){if(!this.map.has(t)){const s=e();return this.map.set(t,s),s}return this.map.get(t)}}const IC=new M0(!1),DC=new Ht,Bp=(l,t,e)=>DC.get(l,()=>new M0).get(t,()=>RC(l,t,IC.get(t,e))),LC=(l,t,e)=>{const s=`lambert-samples-${t}-${e}`;return Bp(l,s,()=>EC(t,e))},FC=(l,t,e)=>{const s=`phong-samples-${t}-${e}`;return Bp(l,s,()=>AC(t,e))},kC=(l,t,e,s)=>{const i=`ggx-samples-${t}-${e}-${s}`;return Bp(l,i,()=>PC(t,e,s))},OC=`
attribute vec2 vertex_position;

uniform vec4 uvMod;

varying vec2 vUv0;

void main(void) {
    gl_Position = vec4(vertex_position, 0.5, 1.0);
    vUv0 = getImageEffectUV((vertex_position.xy * 0.5 + 0.5) * uvMod.xy + uvMod.zw);
}
`;function ii(l,t,e={}){var E,T;b.assert(l instanceof ce&&t instanceof ce,"source and target must be textures");const s=e.seamPixels??0,i=(((E=e.rect)==null?void 0:E.z)??t.width)-s*2,r=(((T=e.rect)==null?void 0:T.w)??t.height)-s*2;if(i<1||r<1)return!1;const n={none:"reproject",lambert:"prefilterSamplesUnweighted",phong:"prefilterSamplesUnweighted",ggx:"prefilterSamples"},a=e.hasOwnProperty("specularPower")?e.specularPower:1,o=e.hasOwnProperty("face")?e.face:null,h=e.hasOwnProperty("distribution")?e.distribution:a===1?"none":"phong",d=n[h]||"reproject",u=d.startsWith("prefilterSamples"),f=Ds.decodeFunc(l.encoding),p=Ds.encodeFunc(t.encoding),m=`sample${h_(l.projection)}`,_=`getDirection${h_(t.projection)}`,g=e.hasOwnProperty("numSamples")?e.numSamples:1024,y=`${d}_${f}_${p}_${m}_${_}_${g}`,w=l.device;let C=za(w).getCachedShader(y);if(!C){const R=`#define PROCESS_FUNC ${d}
${u?`#define USE_SAMPLES_TEX
`:""}${l.cubemap?`#define CUBEMAP_SOURCE
`:""}#define DECODE_FUNC ${f}
#define ENCODE_FUNC ${p}
#define SOURCE_FUNC ${m}
#define TARGET_FUNC ${_}
#define NUM_SAMPLES ${g}
#define NUM_SAMPLES_SQRT ${Math.round(Math.sqrt(g)).toFixed(1)}
`;C=Bs(w,OC,`${R}
${j.reprojectPS}`,y)}G.pushGpuMarker(w,"ReprojectTexture"),w.setBlendState(bt.NOBLEND);const x=w.scope.resolve(l.cubemap?"sourceCube":"sourceTex");b.assert(x),x.setValue(l);const M=w.scope.resolve("params"),S=w.scope.resolve("uvMod");s>0?S.setValue([(i+s*2)/i,(r+s*2)/r,-s/i,-s/r]):S.setValue([1,1,0,0]);const v=[0,t.width*t.height*(t.cubemap?6:1),l.width*l.height*(l.cubemap?6:1)];if(u){const R=l.width*l.height*(l.cubemap?6:1),D=h==="ggx"?kC(w,g,a,R):h==="lambert"?LC(w,g,R):FC(w,g,a);w.scope.resolve("samplesTex").setValue(D),w.scope.resolve("samplesTexInverseSize").setValue([1/D.width,1/D.height])}for(let R=0;R<(t.cubemap?6:1);R++)if(o===null||R===o){const D=new St({colorBuffer:t,face:R,depth:!1,flipY:w.isWebGPU});v[0]=R,M.setValue(v),fn(w,D,C,e==null?void 0:e.rect),D.destroy()}return G.popGpuMarker(w),!0}const Cd=(l,t=0)=>1+Math.floor(Math.log2(Math.max(l,t))),BC=l=>l.textureHalfFloatRenderable,NC=l=>l.textureFloatRenderable,zC=l=>BC(l)?it:NC(l)?et:Te,UC=l=>Te,VC=(l,t,e,s)=>new ce(l,{name:`lighting-${t}`,cubemap:!0,width:t,height:t,format:e,type:ko,addressU:oe,addressV:oe,mipmaps:!1});class P0{static generateSkyboxCubemap(t,e){const s=t.device;G.pushGpuMarker(s,"genSkyboxCubemap");const i=VC(s,e||(t.cubemap?t.width:t.width/4),Te);return ii(t,i,{numSamples:1024}),G.popGpuMarker(s),i}static generateLightingSource(t,e){const s=t.device;G.pushGpuMarker(s,"genLightingSource");const i=zC(s),r=(e==null?void 0:e.target)||new ce(s,{name:"lighting-source",cubemap:!0,width:(e==null?void 0:e.size)||128,height:(e==null?void 0:e.size)||128,format:i,type:i===Te?ko:Bi,addressU:oe,addressV:oe,mipmaps:!0});return ii(t,r,{numSamples:t.mipmaps?1:1024}),G.popGpuMarker(s),r}static generateAtlas(t,e){const s=t.device,i=UC();G.pushGpuMarker(s,"genAtlas");const r=(e==null?void 0:e.target)||new ce(s,{name:"envAtlas",width:(e==null?void 0:e.size)||512,height:(e==null?void 0:e.size)||512,format:i,type:ko,projection:hm,addressU:oe,addressV:oe,mipmaps:!1});G.pushGpuMarker(s,"mipmaps");const n=r.width/512,a=new ee(0,0,512*n,256*n),o=Cd(256)-Cd(4);for(let h=0;h<o;++h)ii(t,r,{numSamples:1,rect:a,seamPixels:n}),a.x+=a.w,a.y+=a.w,a.z=Math.max(1,Math.floor(a.z*.5)),a.w=Math.max(1,Math.floor(a.w*.5));G.popGpuMarker(s),G.pushGpuMarker(s,"reflections"),a.set(0,256*n,256*n,128*n);for(let h=1;h<7;++h)ii(t,r,{numSamples:(e==null?void 0:e.numReflectionSamples)||1024,distribution:(e==null?void 0:e.distribution)||"ggx",specularPower:Math.max(1,2048>>h*2),rect:a,seamPixels:n}),a.y+=a.w,a.z=Math.max(1,Math.floor(a.z*.5)),a.w=Math.max(1,Math.floor(a.w*.5));return G.popGpuMarker(s),G.pushGpuMarker(s,"ambient"),a.set(128*n,384*n,64*n,32*n),ii(t,r,{numSamples:(e==null?void 0:e.numAmbientSamples)||2048,distribution:"lambert",rect:a,seamPixels:n}),G.popGpuMarker(s),G.popGpuMarker(s),r}static generatePrefilteredAtlas(t,e){const s=t[0].device,i=t[0].format,r=t[0].type;G.pushGpuMarker(s,"genPrefilteredAtlas");const n=(e==null?void 0:e.target)||new ce(s,{name:"envPrefilteredAtlas",width:(e==null?void 0:e.size)||512,height:(e==null?void 0:e.size)||512,format:i,type:r,projection:hm,addressU:oe,addressV:oe,mipmaps:!1});G.pushGpuMarker(s,"mipmaps");const a=n.width/512,o=new ee(0,0,512*a,256*a),h=Cd(512);for(let d=0;d<h;++d)ii(t[0],n,{numSamples:1,rect:o,seamPixels:a}),o.x+=o.w,o.y+=o.w,o.z=Math.max(1,Math.floor(o.z*.5)),o.w=Math.max(1,Math.floor(o.w*.5));G.popGpuMarker(s),G.pushGpuMarker(s,"reflections"),o.set(0,256*a,256*a,128*a);for(let d=1;d<t.length;++d)ii(t[d],n,{numSamples:1,rect:o,seamPixels:a}),o.y+=o.w,o.z=Math.max(1,Math.floor(o.z*.5)),o.w=Math.max(1,Math.floor(o.w*.5));return G.popGpuMarker(s),G.pushGpuMarker(s,"ambient"),o.set(128*a,384*a,64*a,32*a),e!=null&&e.legacyAmbient?ii(t[5],n,{numSamples:1,rect:o,seamPixels:a}):ii(t[0],n,{numSamples:(e==null?void 0:e.numSamples)||2048,distribution:"lambert",rect:o,seamPixels:a}),G.popGpuMarker(s),G.popGpuMarker(s),n}}const GC={aoPS:Et,clearCoatPS:Et,clearCoatGlossPS:cd,clearCoatNormalPS:Et,diffusePS:Et,diffuseDetailMapPS:Et,emissivePS:Et,glossPS:cd,lightmapDirPS:Mi,lightmapSinglePS:Mi,metalnessPS:Et,normalMapPS:Et,normalDetailMapPS:Et,opacityPS:Et,parallaxPS:Et,sheenPS:Et,sheenGlossPS:cd,specularPS:Et,specularityFactorPS:Et,thicknessPS:Et,transmissionPS:Et,normalVertexPS:Mi,startPS:Mi,ambientConstantPS:Se,ambientEnvPS:Se,ambientSHPS:Se,aoDiffuseOccPS:Se,aoSpecOccPS:Se,aoSpecOccConstPS:Se,aoSpecOccConstSimplePS:Se,aoSpecOccSimplePS:Se,clusteredLightPS:Se,clusteredLightShadowPS:Se,combinePS:Se,falloffInvSquaredPS:Se,falloffLinearPS:Se,lightDiffuseLambertPS:Se,lightSheenPS:Se,lightSpecularAnisoGGXPS:Se,lightSpecularBlinnPS:Se,ltcPS:Se,reflDirPS:Se,reflDirAnisoPS:Se,reflectionCCPS:Se,reflectionCubePS:Se,reflectionEnvPS:Se,reflectionEnvHQPS:Se,reflectionSheenPS:Se,reflectionSpherePS:Se,shadowCommonPS:Se,shadowCoordPS:Se,shadowCoordPerspZBufferPS:Se,shadowEVSMPS:Se,shadowEVSMnPS:Se,shadowStandardPS:Se,shadowStandardGL2PS:Se,spotPS:Se,TBNPS:Se,TBNObjectSpacePS:Se,TBNderivativePS:Se,endPS:pi,metalnessModulatePS:pi,outputAlphaPS:pi,outputAlphaPremulPS:pi,fresnelSchlickPS:pi,iridescenceDiffractionPS:pi,lightmapAddPS:pi,lightmapDirAddPS:pi,refractionCubePS:cm,refractionDynamicPS:cm},HC={ambientPrefilteredCubePS:Gi,ambientPrefilteredCubeLodPS:Gi,dpAtlasQuadPS:Gi,genParaboloidPS:Gi,prefilterCubemapPS:Gi,reflectionDpAtlasPS:Gi,reflectionPrefilteredCubePS:Gi,reflectionPrefilteredCubeLodPS:Gi,refractionPS:gr,combineClearCoatPS:gr,combineDiffusePS:gr,combineDiffuseSpecularPS:gr,combineDiffuseSpecularNoReflPS:gr,combineDiffuseSpecularNoReflSeparateAmbientPS:gr,combineDiffuseSpecularOldPS:gr,lightmapSingleVertPS:Mi,normalMapFastPS:Mi,specularAaNonePS:Mi,specularAaToksvigPS:Mi,specularAaToksvigFastPS:Mi,skyboxEnvPS:dm,skyboxHDRPS:dm,shadowVSM8PS:bv,fogExpPS:An,fogExp2PS:An,fogLinearPS:An,fogNonePS:An,gamma1_0PS:An,gamma2_2PS:An},WC=(l,t)=>{const e=l.split(".").map(i=>parseInt(i,10)),s=t.split(".").map(i=>parseInt(i,10));return e[0]<s[0]||e[0]===s[0]&&e[1]<s[1]},$C=l=>{const t=l.APIVersion;for(const e in l)if(e!=="APIVersion")if(j.hasOwnProperty(e)){const s=GC[e];s&&(!t||WC(t,s))&&b.warnOnce(`Shader chunk '${e}' is API version ${s}, but the supplied chunk is version ${t||"-"}. Please update to the latest API: https://developer.playcanvas.com/user-manual/graphics/shader-chunk-migrations/`)}else{const s=HC[e];s?b.warnOnce(`Shader chunk '${e}' was removed in API ${s} and is no longer supported.`):b.warnOnce(`Shader chunk '${e}' is not supported.`)}};class rr{constructor(){c(this,"code","")}append(...t){t.forEach(e=>{e.endsWith(`
`)?this.code+=e:this.code+=`${e}
`})}prepend(...t){t.forEach(e=>{e.endsWith(`
`)?this.code=e+this.code:this.code=`${e}
${this.code}`})}}const Md={vertex_normal:ss,vertex_tangent:si,vertex_texCoord0:ds,vertex_texCoord1:yn,vertex_color:It,vertex_boneWeights:ei,vertex_boneIndices:Jt},c_={vVertexColor:"vec4",vPositionW:"vec3",vNormalV:"vec3",vNormalW:"vec3",vTangentW:"vec3",vBinormalW:"vec3",vObjectSpaceUpW:"vec3",vUv0:"vec2",vUv1:"vec2",vLinearDepth:"float"};class qC{constructor(t,e){if(this.device=t,this.options=e,this.attributes={vertex_position:Xe},e.userAttributes)for(const[s,i]of Object.entries(e.userAttributes))this.attributes[i]=s;if(e.chunks){const s=e.chunks;$C(s),this.chunks=Object.create(j);for(const i in j)if(s.hasOwnProperty(i)){const r=s[i];for(const n in Md)Md.hasOwnProperty(n)&&r.indexOf(n)>=0&&(this.attributes[n]=Md[n]);this.chunks[i]=r}}else this.chunks=j;this.shaderPassInfo=ti.get(this.device).getByIndex(e.pass),this.shadowPass=this.shaderPassInfo.isShadow,this.lighting=e.lights.length>0||e.dirLightMapEnabled||e.clusteredLightingEnabled,this.reflections=!!e.reflectionSource,this.needsNormal=this.lighting||this.reflections||e.useSpecular||e.ambientSH||e.useHeights||e.enableGGXSpecular||e.clusteredLightingEnabled&&!this.shadowPass||e.useClearCoatNormals,this.needsNormal=this.needsNormal&&!this.shadowPass,this.needsSceneColor=e.useDynamicRefraction,this.needsScreenSize=e.useDynamicRefraction,this.needsTransforms=e.useDynamicRefraction,this.varyings="",this.varyingDefines="",this.vshader=null,this.frontendDecl=null,this.frontendCode=null,this.frontendFunc=null,this.lightingUv=null,this.defines=[],this.fshader=null}_vsAddBaseCode(t,e,s){return t+=e.baseVS,(s.nineSlicedMode===ht||s.nineSlicedMode===st)&&(t+=e.baseNineSlicedVS),t}_setMapTransform(t,e,s,i){const r=s+i*100;if(!t[3][r]){const n=`texture_${e}MapTransform`;t[0]+=`uniform vec3 ${n}0;
`,t[0]+=`uniform vec3 ${n}1;
`,t[1]+=`varying vec2 vUV${i}_${s};
`,t[2]+=`   vUV${i}_${s} = vec2(dot(vec3(uv${i}, 1), ${n}0), dot(vec3(uv${i}, 1), ${n}1));
`,t[3][r]=!0}return t}_fsGetBaseCode(){const t=this.options,e=this.chunks;let s=this.chunks.basePS;return t.nineSlicedMode===ht?s+=e.baseNineSlicedPS:t.nineSlicedMode===st&&(s+=e.baseNineSlicedTiledPS),s}_fsGetStartCode(t,e,s,i){let r=s.startPS;return i.nineSlicedMode===ht?r+=s.startNineSlicedPS:i.nineSlicedMode===st&&(r+=s.startNineSlicedTiledPS),r}_getLightSourceShapeString(t){switch(t){case Gb:return"Rect";case Hb:return"Disk";case Wb:return"Sphere";default:return""}}generateVertexShader(t,e,s){const i=this.device,r=this.options,n=this.chunks;let a="",o="",h="";a=this._vsAddBaseCode(a,n,r),o+=`   vPositionW = getWorldPosition();
`,this.options.linearDepth&&(h+=`
                #ifndef VIEWMATRIX
                #define VIEWMATRIX
                    uniform mat4 matrix_view;
                #endif
            `,o+=`
                // linear depth from the worldPosition, see getLinearDepth
                vLinearDepth = -(matrix_view * vec4(vPositionW, 1.0)).z;
            `),this.options.useInstancing&&this.chunks.transformInstancingVS===j.transformInstancingVS&&(this.attributes.instance_line1=lp,this.attributes.instance_line2=Sa,this.attributes.instance_line3=hp,this.attributes.instance_line4=va),a+=n.transformVS,this.needsNormal&&(a+=n.normalCoreVS,a+=n.normalVS),this.needsNormal&&(this.attributes.vertex_normal=ss,o+=`   vNormalW = getNormal();
`,r.reflectionSource==="sphereMap"&&i.fragmentUniformsCount<=16&&(a+=n.viewNormalVS,o+=`   vNormalV    = getViewNormal();
`),r.hasTangents&&(r.useHeights||r.useNormals||r.enableGGXSpecular)?(this.attributes.vertex_tangent=si,a+=n.tangentBinormalVS,o+=`   vTangentW   = getTangent();
`,o+=`   vBinormalW  = getBinormal();
`):r.enableGGXSpecular&&(o+=`   vObjectSpaceUpW = normalize(dNormalMatrix * vec3(0, 1, 0));
`));const d=2;for(let f=0;f<d;f++)t[f]&&(this.attributes[`vertex_texCoord${f}`]=`TEXCOORD${f}`,a+=n[`uv${f}VS`],o+=`   vec2 uv${f} = getUv${f}();
`),e[f]&&(o+=`   vUv${f} = uv${f};
`);const u=[a,this.varyings,o,[]];s.forEach(f=>{this._setMapTransform(u,f.name,f.id,f.uv)}),a=u[0],this.varyings=u[1],o=u[2],r.vertexColors&&(this.attributes.vertex_color=It,o+=`   vVertexColor = vertex_color;
`),r.useMsdf&&r.msdfTextAttribute&&(this.attributes.vertex_outlineParameters=Lo,this.attributes.vertex_shadowParameters=Fo,o+=`    unpackMsdfParams();
`,a+=n.msdfVS),(r.useMorphPosition||r.useMorphNormal)&&(h+=`#define MORPHING
`,r.useMorphTextureBasedInt&&(h+=`#define MORPHING_INT
`),r.useMorphPosition&&(h+=`#define MORPHING_POSITION
`),r.useMorphNormal&&(h+=`#define MORPHING_NORMAL
`),this.attributes.morph_vertex_id=va),r.skin?(this.attributes.vertex_boneIndices=Jt,r.batch?h+=`#define BATCH
`:(this.attributes.vertex_boneWeights=ei,h+=`#define SKIN
`)):r.useInstancing&&(h+=`#define INSTANCING
`),r.screenSpace&&(h+=`#define SCREENSPACE
`),r.pixelSnap&&(h+=`#define PIXELSNAP
`),a+=`
`,a+=n.startVS,a+=o,a+=n.endVS,a+="}",Object.keys(c_).forEach(f=>{a.indexOf(f)>=0&&(this.varyings+=`varying ${c_[f]} ${f};
`,this.varyingDefines+=`#define VARYING_${f.toUpperCase()}
`)}),this.vshader=h+this.varyings+a}_fsGetBeginCode(){let t="";for(let e=0;e<this.defines.length;e++)t+=`#define ${this.defines[e]}
`;return t}_fsGetPickPassCode(){return`
            ${this._fsGetBeginCode()}
            ${this.varyings}
            ${this.varyingDefines}
            ${this.frontendDecl}
            ${this.frontendCode}
            ${this.chunks.pickPS}

            void main(void) {
                ${this.frontendFunc}
                gl_FragColor = getPickOutput();
            }
        `}_fsGetDepthPassCode(){let t=this._fsGetBeginCode();return t+=this.varyings,t+=this.varyingDefines,t+=this.frontendDecl,t+=this.frontendCode,t+=Nt.begin(),t+=this.frontendFunc,t+=`    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
`,t+=Nt.end(),t}_fsGetPrePassCode(){let t=this._fsGetBeginCode();return t+=this.varyings,t+=this.varyingDefines,t+=this.chunks.floatAsUintPS,t+=this.frontendDecl,t+=this.frontendCode,t+=Nt.begin(),t+=this.frontendFunc,t+=this.device.textureFloatRenderable?`
            gl_FragColor = vec4(vLinearDepth, 1.0, 1.0, 1.0);
        `:`
            gl_FragColor = float2uint(vLinearDepth);
        `,t+=Nt.end(),t}_fsGetShadowPassCode(){const t=this.options,e=this.chunks,s=this.varyings,i=this.shaderPassInfo.lightType;let r=this.shaderPassInfo.shadowType;i!==le&&t.clusteredLightingEnabled&&(r===Wr||r===$r||r===Rs)&&(r=zt);const n=nr.get(r);b.assert(n);const a=(n==null?void 0:n.vsm)??!1,o=(n==null?void 0:n.pcss)??!1;let h=this._fsGetBeginCode();r===$r?h+=`#define VSM_EXPONENT 15.0

`:r===Wr&&(h+=`#define VSM_EXPONENT 5.54

`),i!==le&&(h+=`uniform vec3 view_position;
`,h+=`uniform float light_radius;
`),h+=s,h+=this.varyingDefines,h+=this.frontendDecl,h+=this.frontendCode,r===Rs&&(h+=j.linearizeDepthPS),h+=Nt.begin(),h+=this.frontendFunc;const d=i===le||!a&&i===Fe;let u=!1;return d?(h+=`    float depth = gl_FragCoord.z;
`,o&&i!==le&&(h+=`    depth = linearizeDepth(depth, camera_params);
`)):(h+=`    float depth = min(distance(view_position, vPositionW) / light_radius, 0.99999);
`,u=!0),a?h+=e.storeEVSMPS:o?h+=`    gl_FragColor.r = depth;
`:(u&&(h+=`    gl_FragDepth = depth;
`),h+=`    gl_FragColor = vec4(1.0);
`),h+=Nt.end(),h}_fsGetLitPassCode(){var D;const t=this.device,e=this.options,s=this.chunks,i=new rr,r=new rr,n=new rr,a=new rr;e.opacityFadesSpecular===!1&&i.append("uniform float material_alphaFade;"),e.useSpecular&&(this.defines.push("LIT_SPECULAR"),this.reflections&&this.defines.push("LIT_REFLECTIONS"),e.useClearCoat&&this.defines.push("LIT_CLEARCOAT"),e.fresnelModel>0&&this.defines.push("LIT_SPECULAR_FRESNEL"),e.useSheen&&this.defines.push("LIT_SHEEN"),e.useIridescence&&this.defines.push("LIT_IRIDESCENCE"));const o=[];let h=0,d=!1,u=!1,f=!1,p=e.lights.some(P=>P._shape&&P._shape!==Tt);e.clusteredLightingEnabled&&e.clusteredLightingAreaLightsEnabled&&(p=!0),(p||e.clusteredLightingEnabled)&&(i.append("#define AREA_LIGHTS"),i.append("uniform highp sampler2D areaLightsLutTex1;"),i.append("uniform highp sampler2D areaLightsLutTex2;"));for(let P=0;P<e.lights.length;P++){const L=e.lights[P],k=L._type;if(e.clusteredLightingEnabled&&k!==le)continue;const H=p&&L._shape?L._shape:Tt;i.append(`uniform vec3 light${P}_color;`),L._shadowType===Rs&&L.castShadows&&!e.noShadow&&(i.append(`uniform float light${P}_shadowSearchArea;`),i.append(`uniform vec4 light${P}_cameraParams;`),k===le&&i.append(`uniform vec4 light${P}_softShadowParams;`)),k===le?i.append(`uniform vec3 light${P}_direction;`):(i.append(`uniform vec3 light${P}_position;`),i.append(`uniform float light${P}_radius;`),k===Fe&&(i.append(`uniform vec3 light${P}_direction;`),i.append(`uniform float light${P}_innerConeAngle;`),i.append(`uniform float light${P}_outerConeAngle;`))),H!==Tt&&(k===le&&i.append(`uniform vec3 light${P}_position;`),i.append(`uniform vec3 light${P}_halfWidth;`),i.append(`uniform vec3 light${P}_halfHeight;`)),L.castShadows&&!e.noShadow&&(i.append(`uniform mat4 light${P}_shadowMatrix;`),i.append(`uniform float light${P}_shadowIntensity;`),k===le&&(i.append(`uniform mat4 light${P}_shadowMatrixPalette[4];`),i.append(`uniform vec4 light${P}_shadowCascadeDistances;`),i.append(`uniform int light${P}_shadowCascadeCount;`),i.append(`uniform float light${P}_shadowCascadeBlend;`)),i.append(`uniform vec4 light${P}_shadowParams;`),k===le&&(d=!0),k===Le?i.append(`uniform ${L._isPcf?"samplerCubeShadow":"samplerCube"} light${P}_shadowMap;`):i.append(`uniform ${L._isPcf?"sampler2DShadow":"sampler2D"} light${P}_shadowMap;`),h++,o[L._shadowType]=!0,L._isVsm&&(u=!0),L._shadowType===Rs&&(f=!0)),L._cookie&&(L._cookie._cubemap?k===Le&&(i.append(`uniform samplerCube light${P}_cookie;`),i.append(`uniform float light${P}_cookieIntensity;`),(!L.castShadows||e.noShadow)&&i.append(`uniform mat4 light${P}_shadowMatrix;`)):k===Fe&&(i.append(`uniform sampler2D light${P}_cookie;`),i.append(`uniform float light${P}_cookieIntensity;`),(!L.castShadows||e.noShadow)&&i.append(`uniform mat4 light${P}_shadowMatrix;`),L._cookieTransform&&(i.append(`uniform vec4 light${P}_cookieMatrix;`),i.append(`uniform vec2 light${P}_cookieOffset;`))))}const m=this.needsNormal&&(e.useNormals||e.useClearCoatNormals||e.enableGGXSpecular&&!e.useHeights);if(m&&(e.hasTangents?r.append(s.TBNPS):e.useNormals||e.useClearCoatNormals?r.append(s.TBNderivativePS.replace(/\$UV/g,this.lightingUv)):r.append(s.TBNObjectSpacePS),e.twoSidedLighting&&r.append(s.twoSidedLightingPS)),r.append(s.sphericalPS),r.append(s.decodePS),r.append(s.gammaPS),r.append(s.tonemappingPS),r.append(s.fogPS),r.append(this.frontendCode),e.useCubeMapRotation&&i.append("#define CUBEMAP_ROTATION"),this.needsNormal&&(r.append(s.cubeMapRotatePS),r.append(e.cubeMapProjection>0?s.cubeMapProjectBoxPS:s.cubeMapProjectNonePS),r.append(e.skyboxIntensity?s.envMultiplyPS:s.envConstPS)),(this.lighting&&e.useSpecular||this.reflections)&&(e.useMetalness&&r.append(s.metalnessModulatePS),e.fresnelModel===Tp&&r.append(s.fresnelSchlickPS),e.useIridescence&&r.append(s.iridescenceDiffractionPS)),e.useAo)switch(r.append(s.aoDiffuseOccPS),e.occludeSpecular){case Vo:r.append(e.occludeSpecularFloat?s.aoSpecOccSimplePS:s.aoSpecOccConstSimplePS);break;case Bu:r.append(e.occludeSpecularFloat?s.aoSpecOccPS:s.aoSpecOccConstPS);break}e.reflectionSource==="envAtlasHQ"?(r.append(s.envAtlasPS),r.append(s.reflectionEnvHQPS.replace(/\$DECODE_CUBEMAP/g,Ds.decodeFunc(e.reflectionCubemapEncoding)).replace(/\$DECODE/g,Ds.decodeFunc(e.reflectionEncoding)))):e.reflectionSource==="envAtlas"?(r.append(s.envAtlasPS),r.append(s.reflectionEnvPS.replace(/\$DECODE/g,Ds.decodeFunc(e.reflectionEncoding)))):e.reflectionSource==="cubeMap"?r.append(s.reflectionCubePS.replace(/\$DECODE/g,Ds.decodeFunc(e.reflectionEncoding))):e.reflectionSource==="sphereMap"&&r.append(s.reflectionSpherePS.replace(/\$DECODE/g,Ds.decodeFunc(e.reflectionEncoding))),this.reflections&&(e.useClearCoat&&r.append(s.reflectionCCPS),e.useSheen&&r.append(s.reflectionSheenPS)),e.useRefraction&&(e.useDynamicRefraction?(e.dispersion&&(i.append("uniform float material_dispersion;"),i.append(`#define DISPERSION
`)),r.append(s.refractionDynamicPS)):this.reflections&&r.append(s.refractionCubePS)),e.useSheen&&r.append(s.lightSheenPS),e.clusteredLightingEnabled&&(r.append(s.clusteredLightUtilsPS),e.clusteredLightingCookiesEnabled&&r.append(s.clusteredLightCookiesPS),e.clusteredLightingShadowsEnabled&&!e.noShadow&&(o[zt]=!0,o[fh]=!0,o[Rs]=!0)),(h>0||e.clusteredLightingEnabled)&&(d&&r.append(s.shadowCascadesPS),(o[Gh]||o[zt]||o[Hh]||o[Wh])&&r.append(s.shadowStandardPS),(o[fh]||o[ku])&&r.append(s.shadowStandardGL2PS),u&&(r.append(s.shadowVSM_commonPS),o[Wr]&&r.append(s.shadowEVSMPS.replace(/\$/g,"16")),o[$r]&&r.append(t.extTextureFloatLinear?s.shadowEVSMPS.replace(/\$/g,"32"):s.shadowEVSMnPS.replace(/\$/g,"32"))),f&&(r.append(s.linearizeDepthPS),r.append(s.shadowPCSSPS),r.append(s.shadowSoftPS))),e.enableGGXSpecular&&r.append("uniform float material_anisotropy;"),this.lighting&&(r.append(s.lightDiffuseLambertPS),(p||e.clusteredLightingAreaLightsEnabled)&&r.append(s.ltcPS));let _=!1;e.useSpecular&&(this.lighting&&r.append(e.enableGGXSpecular?s.lightSpecularAnisoGGXPS:s.lightSpecularBlinnPS),!e.fresnelModel&&!this.reflections&&!e.diffuseMapEnabled&&(i.append("uniform vec3 material_ambient;"),i.append("#define LIT_OLD_AMBIENT"),_=!0)),r.append(s.combinePS),e.lightMapEnabled&&r.append(e.useSpecular&&e.dirLightMapEnabled?s.lightmapDirAddPS:s.lightmapAddPS);const g=!e.lightMapEnabled||e.lightMapWithoutAmbient;g&&(e.ambientSource==="ambientSH"?r.append(s.ambientSHPS):e.ambientSource==="envAtlas"?(e.reflectionSource!=="envAtlas"&&e.reflectionSource!=="envAtlasHQ"&&r.append(s.envAtlasPS),r.append(s.ambientEnvPS.replace(/\$DECODE/g,Ds.decodeFunc(e.ambientEncoding)))):r.append(s.ambientConstantPS)),_||i.append("uniform vec3 material_ambient;"),e.useMsdf&&(e.msdfTextAttribute||i.append("#define UNIFORM_TEXT_PARAMETERS"),r.append(s.msdfPS)),this.needsNormal&&(r.append(s.viewDirPS),e.useSpecular&&r.append(e.enableGGXSpecular?s.reflDirAnisoPS:s.reflDirPS));let y=!1,w=!1,C=!1,x=!1,M=!1,S;if(e.clusteredLightingEnabled&&this.lighting){if(x=!0,y=!0,w=!0,M=!0,r.append(s.floatUnpackingPS),e.lightMaskDynamic&&i.append("#define CLUSTER_MESH_DYNAMIC_LIGHTS"),e.clusteredLightingCookiesEnabled&&i.append("#define CLUSTER_COOKIES"),e.clusteredLightingShadowsEnabled&&!e.noShadow){const P=(D=nr.get(e.clusteredLightingShadowType))==null?void 0:D.name;b.assert(P);const L=P.substring(0,4);i.append("#define CLUSTER_SHADOWS"),i.append(`#define CLUSTER_SHADOW_TYPE_${L}`)}e.clusteredLightingAreaLightsEnabled&&i.append("#define CLUSTER_AREALIGHTS"),i.append(C0.getShaderDefines()),e.clusteredLightingShadowsEnabled&&!e.noShadow&&r.append(s.clusteredLightShadowsPS),r.append(s.clusteredLightPS)}if(a.append(this._fsGetStartCode(a,t,s,e)),this.needsNormal&&(a.append("    dVertexNormalW = normalize(vNormalW);"),(e.useHeights||e.useNormals)&&e.hasTangents&&(a.append("    dTangentW = vTangentW;"),a.append("    dBinormalW = vBinormalW;")),a.append("    getViewDir();"),m&&(a.append("    getTBN(dTangentW, dBinormalW, dVertexNormalW);"),e.twoSidedLighting&&a.append("    handleTwoSidedLighting();"))),a.append(this.frontendFunc),e.ssao&&(r.append(`
                    uniform sampler2D ssaoTexture;
                    uniform vec2 ssaoTextureSizeInv;
                `),n.append("litArgs_ao *= texture2DLod(ssaoTexture, gl_FragCoord.xy * ssaoTextureSizeInv, 0.0).r;")),this.needsNormal&&(e.useSpecular&&n.append("    getReflDir(litArgs_worldNormal, dViewDirW, litArgs_gloss, dTBN);"),e.useClearCoat&&n.append("    ccReflDirW = normalize(-reflect(dViewDirW, litArgs_clearcoat_worldNormal));")),(this.lighting&&e.useSpecular||this.reflections)&&(e.useMetalness&&(n.append("    float f0 = 1.0 / litArgs_ior; f0 = (f0 - 1.0) / (f0 + 1.0); f0 *= f0;"),n.append("    litArgs_specularity = getSpecularModulate(litArgs_specularity, litArgs_albedo, litArgs_metalness, f0);"),n.append("    litArgs_albedo = getAlbedoModulate(litArgs_albedo, litArgs_metalness);")),e.useIridescence&&n.append("    vec3 iridescenceFresnel = getIridescence(saturate(dot(dViewDirW, litArgs_worldNormal)), litArgs_specularity, litArgs_iridescence_thickness);")),g&&(n.append("    addAmbient(litArgs_worldNormal);"),e.useSpecular&&n.append("   dDiffuseLight = dDiffuseLight * (1.0 - litArgs_specularity);"),e.separateAmbient&&n.append(`
                    vec3 dAmbientLight = dDiffuseLight;
                    dDiffuseLight = vec3(0);
                `)),_||n.append("    dDiffuseLight *= material_ambient;"),e.useAo&&!e.occludeDirect&&n.append("    occludeDiffuse(litArgs_ao);"),e.lightMapEnabled&&n.append(`    addLightMap(
                litArgs_lightmap, 
                litArgs_lightmapDir, 
                litArgs_worldNormal, 
                dViewDirW, 
                dReflDirW, 
                litArgs_gloss, 
                litArgs_specularity, 
                dVertexNormalW,
                dTBN
            #if defined(LIT_IRIDESCENCE)
                , iridescenceFresnel,
                litArgs_iridescence_intensity
            #endif
                );`),this.lighting||this.reflections){this.reflections&&(e.useClearCoat&&(n.append("    addReflectionCC(ccReflDirW, litArgs_clearcoat_gloss);"),e.fresnelModel>0?(n.append("    ccFresnel = getFresnelCC(dot(dViewDirW, litArgs_clearcoat_worldNormal));"),n.append("    ccReflection.rgb *= ccFresnel;")):n.append("    ccFresnel = 0.0;")),e.useSpecularityFactor&&n.append("    ccReflection.rgb *= litArgs_specularityFactor;"),e.useSheen&&n.append("    addReflectionSheen(litArgs_worldNormal, dViewDirW, litArgs_sheen_gloss);"),n.append("    addReflection(dReflDirW, litArgs_gloss);"),e.fresnelModel>0?n.append(`    dReflection.rgb *= 
                        getFresnel(
                            dot(dViewDirW, litArgs_worldNormal), 
                            litArgs_gloss, 
                            litArgs_specularity
                        #if defined(LIT_IRIDESCENCE)
                            , iridescenceFresnel,
                            litArgs_iridescence_intensity
                        #endif
                            );`):n.append("    dReflection.rgb *= litArgs_specularity;"),e.useSpecularityFactor&&n.append("    dReflection.rgb *= litArgs_specularityFactor;")),p&&(n.append("    dSpecularLight *= litArgs_specularity;"),e.useSpecular&&n.append("    calcLTCLightValues(litArgs_gloss, litArgs_worldNormal, dViewDirW, litArgs_specularity, litArgs_clearcoat_gloss, litArgs_clearcoat_worldNormal, litArgs_clearcoat_specularity);"));for(let P=0;P<e.lights.length;P++){const L=e.lights[P],k=L._type;if(e.clusteredLightingEnabled&&k!==le)continue;S=!1;const H=p&&L._shape?L.shape:Tt,N=p&&L._shape?this._getLightSourceShapeString(H):"";if(H!==Tt&&n.append(`    calc${N}LightValues(light${P}_position, light${P}_halfWidth, light${P}_halfHeight);`),k===le?(n.append(`    dLightDirNormW = light${P}_direction;`),n.append("    dAtten = 1.0;")):(L._cookie&&(k===Fe&&!L._cookie._cubemap||k===Le&&L._cookie._cubemap)&&(M=!0,S=!0),n.append(`    getLightDirPoint(light${P}_position);`),y=!0,S&&(k===Fe?n.append(`    dAtten3 = getCookie2D${L._cookieFalloff?"":"Clip"}${L._cookieTransform?"Xform":""}(light${P}_cookie, light${P}_shadowMatrix, light${P}_cookieIntensity${L._cookieTransform?`, light${P}_cookieMatrix, light${P}_cookieOffset`:""}).${L._cookieChannel};`):n.append(`    dAtten3 = getCookieCube(light${P}_cookie, light${P}_shadowMatrix, light${P}_cookieIntensity).${L._cookieChannel};`)),H===Tt?L._falloffMode===Cp?(n.append(`    dAtten = getFalloffLinear(light${P}_radius, dLightDirW);`),w=!0):(n.append(`    dAtten = getFalloffInvSquared(light${P}_radius, dLightDirW);`),C=!0):(n.append(`    dAtten = getFalloffWindow(light${P}_radius, dLightDirW);`),C=!0),n.append("    if (dAtten > 0.00001) {"),k===Fe&&(S&&!L._cookieFalloff||(n.append(`    dAtten *= getSpotEffect(light${P}_direction, light${P}_innerConeAngle, light${P}_outerConeAngle, dLightDirNormW);`),x=!0))),H!==Tt?k===le?n.append("    dAttenD = getLightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirW, dLightDirNormW);"):n.append(`    dAttenD = get${N}LightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirW, dLightDirNormW) * 16.0;`):n.append("    dAtten *= getLightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirW, dLightDirNormW);"),L.castShadows&&!e.noShadow){const I=nr.get(L._shadowType);b.assert(I);const F=L._shadowType===Rs,O=I==null?void 0:I.vsm,B=I==null?void 0:I.pcf;let U=null,V;switch(L._shadowType){case Wr:U="VSM16",V="5.54";break;case $r:U="VSM32",V="15.0";break;case Gh:case Hh:U="PCF1x1";break;case fh:case ku:U="PCF5x5";break;case Rs:U="PCSS";break;case zt:case Wh:default:U="PCF3x3";break}if(U!==null){L._normalOffsetBias&&!L._isVsm&&r.append("#define SHADOW_SAMPLE_NORMAL_OFFSET"),k===le&&r.append("#define SHADOW_SAMPLE_ORTHO"),(B||F||t.isWebGPU)&&r.append("#define SHADOW_SAMPLE_SOURCE_ZBUFFER"),k===Le&&r.append("#define SHADOW_SAMPLE_POINT");const X=s.shadowSampleCoordPS;r.append(X.replace("$LIGHT",P)),r.append("#undef SHADOW_SAMPLE_NORMAL_OFFSET"),r.append("#undef SHADOW_SAMPLE_ORTHO"),r.append("#undef SHADOW_SAMPLE_SOURCE_ZBUFFER"),r.append("#undef SHADOW_SAMPLE_POINT");let Z=`light${P}_shadowMatrix`;k===le&&L.numCascades>1&&(n.append(`int cascadeIndex${P} = getShadowCascadeIndex(light${P}_shadowCascadeDistances, light${P}_shadowCascadeCount);`),L.cascadeBlend>0&&n.append(`cascadeIndex${P} = ditherShadowCascadeIndex(cascadeIndex${P}, light${P}_shadowCascadeDistances, light${P}_shadowCascadeCount, light${P}_shadowCascadeBlend);`),n.append(`mat4 cascadeShadowMat${P} = light${P}_shadowMatrixPalette[cascadeIndex${P}];`),Z=`cascadeShadowMat${P}`),n.append(`    dShadowCoord = getShadowSampleCoord${P}(${Z}, light${P}_shadowParams, vPositionW, dLightPosW, dLightDirW, dLightDirNormW, dVertexNormalW);`),k===le&&n.append(`    fadeShadow(light${P}_shadowCascadeDistances);`);let K=`SHADOWMAP_PASS(light${P}_shadowMap), dShadowCoord, light${P}_shadowParams`;if(O)K=`${K}, ${V}, dLightDirW`;else if(F){let J=k===le?`light${P}_softShadowParams`:`vec2(light${P}_shadowSearchArea)`;H!==Tt&&(J=`vec2(length(light${P}_halfWidth), length(light${P}_halfHeight)) * light${P}_shadowSearchArea`),K=`${K}, light${P}_cameraParams, ${J}, dLightDirW`}k===Le?(U=`Point${U}`,F||(K=`${K}, dLightDirW`)):k===Fe&&(U=`Spot${U}`),n.append(`    float shadow${P} = getShadow${U}(${K});`),n.append(`    dAtten *= mix(1.0, shadow${P}, light${P}_shadowIntensity);`)}}if(H!==Tt?e.useSpecular?n.append(`    dDiffuseLight += ((dAttenD * dAtten) * light${P}_color${S?" * dAtten3":""}) * (1.0 - dLTCSpecFres);`):n.append(`    dDiffuseLight += (dAttenD * dAtten) * light${P}_color${S?" * dAtten3":""};`):p&&e.useSpecular?n.append(`    dDiffuseLight += (dAtten * light${P}_color${S?" * dAtten3":""}) * (1.0 - litArgs_specularity);`):n.append(`    dDiffuseLight += dAtten * light${P}_color${S?" * dAtten3":""};`),e.useSpecular&&n.append("    dHalfDirW = normalize(-dLightDirNormW + dViewDirW);"),L.affectSpecularity)if(H!==Tt)e.useClearCoat&&n.append(`    ccSpecularLight += ccLTCSpecFres * get${N}LightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * light${P}_color${S?" * dAtten3":""};`),e.useSpecular&&n.append(`    dSpecularLight += dLTCSpecFres * get${N}LightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * light${P}_color${S?" * dAtten3":""};`);else{let I=!1;k===le&&e.fresnelModel>0&&(I=!0),e.useClearCoat&&n.append(`    ccSpecularLight += getLightSpecular(dHalfDirW, ccReflDirW, litArgs_clearcoat_worldNormal, dViewDirW, dLightDirNormW, litArgs_clearcoat_gloss, dTBN) * dAtten * light${P}_color${S?" * dAtten3":""}${I?" * getFresnelCC(dot(dViewDirW, dHalfDirW));":";"}`),e.useSheen&&n.append(`    sSpecularLight += getLightSpecularSheen(dHalfDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_sheen_gloss) * dAtten * light${P}_color${S?" * dAtten3;":";"}`),e.useSpecular&&n.append(`    dSpecularLight += getLightSpecular(dHalfDirW, dReflDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_gloss, dTBN) * dAtten * light${P}_color${S?" * dAtten3":""}${I?` 
                                    * getFresnel(
                                        dot(dViewDirW, dHalfDirW), 
                                        litArgs_gloss, 
                                        litArgs_specularity
                                    #if defined(LIT_IRIDESCENCE)
                                        , iridescenceFresnel, 
                                        litArgs_iridescence_intensity
                                    #endif
                                    );`:"* litArgs_specularity;"}`)}k!==le&&n.append("    }")}e.clusteredLightingEnabled&&this.lighting&&(w=!0,C=!0,y=!0,n.append(`    addClusteredLights(
                                        litArgs_worldNormal, 
                                        dViewDirW, 
                                        dReflDirW,
                                #if defined(LIT_CLEARCOAT)
                                        ccReflDirW,
                                #endif
                                        litArgs_gloss, 
                                        litArgs_specularity, 
                                        dVertexNormalW, 
                                        dTBN, 
                                #if defined(LIT_IRIDESCENCE)
                                        iridescenceFresnel,
                                #endif
                                        litArgs_clearcoat_worldNormal, 
                                        litArgs_clearcoat_gloss,
                                        litArgs_sheen_gloss,
                                        litArgs_iridescence_intensity
                                    );`)),p&&(e.useClearCoat&&n.append("    litArgs_clearcoat_specularity = 1.0;"),e.useSpecular&&n.append("    litArgs_specularity = vec3(1);")),e.useRefraction&&n.append(`    addRefraction(
                        litArgs_worldNormal, 
                        dViewDirW, 
                        litArgs_thickness, 
                        litArgs_gloss, 
                        litArgs_specularity, 
                        litArgs_albedo, 
                        litArgs_transmission,
                        litArgs_ior,
                        litArgs_dispersion
                    #if defined(LIT_IRIDESCENCE)
                        , iridescenceFresnel, 
                        litArgs_iridescence_intensity
                    #endif
                    );`)}e.useAo&&(e.occludeDirect&&n.append("    occludeDiffuse(litArgs_ao);"),(e.occludeSpecular===Vo||e.occludeSpecular===Bu)&&n.append("    occludeSpecular(litArgs_gloss, litArgs_ao, litArgs_worldNormal, dViewDirW);")),e.useSpecularityFactor&&n.append("    dSpecularLight *= litArgs_specularityFactor;"),e.opacityFadesSpecular===!1&&((e.blendType===Gt||e.blendType===dn)&&(n.append("float specLum = dot((dSpecularLight + dReflection.rgb * dReflection.a), vec3( 0.2126, 0.7152, 0.0722 ));"),n.append(`#ifdef LIT_CLEARCOAT
 specLum += dot(ccSpecularLight * litArgs_clearcoat_specularity + ccReflection.rgb * litArgs_clearcoat_specularity, vec3( 0.2126, 0.7152, 0.0722 ));
#endif`),n.append("litArgs_opacity = clamp(litArgs_opacity + gammaCorrectInput(specLum), 0.0, 1.0);")),n.append("litArgs_opacity *= material_alphaFade;")),n.append(s.endPS),e.blendType===Gt||e.blendType===Xc||e.alphaToCoverage?n.append(s.outputAlphaPS):e.blendType===dn?n.append(s.outputAlphaPremulPS):n.append(s.outputAlphaOpaquePS),e.useMsdf&&n.append("    gl_FragColor = applyMsdf(gl_FragColor);"),n.append(s.outputPS),n.append(s.debugOutputPS),y&&r.prepend(s.lightDirPointPS),w&&r.prepend(s.falloffLinearPS),C&&r.prepend(s.falloffInvSquaredPS),x&&r.prepend(s.spotPS),M&&!e.clusteredLightingEnabled&&r.prepend(s.cookiePS);let v="";const E=`void evaluateBackend() {
${n.code}
}`;r.append(E),a.append(s.debugProcessFrontendPS),a.append("    evaluateBackend();"),a.append(Nt.end());const T=i.code+r.code+a.code;return T.includes("dTBN")&&(v+=`mat3 dTBN;
`),T.includes("dVertexNormalW")&&(v+=`vec3 dVertexNormalW;
`),T.includes("dTangentW")&&(v+=`vec3 dTangentW;
`),T.includes("dBinormalW")&&(v+=`vec3 dBinormalW;
`),T.includes("dViewDirW")&&(v+=`vec3 dViewDirW;
`),T.includes("dReflDirW")&&(v+=`vec3 dReflDirW;
`),T.includes("dHalfDirW")&&(v+=`vec3 dHalfDirW;
`),T.includes("ccReflDirW")&&(v+=`vec3 ccReflDirW;
`),T.includes("dLightDirNormW")&&(v+=`vec3 dLightDirNormW;
`),T.includes("dLightDirW")&&(v+=`vec3 dLightDirW;
`),T.includes("dLightPosW")&&(v+=`vec3 dLightPosW;
`),T.includes("dShadowCoord")&&(v+=`vec3 dShadowCoord;
`),T.includes("dReflection")&&(v+=`vec4 dReflection;
`),T.includes("dDiffuseLight")&&(v+=`vec3 dDiffuseLight;
`),T.includes("dSpecularLight")&&(v+=`vec3 dSpecularLight;
`),T.includes("dAtten")&&(v+=`float dAtten;
`),T.includes("dAttenD")&&(v+=`float dAttenD;
`),T.includes("dAtten3")&&(v+=`vec3 dAtten3;
`),T.includes("dMsdf")&&(v+=`vec4 dMsdf;
`),T.includes("ccFresnel")&&(v+=`float ccFresnel;
`),T.includes("ccReflection")&&(v+=`vec3 ccReflection;
`),T.includes("ccSpecularLight")&&(v+=`vec3 ccSpecularLight;
`),T.includes("ccSpecularityNoFres")&&(v+=`float ccSpecularityNoFres;
`),T.includes("sSpecularLight")&&(v+=`vec3 sSpecularLight;
`),T.includes("sReflection")&&(v+=`vec3 sReflection;
`),this._fsGetBeginCode()+this.varyings+this.varyingDefines+this._fsGetBaseCode()+v+this.frontendDecl+T}generateFragmentShader(t,e,s,i){const r=this.options;this.frontendDecl=t,this.frontendCode=e,this.frontendFunc=s,this.lightingUv=i,r.pass===Na?this.fshader=this._fsGetPickPassCode():r.pass===ll?this.fshader=this._fsGetDepthPassCode():r.pass===ol?this.fshader=this._fsGetPrePassCode():this.shadowPass?this.fshader=this._fsGetShadowPassCode():r.customFragmentShader?this.fshader=this._fsGetBeginCode()+r.customFragmentShader:this.fshader=this._fsGetLitPassCode(),b.assert(!this.fshader.includes("litShaderArgs"),"Automatic compatibility with shaders using litShaderArgs has been removed. Please update the shader to use the new system.")}}class XC{constructor(){c(this,"hasTangents",!1);c(this,"chunks",{});c(this,"pass",0);c(this,"alphaTest",!1);c(this,"blendType",hs);c(this,"separateAmbient",!1);c(this,"screenSpace",!1);c(this,"skin",!1);c(this,"batch",!1);c(this,"useInstancing",!1);c(this,"useMorphPosition",!1);c(this,"useMorphNormal",!1);c(this,"useMorphTextureBasedInt",!1);c(this,"nineSlicedMode",0);c(this,"clusteredLightingEnabled",!0);c(this,"clusteredLightingCookiesEnabled",!1);c(this,"clusteredLightingShadowsEnabled",!1);c(this,"clusteredLightingShadowType",0);c(this,"clusteredLightingAreaLightsEnabled",!1);c(this,"vertexColors",!1);c(this,"lightMapEnabled",!1);c(this,"dirLightMapEnabled",!1);c(this,"useHeights",!1);c(this,"useNormals",!1);c(this,"useClearCoatNormals",!1);c(this,"useAo",!1);c(this,"diffuseMapEnabled",!1);c(this,"customFragmentShader",null);c(this,"pixelSnap",!1);c(this,"ambientSH",!1);c(this,"ssao",!1);c(this,"twoSidedLighting",!1);c(this,"occludeDirect",!1);c(this,"occludeSpecular",0);c(this,"occludeSpecularFloat",!1);c(this,"useMsdf",!1);c(this,"msdfTextAttribute",!1);c(this,"alphaToCoverage",!1);c(this,"opacityFadesSpecular",!1);c(this,"opacityDither",Os);c(this,"opacityShadowDither",Os);c(this,"cubeMapProjection",0);c(this,"useSpecular",!1);c(this,"useSpecularityFactor",!1);c(this,"enableGGXSpecular",!1);c(this,"fresnelModel",0);c(this,"useRefraction",!1);c(this,"useClearCoat",!1);c(this,"useSheen",!1);c(this,"useIridescence",!1);c(this,"useMetalness",!1);c(this,"useDynamicRefraction",!1);c(this,"dispersion",!1);c(this,"fog",Ba);c(this,"gamma",al);c(this,"toneMap",-1);c(this,"reflectionSource",null);c(this,"reflectionEncoding",null);c(this,"reflectionCubemapEncoding",null);c(this,"ambientSource","constant");c(this,"ambientEncoding",null);c(this,"skyboxIntensity",1);c(this,"useCubeMapRotation",!1);c(this,"lightMapWithoutAmbient",!1);c(this,"lights",[]);c(this,"noShadow",!1);c(this,"lightMaskDynamic",0);c(this,"userAttributes",{});c(this,"linearDepth",!1)}}class qh{constructor(){c(this,"defines",new Map);c(this,"forceUv1",!1);c(this,"specularTint",!1);c(this,"metalnessTint",!1);c(this,"glossTint",!1);c(this,"emissiveEncoding","linear");c(this,"lightMapEncoding","linear");c(this,"packedNormal",!1);c(this,"glossInvert",!1);c(this,"sheenGlossInvert",!1);c(this,"clearCoatGlossInvert",!1);c(this,"useAO",!1);c(this,"litOptions",new XC)}get pass(){return this.litOptions.pass}}const Wu={generateKey(l){return`lit${Object.keys(l).sort().map(t=>t==="chunks"?Wu.generateChunksKey(l):t==="lights"?Wu.generateLightsKey(l):t+l[t]).join(`
`)}`},generateLightsKey(l){return`lights:${l.lights.map(t=>!l.clusteredLightingEnabled||t._type===le?`${t.key},`:"").join("")}`},generateChunksKey(l){return`chunks:
${Object.keys(l.chunks??{}).sort().map(t=>t+l.chunks[t]).join("")}`}},ma=[],Pd=l=>Object.keys(l).filter(t=>t!=="litOptions").sort();class jC extends Nt{constructor(){super(...arguments);c(this,"optionsContext",new qh);c(this,"optionsContextMin",new qh)}generateKey(e){let s;return e===this.optionsContextMin?(this.propsMin||(this.propsMin=Pd(e)),s=this.propsMin):e===this.optionsContext?(this.props||(this.props=Pd(e)),s=this.props):s=Pd(e),`standard:
${Nt.definesHash(e.defines)}
${s.map(n=>n+e[n]).join(`
`)}${Wu.generateKey(e.litOptions)}`}_getUvSourceExpression(e,s,i){const r=i[e],n=i[s],a=i.litOptions.pass===xn;let o;return a&&i.litOptions.nineSlicedMode===ht||a&&i.litOptions.nineSlicedMode===st?o="nineSlicedUv":(r===0?o=`vUv${n}`:o=`vUV${n}_${r}`,i.heightMap&&e!=="heightMapTransform"&&(o+=" + dUvOffset")),o}_addMapDef(e,s){return s?`#define ${e}
`:`#undef ${e}
`}_addMapDefs(e,s,i,r,n){return this._addMapDef("MAPFLOAT",e)+this._addMapDef("MAPCOLOR",s)+this._addMapDef("MAPVERTEX",i)+this._addMapDef("MAPTEXTURE",r)+this._addMapDef("MAPINVERT",n)}_addMap(e,s,i,r,n,a=null){const o=`${e}Map`,h=`${o}Uv`,d=`${o}Identifier`,u=`${o}Transform`,f=`${o}Channel`,p=`${e}VertexColorChannel`,m=`${e}Tint`,_=`${e}VertexColor`,g=`${e}Mode`,y=`${e}Invert`,w=i[m],C=i[_],x=i[o],M=i[d],S=i[g];let v=r[s];if(x){const D=this._getUvSourceExpression(u,h,i);if(v=v.replace(/\$UV/g,D).replace(/\$CH/g,i[f]),n&&v.search(/\$SAMPLER/g)!==-1){let P=`texture_${o}`;const L=n[M];L?P=L:n[M]=P,v=v.replace(/\$SAMPLER/g,P)}if(a&&(i[f]==="aaa"?v=v.replace(/\$DECODE/g,"passThrough"):v=v.replace(/\$DECODE/g,Ds.decodeFunc(a)),v.indexOf("$texture2DSAMPLE"))){const P={linear:"texture2D",srgb:"texture2DSRGB",rgbm:"texture2DRGBM",rgbe:"texture2DRGBE"};v=v.replace(/\$texture2DSAMPLE/g,P[a]||"texture2D")}}C&&(v=v.replace(/\$VC/g,i[p])),S&&(v=v.replace(/\$DETAILMODE/g,S));const E=!!(w&1),T=!!(w&2),R=!!i[y];return v=this._addMapDefs(E,T,C,x,R)+v,v.replace(/\$/g,"")}_correctChannel(e,s,i){if(i[e]>0){if(i[e]<s.length)return s.substring(0,i[e]);if(i[e]>s.length){let r=s;const n=r.charAt(r.length-1),a=i[e]-r.length;for(let o=0;o<a;o++)r+=n;return r}return s}}createShaderDefinition(e,s){const r=ti.get(e).getByIndex(s.litOptions.pass).isForward,n=new qC(e,s.litOptions),a=[],o=[],h=[],d=2,u={};for(const x in ma){const M=`${x}Map`;if(s[`${x}VertexColor`]){const S=`${x}VertexColorChannel`;s[S]=this._correctChannel(x,s[S],ma)}if(s[M]){const S=`${M}Channel`,v=`${M}Transform`,E=`${M}Uv`;s[E]=Math.min(s[E],d-1),s[S]=this._correctChannel(x,s[S],ma);const T=s[E];a[T]=!0,o[T]=o[T]||s[M]&&!s[v],s[v]&&h.push({name:x,id:s[v],uv:s[E]})}}s.forceUv1&&(a[1]=!0,o[1]=o[1]!==void 0?o[1]:!0),n.generateVertexShader(a,o,h),s.litOptions.fresnelModel=s.litOptions.fresnelModel===0?Tp:s.litOptions.fresnelModel;const f=new rr,p=new rr,m=new rr,_=new rr;let g="";if(s.litOptions.nineSlicedMode===st?f.append("const float textureBias = -1000.0;"):f.append("uniform float textureBias;"),r){if(s.heightMap&&(f.append("vec2 dUvOffset;"),p.append(this._addMap("height","parallaxPS",s,n.chunks,u)),m.append("getParallax();")),s.litOptions.blendType!==hs||s.litOptions.alphaTest||s.litOptions.alphaToCoverage||s.litOptions.opacityDither!==Os){f.append("float dAlpha;"),p.append(this._addMap("opacity","opacityPS",s,n.chunks,u)),m.append("getOpacity();"),_.append("litArgs_opacity = dAlpha;"),s.litOptions.alphaTest&&(p.append(n.chunks.alphaTestPS),m.append("alphaTest(dAlpha);"));const x=s.litOptions.opacityDither;x!==Os&&(x===zm&&f.append(n.chunks.bayerPS),f.append(`#define DITHER_${x.toUpperCase()}
`),f.append(n.chunks.opacityDitherPS),m.append("opacityDither(dAlpha, 0.0);"))}else f.append("float dAlpha = 1.0;");if(n.needsNormal){if((s.normalMap||s.clearCoatNormalMap)&&(p.append(s.packedNormal?n.chunks.normalXYPS:n.chunks.normalXYZPS),!s.litOptions.hasTangents)){const x=s.normalMap?"normalMap":"clearCoatNormalMap";g=this._getUvSourceExpression(`${x}Transform`,`${x}Uv`,s)}f.append("vec3 dNormalW;"),p.append(this._addMap("normalDetail","normalDetailMapPS",s,n.chunks,u)),p.append(this._addMap("normal","normalMapPS",s,n.chunks,u)),m.append("getNormal();"),_.append("litArgs_worldNormal = dNormalW;")}if(n.needsSceneColor&&f.append("uniform sampler2D uSceneColorMap;"),n.needsScreenSize&&f.append("uniform vec4 uScreenSize;"),n.needsTransforms&&(f.append("uniform mat4 matrix_viewProjection;"),f.append("uniform mat4 matrix_model;")),(s.diffuseDetail||s.aoDetail)&&p.append(n.chunks.detailModesPS),f.append("vec3 dAlbedo;"),s.diffuseDetail&&p.append(this._addMap("diffuseDetail","diffuseDetailMapPS",s,n.chunks,u,s.diffuseDetailEncoding)),p.append(this._addMap("diffuse","diffusePS",s,n.chunks,u,s.diffuseEncoding)),m.append("getAlbedo();"),_.append("litArgs_albedo = dAlbedo;"),s.litOptions.useRefraction&&(f.append("float dTransmission;"),p.append(this._addMap("refraction","transmissionPS",s,n.chunks,u)),m.append("getRefraction();"),_.append("litArgs_transmission = dTransmission;"),f.append("float dThickness;"),p.append(this._addMap("thickness","thicknessPS",s,n.chunks,u)),m.append("getThickness();"),_.append("litArgs_thickness = dThickness;"),s.litOptions.dispersion&&_.append("litArgs_dispersion = material_dispersion;")),s.litOptions.useIridescence&&(f.append("float dIridescence;"),p.append(this._addMap("iridescence","iridescencePS",s,n.chunks,u)),m.append("getIridescence();"),_.append("litArgs_iridescence_intensity = dIridescence;"),f.append("float dIridescenceThickness;"),p.append(this._addMap("iridescenceThickness","iridescenceThicknessPS",s,n.chunks,u)),m.append("getIridescenceThickness();"),_.append("litArgs_iridescence_thickness = dIridescenceThickness;")),n.lighting&&s.litOptions.useSpecular||n.reflections?(f.append("vec3 dSpecularity;"),f.append("float dGlossiness;"),s.litOptions.useSheen&&(f.append("vec3 sSpecularity;"),p.append(this._addMap("sheen","sheenPS",s,n.chunks,u,s.sheenEncoding)),m.append("getSheen();"),_.append("litArgs_sheen_specularity = sSpecularity;"),f.append("float sGlossiness;"),p.append(this._addMap("sheenGloss","sheenGlossPS",s,n.chunks,u)),m.append("getSheenGlossiness();"),_.append("litArgs_sheen_gloss = sGlossiness;")),s.litOptions.useMetalness&&(f.append("float dMetalness;"),p.append(this._addMap("metalness","metalnessPS",s,n.chunks,u)),m.append("getMetalness();"),_.append("litArgs_metalness = dMetalness;"),f.append("float dIor;"),p.append(this._addMap("ior","iorPS",s,n.chunks,u)),m.append("getIor();"),_.append("litArgs_ior = dIor;")),s.litOptions.useSpecularityFactor&&(f.append("float dSpecularityFactor;"),p.append(this._addMap("specularityFactor","specularityFactorPS",s,n.chunks,u)),m.append("getSpecularityFactor();"),_.append("litArgs_specularityFactor = dSpecularityFactor;")),s.useSpecularColor?p.append(this._addMap("specular","specularPS",s,n.chunks,u,s.specularEncoding)):p.append("void getSpecularity() { dSpecularity = vec3(1); }"),p.append(this._addMap("gloss","glossPS",s,n.chunks,u)),m.append("getGlossiness();"),m.append("getSpecularity();"),_.append("litArgs_specularity = dSpecularity;"),_.append("litArgs_gloss = dGlossiness;")):(f.append("vec3 dSpecularity = vec3(0.0);"),f.append("float dGlossiness = 0.0;")),s.aoDetail&&p.append(this._addMap("aoDetail","aoDetailMapPS",s,n.chunks,u)),(s.aoMap||s.aoVertexColor||s.useAO)&&(f.append("float dAo;"),p.append(this._addMap("ao","aoPS",s,n.chunks,u)),m.append("getAO();"),_.append("litArgs_ao = dAo;")),f.append("vec3 dEmission;"),p.append(this._addMap("emissive","emissivePS",s,n.chunks,u,s.emissiveEncoding)),m.append("getEmission();"),_.append("litArgs_emission = dEmission;"),s.litOptions.useClearCoat&&(f.append("float ccSpecularity;"),f.append("float ccGlossiness;"),f.append("vec3 ccNormalW;"),p.append(this._addMap("clearCoat","clearCoatPS",s,n.chunks,u)),p.append(this._addMap("clearCoatGloss","clearCoatGlossPS",s,n.chunks,u)),p.append(this._addMap("clearCoatNormal","clearCoatNormalPS",s,n.chunks,u)),m.append("getClearCoat();"),m.append("getClearCoatGlossiness();"),m.append("getClearCoatNormal();"),_.append("litArgs_clearcoat_specularity = ccSpecularity;"),_.append("litArgs_clearcoat_gloss = ccGlossiness;"),_.append("litArgs_clearcoat_worldNormal = ccNormalW;")),s.lightMap||s.lightVertexColor){const x=s.dirLightMap&&s.litOptions.useSpecular,M=x?"lightmapDirPS":"lightmapSinglePS";f.append("vec3 dLightmap;"),x&&f.append("vec3 dLightmapDir;"),p.append(this._addMap("light",M,s,n.chunks,u,s.lightMapEncoding)),m.append("getLightMap();"),_.append("litArgs_lightmap = dLightmap;"),x&&_.append("litArgs_lightmapDir = dLightmapDir;")}b.assert(p.code.indexOf("texture2DSRGB")===-1&&p.code.indexOf("texture2DRGBM")===-1&&p.code.indexOf("texture2DRGBE")===-1,"Shader chunk macro $texture2DSAMPLE(XXX) is deprecated. Please use $DECODE(texture2D(XXX)) instead.")}else{const x=s.litOptions.opacityShadowDither;(s.litOptions.alphaTest||x)&&(f.append("float dAlpha;"),p.append(this._addMap("opacity","opacityPS",s,n.chunks,u)),m.append("getOpacity();"),_.append("litArgs_opacity = dAlpha;"),s.litOptions.alphaTest&&(p.append(n.chunks.alphaTestPS),m.append("alphaTest(dAlpha);")),x!==Os&&(x===zm&&f.append(n.chunks.bayerPS),f.append(`#define DITHER_${x.toUpperCase()}
`),f.append(n.chunks.opacityDitherPS),m.append("opacityDither(dAlpha, 0.0);")))}f.append(n.chunks.litShaderArgsPS),p.append(`void evaluateFrontend() { 
${m.code}
${_.code}
 }
`),m.code="evaluateFrontend();";for(const x in u)f.append(`uniform sampler2D ${u[x]};`);m.code=`
${m.code.split(`
`).map(x=>`    ${x}`).join(`
`)}

`,n.generateFragmentShader(f.code,p.code,m.code,g);const y=new Map(Object.entries({...Object.getPrototypeOf(n.chunks),...n.chunks,...s.litOptions.chunks})),w=new Map(s.defines),C=Ft.createDefinition(e,{name:"StandardShader",attributes:n.attributes,vertexCode:n.vshader,fragmentCode:n.fshader,vertexIncludes:y,fragmentIncludes:y,fragmentDefines:w,vertexDefines:w});return n.shaderPassInfo.isForward&&(C.tag=Fy),C}}const Rd=new jC,Vt=[];Vt[a0]={src:ct,dst:ct,op:ES};Vt[hs]={src:ct,dst:Uf,op:Ut};Vt[Gt]={src:_c,dst:gc,op:Ut,alphaSrc:ct};Vt[dn]={src:ct,dst:gc,op:Ut};Vt[bp]={src:ct,dst:ct,op:Ut};Vt[Xc]={src:_c,dst:ct,op:Ut};Vt[o0]={src:uy,dst:TS,op:Ut};Vt[l0]={src:AS,dst:ct,op:Ut};Vt[wp]={src:uy,dst:Uf,op:Ut};Vt[h0]={src:ct,dst:ct,op:CS};Vt[c0]={src:ct,dst:ct,op:MS};let YC=0;class Sn{constructor(){c(this,"meshInstances",[]);c(this,"name","Untitled");c(this,"userId","");c(this,"id",YC++);c(this,"variants",new Map);c(this,"defines",new Map);c(this,"_definesDirty",!1);c(this,"parameters",{});c(this,"alphaTest",0);c(this,"alphaToCoverage",!1);c(this,"_blendState",new bt);c(this,"_depthState",new us);c(this,"cull",nn);c(this,"stencilFront",null);c(this,"stencilBack",null);c(this,"_chunks",{});c(this,"_dirtyShader",!0);c(this,"_shaderVersion",0);c(this,"_scene",null);c(this,"dirty",!0);new.target===Sn&&b.error("Material class cannot be instantiated, use ShaderMaterial instead")}set chunks(t){this._dirtyShader=!0,this._chunks=t}get chunks(){return this._dirtyShader=!0,this._chunks}set depthBias(t){this._depthState.depthBias=t}get depthBias(){return this._depthState.depthBias}set slopeDepthBias(t){this._depthState.depthBiasSlope=t}get slopeDepthBias(){return this._depthState.depthBiasSlope}set redWrite(t){this._blendState.redWrite=t}get redWrite(){return this._blendState.redWrite}set greenWrite(t){this._blendState.greenWrite=t}get greenWrite(){return this._blendState.greenWrite}set blueWrite(t){this._blendState.blueWrite=t}get blueWrite(){return this._blendState.blueWrite}set alphaWrite(t){this._blendState.alphaWrite=t}get alphaWrite(){return this._blendState.alphaWrite}get transparent(){return this._blendState.blend}_updateTransparency(){const t=this.transparent,e=this.meshInstances;for(let s=0;s<e.length;s++)e[s].transparent=t}set blendState(t){this._blendState.copy(t),this._updateTransparency()}get blendState(){return this._blendState}set blendType(t){const e=Vt[t];b.assert(e,`Unknown blend mode ${t}`),this._blendState.setColorBlend(e.op,e.src,e.dst),this._blendState.setAlphaBlend(e.alphaOp??e.op,e.alphaSrc??e.src,e.alphaDst??e.dst);const s=t!==hs;this._blendState.blend!==s&&(this._blendState.blend=s,this._updateTransparency()),this._updateMeshInstanceKeys()}get blendType(){if(!this.transparent)return hs;const{colorOp:t,colorSrcFactor:e,colorDstFactor:s,alphaOp:i,alphaSrcFactor:r,alphaDstFactor:n}=this._blendState;for(let a=0;a<Vt.length;a++){const o=Vt[a];if(o.src===e&&o.dst===s&&o.op===t&&o.src===r&&o.dst===n&&o.op===i)return a}return Gt}set depthState(t){this._depthState.copy(t)}get depthState(){return this._depthState}set depthTest(t){this._depthState.test=t}get depthTest(){return this._depthState.test}set depthFunc(t){this._depthState.func=t}get depthFunc(){return this._depthState.func}set depthWrite(t){this._depthState.write=t}get depthWrite(){return this._depthState.write}copy(t){var s;this.name=t.name,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this._blendState.copy(t._blendState),this._depthState.copy(t._depthState),this.cull=t.cull,this.stencilFront=(s=t.stencilFront)==null?void 0:s.clone(),t.stencilBack&&(this.stencilBack=t.stencilFront===t.stencilBack?this.stencilFront:t.stencilBack.clone()),this.clearParameters();for(const i in t.parameters)t.parameters.hasOwnProperty(i)&&this._setParameterSimple(i,t.parameters[i].data);this.defines.clear(),t.defines.forEach((i,r)=>this.defines.set(r,i));const e=t._chunks;for(const i in e)e.hasOwnProperty(i)&&(this._chunks[i]=e[i]);return this}clone(){return new this.constructor().copy(this)}_updateMeshInstanceKeys(){const t=this.meshInstances;for(let e=0;e<t.length;e++)t[e].updateKey()}updateUniforms(t,e){this._dirtyShader&&this.clearVariants()}getShaderVariant(t){b.assert(!1,"Not implemented")}update(){this._definesDirty&&(this._definesDirty=!1,this.clearVariants()),this.dirty=!0}clearParameters(){this.parameters={}}getParameters(){return this.parameters}clearVariants(){this.variants.clear();const t=this.meshInstances,e=t.length;for(let s=0;s<e;s++)t[s].clearShaders()}getParameter(t){return this.parameters[t]}_setParameterSimple(t,e){b.call(()=>{e===void 0&&b.warnOnce(`Material#setParameter: Attempting to set undefined data for parameter "${t}", this is likely not expected.`)});const s=this.parameters[t];s?s.data=e:this.parameters[t]={scopeId:null,data:e}}setParameter(t,e){if(e===void 0&&typeof t=="object"){const s=t;if(s.length){for(let i=0;i<s.length;i++)this.setParameter(s[i]);return}t=s.name,e=s.value}this._setParameterSimple(t,e)}deleteParameter(t){this.parameters[t]&&delete this.parameters[t]}setParameters(t,e){const s=this.parameters;e===void 0&&(e=s);for(const i in e){const r=s[i];r&&(r.scopeId||(r.scopeId=t.scope.resolve(i)),r.scopeId.setValue(r.data))}}setDefine(t,e){let s=!1;const{defines:i}=this;e!==void 0&&e!==!1?(s=!i.has(t)||i.get(t)!==e,i.set(t,e)):(s=i.has(t),i.delete(t)),this._definesDirty||(this._definesDirty=s)}getDefine(t){return this.defines.has(t)}destroy(){this.variants.clear();for(let t=0;t<this.meshInstances.length;t++){const e=this.meshInstances[t];if(e.clearShaders(),e._material=null,e.mesh){const s=cl(e.mesh.device);this!==s&&(e.material=s)}else b.warn("pc.Material: MeshInstance.mesh is null, default material cannot be assigned to the MeshInstance")}this.meshInstances.length=0}addMeshInstanceRef(t){this.meshInstances.push(t)}removeMeshInstanceRef(t){const e=this.meshInstances,s=e.indexOf(t);s!==-1&&e.splice(s,1)}}class Is{static update(t,e,s,i,r,n,a){Is.updateSharedOptions(t,e,s,r,n),Is.updateMaterialOptions(t,e),Is.updateEnvOptions(t,e,s,i),Is.updateLightingOptions(t,e,r,a)}static updateSharedOptions(t,e,s,i,r){t.chunks=e.chunks,t.pass=r,t.alphaTest=e.alphaTest>0,t.blendType=e.blendType,t.screenSpace=i&&(i&Ip)!==0,t.skin=i&&(i&jc)!==0,t.useInstancing=i&&(i&Yc)!==0,t.useMorphPosition=i&&(i&Kc)!==0,t.useMorphNormal=i&&(i&Zc)!==0,t.useMorphTextureBasedInt=i&&(i&Qc)!==0,t.hasTangents=i&&(i&Dp)!==0,t.nineSlicedMode=e.nineSlicedMode||Pi,e.useLighting&&s.clusteredLightingEnabled?(t.clusteredLightingEnabled=!0,t.clusteredLightingCookiesEnabled=s.lighting.cookiesEnabled,t.clusteredLightingShadowsEnabled=s.lighting.shadowsEnabled,t.clusteredLightingShadowType=s.lighting.shadowType,t.clusteredLightingAreaLightsEnabled=s.lighting.areaLightsEnabled):(t.clusteredLightingEnabled=!1,t.clusteredLightingCookiesEnabled=!1,t.clusteredLightingShadowsEnabled=!1,t.clusteredLightingAreaLightsEnabled=!1)}static updateMaterialOptions(t,e){t.separateAmbient=!1,t.customFragmentShader=null,t.pixelSnap=e.pixelSnap,t.ambientSH=e.ambientSH,t.twoSidedLighting=e.twoSidedLighting,t.occludeDirect=e.occludeDirect,t.occludeSpecular=e.occludeSpecular,t.occludeSpecularFloat=e.occludeSpecularIntensity!==1,t.useMsdf=!1,t.msdfTextAttribute=!1,t.alphaToCoverage=e.alphaToCoverage,t.opacityFadesSpecular=e.opacityFadesSpecular,t.opacityDither=e.opacityDither,t.cubeMapProjection=f0,t.useSpecular=e.hasSpecular,t.useSpecularityFactor=e.hasSpecularityFactor,t.enableGGXSpecular=e.ggxSpecular,t.fresnelModel=e.fresnelModel,t.useRefraction=e.hasRefraction,t.useClearCoat=e.hasClearCoat,t.useSheen=e.hasSheen,t.useIridescence=e.hasIrridescence,t.useMetalness=e.hasMetalness,t.useDynamicRefraction=e.dynamicRefraction,t.dispersion=e.dispersion>0,t.vertexColors=!1,t.lightMapEnabled=e.hasLighting,t.dirLightMapEnabled=e.dirLightMap,t.useHeights=e.hasHeights,t.useNormals=e.hasNormals,t.useClearCoatNormals=e.hasClearCoatNormals,t.useAo=e.hasAo,t.diffuseMapEnabled=e.hasDiffuseMap}static updateEnvOptions(t,e,s,i){t.fog=e.useFog?i.fog:Ba,t.gamma=i.shaderOutputGamma,t.toneMap=e.useTonemap?i.toneMapping:p0,e.useSkybox&&s.envAtlas&&s.skybox?(t.reflectionSource="envAtlasHQ",t.reflectionEncoding=s.envAtlas.encoding,t.reflectionCubemapEncoding=s.skybox.encoding):e.useSkybox&&s.envAtlas?(t.reflectionSource="envAtlas",t.reflectionEncoding=s.envAtlas.encoding):e.useSkybox&&s.skybox?(t.reflectionSource="cubeMap",t.reflectionEncoding=s.skybox.encoding):(t.reflectionSource=null,t.reflectionEncoding=null),e.ambientSH?(t.ambientSource="ambientSH",t.ambientEncoding=null):t.reflectionSource&&s.envAtlas?(t.ambientSource="envAtlas",t.ambientEncoding=s.envAtlas.encoding):(t.ambientSource="constant",t.ambientEncoding=null);const r=!!t.reflectionSource;t.skyboxIntensity=r,t.useCubeMapRotation=r&&s._skyboxRotationShaderInclude}static updateLightingOptions(t,e,s,i){if(t.lightMapWithoutAmbient=!1,e.useLighting){const r=[],n=s?s>>16:ms;t.lightMaskDynamic=!!(n&ms),t.lightMapWithoutAmbient=!1,i&&(Is.collectLights(le,i[le],r,n),Is.collectLights(Le,i[Le],r,n),Is.collectLights(Fe,i[Fe],r,n)),t.lights=r}else t.lights=[];(t.lights.length===0||(s&Rp)!==0)&&(t.noShadow=!0)}static collectLights(t,e,s,i){for(let r=0;r<e.length;r++){const n=e[r];n.enabled&&n.mask&i&&s.push(n)}}}const d_=(l,t)=>{if(l.length!==t.length)return!1;for(let e=0;e<l.length;++e)if(l[e]!==t[e])return!1;return!0},KC=l=>l.r!==1||l.g!==1||l.b!==1,ZC=l=>l.r!==0||l.g!==0||l.b!==0;class QC{constructor(){this._mapXForms=null}updateMinRef(t,e,s,i,r,n){this._updateSharedOptions(t,e,s,i,r),this._updateMinOptions(t,s,r),this._updateUVOptions(t,s,i,!0)}updateRef(t,e,s,i,r,n,a){this._updateSharedOptions(t,e,i,r,n),this._updateEnvOptions(t,i,e,s),this._updateMaterialOptions(t,i),t.litOptions.hasTangents=r&&(r&Dp)!==0,this._updateLightOptions(t,e,i,r,a),this._updateUVOptions(t,i,r,!1,s)}_updateSharedOptions(t,e,s,i,r){t.forceUv1=s.forceUv1,s.userAttributes&&(t.litOptions.userAttributes=Object.fromEntries(s.userAttributes.entries())),t.litOptions.chunks=s.chunks||{},t.litOptions.pass=r,t.litOptions.alphaTest=s.alphaTest>0,t.litOptions.blendType=s.blendType,t.litOptions.screenSpace=i&&(i&Ip)!==0,t.litOptions.skin=i&&(i&jc)!==0,t.litOptions.batch=i&&(i&zu)!==0,t.litOptions.useInstancing=i&&(i&Yc)!==0,t.litOptions.useMorphPosition=i&&(i&Kc)!==0,t.litOptions.useMorphNormal=i&&(i&Zc)!==0,t.litOptions.useMorphTextureBasedInt=i&&(i&Qc)!==0,t.litOptions.nineSlicedMode=s.nineSlicedMode||0,e.clusteredLightingEnabled&&s.useLighting?(t.litOptions.clusteredLightingEnabled=!0,t.litOptions.clusteredLightingCookiesEnabled=e.lighting.cookiesEnabled,t.litOptions.clusteredLightingShadowsEnabled=e.lighting.shadowsEnabled,t.litOptions.clusteredLightingShadowType=e.lighting.shadowType,t.litOptions.clusteredLightingAreaLightsEnabled=e.lighting.areaLightsEnabled):(t.litOptions.clusteredLightingEnabled=!1,t.litOptions.clusteredLightingCookiesEnabled=!1,t.litOptions.clusteredLightingShadowsEnabled=!1,t.litOptions.clusteredLightingAreaLightsEnabled=!1)}_updateUVOptions(t,e,s,i,r){let n=!1,a=!1,o=!1;s&&(n=(s&_0)!==0,a=(s&g0)!==0,o=(s&y0)!==0),t.litOptions.vertexColors=!1,this._mapXForms=[];const h={};for(const d in ma)this._updateTexOptions(t,e,d,n,a,o,i,h);this._mapXForms=null,t.litOptions.ssao=r==null?void 0:r.ssaoEnabled,t.useAO=t.litOptions.ssao,t.litOptions.lightMapEnabled=t.lightMap,t.litOptions.dirLightMapEnabled=t.dirLightMap,t.litOptions.useHeights=t.heightMap,t.litOptions.useNormals=t.normalMap,t.litOptions.useClearCoatNormals=t.clearCoatNormalMap,t.litOptions.useAo=t.aoMap||t.aoVertexColor||t.litOptions.ssao,t.litOptions.diffuseMapEnabled=t.diffuseMap}_updateTexOptions(t,e,s,i,r,n,a,o){const h=s==="opacity";if(!a||h){const d=`${s}Map`,u=`${s}VertexColor`,f=`${s}VertexColorChannel`,p=`${d}Channel`,m=`${d}Transform`,_=`${d}Uv`,g=`${d}Identifier`;if(s!=="light"&&(t[d]=!1,t[g]=void 0,t[p]="",t[m]=0,t[_]=0),t[u]=!1,t[f]="",h&&e.blendType===hs&&e.alphaTest===0&&!e.alphaToCoverage&&e.opacityDither===Os)return;if(s!=="height"&&e[u]&&n&&(t[u]=e[u],t[f]=e[f],t.litOptions.vertexColors=!0),e[d]){let y=!0;if(e[_]===0&&!i&&(y=!1),e[_]===1&&!r&&(y=!1),y){const w=e[d].id;let C=o[w];C===void 0&&(o[w]=s,C=s),t[d]=!!e[d],t[g]=C,t[m]=this._getMapTransformID(e.getUniform(m),e[_]),t[p]=e[p],t[_]=e[_]}}}}_updateMinOptions(t,e,s){const i=s===ol;t.litOptions.opacityShadowDither=i?e.opacityDither:e.opacityShadowDither,t.litOptions.linearDepth=i,t.litOptions.lights=[]}_updateMaterialOptions(t,e){var h,d,u,f;const s=!!(e.useMetalness||e.specularMap||e.sphereMap||e.cubeMap||ZC(e.specular)||e.specularityFactor>0&&e.useMetalness||e.enableGGXSpecular||e.clearCoat>0),i=!e.useMetalness||e.useMetalnessSpecularColor,r=s&&(e.specularTint||!e.specularMap&&!e.specularVertexColor)&&KC(e.specular),n=s&&e.useMetalnessSpecularColor&&(e.specularityFactorTint||e.specularityFactor<1&&!e.specularityFactorMap),a=e.normalMap?e.normalMap.format===Yo||e.normalMap.type===dp:!1,o=(p,m)=>Math.abs(p-m)<1e-4;t.specularTint=r?2:0,t.specularityFactorTint=n?1:0,t.metalnessTint=e.useMetalness&&e.metalness<1?1:0,t.glossTint=1,t.diffuseEncoding=(h=e.diffuseMap)==null?void 0:h.encoding,t.diffuseDetailEncoding=(d=e.diffuseDetailMap)==null?void 0:d.encoding,t.emissiveEncoding=(u=e.emissiveMap)==null?void 0:u.encoding,t.lightMapEncoding=(f=e.lightMap)==null?void 0:f.encoding,t.packedNormal=a,t.refractionTint=o(e.refraction,1)?0:1,t.refractionIndexTint=o(e.refractionIndex,1/1.5)?0:1,t.thicknessTint=e.useDynamicRefraction&&e.thickness!==1?1:0,t.specularEncoding=e.specularEncoding||"linear",t.sheenEncoding=e.sheenEncoding||"linear",t.aoMapUv=e.aoUvSet,t.aoDetail=!!e.aoMap,t.diffuseDetail=!!e.diffuseMap,t.normalDetail=!!e.normalMap,t.diffuseDetailMode=e.diffuseDetailMode,t.aoDetailMode=e.aoDetailMode,t.clearCoatTint=o(e.clearCoat,1)?0:1,t.clearCoatGloss=!!e.clearCoatGloss,t.clearCoatGlossTint=e.clearCoatGloss!==1?1:0,t.iorTint=o(e.refractionIndex,1/1.5)?0:1,t.iridescenceTint=e.iridescence!==1?1:0,t.glossInvert=e.glossInvert,t.sheenGlossInvert=e.sheenGlossInvert,t.clearCoatGlossInvert=e.clearCoatGlossInvert,t.useSpecularColor=i,t.litOptions.separateAmbient=!1,t.litOptions.customFragmentShader=e.customFragmentShader,t.litOptions.pixelSnap=e.pixelSnap,t.litOptions.ambientSH=!!e.ambientSH,t.litOptions.twoSidedLighting=e.twoSidedLighting,t.litOptions.occludeSpecular=e.occludeSpecular,t.litOptions.occludeSpecularFloat=e.occludeSpecularIntensity!==1,t.litOptions.useMsdf=!!e.msdfMap,t.litOptions.msdfTextAttribute=!!e.msdfTextAttribute,t.litOptions.alphaToCoverage=e.alphaToCoverage,t.litOptions.opacityFadesSpecular=e.opacityFadesSpecular,t.litOptions.opacityDither=e.opacityDither,t.litOptions.cubeMapProjection=e.cubeMapProjection,t.litOptions.occludeDirect=e.occludeDirect,t.litOptions.useSpecular=s,t.litOptions.useSpecularityFactor=(n||!!e.specularityFactorMap)&&e.useMetalnessSpecularColor,t.litOptions.enableGGXSpecular=e.enableGGXSpecular,t.litOptions.fresnelModel=e.fresnelModel,t.litOptions.useRefraction=(e.refraction||!!e.refractionMap)&&(e.useDynamicRefraction||!!t.litOptions.reflectionSource),t.litOptions.useClearCoat=!!e.clearCoat,t.litOptions.useSheen=e.useSheen,t.litOptions.useIridescence=e.useIridescence&&e.iridescence!==0,t.litOptions.useMetalness=e.useMetalness,t.litOptions.useDynamicRefraction=e.useDynamicRefraction,t.litOptions.dispersion=e.dispersion>0}_updateEnvOptions(t,e,s,i){t.litOptions.fog=e.useFog?i.fog:Ba,t.litOptions.gamma=i.shaderOutputGamma,t.litOptions.toneMap=e.useTonemap?i.toneMapping:p0;let r=!1;if(e.envAtlas&&e.cubeMap?(t.litOptions.reflectionSource="envAtlasHQ",t.litOptions.reflectionEncoding=e.envAtlas.encoding,t.litOptions.reflectionCubemapEncoding=e.cubeMap.encoding):e.envAtlas?(t.litOptions.reflectionSource="envAtlas",t.litOptions.reflectionEncoding=e.envAtlas.encoding):e.cubeMap?(t.litOptions.reflectionSource="cubeMap",t.litOptions.reflectionEncoding=e.cubeMap.encoding):e.sphereMap?(t.litOptions.reflectionSource="sphereMap",t.litOptions.reflectionEncoding=e.sphereMap.encoding):e.useSkybox&&s.envAtlas&&s.skybox?(t.litOptions.reflectionSource="envAtlasHQ",t.litOptions.reflectionEncoding=s.envAtlas.encoding,t.litOptions.reflectionCubemapEncoding=s.skybox.encoding,r=!0):e.useSkybox&&s.envAtlas?(t.litOptions.reflectionSource="envAtlas",t.litOptions.reflectionEncoding=s.envAtlas.encoding,r=!0):e.useSkybox&&s.skybox?(t.litOptions.reflectionSource="cubeMap",t.litOptions.reflectionEncoding=s.skybox.encoding,r=!0):(t.litOptions.reflectionSource=null,t.litOptions.reflectionEncoding=null),e.ambientSH)t.litOptions.ambientSource="ambientSH",t.litOptions.ambientEncoding=null;else{const n=e.envAtlas||(e.useSkybox&&s.envAtlas?s.envAtlas:null);n&&!e.sphereMap?(t.litOptions.ambientSource="envAtlas",t.litOptions.ambientEncoding=n.encoding):(t.litOptions.ambientSource="constant",t.litOptions.ambientEncoding=null)}t.litOptions.skyboxIntensity=r,t.litOptions.useCubeMapRotation=r&&s._skyboxRotationShaderInclude}_updateLightOptions(t,e,s,i,r){if(t.lightMap=!1,t.lightMapChannel="",t.lightMapUv=0,t.lightMapTransform=0,t.litOptions.lightMapWithoutAmbient=!1,t.dirLightMap=!1,i&&(t.litOptions.noShadow=(i&Rp)!==0,(i&Nu)!==0&&(t.lightMapEncoding=e.lightmapPixelFormat===Te?"rgbm":"linear",t.lightMap=!0,t.lightMapChannel="rgb",t.lightMapUv=1,t.lightMapTransform=0,t.litOptions.lightMapWithoutAmbient=!s.lightMap,(i&x0)!==0&&(t.dirLightMap=!0),(i&S0)!==0&&(t.litOptions.lightMapWithoutAmbient=!1))),s.useLighting){const n=[],a=i?i>>16:ms;t.litOptions.lightMaskDynamic=!!(a&ms),r&&(Is.collectLights(le,r[le],n,a),Is.collectLights(Le,r[Le],n,a),Is.collectLights(Fe,r[Fe],n,a)),t.litOptions.lights=n}else t.litOptions.lights=[];t.litOptions.lights.length===0&&(t.litOptions.noShadow=!0)}_getMapTransformID(t,e){if(!t)return 0;let s=this._mapXForms[e];s||(s=[],this._mapXForms[e]=s);for(let i=0;i<s.length;i++)if(d_(s[i][0].value,t[0].value)&&d_(s[i][1].value,t[1].value))return i+1;return s.push(t)}}function Ze(l,t=!0,e=!0){const s={};return s[`${l}Map`]="texture",s[`${l}MapTiling`]="vec2",s[`${l}MapOffset`]="vec2",s[`${l}MapRotation`]="number",s[`${l}MapUv`]="number",t&&(s[`${l}MapChannel`]="string",e&&(s[`${l}VertexColor`]="boolean",s[`${l}VertexColorChannel`]="string")),s}const Da={name:"string",chunks:"chunks",mappingFormat:"string",_engine:"boolean",ambient:"rgb",...Ze("ao"),...Ze("aoDetail",!0,!1),aoDetailMode:"string",diffuse:"rgb",...Ze("diffuse"),...Ze("diffuseDetail",!0,!1),diffuseDetailMode:"string",specular:"rgb",specularTint:"boolean",...Ze("specular"),occludeSpecular:"enum:occludeSpecular",specularityFactor:"number",specularityFactorTint:"boolean",...Ze("specularityFactor"),useMetalness:"boolean",metalness:"number",enableGGXSpecular:"boolean",anisotropy:"number",metalnessTint:"boolean",...Ze("metalness"),useMetalnessSpecularColor:"boolean",shininess:"number",gloss:"number",glossInvert:"boolean",...Ze("gloss"),clearCoat:"number",...Ze("clearCoat"),clearCoatGloss:"number",clearCoatGlossInvert:"boolean",...Ze("clearCoatGloss"),clearCoatBumpiness:"number",...Ze("clearCoatNormal",!1),useSheen:"boolean",sheen:"rgb",...Ze("sheen"),sheenGloss:"number",sheenGlossInvert:"boolean",...Ze("sheenGloss"),fresnelModel:"number",emissive:"rgb",...Ze("emissive"),emissiveIntensity:"number",...Ze("normal",!1),bumpiness:"number",...Ze("normalDetail",!1),normalDetailMapBumpiness:"number",...Ze("height",!0,!1),heightMapFactor:"number",alphaToCoverage:"boolean",alphaTest:"number",alphaFade:"number",opacity:"number",...Ze("opacity"),opacityFadesSpecular:"boolean",opacityDither:"string",opacityShadowDither:"string",reflectivity:"number",refraction:"number",refractionTint:"boolean",...Ze("refraction"),refractionIndex:"number",dispersion:"number",thickness:"number",thicknessTint:"boolean",...Ze("thickness"),attenuation:"rgb",attenuationDistance:"number",useDynamicRefraction:"boolean",sphereMap:"texture",cubeMap:"cubemap",cubeMapProjection:"number",cubeMapProjectionBox:"boundingbox",useIridescence:"boolean",iridescence:"number",iridescenceTint:"boolean",...Ze("iridescence"),iridescenceThicknessTint:"boolean",iridescenceThicknessMin:"number",iridescenceThicknessMax:"number",iridescenceRefractionIndex:"number",...Ze("iridescenceThickness"),...Ze("light"),depthTest:"boolean",depthFunc:"enum:depthFunc",depthWrite:"boolean",depthBias:"number",slopeDepthBias:"number",cull:"enum:cull",blendType:"enum:blendType",useFog:"boolean",useLighting:"boolean",useSkybox:"boolean",useTonemap:"boolean",envAtlas:"texture",twoSidedLighting:"boolean"},ed=[];for(const l in Da)Da[l]==="texture"&&ed.push(l);const Np=[];for(const l in Da)Da[l]==="cubemap"&&Np.push(l);const JC={aoMapVertexColor:"boolean",diffuseMapTint:"boolean",diffuseMapVertexColor:"boolean",emissiveMapTint:"boolean",emissiveMapVertexColor:"boolean",glossMapVertexColor:"boolean",metalnessMapVertexColor:"boolean",opacityMapVertexColor:"boolean",specularAntialias:"boolean",specularMapTint:"boolean",specularMapVertexColor:"boolean",ambientTint:"boolean",emissiveTint:"boolean",diffuseTint:"boolean",sheenTint:"boolean",conserveEnergy:"boolean",useGamma:"boolean",useGammaTonemap:"boolean",sheenGlossTint:"boolean"},gh={},R0={};let Ya=new Set;const Bl=new Y;class _s extends Sn{constructor(){super();c(this,"userAttributes",new Map);this._assetReferences={},this._activeParams=new Set,this._activeLightingParams=new Set,this.shaderOptBuilder=new QC,this.reset()}reset(){Object.keys(gh).forEach(e=>{this[`_${e}`]=gh[e].value()}),this._uniformCache={}}copy(e){return super.copy(e),Object.keys(gh).forEach(s=>{this[s]=e[s]}),this.userAttributes=new Map(e.userAttributes),this}setAttribute(e,s){this.userAttributes.set(s,e)}_setParameter(e,s){Ya.add(e),this.setParameter(e,s)}_setParameters(e){e.forEach(s=>{this._setParameter(s.name,s.value)})}_processParameters(e){const s=this[e];s.forEach(i=>{Ya.has(i)||delete this.parameters[i]}),this[e]=Ya,Ya=s,Ya.clear()}_updateMap(e){const s=`${e}Map`,i=this[s];if(i){this._setParameter(`texture_${s}`,i);const r=`${s}Transform`,n=this.getUniform(r);n&&this._setParameters(n)}}_allocUniform(e,s){let i=this._uniformCache[e];return i||(i=s(),this._uniformCache[e]=i),i}getUniform(e,s,i){return R0[e](this,s,i)}updateUniforms(e,s){const i=r=>this.getUniform(r,e,s);this._setParameter("material_ambient",i("ambient")),this._setParameter("material_diffuse",i("diffuse")),this._setParameter("material_aoIntensity",this.aoIntensity),this.useMetalness?((!this.metalnessMap||this.metalness<1)&&this._setParameter("material_metalness",this.metalness),(!this.specularMap||this.specularTint)&&this._setParameter("material_specular",i("specular")),(!this.specularityFactorMap||this.specularityFactorTint)&&this._setParameter("material_specularityFactor",this.specularityFactor),this._setParameter("material_sheen",i("sheen")),this._setParameter("material_sheenGloss",this.sheenGloss),this._setParameter("material_refractionIndex",this.refractionIndex)):(!this.specularMap||this.specularTint)&&this._setParameter("material_specular",i("specular")),this.enableGGXSpecular&&this._setParameter("material_anisotropy",this.anisotropy),this.clearCoat>0&&(this._setParameter("material_clearCoat",this.clearCoat),this._setParameter("material_clearCoatGloss",this.clearCoatGloss),this._setParameter("material_clearCoatBumpiness",this.clearCoatBumpiness)),this._setParameter("material_gloss",this.gloss),b.call(()=>{this.emissiveMap&&this.emissive.r===0&&this.emissive.g===0&&this.emissive.b===0&&b.warnOnce(`Emissive map is set but emissive color is black, making the map invisible. Set emissive color to white to make the map visible. Rendering [${G.toString()}]`,this)}),this._setParameter("material_emissive",i("emissive")),this._setParameter("material_emissiveIntensity",this.emissiveIntensity),this.refraction>0&&this._setParameter("material_refraction",this.refraction),this.dispersion>0&&this._setParameter("material_dispersion",this.dispersion),this.useDynamicRefraction&&(this._setParameter("material_thickness",this.thickness),this._setParameter("material_attenuation",i("attenuation")),this._setParameter("material_invAttenuationDistance",this.attenuationDistance===0?0:1/this.attenuationDistance)),this.useIridescence&&(this._setParameter("material_iridescence",this.iridescence),this._setParameter("material_iridescenceRefractionIndex",this.iridescenceRefractionIndex),this._setParameter("material_iridescenceThicknessMin",this.iridescenceThicknessMin),this._setParameter("material_iridescenceThicknessMax",this.iridescenceThicknessMax)),this._setParameter("material_opacity",this.opacity),this.opacityFadesSpecular===!1&&this._setParameter("material_alphaFade",this.alphaFade),this.occludeSpecular&&this._setParameter("material_occludeSpecularIntensity",this.occludeSpecularIntensity),this.cubeMapProjection===jb&&this._setParameter(i("cubeMapProjectionBox"));for(const r in ma)this._updateMap(r);this.ambientSH&&this._setParameter("ambientSH[0]",this.ambientSH),this.normalMap&&this._setParameter("material_bumpiness",this.bumpiness),this.normalMap&&this.normalDetailMap&&this._setParameter("material_normalDetailMapBumpiness",this.normalDetailMapBumpiness),this.heightMap&&this._setParameter("material_heightMapFactor",i("heightMapFactor")),this.envAtlas&&this.cubeMap?(this._setParameter("texture_envAtlas",this.envAtlas),this._setParameter("texture_cubeMap",this.cubeMap)):this.envAtlas?this._setParameter("texture_envAtlas",this.envAtlas):this.cubeMap?this._setParameter("texture_cubeMap",this.cubeMap):this.sphereMap&&this._setParameter("texture_sphereMap",this.sphereMap),this._setParameter("material_reflectivity",this.reflectivity),this._processParameters("_activeParams"),super.updateUniforms(e,s)}updateEnvUniforms(e,s){!(this.envAtlas||this.cubeMap||this.sphereMap)&&this.useSkybox&&(s.envAtlas&&s.skybox?(this._setParameter("texture_envAtlas",s.envAtlas),this._setParameter("texture_cubeMap",s.skybox)):s.envAtlas?this._setParameter("texture_envAtlas",s.envAtlas):s.skybox&&this._setParameter("texture_cubeMap",s.skybox)),this._processParameters("_activeLightingParams")}getShaderVariant(e){const{device:s,scene:i,pass:r,objDefs:n,sortedLights:a,cameraShaderParams:o}=e;this.updateEnvUniforms(s,i);const h=ti.get(s).getByIndex(r),d=r===ll||r===Na||r===ol||h.isShadow;let u=d?Rd.optionsContextMin:Rd.optionsContext;u.defines=Op(this,e),d?this.shaderOptBuilder.updateMinRef(u,i,this,n,r,a):this.shaderOptBuilder.updateRef(u,i,o,this,n,r,a),u.defines.set("TONEMAP",m0[u.litOptions.toneMap]),this.onUpdateShader&&(u=this.onUpdateShader(u));const f=new Jc(e.viewUniformFormat,e.viewBindGroupFormat,e.vertexFormat),p=za(s);p.register("standard",Rd);const m=p.getProgram("standard",u,f,this.userId);return this._dirtyShader=!1,m}destroy(){for(const e in this._assetReferences)this._assetReferences[e]._unbind();this._assetReferences=null,super.destroy()}}c(_s,"TEXTURE_PARAMETERS",ed),c(_s,"CUBEMAP_PARAMETERS",Np);const td=(l,t)=>{R0[l]=t},zp=(l,t,e,s)=>{Object.defineProperty(_s.prototype,l,{get:s||function(){return this[`_${l}`]},set:e}),gh[l]={value:t}},eM=l=>{const t=`_${l.name}`,e=l.dirtyShaderFunc||(()=>!0),s=function(i){const r=this[t];r!==i&&(this._dirtyShader=this._dirtyShader||e(r,i),this[t]=i)};zp(l.name,()=>l.defaultValue,s,l.getterFunc)},tM=l=>{const t=`_${l.name}`,e=l.dirtyShaderFunc||(()=>!0),s=function(i){const r=this[t];r.equals(i)||(this._dirtyShader=this._dirtyShader||e(r,i),this[t]=r.copy(i))};zp(l.name,()=>l.defaultValue.clone(),s,l.getterFunc)},os=l=>l.defaultValue&&l.defaultValue.clone?tM(l):eM(l);function qe(l,t="rgb",e=!0,s=0){ma[l]=t.length||-1,os({name:`${l}Map`,defaultValue:null,dirtyShaderFunc:(o,h)=>!!o!=!!h||o&&(o.type!==h.type||o.format!==h.format)}),os({name:`${l}MapTiling`,defaultValue:new W(1,1)}),os({name:`${l}MapOffset`,defaultValue:new W(0,0)}),os({name:`${l}MapRotation`,defaultValue:0}),os({name:`${l}MapUv`,defaultValue:s}),t&&(os({name:`${l}MapChannel`,defaultValue:t}),e&&(os({name:`${l}VertexColor`,defaultValue:!1}),os({name:`${l}VertexColorChannel`,defaultValue:t})));const i=`${l}MapTiling`,r=`${l}MapOffset`,n=`${l}MapRotation`,a=`${l}MapTransform`;td(a,(o,h,d)=>{const u=o[i],f=o[r],p=o[n];if(u.x===1&&u.y===1&&f.x===0&&f.y===0&&p===0)return null;const m=o._allocUniform(a,()=>[{name:`texture_${a}0`,value:new Float32Array(3)},{name:`texture_${a}1`,value:new Float32Array(3)}]),_=Math.cos(p*z.DEG_TO_RAD),g=Math.sin(p*z.DEG_TO_RAD),y=m[0].value;y[0]=_*u.x,y[1]=-g*u.y,y[2]=f.x;const w=m[1].value;return w[0]=g*u.x,w[1]=_*u.y,w[2]=1-u.y-f.y,m})}function Pn(l,t){os({name:l,defaultValue:t,getterFunc:function(){return this._dirtyShader=!0,this[`_${l}`]}}),td(l,(e,s,i)=>{const r=e._allocUniform(l,()=>new Float32Array(3)),n=e[l];return Bl.linear(n),r[0]=Bl.r,r[1]=Bl.g,r[2]=Bl.b,r})}function Ie(l,t,e){os({name:l,defaultValue:t,dirtyShaderFunc:(s,i)=>(s===0||s===1)!=(i===0||i===1)}),td(l,e)}function Ka(l,t){os({name:l,defaultValue:null,dirtyShaderFunc:(e,s)=>!!e==!!s}),td(l,t)}function Ce(l,t){os({name:l,defaultValue:t})}function sM(){Pn("ambient",new Y(1,1,1)),Pn("diffuse",new Y(1,1,1)),Pn("specular",new Y(0,0,0)),Pn("emissive",new Y(0,0,0)),Pn("sheen",new Y(1,1,1)),Pn("attenuation",new Y(1,1,1)),Ie("emissiveIntensity",1),Ie("specularityFactor",1),Ie("sheenGloss",0),Ie("gloss",.25),Ie("aoIntensity",1),Ie("heightMapFactor",1,(s,i,r)=>s.heightMapFactor*.025),Ie("opacity",1),Ie("alphaFade",1),Ie("alphaTest",0),Ie("bumpiness",1),Ie("normalDetailMapBumpiness",1),Ie("reflectivity",1),Ie("occludeSpecularIntensity",1),Ie("refraction",0),Ie("refractionIndex",1/1.5),Ie("dispersion",0),Ie("thickness",0),Ie("attenuationDistance",0),Ie("metalness",1),Ie("anisotropy",0),Ie("clearCoat",0),Ie("clearCoatGloss",1),Ie("clearCoatBumpiness",1),Ie("aoUvSet",0,null),Ie("iridescence",0),Ie("iridescenceRefractionIndex",1/1.5),Ie("iridescenceThicknessMin",0),Ie("iridescenceThicknessMax",0),Ka("ambientSH"),Ka("cubeMapProjectionBox",(s,i,r)=>{const n=s._allocUniform("cubeMapProjectionBox",()=>[{name:"envBoxMin",value:new Float32Array(3)},{name:"envBoxMax",value:new Float32Array(3)}]),a=s.cubeMapProjectionBox.getMin(),o=n[0].value;o[0]=a.x,o[1]=a.y,o[2]=a.z;const h=s.cubeMapProjectionBox.getMax(),d=n[1].value;return d[0]=h.x,d[1]=h.y,d[2]=h.z,n}),Ce("specularTint",!1),Ce("specularityFactorTint",!1),Ce("useMetalness",!1),Ce("useMetalnessSpecularColor",!1),Ce("useSheen",!1),Ce("enableGGXSpecular",!1),Ce("occludeDirect",!1),Ce("opacityFadesSpecular",!0),Ce("occludeSpecular",Vo),Ce("fresnelModel",Tp),Ce("useDynamicRefraction",!1),Ce("cubeMapProjection",f0),Ce("customFragmentShader",null),Ce("useFog",!0),Ce("useLighting",!0),Ce("useTonemap",!0),Ce("useSkybox",!0),Ce("forceUv1",!1),Ce("pixelSnap",!1),Ce("twoSidedLighting",!1),Ce("nineSlicedMode",void 0),Ce("msdfTextAttribute",!1),Ce("useIridescence",!1),Ce("glossInvert",!1),Ce("sheenGlossInvert",!1),Ce("clearCoatGlossInvert",!1),Ce("opacityDither",Os),Ce("opacityShadowDither",Os),qe("diffuse"),qe("specular"),qe("emissive"),qe("thickness","g"),qe("specularityFactor","g"),qe("normal",""),qe("metalness","g"),qe("gloss","g"),qe("opacity","a"),qe("refraction","g"),qe("height","g",!1),qe("ao","g"),qe("light","rgb",!0,1),qe("msdf",""),qe("diffuseDetail","rgb",!1),qe("normalDetail",""),qe("aoDetail","g",!1),qe("clearCoat","g"),qe("clearCoatGloss","g"),qe("clearCoatNormal",""),qe("sheen","rgb"),qe("sheenGloss","g"),qe("iridescence","g"),qe("iridescenceThickness","g"),Ce("diffuseDetailMode",Bm),Ce("aoDetailMode",Bm),Ka("cubeMap"),Ka("sphereMap"),Ka("envAtlas");const l=function(){return this._prefilteredCubemaps},t=function(s){const i=this._prefilteredCubemaps;s=s||[];let r=!1,n=!0;for(let a=0;a<6;++a){const o=s[a]||null;i[a]!==o&&(i[a]=o,r=!0),n=n&&!!i[a]}r&&(n?this.envAtlas=P0.generatePrefilteredAtlas(i,{target:this.envAtlas}):this.envAtlas&&(this.envAtlas.destroy(),this.envAtlas=null),this._dirtyShader=!0)},e=[null,null,null,null,null,null];zp("prefilteredCubemaps",()=>e.slice(),t,l)}sM();const gt=class gt{static render(t,e){const s=e.device,i=t.cells,r=t.lightsBuffer,n=r.boundsMin,a=r.boundsDelta,o=n.clone().add(a),h=r.boundsDelta.clone().div(i),d=gt.gridPositions,u=gt.gridColors,f=new Y(.3,.3,.3),p=(D,P,L,k,H,N,I,F,O)=>{for(let B=0;B<=D;B++)for(let U=0;U<=P;U++){const V=L+B*k,X=H+U*N;O===0?d.push(V,I,X,V,F,X):O===1?d.push(V,X,I,V,X,F):O===2&&d.push(I,V,X,F,V,X)}};if(p(i.x,i.z,n.x,h.x,n.z,h.z,n.y,o.y,0),p(i.x,i.y,n.x,h.x,n.y,h.y,n.z,o.z,1),p(i.y,i.z,n.y,h.y,n.z,h.z,n.x,o.x,2),d.length){const D=d.length/3;if(D!==u.length/4){u.length=0;for(let P=0;P<D;P++)u.push(f.r,f.g,f.b,f.a)}e.drawLineArrays(d,u),d.length=0}let m=gt.mesh;m||(m=new ke(s),m.clear(!0,!0),gt.mesh=m);const _=[],g=[],y=[],w=t._cells.x,C=t._cells.z,x=t.counts,M=t._maxCellLightCount,S=new A,v=new A,E=new A,T=a.clone().div(i);let R=0;for(let D=0;D<i.x;D++)for(let P=0;P<i.z;P++)for(let L=0;L<i.y;L++){const k=D+w*(P+L*C),H=x[k];if(H>0){S.x=n.x+T.x*D,S.y=n.y+T.y*L,S.z=n.z+T.z*P,v.add2(S,T),_.push(S.x,S.y,v.z),_.push(v.x,S.y,v.z),_.push(v.x,v.y,v.z),_.push(S.x,v.y,v.z),_.push(v.x,S.y,S.z),_.push(S.x,S.y,S.z),_.push(S.x,v.y,S.z),_.push(v.x,v.y,S.z),E.lerp(gt.colorLow,gt.colorHigh,H/M).round();for(let N=0;N<8;N++)g.push(E.x,E.y,E.z,1);y.push(R*8+0,R*8+1,R*8+3),y.push(R*8+3,R*8+1,R*8+2),y.push(R*8+4,R*8+5,R*8+7),y.push(R*8+7,R*8+5,R*8+6),y.push(R*8+3,R*8+2,R*8+6),y.push(R*8+2,R*8+7,R*8+6),y.push(R*8+1,R*8+0,R*8+4),y.push(R*8+0,R*8+5,R*8+4),y.push(R*8+1,R*8+4,R*8+2),y.push(R*8+4,R*8+7,R*8+2),y.push(R*8+5,R*8+0,R*8+6),y.push(R*8+0,R*8+3,R*8+6),R++}}if(R){if(m.setPositions(_),m.setColors32(g),m.setIndices(y),m.update(Fs,!1),!gt.meshInstance){const P=new _s;P.useLighting=!1,P.emissive=new Y(1,1,1),P.emissiveVertexColor=!0,P.blendType=Xc,P.depthWrite=!1,P.update();const L=new Oe("WorldClustersDebug");L.worldTransform=q.IDENTITY,L._dirtyWorld=L._dirtyNormal=!1,gt.meshInstance=new Be(m,P,L),gt.meshInstance.cull=!1}const D=gt.meshInstance;e.immediate.drawMesh(D.material,D.node.worldTransform,null,D,e.defaultDrawLayer)}}};c(gt,"gridPositions",[]),c(gt,"gridColors",[]),c(gt,"mesh",null),c(gt,"meshInstance",null),c(gt,"colorLow",new A(1,1,1)),c(gt,"colorHigh",new A(40,0,0));let $u=gt;const iM="muPIHORMLNDCz4DxVR/ZvYfAUVEFR47KRIC4nwAAAAAP7WxlhD6Ci+2HCe7BF8jRAPZwdH2UPpI5PdLCJdkvG4UTaNDJ/0crAzne71GCrb4kbdMjjCEGzdX6fNxDMLJq5xkeoIVTdfiZkodEeArmZmp/FQzFjD4x8iOW7Dg64n+3mWqyEwLxXT8zoJXfbw8QJKDCaarUYyTlMzNFHbgUe9IQV7g4YOgtSKpIFZJ0qERm7u4PpmiF89ktHWCywaGmD6h+hfh2/Zd8KYlKqqo4Cem4T42bT/Z9FpCQF1hhSjfBzZ5XFn/y3jegWC6u86KuELRundQS/1Rp+XuKKGIgRv3CvP5y749yqLlFO495JOT3+f2CXgd71npU0/KjjpkZucbJ5m78IVyuSrSozc9jgBUhDrz0hFsyb7LFUH9//wJbBgLdNWJZObfKxrNt8TliLA9w9sXFv6g26iXpf6r/BqcAusj/QzGBZuoUGeEtw8BCXCZ3jUiw4hvM18ZVqlUD3C40LAFXW6FRjuAZGRNstb0/qVk4skwyT+MHrvRorI4rKHVMWZmKyAkzL/78u/9pMQuX14pZN50b2PHn6fRxeaCQLsfT4dpvIkWWFuFVENZIh+8xgR6lU+85W0PPdAu1j99kcCG40JBQa4JMyRzq6qriOBLtqF87vpCJan0WEduVr/mOYkS00urVA0mA6M3031+GmGmW48PaJDYOEIb3bIXWPaLoAOEinX1TN3+/vwhG6nqJu0TdHpedS7QsGZIoxH3nQYYjQP1jmbahlbNngw5ogsGk1y50XZyUmQBY+/JBJ3Unu4dApm+WmPwHPU9gLb+4mHh4BiY6M86pq+WeTyWdI3s0CXPEtHGXZ8zMZgUoyRomBi1VdazzuN+WOmQ9Pa0Z0tlNopUi8AJ4x2Xn4mmOKEbXLxlbVsWu8XhuDGYFOGCRVdSqDPXrHU5SDdUlti3k5///SBwzTMwK3L4a1H7w4lnpEas6////AfX8asyIBfeFXVJ3tgvxQ/blZuUKyIODIfr/UzdWNu7pciLBpdZRZ4pIfZ1R6szq+XNxkGG///8EZFpu7VHAhFWqHEOrB9unw+YQa5o8/9IR/V5/zq+986rJSyfgJKt2u9hxU1wzyQWPjJGvzG9+eWWxGFOHVKqI4jBQALwZZswesnvZ2UmmkEXdiRpz8B+oWE7PY70ZTMndisYSXg2TqoI+3y9BxbnY2Y4EfbdcRhAvG59NqDENNYbxKvK5HJfPG5M+Wi2AcpLVJrD6caiEOzgSoVNSgQK8fm2M3zGcF4xtClv/8Hs9oD7C3jitTATYNQxmKqKf1LhIxzf1bmfiNn7UKFmcJu4sLqVLwxGSue3taBEyknkw5hXTsUCvqmmL/f8n/w0giR7Hu/9EHvpkz3yuu64TioMkzdTJ30i0+hFnQqW1+v9mMwq+z9qGX0UFu9MomvVG2xod6vc12AAAAACq7sGa5qptFR0jF3nQt/D+7PibKYahaxP3hEixPbGi9nwNf2LAa7LkEZRKxzXeCD64Xpii5n+8Kpg8eHIv7AWXZltgMoGltmoJ0XGdOCL8WkzphvR9N2o3ARSZ42l5e5Pe4B58MCRlP3EKv+mcloknH+fto5BWsmEutW6KvjOVsznFCktkSczVk4aGvj9VXlRcLeDoKG8RkBgdcNG2bf8HUL4MT2DM+ar7NImJhKpxakX4Vk0CnP+/XNhl5UsP0lXgeZXPoDBMSW5An+DXlTCO5FQGwSPYwHLKYVIimEdAoVe49rQLaaNcye5LxU2/c5TijTgJtD5eQQIe1snxauj5jZsxJBUJdoP/zqpjqv8qBruoPsVsP8N44PCUW5Dd0DzqjSS/Dl5mI9cn1w2ndN/0KAEm1QAAAACwu6KM/083IBbH5bPa/9oHUwcU8I9v3j6/v18QYammrf+P6VL///8BrpuM3fOLCxaLNOFNF1zPbPYTP65ni6njft4eVcyrVXRQFrs52tr35StiSp55edVDCBC0H5rIfac6nzUwxQSt7y15QoKb+5zebEQUmVbrPjXuUa19Ey7sqXMiSUKHaw72PJKDdrutJoQr3u6lEYJ8K0MakWKj9zjTFi4X94TsKYco0GrLeB60M6D8M/80rhXUW8iMequg8y5F838WI0+gp3GBN5Kj/xIOxTWQuUaPV/LwvARr1VH93BFgGZR1MFW0Ua30GbYmdnAgo9VWy8SQtpDUgGE2r2zq2eTEMCL7sMKmE1hchVhuF/TCq9iXKEm86kzOf3Rp9ZnCxbpDUj+FKNxVyXe6pVZkRXv/m95SnB/EB8aME29N85MtAcDoXWlor8De2Q5Dg1tar+8wgiZufbMam81j//ASUohoR/zSh2KG4bvT6mkIPz6C5/98DC3LaWlaEZ1zA5JORZRu6J/a0GY285sEYzw71YqOT1ihAG0z5SDt1xNiDQWZdFpndArp6xWhqSDkRb4kSJEHb9liPvw7uLV/6i5MVf//A9Qjr8xkAEUh+KDI+zdtJ68d6MBOktg1iyp/SCq8O9f5pbamn1VVVQPRTWqNBvhQKa07s6P0lc9Luu/3gw4HeyOUfz8MxMwV4UQhua+t9cr4bz/nIB2wnDSK1K7I94M+s6C84htaX/CNlMQUSs2KJO+yaebfTbkNX5yWcqEJevo0vbKUiETuFXiL019A3E+lmsyZMwXrXLLiQAZ5t9+jI3JobhJTMiDH5ZOQ+8Jau5555NMjHSscP9qCVaa40doh+1a3Ukf6jqBmLddgh79/fwTfCyqiuldNkUoy+nUp+4nerwg0OjtGv2x485PJOJvUEokNhYIdWjpx7BWk0VZGWOp3jSFTJ2bnu6KCduZtG/UcBC9RZ3W/jMSfSMw4Etr/DoD/XYP2V5Ovw+YoM3F5g2dGLdvuG6ZkVGLE6Dk5Zr+sdSyGliJP1y2OFf/KFO0RWO+3gsGhesTnfZVpTd8/HwgO216gwaqo+vY3TljfJWowY+i0p0Os4SLn/1wLqDHMlszggmT/D8MRFzs+pLv6LNJSsNZ/r41mWi/rF6ZcKp/yzJdK0VU44hskq3RGpgO6mIpJDsf/mZkFrz0yYOMLbuaj/wp1v7JMFM5eqvBhmTd7U8frQAtHtys4zgpjZmzUhOVTfNNLifElGXADlqHGKrkBT/nYwX8ZRm3RjvyPvjKyEqEGKUpVnvOGx+NKPHiWM//ZDpDVGvvrjmk8RPF/wiYZD3+Us8YCXjrVOfjdd1UPAfjLp8jgSn4me7DPTpz1Ggy9XL80guFO7ECT10AvILKfD18Qx+KY/f8aRqu0oOO8hfKRFZa9PUJwCsp6VdZz6LFkm2b9Pl2LIifCwzRy7TpdG2uAtOxP2OemY26bJMa9ZGSLIRlMsgpDpnDJwd0oa5pQ13x1hrHf52HpulUWonGWsfXZbSQYKu9bnEN76ciQih0opN3deDVrbrxorfVlnCmL1R9zq3ePGWIv21c7pW8kEiFTM5JX8dAw867s/60cf79/BH+MDFCZBHlz1L+qGOJf/1txhhmrf3//As+RIJwevDb+fgNXVeHw67QptZegayhrEwr5Gy+EPo1RLaMtPbqOZYoVzXzwzjMFWZxyUG9YUIf6////AQWy84iAygLk9COtXt92+0mT/xg0zMzMBeLkb8y9SL2TDXgSX422hDgpGNLJyuPioA+YJ91G8znrpNqHkwYyscaJDEc9Vc+j4cXle3hvcd2JqDQH2lBZxDn6mUTs0b75raMvbs727codX01Anj8f3wir9P2xQaQ22v/TxCMglKDFoTjaP01XTLgxnTvPv02JgEUrW6UDgOnobFpLdvKdlypgIzPcq14fgXU5tvVW0FEs7VRlsG1IyA69fN4n+awHhT34cE+xUvdj86C8LgAsFheTjI9Ht9EyYAAAAAAVBVKRx2wLgUTI0/2QfyJo2riRw3JDqzEShmx/Lifo6mRkQVbS7X53t+EvKxcXogtdts31e9MRHdcHgsA8rt4/mt2unlzQ/wsU8Gu7+W6Oj7eD8EQdDp5XlCsVaS/AV/t5ZpPOHR3rGpyAJe9IPV+xMrBL1Oz/8MQhFs31h0N1cVnq371uqIJYHyafKH1jteAK3VpMXBcuC+yt0ZeKyRUY4QhdrJJ4tJ1wg3Hu6kDsbovxupTMkGdRrm8oZSoYPbJ+PwH/xotgTdkA1205vUEfnqkI04T/fnnd1fiZW5AwNcggd7fi4j5zasmcntZexIxqFZQMzMJpfndmI5jn17cgn5EV5t9XN0C///8Q9wlJpMGXdoiaMTG2sVyHQsn8mWRISCLNG777S0OuDRP2GlLcJ2UeOg7Fo8hTNPeJ//iTJhyqxhKRUntdXOihq2wfKfH///8B0GGrwT+fSOQRdctKxjjGCSS11d6BlQ9BDfE0J6Z25FaNTKGpFKNCMr2G/041KpWwBLVe1k08vncseQbKZdXi8x1t9XA45U/Wd43D9wAh3Tal0aiLVzGPusOZ1F+W3TWoqlX/A95+dNef11TsuGful+ctGssldk3fqpfqh+43XTxL42+leSHoF/dWHYGX6maqUEuLX7UB+r/6Llr4LKocbVIeu+hB9QTPfz9fCP8RyWmX4SmbhMFsNtCijV7lVcwejLKlvl0GfCndnWV7/39VBrtTRuUx92oke3GBgKkC5fdGK0YvNK+xenKaDmsHDjNFUM3NMz3ZiXXFuLgojosPVCDEl2W5BjX3Ms+j0GSqACHmh0+RPWyuNm/Qe8vFf9AW7N1uRaxWirrUytqEJnJ4/Flm8hSoiZ2NQBsS6w/yQlC4gCaFo8q4nyY6AFdo4hiwhBXzbNKKvZvktCjSCukRR/BbYVbNwZi2Yh3hGodEacLW8qijiWJODf0P2bhfaiPspPT4lYJBgi/KfcFwCfvyUIgkJOv///8CG/JEepRBLaMFE+2TgrqsJXOVOWHt6g/bFwVLLMVBsMR50dis/39/AlBX+/rMTJkUQrnlxpR2iu0Tp8tATkRYGmDIrcAiRP8PjoWIlb7/0ecTdSCE9Y58+a+n/FovJQTVF4F2jAxMZhTgrM/KVS5BQu6bVbkWY5HXnxRshks3urDdW4RkWp4M4TeLmFK5KF/uHkkiO5Kv96RioH984v/CSDBnG+BwlnU9B+o7Y+0X0Nob+0pLsStxjvPXMy2eCpzhOWV4XbObBHN4UE2sLQ/DIqXhOzxVf38GlTi6aG7EnePO7TRJm9yOfUUcqq1I2iQHrVDqn3TUNRi/lMw8KbMW/3/nqCz/Ef8PoW5Qxcz2yHR/f78EPB2Stbd+ZFmfNTUYILzsb9YNhpaHcaymYrBiNHmFE3Y4ccYJ25Prqm7zHobGHED8/93ZNlWro9vcKivGZs31UiK1k5zjUhexUgbqJb+fUTjxce/7Zly8a5KMC1fX5nfjPgibdvzbXV1jRT2asXvmSAusaLdq1TSIJ8fXINk5AtT34EWPAsfP9IFQqM5K11O6saoHJA==";let Ei=null;const I0=()=>{if(!Ei){const l=atob(iM);Ei=Uint8Array.from(l,t=>t.charCodeAt(0))}},rM=()=>(I0(),Ei);class nM{constructor(t=0){c(this,"seed",0);this.seed=t*4,I0()}_next(){this.seed=(this.seed+4)%Ei.length}value(){return this._next(),Ei[this.seed]/255}vec4(t=new ee){return this._next(),t.set(Ei[this.seed],Ei[this.seed+1],Ei[this.seed+2],Ei[this.seed+3]).mulScalar(1/255)}}const aM=[new A(-1,0,0),new A(1,0,0),new A(0,-1,0),new A(0,1,0),new A(0,0,-1),new A(0,0,1)];class oM{constructor(){c(this,"colors",new Float32Array(6*3))}update(t,e){const s=this.colors,{r:i,g:r,b:n}=t;for(let a=0;a<6;a++)s[a*3]=i,s[a*3+1]=r,s[a*3+2]=n;for(let a=0;a<e.length;a++){const o=e[a];if(o._type===le)for(let h=0;h<6;h++){const d=Math.max(aM[h].dot(o._direction),0)*o._intensity,u=o._color;s[h*3]+=u.r*d,s[h*3+1]+=u.g*d,s[h*3+2]+=u.b*d}}}}const lM=(l,t,e,s)=>{const i=new ce(l,{name:`${t}${e}`,width:e,height:e,format:Te,addressU:nt,addressV:nt,type:Bi,magFilter:fe,minFilter:fe,anisotropy:1,mipmaps:!1});return i.lock().set(s),i.unlock(),i},hM=new Ht,cM=l=>hM.get(l,()=>{const t=rM(),e=Math.sqrt(t.length/4);return lM(l,"BlueNoise",e,t)});class pn{constructor(t,e){this.texture=t,this.cached=!1,this.renderTargets=e}destroy(){this.texture&&(this.texture.destroy(),this.texture=null);const t=this.renderTargets;for(let e=0;e<t.length;e++)t[e].destroy();this.renderTargets.length=0}static getShadowFiltering(t,e){return e===$r?t.extTextureFloatLinear?at:fe:at}static create(t,e){let s=null;return e._type===Le?s=this.createCubemap(t,e._shadowResolution,e._shadowType):s=this.create2dMap(t,e._shadowResolution,e._shadowType),s}static createAtlas(t,e,s){const i=this.create2dMap(t,e,s),r=i.renderTargets,n=r[0];for(let a=0;a<5;a++)r.push(n);return i}static create2dMap(t,e,s){var d;const i=nr.get(s);b.assert(i);let r=i.format;r===Oi&&!t.textureFloatRenderable&&t.textureHalfFloatRenderable&&(r=xa);const n=(d=At.get(r))==null?void 0:d.name,a=this.getShadowFiltering(t,s),o=new ce(t,{profilerHint:Mu,format:r,width:e,height:e,mipmaps:!1,minFilter:a,magFilter:a,addressU:oe,addressV:oe,name:`ShadowMap2D_${n}`});let h=null;return i!=null&&i.pcf?(o.compareOnRead=!0,o.compareFunc=Ih,h=new St({depthBuffer:o})):h=new St({colorBuffer:o,depth:!0}),t.isWebGPU&&(h.flipY=!0),new pn(o,[h])}static createCubemap(t,e,s){var d;const i=nr.get(s);b.assert(i);const r=(d=At.get(i.format))==null?void 0:d.name,n=s===Rs,a=n?fe:at,o=new ce(t,{profilerHint:Mu,format:i==null?void 0:i.format,width:e,height:e,cubemap:!0,mipmaps:!1,minFilter:a,magFilter:a,addressU:oe,addressV:oe,name:`ShadowMapCube_${r}`});n||(o.compareOnRead=!0,o.compareFunc=Ih);const h=[];for(let u=0;u<6;u++)n?h.push(new St({colorBuffer:o,face:u,depth:!0})):h.push(new St({depthBuffer:o,face:u}));return new pn(o,h)}}const dM=[],uM=[],ri=new ee,Id=new ee;class Dd{constructor(t){this.size=Math.floor(t.w*1024),this.used=!1,this.lightId=-1,this.rect=t}}class fM{constructor(t){this.device=t,this.version=1,this.shadowAtlasResolution=2048,this.shadowAtlas=null,this.shadowEdgePixels=3,this.cookieAtlasResolution=4,this.cookieAtlas=new ce(this.device,{name:"CookieAtlas",width:this.cookieAtlasResolution,height:this.cookieAtlasResolution,format:cs,cubemap:!1,mipmaps:!1,minFilter:fe,magFilter:fe,addressU:oe,addressV:oe}),this.cookieRenderTarget=new St({colorBuffer:this.cookieAtlas,depth:!1,flipY:!0}),this.slots=[],this.atlasSplit=[],this.cubeSlotsOffsets=[new W(0,0),new W(0,1),new W(1,0),new W(1,1),new W(2,0),new W(2,1)],this.scissorVec=new ee,this.allocateShadowAtlas(1),this.allocateCookieAtlas(1),this.allocateUniforms()}destroy(){this.destroyShadowAtlas(),this.destroyCookieAtlas()}destroyShadowAtlas(){var t;(t=this.shadowAtlas)==null||t.destroy(),this.shadowAtlas=null}destroyCookieAtlas(){var t,e;(t=this.cookieAtlas)==null||t.destroy(),this.cookieAtlas=null,(e=this.cookieRenderTarget)==null||e.destroy(),this.cookieRenderTarget=null}allocateShadowAtlas(t,e=zt){var r;const s=(r=this.shadowAtlas)==null?void 0:r.texture.format,i=nr.get(e).format;if(!this.shadowAtlas||this.shadowAtlas.texture.width!==t||s!==i){this.version++,this.destroyShadowAtlas(),this.shadowAtlas=pn.createAtlas(this.device,t,e),this.shadowAtlas.cached=!0;const n=4/this.shadowAtlasResolution;this.scissorVec.set(n,n,-2*n,-2*n)}}allocateCookieAtlas(t){this.cookieAtlas.width!==t&&(this.cookieRenderTarget.resize(t,t),this.version++)}allocateUniforms(){this._shadowAtlasTextureId=this.device.scope.resolve("shadowAtlasTexture"),this._shadowAtlasParamsId=this.device.scope.resolve("shadowAtlasParams"),this._shadowAtlasParams=new Float32Array(2),this._cookieAtlasTextureId=this.device.scope.resolve("cookieAtlasTexture")}updateUniforms(){const e=this.shadowAtlas.renderTargets[0].depthBuffer;this._shadowAtlasTextureId.setValue(e),this._shadowAtlasParams[0]=this.shadowAtlasResolution,this._shadowAtlasParams[1]=this.shadowEdgePixels,this._shadowAtlasParamsId.setValue(this._shadowAtlasParams),this._cookieAtlasTextureId.setValue(this.cookieAtlas)}subdivide(t,e){let s=e.atlasSplit;if(!s){const r=Math.ceil(Math.sqrt(t));s=uM,s[0]=r,s.length=1}if(!((r,n)=>r.length===n.length&&r.every((a,o)=>a===n[o]))(s,this.atlasSplit)){this.version++,this.slots.length=0,this.atlasSplit.length=0,this.atlasSplit.push(...s);const r=this.atlasSplit[0];if(r>1){const n=1/r;for(let a=0;a<r;a++)for(let o=0;o<r;o++){const h=new ee(a*n,o*n,n,n),d=this.atlasSplit[1+a*r+o];if(d>1)for(let u=0;u<d;u++)for(let f=0;f<d;f++){const p=n/d,m=new ee(h.x+u*p,h.y+f*p,p,p);this.slots.push(new Dd(m))}else this.slots.push(new Dd(h))}}else this.slots.push(new Dd(new ee(0,0,1,1)));this.slots.sort((n,a)=>a.size-n.size)}}collectLights(t,e){const s=e.cookiesEnabled,i=e.shadowsEnabled;let r=!1,n=!1;const a=dM;return a.length=0,(s||i)&&(h=>{for(let d=0;d<h.length;d++){const u=h[d];if(u.visibleThisFrame){const f=i&&u.castShadows,p=s&&!!u.cookie;r||(r=f),n||(n=p),(f||p)&&a.push(u)}}})(t),a.sort((h,d)=>d.maxScreenSize-h.maxScreenSize),r&&this.allocateShadowAtlas(this.shadowAtlasResolution,e.shadowType),n&&this.allocateCookieAtlas(this.cookieAtlasResolution),(r||n)&&this.subdivide(a.length,e),a}setupSlot(t,e){t.atlasViewport.copy(e);const s=t.numShadowFaces;for(let i=0;i<s;i++)if(t.castShadows||t._cookie){if(ri.copy(e),Id.copy(e),t._type===Fe&&ri.add(this.scissorVec),t._type===Le){const r=ri.z/3,n=this.cubeSlotsOffsets[i];ri.x+=r*n.x,ri.y+=r*n.y,ri.z=r,ri.w=r,Id.copy(ri)}if(t.castShadows){const r=t.getRenderData(null,i);r.shadowViewport.copy(ri),r.shadowScissor.copy(Id)}}}assignSlot(t,e,s){t.atlasViewportAllocated=!0;const i=this.slots[e];i.lightId=t.id,i.used=!0,s&&(t.atlasSlotUpdated=!0,t.atlasVersion=this.version,t.atlasSlotIndex=e)}update(t,e){this.shadowAtlasResolution=e.shadowAtlasResolution,this.cookieAtlasResolution=e.cookieAtlasResolution;const s=this.collectLights(t,e);if(s.length>0){const i=this.slots;for(let a=0;a<i.length;a++)i[a].used=!1;const r=Math.min(s.length,i.length);for(let a=0;a<r;a++){const o=s[a];o.castShadows&&(o._shadowMap=this.shadowAtlas);const h=i[o.atlasSlotIndex];if(o.atlasVersion===this.version&&o.id===(h==null?void 0:h.lightId)){const d=i[o.atlasSlotIndex];d.size===i[a].size&&!d.used&&this.assignSlot(o,o.atlasSlotIndex,!1)}}let n=0;for(let a=0;a<r;a++){for(;n<i.length&&i[n].used;)n++;const o=s[a];o.atlasViewportAllocated||this.assignSlot(o,n,!0);const h=i[o.atlasSlotIndex];this.setupSlot(o,h.rect)}}this.updateUniforms()}}class pM{constructor(){this.cache=new Map}destroy(){this.clear(),this.cache=null}clear(){this.cache.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.cache.clear()}getKey(t){const e=t._type===Le,s=t._shadowType,i=t._shadowResolution;return`${e}-${s}-${i}`}get(t,e){const s=this.getKey(e),i=this.cache.get(s);if(i&&i.length)return i.pop();const r=pn.create(t,e);return r.cached=!0,r}add(t,e){const s=this.getKey(t),i=this.cache.get(s);i?i.push(e):this.cache.set(s,[e])}}class mM extends gs{constructor(t,e,s,i,r){super(t),gn.setName(this,`${this.name}-${s._node.name}`),this.requiresCubemaps=!1,this.shadowRenderer=e,this.light=s,this.face=i,this.applyVsm=r,this.shadowCamera=e.prepareFace(s,null,i),e.setupRenderPass(this,this.shadowCamera,!0)}execute(){this.shadowRenderer.renderFace(this.light,null,this.face,!1)}after(){this.applyVsm&&this.shadowRenderer.renderVsm(this.light,this.shadowCamera)}}class _M{constructor(t,e){c(this,"shadowLights",[]);c(this,"renderer");c(this,"shadowRenderer");c(this,"device");this.renderer=t,this.shadowRenderer=e,this.device=t.device}cull(t,e,s=null){const i=this.renderer.scene.clusteredLightingEnabled;t.visibleThisFrame=!0,i||t._shadowMap||(t._shadowMap=pn.create(this.device,t));const r=t._type,n=r===Fe?1:6;for(let a=0;a<n;a++){const o=t.getRenderData(null,a),h=o.shadowCamera;h.nearClip=t.attenuationEnd/1e3,h.farClip=t.attenuationEnd;const d=h._node,u=t._node;if(d.setPosition(u.getPosition()),r===Fe)h.fov=t._outerConeAngle*2,d.setRotation(u.getRotation()),d.rotateLocal(-90,0,0);else if(r===Le)if(i){const m=2/(this.shadowRenderer.lightTextureAtlas.shadowAtlasResolution*t.atlasViewport.z/3)*this.shadowRenderer.lightTextureAtlas.shadowEdgePixels;h.fov=Math.atan(1+m)*z.RAD_TO_DEG*2}else h.fov=90;this.renderer.updateCameraFrustum(h),this.shadowRenderer.cullShadowCasters(e,t,o.visibleCasters,h,s)}}prepareLights(t,e){let s;for(let i=0;i<e.length;i++){const r=e[i];if(this.shadowRenderer.needsShadowRendering(r)&&r.atlasViewportAllocated){t.push(r);for(let n=0;n<r.numShadowFaces;n++)s=this.shadowRenderer.prepareFace(r,null,n)}}return s}buildNonClusteredRenderPasses(t,e){for(let s=0;s<e.length;s++){const i=e[s];if(this.shadowRenderer.needsShadowRendering(i)){const r=i._type===Fe,n=i.numShadowFaces;for(let a=0;a<n;a++){const o=new mM(this.device,this.shadowRenderer,i,a,r);t.addRenderPass(o)}}}}}class gM extends gs{constructor(t,e,s,i,r){super(t),gn.setName(this,`${this.name}-${s._node.name}`),this.shadowRenderer=e,this.light=s,this.camera=i,this.allCascadesRendering=r}execute(){const{light:t,camera:e,shadowRenderer:s,allCascadesRendering:i}=this,r=t.numShadowFaces,n=t.shadowUpdateOverrides;for(let a=0;a<r;a++)(n==null?void 0:n[a])!==ks&&s.renderFace(t,e,a,!i),(n==null?void 0:n[a])===un&&(n[a]=ks)}after(){this.shadowRenderer.renderVsm(this.light,this.camera)}}const Nl=new ve,ni=new A,u_=new q,ze=[new A,new A,new A,new A,new A,new A,new A,new A],Ld={min:0,max:0};function yM(l,t,e){ze[0].x=ze[1].x=ze[2].x=ze[3].x=t.x,ze[1].y=ze[3].y=ze[7].y=ze[5].y=t.y,ze[2].z=ze[3].z=ze[6].z=ze[7].z=t.z,ze[4].x=ze[5].x=ze[6].x=ze[7].x=e.x,ze[0].y=ze[2].y=ze[4].y=ze[6].y=e.y,ze[0].z=ze[1].z=ze[4].z=ze[5].z=e.z;let s=9999999999,i=-9999999999;for(let r=0;r<8;++r){l.transformPoint(ze[r],ze[r]);const n=ze[r].z;n<s&&(s=n),n>i&&(i=n)}return Ld.min=s,Ld.max=i,Ld}class xM{constructor(t,e){c(this,"renderer");c(this,"shadowRenderer");c(this,"device");this.renderer=t,this.shadowRenderer=e,this.device=t.device}cull(t,e,s,i=null){t.visibleThisFrame=!0,t._shadowMap||(t._shadowMap=pn.create(this.device,t));const r=s._nearClip;this.generateSplitDistances(t,r,Math.min(s._farClip,t.shadowDistance));const n=t.shadowUpdateOverrides;for(let a=0;a<t.numCascades&&(n==null?void 0:n[a])!==ks;a++){const o=t.getRenderData(s,a),h=o.shadowCamera;h.renderTarget=t._shadowMap.renderTargets[0],o.shadowViewport.copy(t.cascades[a]),o.shadowScissor.copy(t.cascades[a]);const d=h._node,u=t._node;d.setPosition(u.getPosition()),d.setRotation(u.getRotation()),d.rotateLocal(-90,0,0);const f=a===0?r:t._shadowCascadeDistances[a-1],p=t._shadowCascadeDistances[a],m=s.getFrustumCorners(f,p);ni.set(0,0,0);const _=s.node.getWorldTransform();for(let k=0;k<8;k++)_.transformPoint(m[k],m[k]),ni.add(m[k]);ni.mulScalar(1/8);let g=0;for(let k=0;k<8;k++){const H=m[k].sub(ni).length();H>g&&(g=H)}const y=d.right,w=d.up,C=d.forward,x=.25*t._shadowResolution/g,M=Math.ceil(ni.dot(w)*x)/x,S=Math.ceil(ni.dot(y)*x)/x,v=w.mulScalar(M),E=y.mulScalar(S),T=ni.dot(C),R=C.mulScalar(T);ni.add2(v,E).add(R),d.setPosition(ni),d.translateLocal(0,0,1e6),h.nearClip=.01,h.farClip=2e6,h.orthoHeight=g,this.renderer.updateCameraFrustum(h),this.shadowRenderer.cullShadowCasters(e,t,o.visibleCasters,h,i);let D=!0;const P=o.visibleCasters;for(let k=0;k<P.length;k++){const H=P[k];D?(D=!1,Nl.copy(H.aabb)):Nl.add(H.aabb)}u_.copy(d.getWorldTransform()).invert();const L=yM(u_,Nl.getMin(),Nl.getMax());d.translateLocal(0,0,L.max+.1),h.farClip=L.max-L.min+.2,o.projectionCompensation=g}}generateSplitDistances(t,e,s){t._shadowCascadeDistances.fill(s);for(let i=1;i<t.numCascades;i++){const r=i/t.numCascades,n=e+(s-e)*r,a=e*(s/e)**r,o=z.lerp(n,a,t.cascadeDistribution);t._shadowCascadeDistances[i-1]=o}}getLightRenderPass(t,e){b.assert(t&&t._type===le);let s=null;if(this.shadowRenderer.needsShadowRendering(t)){const i=t.numShadowFaces,r=t.shadowUpdateOverrides;let n=!0,a;for(let o=0;o<i;o++)(r==null?void 0:r[o])===ks&&(n=!1),a=this.shadowRenderer.prepareFace(t,e,o);s=new gM(this.device,this.shadowRenderer,t,e,n),this.shadowRenderer.setupRenderPass(s,a,n)}return s}}const Fd=new Set,f_=new q,p_=new q,br=new Float32Array(2),Za=new ee(1,1,0,0),m_=new q;function SM(l,t){return Math.exp(-(l*l)/(2*t*t))}function vM(l){const t=(l-1)/6,e=(l-1)*.5,s=new Array(l);let i=0;for(let r=0;r<l;++r)s[r]=SM(r-e,t),i+=s[r];for(let r=0;r<l;++r)s[r]/=i;return s}class D0{constructor(t,e){c(this,"shadowPassCache",[]);this.device=t.device,this.renderer=t,this.lightTextureAtlas=e;const s=this.device.scope;this.sourceId=s.resolve("source"),this.pixelOffsetId=s.resolve("pixelOffset"),this.weightId=s.resolve("weight[0]"),this.blurVsmShaderCode=[j.blurVSMPS,`#define GAUSS
${j.blurVSMPS}`],this.blurVsmShader=[{},{}],this.blurVsmWeights={},this.shadowMapLightRadiusId=s.resolve("light_radius"),this.viewUniformFormat=null,this.viewBindGroupFormat=null,this.blendStateWrite=new bt,this.blendStateNoWrite=new bt,this.blendStateNoWrite.setColorWrite(!1,!1,!1,!1)}static createShadowCamera(t,e,s){const i=Ia.create("ShadowCamera",e,s),r=nr.get(t);b.assert(r);const n=(r==null?void 0:r.vsm)??!1,a=(r==null?void 0:r.pcf)??!1;return n?i.clearColor=new Y(0,0,0,0):i.clearColor=new Y(1,1,1,1),i.clearDepthBuffer=!0,i.clearStencilBuffer=!1,i.clearColorBuffer=!a,i}_cullShadowCastersInternal(t,e,s){const i=t.length;for(let r=0;r<i;r++){const n=t[r];n.castShadow&&(!n.cull||n._isVisible(s))&&(n.visibleThisFrame=!0,e.push(n))}}cullShadowCasters(t,e,s,i,r){if(s.length=0,r)this._cullShadowCastersInternal(r,s,i);else{const n=t.layerList,a=n.length;for(let o=0;o<a;o++){const h=n[o];h._lightsSet.has(e)&&(Fd.has(h)||(Fd.add(h),this._cullShadowCastersInternal(h.shadowCasters,s,i)))}Fd.clear()}s.sort(this.renderer.sortCompareDepth)}setupRenderState(t,e){const i=this.renderer.scene.clusteredLightingEnabled?e._isPcf:e._isPcf&&e._type!==Le;t.setBlendState(i?this.blendStateNoWrite:this.blendStateWrite),t.setDepthState(e.shadowDepthState),t.setStencilState(null,null)}dispatchUniforms(t,e,s,i){const r=e._node;t._type!==le&&(this.renderer.dispatchViewPos(r.getPosition()),this.shadowMapLightRadiusId.setValue(t.attenuationEnd)),f_.setTRS(r.getPosition(),r.getRotation(),A.ONE).invert(),p_.mul2(e.projectionMatrix,f_);const n=s.shadowViewport;e.rect=n,e.scissorRect=s.shadowScissor,m_.setViewport(n.x,n.y,n.z,n.w),s.shadowMatrix.mul2(m_,p_),t._type===le&&t._shadowMatrixPalette.set(s.shadowMatrix.data,i*16)}getShadowPass(t){var r;const e=t._type,s=t._shadowType;let i=(r=this.shadowPassCache[e])==null?void 0:r[s];if(!i){const n=`ShadowPass_${e}_${s}`;i=ti.get(this.device).allocate(n,{isShadow:!0,lightType:e,shadowType:s}),this.shadowPassCache[e]||(this.shadowPassCache[e]=[]),this.shadowPassCache[e][s]=i}return i.index}submitCasters(t,e,s){const i=this.device,r=this.renderer,n=r.scene,a=1<<Fp,o=this.getShadowPass(e),h=s.shaderParams,d=s.renderTarget.flipY?-1:1,u=t.length;for(let f=0;f<u;f++){const p=t[f],m=p.mesh;p.ensureMaterial(i);const _=p.material;G.pushGpuMarker(i,`Node: ${p.node.name}, Material: ${_.name}`),r.setBaseConstants(i,_),r.setSkinning(i,p),_.dirty&&(_.updateUniforms(i,n),_.dirty=!1),r.setupCullMode(!0,d,p),_.setParameters(i),p.setParameters(i,a);const g=p.getShaderInstance(o,0,n,h,this.viewUniformFormat,this.viewBindGroupFormat),y=g.shader;b.assert(y,`no shader for pass ${o}`,_),p._key[Uu]=y.id,i.setShader(y),r.setVertexBuffers(i,m),r.setMorphing(i,p.morphInstance),this.renderer.setupMeshUniformBuffers(g,p);const w=p.renderStyle;i.setIndexBuffer(m.indexBuffer[w]),r.drawInstance(i,p,m,w),r._shadowDrawCalls++,G.popGpuMarker(i)}}needsShadowRendering(t){const e=t.enabled&&t.castShadows&&t.shadowUpdateMode!==ks&&t.visibleThisFrame;return t.shadowUpdateMode===un&&(t.shadowUpdateMode=ks),e&&(this.renderer._shadowMapUpdates+=t.numShadowFaces),e}getLightRenderData(t,e,s){return t.getRenderData(t._type===le?e:null,s)}setupRenderPass(t,e,s){const i=e.renderTarget;t.init(i),t.depthStencilOps.clearDepthValue=1,t.depthStencilOps.clearDepth=s,i.depthBuffer?t.depthStencilOps.storeDepth=!0:(t.colorOps.clearValue.copy(e.clearColor),t.colorOps.clear=s,t.depthStencilOps.storeDepth=!1),t.requiresCubemaps=!1}prepareFace(t,e,s){const i=t._type,n=this.getLightRenderData(t,e,s).shadowCamera,a=i===le?0:s;return n.renderTarget=t._shadowMap.renderTargets[a],n}renderFace(t,e,s,i,r=!0){const n=this.device,a=ae();G.pushGpuMarker(n,`SHADOW ${t._node.name} FACE ${s}`);const o=this.getLightRenderData(t,e,s),h=o.shadowCamera;this.dispatchUniforms(t,h,o,s);const d=h.renderTarget,u=this.renderer;u.setCameraUniforms(h,d),n.supportsUniformBuffers&&u.setupViewUniformBuffers(o.viewBindGroups,this.viewUniformFormat,this.viewBindGroupFormat,1),r?(u.setupViewport(h,d),i&&u.clear(h)):u.clearView(h,d,!0,!1),this.setupRenderState(n,t),this.submitCasters(o.visibleCasters,t,h),G.popGpuMarker(n),u._shadowMapTime+=ae()-a}render(t,e,s=!0){if(this.needsShadowRendering(t)){const i=t.numShadowFaces;for(let r=0;r<i;r++)this.prepareFace(t,e,r),this.renderFace(t,e,r,!0,s);this.renderVsm(t,e)}}renderVsm(t,e){t._isVsm&&t._vsmBlurSize>1&&(!this.renderer.scene.clusteredLightingEnabled||t._type===le)&&this.applyVsmBlur(t,e)}getVsmBlurShader(t,e){const s=this.blurVsmShader;let i=s[t][e];if(!i){this.blurVsmWeights[e]=vM(e);const r=j.fullscreenQuadVS;let n=`#define SAMPLES ${e}
`;n+=this.blurVsmShaderCode[t];const a=`blurVsm${t}${e}`;i=Bs(this.device,r,n,a),s[t][e]=i}return i}applyVsmBlur(t,e){const s=this.device;G.pushGpuMarker(s,`VSM ${t._node.name}`),s.setBlendState(bt.NOBLEND);const n=t.getRenderData(t._type===le?e:null,0).shadowCamera.renderTarget,a=this.renderer.shadowMapCache.get(s,t),o=a.renderTargets[0],h=t.vsmBlurMode,d=t._vsmBlurSize,u=this.getVsmBlurShader(h,d);Za.z=t._shadowResolution-2,Za.w=Za.z,this.sourceId.setValue(n.colorBuffer),br[0]=1/t._shadowResolution,br[1]=0,this.pixelOffsetId.setValue(br),h===Mp&&this.weightId.setValue(this.blurVsmWeights[d]),fn(s,o,u,null,Za),this.sourceId.setValue(o.colorBuffer),br[1]=br[0],br[0]=0,this.pixelOffsetId.setValue(br),fn(s,n,u,null,Za),this.renderer.shadowMapCache.add(t,a),G.popGpuMarker(s)}initViewBindGroupFormat(){this.device.supportsUniformBuffers&&!this.viewUniformFormat&&(this.viewUniformFormat=new Jy(this.device,[new wt("matrix_viewProjection",wa)]),this.viewBindGroupFormat=new Yy(this.device,[new yp(gp,_p|fi)]))}frameUpdate(){this.initViewBindGroupFormat()}}const zl=[];class bM{constructor(t){c(this,"_empty",null);c(this,"_allocated",[]);c(this,"_clusters",new Map);this.device=t}destroy(){this._empty&&(this._empty.destroy(),this._empty=null),this._allocated.forEach(t=>{t.destroy()}),this._allocated.length=0}get count(){return this._allocated.length}get empty(){if(!this._empty){const t=new Hu(this.device);t.name="ClusterEmpty",t.update([]),this._empty=t}return this._empty}assign(t){const e=this.empty;zl.push(...this._allocated),this._allocated.length=0,this._clusters.clear();const s=t.length;for(let i=0;i<s;i++){const n=t[i].renderActions;if(n){const a=n.length;for(let o=0;o<a;o++){const h=n[o];h.lightClusters=null;const d=h.layer;if(d.hasClusteredLights&&d.meshInstances.length){const u=d.getLightIdHash(),f=this._clusters.get(u);let p=f==null?void 0:f.lightClusters;p||(p=zl.pop()??new Hu(this.device),gn.setName(p,`Cluster-${this._allocated.length}`),this._allocated.push(p),this._clusters.set(u,h)),h.lightClusters=p}h.lightClusters||(h.lightClusters=e)}}}zl.forEach(i=>i.destroy()),zl.length=0}update(t,e){this.assign(t),this._clusters.forEach(s=>{const i=s.layer;s.lightClusters.update(i.clusteredLightsSet,e)})}}const __=`
    attribute vec2 vertex_position;
    varying vec2 uv0;
    void main(void) {
        gl_Position = vec4(vertex_position, 0.5, 1.0);
        uv0 = vertex_position.xy * 0.5 + 0.5;
        #ifndef WEBGPU
            uv0.y = 1.0 - uv0.y;
        #endif
    }`,wM=`
    varying vec2 uv0;
    uniform sampler2D blitTexture;
    void main(void) {
        gl_FragColor = texture2D(blitTexture, uv0);
    }`,TM=`
    varying vec2 uv0;
    uniform samplerCube blitTexture;
    uniform mat4 invViewProj;
    void main(void) {
        vec4 projPos = vec4(uv0 * 2.0 - 1.0, 0.5, 1.0);
        vec4 worldPos = invViewProj * projPos;
        gl_FragColor = textureCube(blitTexture, worldPos.xyz);
    }`,Wi=new ee,kd=[];class Up extends gs{constructor(e,s){super(e);c(this,"_quadRenderer2D",null);c(this,"_quadRendererCube",null);c(this,"_filteredLights",[]);this._cubeSlotsOffsets=s,this.requiresCubemaps=!1,this.blitTextureId=e.scope.resolve("blitTexture"),this.invViewProjId=e.scope.resolve("invViewProj")}destroy(){var e,s;(e=this._quadRenderer2D)==null||e.destroy(),this._quadRenderer2D=null,(s=this._quadRendererCube)==null||s.destroy(),this._quadRendererCube=null}static create(e,s){b.assert(e);const i=new Up(e.device,s);return i.init(e),i.colorOps.clear=!1,i.depthStencilOps.clearDepth=!1,i}update(e){const s=this._filteredLights;this.filter(e,s),this.executeEnabled=s.length>0}filter(e,s){for(let i=0;i<e.length;i++){const r=e[i];r._type!==le&&r.atlasViewportAllocated&&r.atlasSlotUpdated&&r.enabled&&r.cookie&&r.visibleThisFrame&&s.push(r)}}initInvViewProjMatrices(){if(!kd.length)for(let e=0;e<6;e++){const s=Ia.create(null,Le,e),i=s.projectionMatrix,r=s.node.getLocalTransform().clone().invert();kd[e]=new q().mul2(i,r).invert()}}get quadRenderer2D(){if(!this._quadRenderer2D){const e=Bs(this.device,__,wM,"cookieRenderer2d");this._quadRenderer2D=new Gu(e)}return this._quadRenderer2D}get quadRendererCube(){if(!this._quadRendererCube){const e=Bs(this.device,__,TM,"cookieRendererCube");this._quadRendererCube=new Gu(e)}return this._quadRendererCube}execute(){const e=this.device;e.setBlendState(bt.NOBLEND),e.setCullMode(vt),e.setDepthState(us.NODEPTH),e.setStencilState();const s=this.renderTarget.colorBuffer.width,i=this._cubeSlotsOffsets,r=this._filteredLights;for(let n=0;n<r.length;n++){const a=r[n];G.pushGpuMarker(this.device,`COOKIE ${a._node.name}`);const o=a.numShadowFaces,h=o>1?this.quadRendererCube:this.quadRenderer2D;o>1&&this.initInvViewProjMatrices(),this.blitTextureId.setValue(a.cookie);for(let d=0;d<o;d++){if(Wi.copy(a.atlasViewport),o>1){const u=Wi.z/3,f=i[d];Wi.x+=u*f.x,Wi.y+=u*f.y,Wi.z=u,Wi.w=u,this.invViewProjId.setValue(kd[d].data)}Wi.mulScalar(s),h.render(Wi)}G.popGpuMarker(e)}r.length=0}}class AM extends gs{constructor(t,e,s){super(t),this.requiresCubemaps=!1,this.shadowRenderer=e,this.shadowRendererLocal=s}update(t){const e=this.shadowRendererLocal.shadowLights,s=this.shadowRendererLocal.prepareLights(e,t),i=e.length;this.enabled=i>0,i&&this.shadowRenderer.setupRenderPass(this,s,!1)}execute(){const t=this.shadowRendererLocal.shadowLights,e=t.length;for(let s=0;s<e;s++){const i=t[s];for(let r=0;r<i.numShadowFaces;r++)this.shadowRenderer.renderFace(i,null,r,!0)}t.length=0}}class EM extends gs{constructor(t,e,s,i,r){super(t),this.renderer=e,this.frameGraph=null,this.cookiesRenderPass=Up.create(r.cookieRenderTarget,r.cubeSlotsOffsets),this.beforePasses.push(this.cookiesRenderPass),this.shadowRenderPass=new AM(t,s,i),this.beforePasses.push(this.shadowRenderPass)}update(t,e,s,i,r){this.frameGraph=t,this.cookiesRenderPass.enabled=s,s&&this.cookiesRenderPass.update(i),this.shadowRenderPass.enabled=e,e&&this.shadowRenderPass.update(r)}destroy(){this.cookiesRenderPass.destroy(),this.cookiesRenderPass=null}execute(){const t=ae(),{renderer:e}=this,{scene:s}=e;e.worldClustersAllocator.update(this.frameGraph.renderPasses,s.lighting),e._lightClustersTime+=ae()-t,e._lightClusters=e.worldClustersAllocator.count}}let Od=0;const $i=new q,qi=new q,Rn=new q,g_=new Js,Bd=new Bf,y_=new q().setScale(1,-1,1),Nd=new Set,zd=new Set,Ud=new Ky,x_=new q().set([1,0,0,0,0,1,0,0,0,0,.5,0,0,0,.5,1]),S_=[new W(.5,.333333),new W(.25,.666667),new W(.75,.111111),new W(.125,.444444),new W(.625,.777778),new W(.375,.222222),new W(.875,.555556),new W(.0625,.888889),new W(.5625,.037037),new W(.3125,.37037),new W(.8125,.703704),new W(.1875,.148148),new W(.6875,.481481),new W(.4375,.814815),new W(.9375,.259259),new W(.03125,.592593)],CM=new q,MM=new q,PM=new q,RM=new q,IM=new q,DM=new q,In=new Set,Vd=[],Gd=[];class LM{constructor(t){c(this,"clustersDebugRendered",!1);c(this,"processingMeshInstances",new Set);c(this,"worldClustersAllocator");c(this,"lights",[]);c(this,"localLights",[]);c(this,"cameraDirShadowLights",new Map);c(this,"dirLightShadows",new Map);c(this,"blueNoise",new nM(123));this.device=t,this.scene=null,this.worldClustersAllocator=new bM(t),this.lightTextureAtlas=new fM(t),this.shadowMapCache=new pM,this.shadowRenderer=new D0(this,this.lightTextureAtlas),this._shadowRendererLocal=new _M(this,this.shadowRenderer),this._shadowRendererDirectional=new xM(this,this.shadowRenderer),this._renderPassUpdateClustered=new EM(this.device,this,this.shadowRenderer,this._shadowRendererLocal,this.lightTextureAtlas),this.viewUniformFormat=null,this.viewBindGroupFormat=null,this._skinTime=0,this._morphTime=0,this._cullTime=0,this._shadowMapTime=0,this._lightClustersTime=0,this._layerCompositionUpdateTime=0,this._shadowDrawCalls=0,this._skinDrawCalls=0,this._instancedDrawCalls=0,this._shadowMapUpdates=0,this._numDrawCallsCulled=0,this._camerasRendered=0,this._lightClusters=0;const e=t.scope;this.boneTextureId=e.resolve("texture_poseMap"),this.boneTextureSizeId=e.resolve("texture_poseMapSize"),this.modelMatrixId=e.resolve("matrix_model"),this.normalMatrixId=e.resolve("matrix_normal"),this.viewInvId=e.resolve("matrix_viewInverse"),this.viewPos=new Float32Array(3),this.viewPosId=e.resolve("view_position"),this.projId=e.resolve("matrix_projection"),this.projSkyboxId=e.resolve("matrix_projectionSkybox"),this.viewId=e.resolve("matrix_view"),this.viewId3=e.resolve("matrix_view3"),this.viewProjId=e.resolve("matrix_viewProjection"),this.flipYId=e.resolve("projectionFlipY"),this.tbnBasis=e.resolve("tbnBasis"),this.nearClipId=e.resolve("camera_near"),this.farClipId=e.resolve("camera_far"),this.cameraParams=new Float32Array(4),this.cameraParamsId=e.resolve("camera_params"),this.viewIndexId=e.resolve("view_index"),this.blueNoiseJitterVersion=0,this.blueNoiseJitterVec=new ee,this.blueNoiseJitterData=new Float32Array(4),this.blueNoiseJitterId=e.resolve("blueNoiseJitter"),this.blueNoiseTextureId=e.resolve("blueNoiseTex32"),this.alphaTestId=e.resolve("alpha_ref"),this.opacityMapId=e.resolve("texture_opacityMap"),this.exposureId=e.resolve("exposure"),this.twoSidedLightingNegScaleFactorId=e.resolve("twoSidedLightingNegScaleFactor"),this.twoSidedLightingNegScaleFactorId.setValue(0),this.morphPositionTex=e.resolve("morphPositionTex"),this.morphNormalTex=e.resolve("morphNormalTex"),this.morphTexParams=e.resolve("morph_tex_params"),this.lightCube=new oM,this.constantLightCube=e.resolve("lightCube[0]")}destroy(){this.shadowRenderer=null,this._shadowRendererLocal=null,this._shadowRendererDirectional=null,this.shadowMapCache.destroy(),this.shadowMapCache=null,this._renderPassUpdateClustered.destroy(),this._renderPassUpdateClustered=null,this.lightTextureAtlas.destroy(),this.lightTextureAtlas=null}sortCompare(t,e){if(t.layer===e.layer){if(t.drawOrder&&e.drawOrder)return t.drawOrder-e.drawOrder;if(t.zdist&&e.zdist)return e.zdist-t.zdist;if(t.zdist2&&e.zdist2)return t.zdist2-e.zdist2}return e._key[Ii]-t._key[Ii]}sortCompareMesh(t,e){if(t.layer===e.layer){if(t.drawOrder&&e.drawOrder)return t.drawOrder-e.drawOrder;if(t.zdist&&e.zdist)return e.zdist-t.zdist}const s=t._key[Ii],i=e._key[Ii];return s===i&&t.mesh&&e.mesh?e.mesh.id-t.mesh.id:i-s}sortCompareDepth(t,e){const s=t._key[Uu],i=e._key[Uu];return s===i&&t.mesh&&e.mesh?e.mesh.id-t.mesh.id:i-s}setupViewport(t,e){const s=this.device,i=e?e.width:s.width,r=e?e.height:s.height,n=t.rect;let a=Math.floor(n.x*i),o=Math.floor(n.y*r),h=Math.floor(n.z*i),d=Math.floor(n.w*r);if(s.setViewport(a,o,h,d),t._scissorRectClear){const u=t.scissorRect;a=Math.floor(u.x*i),o=Math.floor(u.y*r),h=Math.floor(u.z*i),d=Math.floor(u.w*r)}s.setScissor(a,o,h,d)}setCameraUniforms(t,e){var a,o;const s=e==null?void 0:e.flipY;let i=1;if(t.xr&&t.xr.session){const h=((o=(a=t._node)==null?void 0:a.parent)==null?void 0:o.getWorldTransform())||null,d=t.xr.views;i=d.list.length;for(let u=0;u<i;u++){const f=d.list[u];f.updateTransforms(h),t.frustum.setFromMat4(f.projViewOffMat)}}else{let h=t.projectionMatrix;t.calculateProjection&&t.calculateProjection(h,Rl);let d=t.getProjectionMatrixSkybox();s&&(h=CM.mul2(y_,h),d=MM.mul2(y_,d)),this.device.isWebGPU&&(h=PM.mul2(x_,h),d=RM.mul2(x_,d));const{jitter:u}=t;let f=0,p=0;if(u>0){const _=e?e.width:this.device.width,g=e?e.height:this.device.height,y=S_[this.device.renderVersion%S_.length];f=u*(y.x*2-1)/_,p=u*(y.y*2-1)/g,h=IM.copy(h),h.data[8]=f,h.data[9]=p,d=DM.copy(d),d.data[8]=f,d.data[9]=p,this.blueNoiseJitterVersion!==this.device.renderVersion&&(this.blueNoiseJitterVersion=this.device.renderVersion,this.blueNoise.vec4(this.blueNoiseJitterVec))}const m=u>0?this.blueNoiseJitterVec:ee.ZERO;if(this.blueNoiseJitterData[0]=m.x,this.blueNoiseJitterData[1]=m.y,this.blueNoiseJitterData[2]=m.z,this.blueNoiseJitterData[3]=m.w,this.blueNoiseJitterId.setValue(this.blueNoiseJitterData),this.projId.setValue(h.data),this.projSkyboxId.setValue(d.data),t.calculateTransform)t.calculateTransform(qi,Rl);else{const _=t._node.getPosition(),g=t._node.getRotation();qi.setTRS(_,g,A.ONE)}this.viewInvId.setValue(qi.data),Rn.copy(qi).invert(),this.viewId.setValue(Rn.data),g_.setFromMat4(Rn),this.viewId3.setValue(g_.data),$i.mul2(h,Rn),this.viewProjId.setValue($i.data),t._storeShaderMatrices($i,f,p,this.device.renderVersion),this.flipYId.setValue(s?-1:1),this.dispatchViewPos(t._node.getPosition()),t.frustum.setFromMat4($i)}this.tbnBasis.setValue(s?-1:1);const r=t._nearClip,n=t._farClip;return this.nearClipId.setValue(r),this.farClipId.setValue(n),this.cameraParams[0]=1/n,this.cameraParams[1]=n,this.cameraParams[2]=r,this.cameraParams[3]=t.projection===pa?1:0,this.cameraParamsId.setValue(this.cameraParams),this.exposureId.setValue(this.scene.physicalUnits?t.getExposure():this.scene.exposure),i}clear(t,e,s,i){const r=(e??t._clearColorBuffer?Io:0)|(s??t._clearDepthBuffer?Do:0)|(i??t._clearStencilBuffer?Rh:0);if(r){const n=this.device;G.pushGpuMarker(n,"CLEAR"),n.clear({color:[t._clearColor.r,t._clearColor.g,t._clearColor.b,t._clearColor.a],depth:t._clearDepth,stencil:t._clearStencil,flags:r}),G.popGpuMarker(n)}}setCamera(t,e,s,i=null){this.setCameraUniforms(t,e),this.clearView(t,e,s,!1)}clearView(t,e,s,i){const r=this.device;if(G.pushGpuMarker(r,"CLEAR-VIEW"),r.setRenderTarget(e),r.updateBegin(),i&&(r.setColorWrite(!0,!0,!0,!0),r.setDepthWrite(!0)),this.setupViewport(t,e),s){const n=t._clearOptions;r.clear(n||{color:[t._clearColor.r,t._clearColor.g,t._clearColor.b,t._clearColor.a],depth:t._clearDepth,flags:(t._clearColorBuffer?Io:0)|(t._clearDepthBuffer?Do:0)|(t._clearStencilBuffer?Rh:0),stencil:t._clearStencil})}G.popGpuMarker(r)}setupCullMode(t,e,s){const i=s.material;let r=vt;if(t){let n=1;(i.cull===xo||i.cull===nn)&&(n=e*s.flipFacesFactor*s.node.worldScaleSign),n<0?r=i.cull===xo?nn:xo:r=i.cull}this.device.setCullMode(r),r===vt&&i.cull===vt&&this.twoSidedLightingNegScaleFactorId.setValue(s.node.worldScaleSign)}updateCameraFrustum(t){if(t.xr&&t.xr.views.list.length){const s=t.xr.views.list[0];$i.mul2(s.projMat,s.viewOffMat),t.frustum.setFromMat4($i);return}const e=t.projectionMatrix;if(t.calculateProjection&&t.calculateProjection(e,Rl),t.calculateTransform)t.calculateTransform(qi,Rl);else{const s=t._node.getPosition(),i=t._node.getRotation();qi.setTRS(s,i,A.ONE),this.viewInvId.setValue(qi.data)}Rn.copy(qi).invert(),$i.mul2(e,Rn),t.frustum.setFromMat4($i)}setBaseConstants(t,e){t.setCullMode(e.cull),e.opacityMap&&this.opacityMapId.setValue(e.opacityMap),(e.opacityMap||e.alphaTest>0)&&this.alphaTestId.setValue(e.alphaTest)}updateCpuSkinMatrices(t){Od++;const e=t.length;if(e===0)return;const s=ae();for(let i=0;i<e;i++){const r=t[i].skinInstance;r&&(r.updateMatrices(t[i].node,Od),r._dirty=!0)}this._skinTime+=ae()-s}updateGpuSkinMatrices(t){const e=ae();for(const s of t){const i=s.skinInstance;i&&i._dirty&&(i.updateMatrixPalette(s.node,Od),i._dirty=!1)}this._skinTime+=ae()-e}updateMorphing(t){const e=ae();for(const s of t){const i=s.morphInstance;i&&i._dirty&&i.update()}this._morphTime+=ae()-e}updateGSplats(t){var e;for(const s of t)(e=s.gsplatInstance)==null||e.update()}gpuUpdate(t){this.updateGpuSkinMatrices(t),this.updateMorphing(t),this.updateGSplats(t)}setVertexBuffers(t,e){t.setVertexBuffer(e.vertexBuffer)}setMorphing(t,e){e&&(e.prepareRendering(t),t.setVertexBuffer(e.morph.vertexBufferIds),this.morphPositionTex.setValue(e.texturePositions),this.morphNormalTex.setValue(e.textureNormals),this.morphTexParams.setValue(e._textureParams))}setSkinning(t,e){const s=e.skinInstance;if(s){this._skinDrawCalls++;const i=s.boneTexture;this.boneTextureId.setValue(i),this.boneTextureSizeId.setValue(s.boneTextureSize)}}dispatchViewPos(t){const e=this.viewPos;e[0]=t.x,e[1]=t.y,e[2]=t.z,this.viewPosId.setValue(e)}initViewBindGroupFormat(t){if(this.device.supportsUniformBuffers&&!this.viewUniformFormat){const e=[new wt("matrix_viewProjection",wa),new wt("cubeMapRotationMatrix",Uo),new wt("view_position",Qt),new wt("skyboxIntensity",Ks),new wt("exposure",Ks),new wt("textureBias",Ks)];t&&e.push(new wt("clusterCellsCountByBoundsSize",Qt),new wt("clusterTextureSize",Qt),new wt("clusterBoundsMin",Qt),new wt("clusterBoundsDelta",Qt),new wt("clusterCellsDot",Qt),new wt("clusterCellsMax",Qt),new wt("clusterCompressionLimit0",hr),new wt("shadowAtlasParams",hr),new wt("clusterMaxCells",hn),new wt("clusterSkip",Ks)),this.viewUniformFormat=new Jy(this.device,e);const s=[new yp(gp,_p|fi),new yi("lightsTextureFloat",fi,$s,hd),new yi("lightsTexture8",fi,$s,hd),new yi("shadowAtlasTexture",fi,$s,jS),new yi("cookieAtlasTexture",fi,$s,uh),new yi("areaLightsLutTex1",fi,$s,uh),new yi("areaLightsLutTex2",fi,$s,uh)];t&&s.push(new yi("clusterWorldTexture",fi,$s,hd)),this.viewBindGroupFormat=new Yy(this.device,s)}}setupViewUniformBuffers(t,e,s,i){b.assert(Array.isArray(t),"viewBindGroups must be an array");const r=this.device;for(b.assert(i===1,"This code does not handle the viewCount yet");t.length<i;){const a=new vp(r,e,!1),o=new xp(r,s,a);gn.setName(o,`ViewBindGroup_${o.id}`),t.push(o)}const n=t[0];n.defaultUniformBuffer.update(),n.update(),r.setBindGroup(Bh,n)}setupMeshUniformBuffers(t,e){const s=this.device;if(s.supportsUniformBuffers){this.modelMatrixId.setValue(e.node.worldTransform.data),this.normalMatrixId.setValue(e.node.normalMatrix.data);const i=t.getBindGroup(s);i.update(),s.setBindGroup(jy,i),t.getUniformBuffer(s).update(Ud),s.setBindGroup(Ru,Ud.bindGroup,Ud.offsets)}}drawInstance(t,e,s,i,r){const n=e.node.worldTransform;this.modelMatrixId.setValue(n.data),r&&this.normalMatrixId.setValue(e.node.normalMatrix.data);const a=e.instancingData;a?a.count>0?(this._instancedDrawCalls++,t.setVertexBuffer(a.vertexBuffer),t.draw(s.primitive[i],a.count)):t.clearVertexBuffer():t.draw(s.primitive[i])}drawInstance2(t,e,s,i){const r=e.instancingData;r?r.count>0?(this._instancedDrawCalls++,t.draw(s.primitive[i],r.count,!0)):t.clearVertexBuffer():t.draw(s.primitive[i],void 0,!0)}cull(t,e,s){const i=ae(),r=s.opaque;r.length=0;const n=s.transparent;n.length=0;const a=t.frustumCulling,o=e.length;for(let h=0;h<o;h++){const d=e[h];d.visible&&(!a||!d.cull||d._isVisible(t))&&(d.visibleThisFrame=!0,(d.transparent?n:r).push(d),(d.skinInstance||d.morphInstance||d.gsplatInstance)&&(this.processingMeshInstances.add(d),d.gsplatInstance&&d.gsplatInstance.cameras.push(t)))}this._cullTime+=ae()-i,this._numDrawCallsCulled+=a?o:0}collectLights(t){this.lights.length=0,this.localLights.length=0;const e=this.scene._stats;e.dynamicLights=0,e.bakedLights=0;const s=t.layerList.length;for(let i=0;i<s;i++){const r=t.layerList[i];if(!zd.has(r)){zd.add(r);const n=r._lights;for(let a=0;a<n.length;a++){const o=n[a];Nd.has(o)||(Nd.add(o),this.lights.push(o),o._type!==le&&this.localLights.push(o),(o.mask&ms||o.mask&dr)&&e.dynamicLights++,o.mask&ar&&e.bakedLights++)}}}e.lights=this.lights.length,Nd.clear(),zd.clear()}cullLights(t,e){const s=this.scene.clusteredLightingEnabled,i=this.scene.physicalUnits;for(let r=0;r<e.length;r++){const n=e[r];if(n.enabled)if(n._type!==le)if(n.getBoundingSphere(Bd),t.frustum.containsSphere(Bd)){n.visibleThisFrame=!0,n.usePhysicalUnits=i;const a=t.getScreenSize(Bd);n.maxScreenSize=Math.max(n.maxScreenSize,a)}else s||n.castShadows&&!n.shadowMap&&(n.visibleThisFrame=!0);else n.usePhysicalUnits=this.scene.physicalUnits}}cullShadowmaps(t){const e=this.scene.clusteredLightingEnabled;for(let i=0;i<this.localLights.length;i++){const r=this.localLights[i];r._type!==le&&(e?r.atlasSlotUpdated&&r.shadowUpdateMode===ks&&(r.shadowUpdateMode=un):r.shadowUpdateMode===ks&&r.castShadows&&(r.getRenderData(null,0).shadowCamera.renderTarget||(r.shadowUpdateMode=un)),r.visibleThisFrame&&r.castShadows&&r.shadowUpdateMode!==ks&&this._shadowRendererLocal.cull(r,t))}this.cameraDirShadowLights.clear();const s=t.cameras;for(let i=0;i<s.length;i++){const r=s[i];if(r.enabled){const n=r.camera;let a;const o=n.layers;for(let h=0;h<o.length;h++){const d=t.getLayerById(o[h]);if(d){const u=d.splitLights[le];for(let f=0;f<u.length;f++){const p=u[f];p.castShadows&&!In.has(p)&&(In.add(p),a=a??[],a.push(p),this._shadowRendererDirectional.cull(p,t,n))}}}a&&this.cameraDirShadowLights.set(n,a),In.clear()}}}cullComposition(t){const e=ae(),{scene:s}=this;this.processingMeshInstances.clear();const i=t.cameras.length;this._camerasRendered+=i;for(let r=0;r<i;r++){const n=t.cameras[r];s==null||s.fire(ow,n);const a=n.renderTarget;n.frameUpdate(a),this.updateCameraFrustum(n.camera);const o=n.layers;for(let h=0;h<o.length;h++){const d=t.getLayerById(o[h]);if(d&&d.enabled){this.cullLights(n.camera,d._lights);const u=d.getCulledInstances(n.camera);this.cull(n.camera,d.meshInstances,u)}}s==null||s.fire(lw,n)}s.clusteredLightingEnabled&&this.updateLightTextureAtlas(),this.cullShadowmaps(t),this._cullTime+=ae()-e}updateShaders(t,e){const s=t.length;for(let i=0;i<s;i++){const r=t[i].material;if(r&&!In.has(r)&&(In.add(r),r.getShaderVariant!==Sn.prototype.getShaderVariant)){if(e&&(!r.useLighting||r.emitter&&!r.emitter.lighting))continue;r.clearVariants()}}In.clear()}updateFrameUniforms(){this.blueNoiseTextureId.setValue(cM(this.device))}beginFrame(t){const e=this.scene,s=e.updateShaders||this.device._shadersDirty;let i=0;const r=t.layerList,n=r.length;for(let h=0;h<n;h++){const u=r[h].meshInstances,f=u.length;i+=f;for(let p=0;p<f;p++){const m=u[p];m.visibleThisFrame=!1,s&&Vd.push(m),m.skinInstance&&Gd.push(m)}}if(e._stats.meshInstances=i,s){const h=!e.updateShaders||!this.device._shadersDirty;this.updateShaders(Vd,h),e.updateShaders=!1,this.device._shadersDirty=!1,e._shaderVersion++}this.updateFrameUniforms(),this.updateCpuSkinMatrices(Gd),Vd.length=0,Gd.length=0;const a=this.lights,o=a.length;for(let h=0;h<o;h++)a[h].beginFrame()}updateLightTextureAtlas(){this.lightTextureAtlas.update(this.localLights,this.scene.lighting)}updateLayerComposition(t){const e=ae(),s=t.layerList.length,r=this.scene._shaderVersion;for(let n=0;n<s;n++){const a=t.layerList[n];a._shaderVersion=r,a._skipRenderCounter=0,a._forwardDrawCalls=0,a._shadowDrawCalls=0,a._renderTime=0}t._update(),this._layerCompositionUpdateTime+=ae()-e}frameUpdate(){this.clustersDebugRendered=!1,this.initViewBindGroupFormat(this.scene.clusteredLightingEnabled),this.dirLightShadows.clear()}}class L0{constructor(){c(this,"camera",null);this.layer=null,this.transparent=!1,this.renderTarget=null,this.lightClusters=null,this.clearColor=!1,this.clearDepth=!1,this.clearStencil=!1,this.triggerPostprocess=!1,this.firstCameraUse=!1,this.lastCameraUse=!1,this.viewBindGroups=[],this.useCameraPasses=!1}destroy(){this.viewBindGroups.forEach(t=>{t.defaultUniformBuffer.destroy(),t.destroy()}),this.viewBindGroups.length=0}setupClears(t,e){this.clearColor=(t==null?void 0:t.clearColorBuffer)||e.clearColorBuffer,this.clearDepth=(t==null?void 0:t.clearDepthBuffer)||e.clearDepthBuffer,this.clearStencil=(t==null?void 0:t.clearStencilBuffer)||e.clearStencilBuffer}}class FM extends gs{constructor(e,s,i,r){super(e);c(this,"layerComposition");c(this,"scene");c(this,"renderer");c(this,"renderActions",[]);c(this,"gammaCorrection");c(this,"toneMapping");c(this,"noDepthClear",!1);this.layerComposition=s,this.scene=i,this.renderer=r}get rendersAnything(){return this.renderActions.length>0}addRenderAction(e){this.renderActions.push(e)}addLayer(e,s,i,r=!0){b.assert(e),b.assert(this.renderTarget!==void 0,"Render pass needs to be initialized before adding layers"),b.assert(e.camera.layersSet.has(s.id),`Camera ${e.entity.name} does not render layer ${s.name}.`);const n=new L0;if(n.renderTarget=this.renderTarget,n.camera=e,n.layer=s,n.transparent=i,r){const a=this.renderActions.length===0;n.setupClears(a?e:void 0,s)}this.addRenderAction(n)}addLayers(e,s,i,r,n,a=!0){const{layerList:o,subLayerList:h}=e;let d=r,u=i;for(;u<o.length;){const f=o[u],p=h[u];if(s.camera.layersSet.has(f.id)&&(this.addLayer(s,f,p,d),d=!1),u++,f.id===n&&p===a)break}return u}updateDirectionalShadows(){const{renderer:e,renderActions:s}=this;for(let i=0;i<s.length;i++){const a=s[i].camera.camera,o=this.renderer.cameraDirShadowLights.get(a);if(o)for(let h=0;h<o.length;h++){const d=o[h];if(e.dirLightShadows.get(d)!==a){e.dirLightShadows.set(d,a);const u=e._shadowRendererDirectional.getLightRenderPass(d,a);u&&this.beforePasses.push(u)}}}}updateClears(){const e=this.renderActions[0];if(e){const i=e.camera.camera,r=i.fullSizeClearRect;this.setClearColor(r&&e.clearColor?i.clearColor:void 0),this.setClearDepth(r&&e.clearDepth&&!this.noDepthClear?i.clearDepth:void 0),this.setClearStencil(r&&e.clearStencil?i.clearStencil:void 0)}}frameUpdate(){super.frameUpdate(),this.updateDirectionalShadows(),this.updateClears()}before(){const{renderActions:e}=this;for(let s=0;s<e.length;s++){const i=e[s];i.firstCameraUse&&this.scene.fire(iw,i.camera)}}execute(){const{layerComposition:e,renderActions:s}=this;for(let i=0;i<s.length;i++){const r=s[i],n=r.layer;b.call(()=>{e.getLayerByName(n.name)||b.warnOnce(`Layer ${n.name} is not found in the scene and will not be rendered. Your render pass setup might need to be updated.`)}),e.isEnabled(n,r.transparent)&&this.renderRenderAction(r,i===0)}}after(){for(let e=0;e<this.renderActions.length;e++){const s=this.renderActions[e];s.lastCameraUse&&this.scene.fire(rw,s.camera)}this.beforePasses.length=0}renderRenderAction(e,s){var u;const{renderer:i,scene:r}=this,n=i.device,{layer:a,transparent:o,camera:h}=e;G.pushGpuMarker(this.device,`Camera: ${h?h.entity.name:"Unnamed"}, Layer: ${a.name}(${o?"TRANSP":"OPAQUE"})`);const d=ae();if(h){const f=h.gammaCorrection,p=h.toneMapping;this.gammaCorrection!==void 0&&(h.gammaCorrection=this.gammaCorrection),this.toneMapping!==void 0&&(h.toneMapping=this.toneMapping),r.fire(nw,h,a,o);const m={lightClusters:e.lightClusters},_=((u=h.camera.shaderPassInfo)==null?void 0:u.index)??xn;(!s||!h.camera.fullSizeClearRect)&&(m.clearColor=e.clearColor,m.clearDepth=e.clearDepth,m.clearStencil=e.clearStencil);const g=e.renderTarget??n.backBuffer;i.renderForwardLayer(h.camera,g,a,o,_,e.viewBindGroups,m),n.setBlendState(bt.NOBLEND),n.setStencilState(null,null),n.setAlphaToCoverage(!1),r.fire(aw,h,a,o),this.gammaCorrection!==void 0&&(h.gammaCorrection=f),this.toneMapping!==void 0&&(h.toneMapping=p)}G.popGpuMarker(this.device),a._renderTime+=ae()-d}log(e,s){if(super.log(e,s),Qs.get(ta)){const{layerComposition:i}=this;this.renderActions.forEach((r,n)=>{const a=r.layer,o=a.enabled&&i.isEnabled(a,r.transparent),h=r.camera;b.trace(ta,`    ${n}:${` Cam: ${h?h.entity.name:"-"}`.padEnd(22," ")}${` Lay: ${a.name}`.padEnd(22," ")}${r.transparent?" TRANSP":" OPAQUE"}${o?" ENABLED":" DISABLED"}${` Meshes: ${a.meshInstances.length}`.padEnd(5," ")}`)})}}}class kM extends gs{constructor(t,e,s){super(t),this.renderer=e,this.renderAction=s,this.requiresCubemaps=!1}execute(){const t=this.renderAction,e=t.camera;b.assert(t.triggerPostprocess&&e.onPostprocessing),e.onPostprocessing()}}const OM=[[],[],[]],Xi=new Y,wr={drawCalls:[],shaderInstances:[],isNewMaterial:[],lightMaskChanged:[],clear:function(){this.drawCalls.length=0,this.shaderInstances.length=0,this.isNewMaterial.length=0,this.lightMaskChanged.length=0}};function BM(l){const t=[];for(let e=0;e<l;++e){const s=Math.sqrt(e+.5)/Math.sqrt(l);t.push(s)}return t}function NM(l){const t=[];for(let e=0;e<l;e++){const s=e/l,i=Math.sqrt(s*s);t.push(i)}return t}const vi=class vi extends LM{constructor(t){super(t);const e=this.device;this._forwardDrawCalls=0,this._materialSwitches=0,this._depthMapTime=0,this._forwardTime=0,this._sortTime=0;const s=e.scope;this.fogColorId=s.resolve("fog_color"),this.fogStartId=s.resolve("fog_start"),this.fogEndId=s.resolve("fog_end"),this.fogDensityId=s.resolve("fog_density"),this.ambientId=s.resolve("light_globalAmbient"),this.skyboxIntensityId=s.resolve("skyboxIntensity"),this.cubeMapRotationMatrixId=s.resolve("cubeMapRotationMatrix"),this.pcssDiskSamplesId=s.resolve("pcssDiskSamples[0]"),this.pcssSphereSamplesId=s.resolve("pcssSphereSamples[0]"),this.lightColorId=[],this.lightDir=[],this.lightDirId=[],this.lightShadowMapId=[],this.lightShadowMatrixId=[],this.lightShadowParamsId=[],this.lightShadowIntensity=[],this.lightRadiusId=[],this.lightPos=[],this.lightPosId=[],this.lightWidth=[],this.lightWidthId=[],this.lightHeight=[],this.lightHeightId=[],this.lightInAngleId=[],this.lightOutAngleId=[],this.lightCookieId=[],this.lightCookieIntId=[],this.lightCookieMatrixId=[],this.lightCookieOffsetId=[],this.lightShadowSearchAreaId=[],this.lightCameraParamsId=[],this.lightSoftShadowParamsId=[],this.shadowMatrixPaletteId=[],this.shadowCascadeDistancesId=[],this.shadowCascadeCountId=[],this.shadowCascadeBlendId=[],this.screenSizeId=s.resolve("uScreenSize"),this._screenSize=new Float32Array(4),this.fogColor=new Float32Array(3),this.ambientColor=new Float32Array(3),this.pcssDiskSamples=BM(16),this.pcssSphereSamples=NM(16)}destroy(){super.destroy()}dispatchGlobalLights(t){const e=this.ambientColor;if(Xi.linear(t.ambientLight),e[0]=Xi.r,e[1]=Xi.g,e[2]=Xi.b,t.physicalUnits)for(let s=0;s<3;s++)e[s]*=t.ambientLuminance;this.ambientId.setValue(e),this.skyboxIntensityId.setValue(t.physicalUnits?t.skyboxLuminance:t.skyboxIntensity),this.cubeMapRotationMatrixId.setValue(t._skyboxRotationMat3.data)}_resolveLight(t,e){const s=`light${e}`;this.lightColorId[e]=t.resolve(`${s}_color`),this.lightDir[e]=new Float32Array(3),this.lightDirId[e]=t.resolve(`${s}_direction`),this.lightShadowMapId[e]=t.resolve(`${s}_shadowMap`),this.lightShadowMatrixId[e]=t.resolve(`${s}_shadowMatrix`),this.lightShadowParamsId[e]=t.resolve(`${s}_shadowParams`),this.lightShadowIntensity[e]=t.resolve(`${s}_shadowIntensity`),this.lightShadowSearchAreaId[e]=t.resolve(`${s}_shadowSearchArea`),this.lightRadiusId[e]=t.resolve(`${s}_radius`),this.lightPos[e]=new Float32Array(3),this.lightPosId[e]=t.resolve(`${s}_position`),this.lightWidth[e]=new Float32Array(3),this.lightWidthId[e]=t.resolve(`${s}_halfWidth`),this.lightHeight[e]=new Float32Array(3),this.lightHeightId[e]=t.resolve(`${s}_halfHeight`),this.lightInAngleId[e]=t.resolve(`${s}_innerConeAngle`),this.lightOutAngleId[e]=t.resolve(`${s}_outerConeAngle`),this.lightCookieId[e]=t.resolve(`${s}_cookie`),this.lightCookieIntId[e]=t.resolve(`${s}_cookieIntensity`),this.lightCookieMatrixId[e]=t.resolve(`${s}_cookieMatrix`),this.lightCookieOffsetId[e]=t.resolve(`${s}_cookieOffset`),this.lightCameraParamsId[e]=t.resolve(`${s}_cameraParams`),this.lightSoftShadowParamsId[e]=t.resolve(`${s}_softShadowParams`),this.shadowMatrixPaletteId[e]=t.resolve(`${s}_shadowMatrixPalette[0]`),this.shadowCascadeDistancesId[e]=t.resolve(`${s}_shadowCascadeDistances`),this.shadowCascadeCountId[e]=t.resolve(`${s}_shadowCascadeCount`),this.shadowCascadeBlendId[e]=t.resolve(`${s}_shadowCascadeBlend`)}setLTCDirectionalLight(t,e,s,i,r){this.lightPos[e][0]=i.x-s.x*r,this.lightPos[e][1]=i.y-s.y*r,this.lightPos[e][2]=i.z-s.z*r,this.lightPosId[e].setValue(this.lightPos[e]);const n=t.transformVector(new A(-.5,0,0));this.lightWidth[e][0]=n.x*r,this.lightWidth[e][1]=n.y*r,this.lightWidth[e][2]=n.z*r,this.lightWidthId[e].setValue(this.lightWidth[e]);const a=t.transformVector(new A(0,0,.5));this.lightHeight[e][0]=a.x*r,this.lightHeight[e][1]=a.y*r,this.lightHeight[e][2]=a.z*r,this.lightHeightId[e].setValue(this.lightHeight[e])}dispatchDirectLights(t,e,s){let i=0;const r=this.device.scope;for(let n=0;n<t.length;n++){if(!(t[n].mask&e))continue;const a=t[n],o=a._node.getWorldTransform();if(this.lightColorId[i]||this._resolveLight(r,i),this.lightColorId[i].setValue(a._colorLinear),o.getY(a._direction).mulScalar(-1),a._direction.normalize(),this.lightDir[i][0]=a._direction.x,this.lightDir[i][1]=a._direction.y,this.lightDir[i][2]=a._direction.z,this.lightDirId[i].setValue(this.lightDir[i]),a.shape!==Tt&&this.setLTCDirectionalLight(o,i,a._direction,s._node.getPosition(),s.farClip),a.castShadows){const h=a.getRenderData(s,0),d=a._getUniformBiasValues(h);this.lightShadowMapId[i].setValue(h.shadowBuffer),this.lightShadowMatrixId[i].setValue(h.shadowMatrix.data),this.shadowMatrixPaletteId[i].setValue(a._shadowMatrixPalette),this.shadowCascadeDistancesId[i].setValue(a._shadowCascadeDistances),this.shadowCascadeCountId[i].setValue(a.numCascades),this.shadowCascadeBlendId[i].setValue(1-a.cascadeBlend),this.lightShadowIntensity[i].setValue(a.shadowIntensity),this.lightSoftShadowParamsId[i].setValue(a._softShadowParams),h.shadowCamera.renderTarget&&this.lightShadowSearchAreaId[i].setValue(a.penumbraSize/h.shadowCamera.renderTarget.width*h.projectionCompensation);const f=a._shadowCameraParams;f.length=4,f[0]=0,f[1]=h.shadowCamera._farClip,f[2]=h.shadowCamera._nearClip,f[3]=1,this.lightCameraParamsId[i].setValue(f);const p=a._shadowRenderParams;p.length=4,p[0]=a._shadowResolution,p[1]=d.normalBias,p[2]=d.bias,p[3]=0,this.lightShadowParamsId[i].setValue(p)}i++}return i}setLTCPositionalLight(t,e){const s=t.transformVector(new A(-.5,0,0));this.lightWidth[e][0]=s.x,this.lightWidth[e][1]=s.y,this.lightWidth[e][2]=s.z,this.lightWidthId[e].setValue(this.lightWidth[e]);const i=t.transformVector(new A(0,0,.5));this.lightHeight[e][0]=i.x,this.lightHeight[e][1]=i.y,this.lightHeight[e][2]=i.z,this.lightHeightId[e].setValue(this.lightHeight[e])}dispatchOmniLight(t,e,s){const i=e._node.getWorldTransform();if(this.lightColorId[s]||this._resolveLight(t,s),this.lightRadiusId[s].setValue(e.attenuationEnd),this.lightColorId[s].setValue(e._colorLinear),i.getTranslation(e._position),this.lightPos[s][0]=e._position.x,this.lightPos[s][1]=e._position.y,this.lightPos[s][2]=e._position.z,this.lightPosId[s].setValue(this.lightPos[s]),e.shape!==Tt&&this.setLTCPositionalLight(i,s),e.castShadows){const r=e.getRenderData(null,0);this.lightShadowMapId[s].setValue(r.shadowBuffer);const n=e._getUniformBiasValues(r),a=e._shadowRenderParams;a.length=4,a[0]=e._shadowResolution,a[1]=n.normalBias,a[2]=n.bias,a[3]=1/e.attenuationEnd,this.lightShadowParamsId[s].setValue(a),this.lightShadowIntensity[s].setValue(e.shadowIntensity);const o=e.penumbraSize/r.shadowCamera.renderTarget.width;this.lightShadowSearchAreaId[s].setValue(o);const h=e._shadowCameraParams;h.length=4,h[0]=0,h[1]=r.shadowCamera._farClip,h[2]=r.shadowCamera._nearClip,h[3]=0,this.lightCameraParamsId[s].setValue(h)}e._cookie&&(this.lightCookieId[s].setValue(e._cookie),this.lightShadowMatrixId[s].setValue(i.data),this.lightCookieIntId[s].setValue(e.cookieIntensity))}dispatchSpotLight(t,e,s){const i=e._node.getWorldTransform();if(this.lightColorId[s]||this._resolveLight(t,s),this.lightInAngleId[s].setValue(e._innerConeAngleCos),this.lightOutAngleId[s].setValue(e._outerConeAngleCos),this.lightRadiusId[s].setValue(e.attenuationEnd),this.lightColorId[s].setValue(e._colorLinear),i.getTranslation(e._position),this.lightPos[s][0]=e._position.x,this.lightPos[s][1]=e._position.y,this.lightPos[s][2]=e._position.z,this.lightPosId[s].setValue(this.lightPos[s]),e.shape!==Tt&&this.setLTCPositionalLight(i,s),i.getY(e._direction).mulScalar(-1),e._direction.normalize(),this.lightDir[s][0]=e._direction.x,this.lightDir[s][1]=e._direction.y,this.lightDir[s][2]=e._direction.z,this.lightDirId[s].setValue(this.lightDir[s]),e.castShadows){const r=e.getRenderData(null,0);this.lightShadowMapId[s].setValue(r.shadowBuffer),this.lightShadowMatrixId[s].setValue(r.shadowMatrix.data);const n=e._getUniformBiasValues(r),a=e._shadowRenderParams;a.length=4,a[0]=e._shadowResolution,a[1]=n.normalBias,a[2]=n.bias,a[3]=1/e.attenuationEnd,this.lightShadowParamsId[s].setValue(a),this.lightShadowIntensity[s].setValue(e.shadowIntensity);const o=e.penumbraSize/r.shadowCamera.renderTarget.width,h=r.shadowCamera._fov*Math.PI/180,d=1/Math.tan(h/2);this.lightShadowSearchAreaId[s].setValue(o*d);const u=e._shadowCameraParams;u.length=4,u[0]=0,u[1]=r.shadowCamera._farClip,u[2]=r.shadowCamera._nearClip,u[3]=0,this.lightCameraParamsId[s].setValue(u)}if(e._cookie){if(!e.castShadows){const r=Ia.evalSpotCookieMatrix(e);this.lightShadowMatrixId[s].setValue(r.data)}this.lightCookieId[s].setValue(e._cookie),this.lightCookieIntId[s].setValue(e.cookieIntensity),e._cookieTransform&&(e._cookieTransformUniform[0]=e._cookieTransform.x,e._cookieTransformUniform[1]=e._cookieTransform.y,e._cookieTransformUniform[2]=e._cookieTransform.z,e._cookieTransformUniform[3]=e._cookieTransform.w,this.lightCookieMatrixId[s].setValue(e._cookieTransformUniform),e._cookieOffsetUniform[0]=e._cookieOffset.x,e._cookieOffsetUniform[1]=e._cookieOffset.y,this.lightCookieOffsetId[s].setValue(e._cookieOffsetUniform))}}dispatchLocalLights(t,e,s){let i=s;const r=this.device.scope,n=t[Le],a=n.length;for(let d=0;d<a;d++){const u=n[d];u.mask&e&&(this.dispatchOmniLight(r,u,i),i++)}const o=t[Fe],h=o.length;for(let d=0;d<h;d++){const u=o[d];u.mask&e&&(this.dispatchSpotLight(r,u,i),i++)}}renderForwardPrepareMaterials(t,e,s,i,r,n){const a=t.fog??this.scene.fog,o=t.shaderParams;o.fog=a.type,o.srgbRenderTarget=(e==null?void 0:e.isColorBufferSrgb(0))??!1;const h=(w,C,x,M)=>{wr.drawCalls.push(w),wr.shaderInstances.push(C),wr.isNewMaterial.push(x),wr.lightMaskChanged.push(M)};wr.clear();const d=this.device,u=this.scene,f=u.clusteredLightingEnabled,p=(r==null?void 0:r.getLightHash(f))??0;let m=null,_,g;const y=s.length;for(let w=0;w<y;w++){const C=s[w];if(t===vi.skipRenderCamera){if(vi._skipRenderCounter>=vi.skipRenderAfter)continue;vi._skipRenderCounter++}if(r){if(r._skipRenderCounter>=r.skipRenderAfter)continue;r._skipRenderCounter++}C.ensureMaterial(d);const x=C.material,M=C._shaderDefs,S=C.mask;x&&x===m&&M!==_&&(m=null),x!==m&&(this._materialSwitches++,x._scene=u,x.dirty&&(G.pushGpuMarker(d,`Node: ${C.node.name}, Material: ${x.name}`),x.updateUniforms(d,u),x.dirty=!1,G.popGpuMarker(d)));const v=C.getShaderInstance(n,p,u,o,this.viewUniformFormat,this.viewBindGroupFormat,i);h(C,v,x!==m,!m||S!==g),m=x,_=M,g=S}return wr}renderForwardInternal(t,e,s,i,r,n){const a=this.device,o=this.scene,h=1<<i,d=n?-1:1,u=o.clusteredLightingEnabled,f=e.drawCalls.length;for(let p=0;p<f;p++){const m=e.drawCalls[p],_=e.isNewMaterial[p],g=e.lightMaskChanged[p],y=e.shaderInstances[p],w=m.material,C=m.mask;if(_){if(a.setShader(y.shader,!1),w.setParameters(a),g){const T=this.dispatchDirectLights(s[le],C,t);u||this.dispatchLocalLights(s,C,T)}this.alphaTestId.setValue(w.alphaTest),a.setBlendState(w.blendState),a.setDepthState(w.depthState),a.setAlphaToCoverage(w.alphaToCoverage)}G.pushGpuMarker(a,`Node: ${m.node.name}, Material: ${w.name}`),this.setupCullMode(t._cullFaces,d,m);const x=m.stencilFront??w.stencilFront,M=m.stencilBack??w.stencilBack;a.setStencilState(x,M),m.setParameters(a,h),a.scope.resolve("meshInstanceId").setValue(m.id);const S=m.mesh;this.setVertexBuffers(a,S),this.setMorphing(a,m.morphInstance),this.setSkinning(a,m),this.setupMeshUniformBuffers(y,m);const v=m.renderStyle;if(a.setIndexBuffer(S.indexBuffer[v]),r==null||r(m,p),t.xr&&t.xr.session&&t.xr.views.list.length){const E=t.xr.views;for(let T=0;T<E.list.length;T++){const R=E.list[T];a.setViewport(R.viewport.x,R.viewport.y,R.viewport.z,R.viewport.w),this.projId.setValue(R.projMat.data),this.projSkyboxId.setValue(R.projMat.data),this.viewId.setValue(R.viewOffMat.data),this.viewInvId.setValue(R.viewInvOffMat.data),this.viewId3.setValue(R.viewMat3.data),this.viewProjId.setValue(R.projViewOffMat.data),this.viewPosId.setValue(R.positionData),this.viewIndexId.setValue(T),T===0?this.drawInstance(a,m,S,v,!0):this.drawInstance2(a,m,S,v),this._forwardDrawCalls++}}else this.drawInstance(a,m,S,v,!0),this._forwardDrawCalls++;p<f-1&&!e.isNewMaterial[p+1]&&w.setParameters(a,m.parameters),G.popGpuMarker(a)}}renderForward(t,e,s,i,r,n,a,o){const h=ae(),d=this.renderForwardPrepareMaterials(t,e,s,i,a,r);this.renderForwardInternal(t,d,i,r,n,o),wr.clear(),this._forwardTime+=ae()-h}renderForwardLayer(t,e,s,i,r,n,a={}){const{scene:o,device:h}=this,d=o.clusteredLightingEnabled;this.setupViewport(t,e);let u,f;if(s){const x=ae();s.sortVisible(t,i),this._sortTime+=ae()-x;const M=s.getCulledInstances(t);u=i?M.transparent:M.opaque,o.immediate.onPreRenderLayer(s,u,i),s.requiresLightCube&&(this.lightCube.update(o.ambientLight,s._lights),this.constantLightCube.setValue(this.lightCube.colors)),f=s.splitLights}else u=a.meshInstances,f=a.splitLights??OM;if(b.assert(u,"Either layer or options.meshInstances must be provided"),d){const x=a.lightClusters??this.worldClustersAllocator.empty;x.activate(),s&&!this.clustersDebugRendered&&o.lighting.debugLayer===s.id&&(this.clustersDebugRendered=!0,$u.render(x,this.scene))}o._activeCamera=t;const p=t.fog??this.scene.fog;this.setFogConstants(p);const m=this.setCameraUniforms(t,e);h.supportsUniformBuffers&&this.setupViewUniformBuffers(n,this.viewUniformFormat,this.viewBindGroupFormat,m);const _=a.clearColor??!1,g=a.clearDepth??!1,y=a.clearStencil??!1;(_||g||y)&&this.clear(t,_,g,y);const w=!!(t._flipFaces^(e==null?void 0:e.flipY)),C=this._forwardDrawCalls;this.renderForward(t,e,u,f,r,null,s,w),s&&(s._forwardDrawCalls+=this._forwardDrawCalls-C)}setFogConstants(t){if(t.type!==Ba){Xi.linear(t.color);const e=this.fogColor;e[0]=Xi.r,e[1]=Xi.g,e[2]=Xi.b,this.fogColorId.setValue(e),t.type===zb?(this.fogStartId.setValue(t.start),this.fogEndId.setValue(t.end)):this.fogDensityId.setValue(t.density)}}setSceneConstants(){const t=this.scene;this.dispatchGlobalLights(t);const e=this.device;this._screenSize[0]=e.width,this._screenSize[1]=e.height,this._screenSize[2]=1/e.width,this._screenSize[3]=1/e.height,this.screenSizeId.setValue(this._screenSize),this.pcssDiskSamplesId.setValue(this.pcssDiskSamples),this.pcssSphereSamplesId.setValue(this.pcssSphereSamples)}buildFrameGraph(t,e){const s=this.scene;if(t.reset(),s.clusteredLightingEnabled){const{shadowsEnabled:o,cookiesEnabled:h}=s.lighting;this._renderPassUpdateClustered.update(t,o,h,this.lights,this.localLights),t.addRenderPass(this._renderPassUpdateClustered)}else this._shadowRendererLocal.buildNonClusteredRenderPasses(t,this.localLights);let i=0,r=!0,n=null;const a=e._renderActions;for(let o=i;o<a.length;o++){const h=a[o],{layer:d,camera:u}=h;if(h.useCameraPasses)b.call(()=>{u.postEffects.effects.length>0&&b.warnOnce(`Camera '${u.entity.name}' uses render passes, which are not compatible with post-effects scripts. Rendering of the post-effects is ignored, but they should not be attached to the camera.`)}),u.camera.renderPasses.forEach(f=>{t.addRenderPass(f)});else{const f=d.id===es,p=f&&(u.renderSceneColorMap||u.renderSceneDepthMap);r&&(r=!1,i=o,n=h.renderTarget);const m=a[o+1],g=(m?!m.useCameraPasses&&m.layer.id===es:!1)&&(u.renderSceneColorMap||u.renderSceneDepthMap),y=m?m.firstCameraUse&&this.cameraDirShadowLights.has(m.camera.camera):!1;if(!m||m.renderTarget!==n||y||g||p){if(f&&i===o||this.addMainRenderPass(t,e,n,i,o),f){if(u.renderSceneColorMap){const C=u.camera.renderPassColorGrab;C.source=u.renderTarget,t.addRenderPass(C)}u.renderSceneDepthMap&&t.addRenderPass(u.camera.renderPassDepthGrab)}if(h.triggerPostprocess&&(u!=null&&u.onPostprocessing)){const C=new kM(this.device,this,h);t.addRenderPass(C)}r=!0}}}}addMainRenderPass(t,e,s,i,r){const n=new FM(this.device,e,this.scene,this);n.init(s);const a=e._renderActions;for(let o=i;o<=r;o++)n.addRenderAction(a[o]);t.addRenderPass(n)}update(t){this.frameUpdate(),this.shadowRenderer.frameUpdate(),this.scene._updateSkyMesh(),this.updateLayerComposition(t),this.collectLights(t),this.beginFrame(t),this.setSceneConstants(),this.cullComposition(t),this.gpuUpdate(this.processingMeshInstances)}};c(vi,"skipRenderCamera",null),c(vi,"_skipRenderCounter",0),c(vi,"skipRenderAfter",0);let Xh=vi,Hd=0;const Qa=[],Ul=new Set;function zM(l,t){return l.drawOrder-t.drawOrder}function UM(l,t){const e=l._key[Ii],s=t._key[Ii];return e===s&&l.mesh&&t.mesh?t.mesh.id-l.mesh.id:s-e}function VM(l,t){return t.zdist-l.zdist}function GM(l,t){return l.zdist-t.zdist}const HM=[null,zM,UM,VM,GM];class WM{constructor(){c(this,"opaque",[]);c(this,"transparent",[])}}class Fr{constructor(t={}){c(this,"meshInstances",[]);c(this,"meshInstancesSet",new Set);c(this,"shadowCasters",[]);c(this,"shadowCastersSet",new Set);c(this,"_visibleInstances",new WeakMap);c(this,"_lights",[]);c(this,"_lightsSet",new Set);c(this,"_clusteredLightsSet",new Set);c(this,"_splitLights",[[],[],[]]);c(this,"_splitLightsDirty",!0);c(this,"requiresLightCube",!1);c(this,"cameras",[]);c(this,"camerasSet",new Set);c(this,"_dirtyComposition",!1);t.id!==void 0?(this.id=t.id,Hd=Math.max(this.id+1,Hd)):this.id=Hd++,this.name=t.name,this._enabled=t.enabled??!0,this._refCounter=this._enabled?1:0,this.opaqueSortMode=t.opaqueSortMode??Qb,this.transparentSortMode=t.transparentSortMode??Nm,t.renderTarget&&(this.renderTarget=t.renderTarget),this._clearColorBuffer=!!t.clearColorBuffer,this._clearDepthBuffer=!!t.clearDepthBuffer,this._clearStencilBuffer=!!t.clearStencilBuffer,this.onEnable=t.onEnable,this.onDisable=t.onDisable,this._enabled&&this.onEnable&&this.onEnable(),this.customSortCallback=null,this.customCalculateSortValues=null,this._lightHash=0,this._lightHashDirty=!1,this._lightIdHash=0,this._lightIdHashDirty=!1,this.skipRenderAfter=Number.MAX_VALUE,this._skipRenderCounter=0,this._renderTime=0,this._forwardDrawCalls=0,this._shadowDrawCalls=0,this._shaderVersion=-1}set enabled(t){t!==this._enabled&&(this._dirtyComposition=!0,this._enabled=t,t?(this.incrementCounter(),this.onEnable&&this.onEnable()):(this.decrementCounter(),this.onDisable&&this.onDisable()))}get enabled(){return this._enabled}set clearColorBuffer(t){this._clearColorBuffer=t,this._dirtyComposition=!0}get clearColorBuffer(){return this._clearColorBuffer}set clearDepthBuffer(t){this._clearDepthBuffer=t,this._dirtyComposition=!0}get clearDepthBuffer(){return this._clearDepthBuffer}set clearStencilBuffer(t){this._clearStencilBuffer=t,this._dirtyComposition=!0}get clearStencilBuffer(){return this._clearStencilBuffer}get hasClusteredLights(){return this._clusteredLightsSet.size>0}get clusteredLightsSet(){return this._clusteredLightsSet}incrementCounter(){this._refCounter===0&&(this._enabled=!0,this.onEnable&&this.onEnable()),this._refCounter++}decrementCounter(){if(this._refCounter===1)this._enabled=!1,this.onDisable&&this.onDisable();else if(this._refCounter===0){b.warn("Trying to decrement layer counter below 0");return}this._refCounter--}addMeshInstances(t,e){const s=this.meshInstances,i=this.meshInstancesSet;for(let r=0;r<t.length;r++){const n=t[r];i.has(n)||(s.push(n),i.add(n),Ul.add(n.material))}if(e||this.addShadowCasters(t),Ul.size>0){const r=this._shaderVersion;Ul.forEach(n=>{r>=0&&n._shaderVersion!==r&&(n.getShaderVariant!==Sn.prototype.getShaderVariant&&n.clearVariants(),n._shaderVersion=r)}),Ul.clear()}}removeMeshInstances(t,e){const s=this.meshInstances,i=this.meshInstancesSet;for(let r=0;r<t.length;r++){const n=t[r];if(i.has(n)){i.delete(n);const a=s.indexOf(n);a>=0&&s.splice(a,1)}}e||this.removeShadowCasters(t)}addShadowCasters(t){const e=this.shadowCasters,s=this.shadowCastersSet;for(let i=0;i<t.length;i++){const r=t[i];r.castShadow&&!s.has(r)&&(s.add(r),e.push(r))}}removeShadowCasters(t){const e=this.shadowCasters,s=this.shadowCastersSet;for(let i=0;i<t.length;i++){const r=t[i];if(s.has(r)){s.delete(r);const n=e.indexOf(r);n>=0&&e.splice(n,1)}}}clearMeshInstances(t=!1){this.meshInstances.length=0,this.meshInstancesSet.clear(),t||(this.shadowCasters.length=0,this.shadowCastersSet.clear())}markLightsDirty(){this._lightHashDirty=!0,this._lightIdHashDirty=!0,this._splitLightsDirty=!0}hasLight(t){return this._lightsSet.has(t)}addLight(t){const e=t.light;this._lightsSet.has(e)||(this._lightsSet.add(e),this._lights.push(e),this.markLightsDirty()),e.type!==le&&this._clusteredLightsSet.add(e)}removeLight(t){const e=t.light;this._lightsSet.has(e)&&(this._lightsSet.delete(e),this._lights.splice(this._lights.indexOf(e),1),this.markLightsDirty()),e.type!==le&&this._clusteredLightsSet.delete(e)}clearLights(){this._lightsSet.forEach(t=>t.removeLayer(this)),this._lightsSet.clear(),this._clusteredLightsSet.clear(),this._lights.length=0,this.markLightsDirty()}get splitLights(){if(this._splitLightsDirty){this._splitLightsDirty=!1;const t=this._splitLights;for(let s=0;s<t.length;s++)t[s].length=0;const e=this._lights;for(let s=0;s<e.length;s++){const i=e[s];i.enabled&&t[i._type].push(i)}for(let s=0;s<t.length;s++)t[s].sort((i,r)=>i.key-r.key)}return this._splitLights}evaluateLightHash(t,e,s){let i=0;const r=this._lights;for(let n=0;n<r.length;n++){const a=r[n].type!==le;(t&&a||e&&!a)&&Qa.push(s?r[n].id:r[n].key)}return Qa.length>0&&(Qa.sort(),i=Qy(Qa),Qa.length=0),i}getLightHash(t){return this._lightHashDirty&&(this._lightHashDirty=!1,this._lightHash=this.evaluateLightHash(!t,!0,!1)),this._lightHash}getLightIdHash(){return this._lightIdHashDirty&&(this._lightIdHashDirty=!1,this._lightIdHash=this.evaluateLightHash(!0,!1,!0)),this._lightIdHash}addCamera(t){this.camerasSet.has(t.camera)||(this.camerasSet.add(t.camera),this.cameras.push(t),this._dirtyComposition=!0)}removeCamera(t){if(this.camerasSet.has(t.camera)){this.camerasSet.delete(t.camera);const e=this.cameras.indexOf(t);this.cameras.splice(e,1),this._dirtyComposition=!0}}clearCameras(){this.cameras.length=0,this.camerasSet.clear(),this._dirtyComposition=!0}_calculateSortDistances(t,e,s,i){for(let r=0;r<e;r++){const n=t[r];if(n.layer<=Vb)continue;if(n.calculateSortDistance){n.zdist=n.calculateSortDistance(n,s,i);continue}const a=n.aabb.center,o=a.x-s.x,h=a.y-s.y,d=a.z-s.z;n.zdist=o*i.x+h*i.y+d*i.z}}getCulledInstances(t){let e=this._visibleInstances.get(t);return e||(e=new WM,this._visibleInstances.set(t,e)),e}sortVisible(t,e){const s=e?this.transparentSortMode:this.opaqueSortMode;if(s===_h)return;const i=this.getCulledInstances(t),r=e?i.transparent:i.opaque,n=t.node;if(s===ew){const a=n.getPosition(),o=n.forward;this.customCalculateSortValues&&this.customCalculateSortValues(r,r.length,a,o),this.customSortCallback&&r.sort(this.customSortCallback)}else{if(s===Nm||s===Jb){const a=n.getPosition(),o=n.forward;this._calculateSortDistances(r,r.length,a,o)}r.sort(HM[s])}}}const $M=(l,t)=>l.priority-t.priority,Go=l=>l.sort($M);class v_ extends de{constructor(e="Untitled"){super();c(this,"layerList",[]);c(this,"layerIdMap",new Map);c(this,"layerNameMap",new Map);c(this,"layerOpaqueIndexMap",new Map);c(this,"layerTransparentIndexMap",new Map);c(this,"subLayerList",[]);c(this,"subLayerEnabled",[]);c(this,"cameras",[]);c(this,"_renderActions",[]);c(this,"_dirty",!1);this.name=e,this._opaqueOrder={},this._transparentOrder={}}destroy(){this.destroyRenderActions()}destroyRenderActions(){this._renderActions.forEach(e=>e.destroy()),this._renderActions.length=0}_update(){const e=this.layerList.length;if(!this._dirty){for(let s=0;s<e;s++)if(this.layerList[s]._dirtyComposition){this._dirty=!0;break}}if(this._dirty){this._dirty=!1,this.cameras.length=0;for(let i=0;i<e;i++){const r=this.layerList[i];r._dirtyComposition=!1;for(let n=0;n<r.cameras.length;n++){const a=r.cameras[n];this.cameras.indexOf(a)<0&&this.cameras.push(a)}}this.cameras.length>1&&Go(this.cameras);let s=0;this.destroyRenderActions();for(let i=0;i<this.cameras.length;i++){const r=this.cameras[i];if(r.camera.renderPasses.length>0){this.addDummyRenderAction(s,r),s++;continue}let n=!0;const a=s;let o=null,h=!1;for(let d=0;d<e;d++){const u=this.layerList[d];if(u.enabled&&this.subLayerEnabled[d]&&u.cameras.length>0&&r.layers.indexOf(u.id)>=0){!h&&u.id===r.disablePostEffectsLayer&&(h=!0,o&&(o.triggerPostprocess=!0));const p=this.subLayerList[d];o=this.addRenderAction(s,u,p,r,n,h),s++,n=!1}}a<s&&(o.lastCameraUse=!0),!h&&o&&(o.triggerPostprocess=!0),r.renderTarget&&r.postEffectsEnabled&&this.propagateRenderTarget(a-1,r)}this._logRenderActions()}}getNextRenderAction(e){b.assert(this._renderActions.length===e);const s=new L0;return this._renderActions.push(s),s}addDummyRenderAction(e,s){const i=this.getNextRenderAction(e);i.camera=s,i.useCameraPasses=!0}addRenderAction(e,s,i,r,n,a){let o=s.id!==es?r.renderTarget:null,h=!1;const d=this._renderActions;for(let m=e-1;m>=0;m--)if(d[m].camera===r&&d[m].renderTarget===o){h=!0;break}a&&r.postEffectsEnabled&&(o=null);const u=this.getNextRenderAction(e);u.triggerPostprocess=!1,u.layer=s,u.transparent=i,u.camera=r,u.renderTarget=o,u.firstCameraUse=n,u.lastCameraUse=!1;const f=n||!h,p=s.clearColorBuffer||s.clearDepthBuffer||s.clearStencilBuffer;return(f||p)&&u.setupClears(f?r:void 0,s),u}propagateRenderTarget(e,s){for(let i=e;i>=0;i--){const r=this._renderActions[i],n=r.layer;if(r.renderTarget&&n.id!==es)break;if(n.id===es)continue;if(r.useCameraPasses)break;const a=r==null?void 0:r.camera.camera;if(a&&(!s.camera.rect.equals(a.rect)||!s.camera.scissorRect.equals(a.scissorRect)))break;r.renderTarget=s.renderTarget}}_logRenderActions(){if(Qs.get(xl)){b.trace(xl,`Render Actions for composition: ${this.name}`);for(let e=0;e<this._renderActions.length;e++){const s=this._renderActions[e],i=s.camera;if(s.useCameraPasses)b.trace(xl,`${e}CustomPasses Cam: ${i?i.entity.name:"-"}`);else{const r=s.layer,n=r.enabled&&this.isEnabled(r,s.transparent),a=(s.clearColor?"Color ":"..... ")+(s.clearDepth?"Depth ":"..... ")+(s.clearStencil?"Stencil":".......");b.trace(xl,`${e+` Cam: ${i?i.entity.name:"-"}`.padEnd(22," ")+` Lay: ${r.name}`.padEnd(22," ")+(s.transparent?" TRANSP":" OPAQUE")+(n?" ENABLED ":" DISABLED")+` RT: ${s.renderTarget?s.renderTarget.name:"-"}`.padEnd(30," ")} Clear: ${a}${s.firstCameraUse?" CAM-FIRST":""}${s.lastCameraUse?" CAM-LAST":""}${s.triggerPostprocess?" POSTPROCESS":""}`)}}}}_isLayerAdded(e){const s=this.layerIdMap.get(e.id)===e;return b.assert(!s,`Layer is already added: ${e.name}`),s}_isSublayerAdded(e,s){return(s?this.layerTransparentIndexMap:this.layerOpaqueIndexMap).get(e)!==void 0?(b.error(`Sublayer ${e.name}, transparent: ${s} is already added.`),!0):!1}push(e){this._isLayerAdded(e)||(this.layerList.push(e),this.layerList.push(e),this._opaqueOrder[e.id]=this.subLayerList.push(!1)-1,this._transparentOrder[e.id]=this.subLayerList.push(!0)-1,this.subLayerEnabled.push(!0),this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",e))}insert(e,s){if(this._isLayerAdded(e))return;this.layerList.splice(s,0,e,e),this.subLayerList.splice(s,0,!1,!0);const i=this.layerList.length;this._updateOpaqueOrder(s,i-1),this._updateTransparentOrder(s,i-1),this.subLayerEnabled.splice(s,0,!0,!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",e)}remove(e){let s=this.layerList.indexOf(e);for(delete this._opaqueOrder[s],delete this._transparentOrder[s];s>=0;)this.layerList.splice(s,1),this.subLayerList.splice(s,1),this.subLayerEnabled.splice(s,1),s=this.layerList.indexOf(e),this._dirty=!0,this.fire("remove",e);const i=this.layerList.length;this._updateOpaqueOrder(0,i-1),this._updateTransparentOrder(0,i-1),this._updateLayerMaps()}pushOpaque(e){this._isSublayerAdded(e,!1)||(this.layerList.push(e),this._opaqueOrder[e.id]=this.subLayerList.push(!1)-1,this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",e))}insertOpaque(e,s){if(this._isSublayerAdded(e,!1))return;this.layerList.splice(s,0,e),this.subLayerList.splice(s,0,!1);const i=this.subLayerList.length;this._updateOpaqueOrder(s,i-1),this.subLayerEnabled.splice(s,0,!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",e)}removeOpaque(e){for(let s=0,i=this.layerList.length;s<i;s++)if(this.layerList[s]===e&&!this.subLayerList[s]){this.layerList.splice(s,1),this.subLayerList.splice(s,1),i--,this._updateOpaqueOrder(s,i-1),this.subLayerEnabled.splice(s,1),this._dirty=!0,this.layerList.indexOf(e)<0&&this.fire("remove",e);break}this._updateLayerMaps()}pushTransparent(e){this._isSublayerAdded(e,!0)||(this.layerList.push(e),this._transparentOrder[e.id]=this.subLayerList.push(!0)-1,this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",e))}insertTransparent(e,s){if(this._isSublayerAdded(e,!0))return;this.layerList.splice(s,0,e),this.subLayerList.splice(s,0,!0);const i=this.subLayerList.length;this._updateTransparentOrder(s,i-1),this.subLayerEnabled.splice(s,0,!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",e)}removeTransparent(e){for(let s=0,i=this.layerList.length;s<i;s++)if(this.layerList[s]===e&&this.subLayerList[s]){this.layerList.splice(s,1),this.subLayerList.splice(s,1),i--,this._updateTransparentOrder(s,i-1),this.subLayerEnabled.splice(s,1),this._dirty=!0,this.layerList.indexOf(e)<0&&this.fire("remove",e);break}this._updateLayerMaps()}getOpaqueIndex(e){return this.layerOpaqueIndexMap.get(e)??-1}getTransparentIndex(e){return this.layerTransparentIndexMap.get(e)??-1}isEnabled(e,s){if(e.enabled){const i=s?this.getTransparentIndex(e):this.getOpaqueIndex(e);if(i>=0)return this.subLayerEnabled[i]}return!1}_updateLayerMaps(){this.layerIdMap.clear(),this.layerNameMap.clear(),this.layerOpaqueIndexMap.clear(),this.layerTransparentIndexMap.clear();for(let e=0;e<this.layerList.length;e++){const s=this.layerList[e];this.layerIdMap.set(s.id,s),this.layerNameMap.set(s.name,s),(this.subLayerList[e]?this.layerTransparentIndexMap:this.layerOpaqueIndexMap).set(s,e)}}getLayerById(e){return this.layerIdMap.get(e)??null}getLayerByName(e){return this.layerNameMap.get(e)??null}_updateOpaqueOrder(e,s){for(let i=e;i<=s;i++)this.subLayerList[i]===!1&&(this._opaqueOrder[this.layerList[i].id]=i)}_updateTransparentOrder(e,s){for(let i=e;i<=s;i++)this.subLayerList[i]===!0&&(this._transparentOrder[this.layerList[i].id]=i)}_sortLayersDescending(e,s,i){let r=-1,n=-1;for(let a=0,o=e.length;a<o;a++){const h=e[a];i.hasOwnProperty(h)&&(r=Math.max(r,i[h]))}for(let a=0,o=s.length;a<o;a++){const h=s[a];i.hasOwnProperty(h)&&(n=Math.max(n,i[h]))}return r===-1&&n!==-1?1:n===-1&&r!==-1?-1:n-r}sortTransparentLayers(e,s){return this._sortLayersDescending(e,s,this._transparentOrder)}sortOpaqueLayers(e,s){return this._sortLayersDescending(e,s,this._opaqueOrder)}}const Vl=new A,ai={bias:0,normalBias:0},Ja=new Y,Wd={r:0,g:1,b:2,a:3},qu={directional:le,omni:Le,point:Le,spot:Fe},qM=[[new ee(0,0,1,1)],[new ee(0,0,.5,.5),new ee(0,.5,.5,.5)],[new ee(0,0,.5,.5),new ee(0,.5,.5,.5),new ee(.5,0,.5,.5)],[new ee(0,0,.5,.5),new ee(0,.5,.5,.5),new ee(.5,0,.5,.5),new ee(.5,.5,.5,.5)]];let XM=0;class jM{constructor(t,e,s){this.light=s,this.camera=t,this.shadowCamera=D0.createShadowCamera(s._shadowType,s._type,e),this.shadowMatrix=new q,this.shadowViewport=new ee(0,0,1,1),this.shadowScissor=new ee(0,0,1,1),this.projectionCompensation=0,this.face=e,this.visibleCasters=[],this.viewBindGroups=[]}destroy(){this.viewBindGroups.forEach(t=>{t.defaultUniformBuffer.destroy(),t.destroy()}),this.viewBindGroups.length=0}get shadowBuffer(){const t=this.shadowCamera.renderTarget;return t?this.light._isPcf?t.depthBuffer:t.colorBuffer:null}}class Ho{constructor(t,e){c(this,"layers",new Set);c(this,"clusteredLighting");c(this,"shadowDepthState",us.DEFAULT.clone());this.device=t,this.clusteredLighting=e,this.id=XM++,this._type=le,this._color=new Y(.8,.8,.8),this._intensity=1,this._affectSpecularity=!0,this._luminance=0,this._castShadows=!1,this._enabled=!1,this._mask=ms,this.isStatic=!1,this.key=0,this.bakeDir=!0,this.bakeNumSamples=1,this.bakeArea=0,this.attenuationStart=10,this.attenuationEnd=10,this._falloffMode=Cp,this._shadowType=zt,this._vsmBlurSize=11,this.vsmBlurMode=Mp,this.vsmBias=.01*.25,this._cookie=null,this.cookieIntensity=1,this._cookieFalloff=!0,this._cookieChannel="rgb",this._cookieTransform=null,this._cookieTransformUniform=new Float32Array(4),this._cookieOffset=null,this._cookieOffsetUniform=new Float32Array(2),this._cookieTransformSet=!1,this._cookieOffsetSet=!1,this._innerConeAngle=40,this._outerConeAngle=45,this.cascades=null,this._shadowMatrixPalette=null,this._shadowCascadeDistances=null,this.numCascades=1,this._cascadeBlend=0,this.cascadeDistribution=.5,this._shape=Tt,this._colorLinear=new Float32Array(3),this._updateLinearColor(),this._position=new A(0,0,0),this._direction=new A(0,0,0),this._innerConeAngleCos=Math.cos(this._innerConeAngle*Math.PI/180),this._updateOuterAngle(this._outerConeAngle),this._usePhysicalUnits=void 0,this._shadowMap=null,this._shadowRenderParams=[],this._shadowCameraParams=[],this.shadowDistance=40,this._shadowResolution=1024,this._shadowBias=-5e-4,this.shadowIntensity=1,this._normalOffsetBias=0,this.shadowUpdateMode=Lp,this.shadowUpdateOverrides=null,this._isVsm=!1,this._isPcf=!0,this._softShadowParams=new Float32Array(4),this.shadowSamples=16,this.shadowBlockerSamples=16,this.penumbraSize=1,this.penumbraFalloff=1,this._cookieMatrix=null,this._atlasViewport=null,this.atlasViewportAllocated=!1,this.atlasVersion=0,this.atlasSlotIndex=0,this.atlasSlotUpdated=!1,this._node=null,this._renderData=[],this.visibleThisFrame=!1,this.maxScreenSize=0,this._updateShadowBias()}destroy(){this._destroyShadowMap(),this.releaseRenderData(),this._renderData=null}releaseRenderData(){if(this._renderData){for(let t=0;t<this._renderData.length;t++)this._renderData[t].destroy();this._renderData.length=0}}addLayer(t){this.layers.add(t)}removeLayer(t){this.layers.delete(t)}set shadowSamples(t){this._softShadowParams[0]=t}get shadowSamples(){return this._softShadowParams[0]}set shadowBlockerSamples(t){this._softShadowParams[1]=t}get shadowBlockerSamples(){return this._softShadowParams[1]}set shadowBias(t){this._shadowBias!==t&&(this._shadowBias=t,this._updateShadowBias())}get shadowBias(){return this._shadowBias}set numCascades(t){(!this.cascades||this.numCascades!==t)&&(this.cascades=qM[t-1],this._shadowMatrixPalette=new Float32Array(4*16),this._shadowCascadeDistances=new Float32Array(4),this._destroyShadowMap(),this.updateKey())}get numCascades(){return this.cascades.length}set cascadeBlend(t){this._cascadeBlend!==t&&(this._cascadeBlend=t,this.updateKey())}get cascadeBlend(){return this._cascadeBlend}set shadowMap(t){this._shadowMap!==t&&(this._destroyShadowMap(),this._shadowMap=t)}get shadowMap(){return this._shadowMap}set mask(t){this._mask!==t&&(this._mask=t,this.updateKey())}get mask(){return this._mask}get numShadowFaces(){const t=this._type;return t===le?this.numCascades:t===Le?6:1}set type(t){if(this._type===t)return;this._type=t,this._destroyShadowMap(),this._updateShadowBias(),this.updateKey();const e=this._shadowType;this._shadowType=null,this.shadowUpdateOverrides=null,this.shadowType=e}get type(){return this._type}set shape(t){if(this._shape===t)return;this._shape=t,this._destroyShadowMap(),this.updateKey();const e=this._shadowType;this._shadowType=null,this.shadowType=e}get shape(){return this._shape}set usePhysicalUnits(t){this._usePhysicalUnits!==t&&(this._usePhysicalUnits=t,this._updateLinearColor())}get usePhysicalUnits(){return this._usePhysicalUnits}set shadowType(t){if(this._shadowType===t)return;const e=this.device;t===Rs&&!e.textureFloatRenderable&&!e.textureHalfFloatRenderable&&(t=zt),this._type===Le&&t!==Gh&&t!==zt&&t!==Hh&&t!==Wh&&t!==Rs&&(t=zt),t===$r&&(!e.textureFloatRenderable||!e.textureFloatFilterable)&&(t=Wr),t===Wr&&!e.textureHalfFloatRenderable&&(t=zt);const s=nr.get(t);this._isVsm=(s==null?void 0:s.vsm)??!1,this._isPcf=(s==null?void 0:s.pcf)??!1,this._shadowType=t,this._destroyShadowMap(),this.updateKey()}get shadowType(){return this._shadowType}set enabled(t){this._enabled!==t&&(this._enabled=t,this.layersDirty())}get enabled(){return this._enabled}set castShadows(t){this._castShadows!==t&&(this._castShadows=t,this._destroyShadowMap(),this.layersDirty(),this.updateKey())}get castShadows(){return this._castShadows&&this._mask!==ar&&this._mask!==0}get bakeShadows(){return this._castShadows&&this._mask===ar}set shadowResolution(t){this._shadowResolution!==t&&(this._type===Le?t=Math.min(t,this.device.maxCubeMapSize):t=Math.min(t,this.device.maxTextureSize),this._shadowResolution=t,this._destroyShadowMap())}get shadowResolution(){return this._shadowResolution}set vsmBlurSize(t){this._vsmBlurSize!==t&&(t%2===0&&t++,this._vsmBlurSize=t)}get vsmBlurSize(){return this._vsmBlurSize}set normalOffsetBias(t){if(this._normalOffsetBias!==t){const e=!this._normalOffsetBias&&t||this._normalOffsetBias&&!t;this._normalOffsetBias=t,e&&this.updateKey()}}get normalOffsetBias(){return this._normalOffsetBias}set falloffMode(t){this._falloffMode!==t&&(this._falloffMode=t,this.updateKey())}get falloffMode(){return this._falloffMode}set innerConeAngle(t){this._innerConeAngle!==t&&(this._innerConeAngle=t,this._innerConeAngleCos=Math.cos(t*Math.PI/180),this._usePhysicalUnits&&this._updateLinearColor())}get innerConeAngle(){return this._innerConeAngle}set outerConeAngle(t){this._outerConeAngle!==t&&(this._outerConeAngle=t,this._updateOuterAngle(t),this._usePhysicalUnits&&this._updateLinearColor())}get outerConeAngle(){return this._outerConeAngle}set penumbraSize(t){this._penumbraSize=t,this._softShadowParams[2]=t}get penumbraSize(){return this._penumbraSize}set penumbraFalloff(t){this._softShadowParams[3]=t}get penumbraFalloff(){return this._softShadowParams[3]}_updateOuterAngle(t){const e=t*Math.PI/180;this._outerConeAngleCos=Math.cos(e),this._outerConeAngleSin=Math.sin(e)}set intensity(t){this._intensity!==t&&(this._intensity=t,this._updateLinearColor())}get intensity(){return this._intensity}set affectSpecularity(t){this._type===le&&(this._affectSpecularity=t,this.updateKey())}get affectSpecularity(){return this._affectSpecularity}set luminance(t){this._luminance!==t&&(this._luminance=t,this._updateLinearColor())}get luminance(){return this._luminance}get cookieMatrix(){return this._cookieMatrix||(this._cookieMatrix=new q),this._cookieMatrix}get atlasViewport(){return this._atlasViewport||(this._atlasViewport=new ee(0,0,1,1)),this._atlasViewport}set cookie(t){this._cookie!==t&&(this._cookie=t,this.updateKey())}get cookie(){return this._cookie}set cookieFalloff(t){this._cookieFalloff!==t&&(this._cookieFalloff=t,this.updateKey())}get cookieFalloff(){return this._cookieFalloff}set cookieChannel(t){if(this._cookieChannel!==t){if(t.length<3){const e=t.charAt(t.length-1),s=3-t.length;for(let i=0;i<s;i++)t+=e}this._cookieChannel=t,this.updateKey()}}get cookieChannel(){return this._cookieChannel}set cookieTransform(t){this._cookieTransform!==t&&(this._cookieTransform=t,this._cookieTransformSet=!!t,t&&!this._cookieOffset&&(this.cookieOffset=new W,this._cookieOffsetSet=!1),this.updateKey())}get cookieTransform(){return this._cookieTransform}set cookieOffset(t){if(this._cookieOffset===t)return;!!(this._cookieTransformSet||t)&&!t&&this._cookieOffset?this._cookieOffset.set(0,0):this._cookieOffset=t,this._cookieOffsetSet=!!t,t&&!this._cookieTransform&&(this.cookieTransform=new ee(1,1,0,0),this._cookieTransformSet=!1),this.updateKey()}get cookieOffset(){return this._cookieOffset}beginFrame(){this.visibleThisFrame=this._type===le&&this._enabled,this.maxScreenSize=0,this.atlasViewportAllocated=!1,this.atlasSlotUpdated=!1}_destroyShadowMap(){if(this.releaseRenderData(),this._shadowMap&&(this._shadowMap.cached||this._shadowMap.destroy(),this._shadowMap=null),this.shadowUpdateMode===ks&&(this.shadowUpdateMode=un),this.shadowUpdateOverrides)for(let t=0;t<this.shadowUpdateOverrides.length;t++)this.shadowUpdateOverrides[t]===ks&&(this.shadowUpdateOverrides[t]=un)}getRenderData(t,e){for(let i=0;i<this._renderData.length;i++){const r=this._renderData[i];if(r.camera===t&&r.face===e)return r}const s=new jM(t,e,this);return this._renderData.push(s),s}clone(){const t=new Ho(this.device,this.clusteredLighting);return t.type=this._type,t.setColor(this._color),t.intensity=this._intensity,t.affectSpecularity=this._affectSpecularity,t.luminance=this._luminance,t.castShadows=this.castShadows,t._enabled=this._enabled,t.attenuationStart=this.attenuationStart,t.attenuationEnd=this.attenuationEnd,t.falloffMode=this._falloffMode,t.shadowType=this._shadowType,t.vsmBlurSize=this._vsmBlurSize,t.vsmBlurMode=this.vsmBlurMode,t.vsmBias=this.vsmBias,t.shadowUpdateMode=this.shadowUpdateMode,t.mask=this.mask,this.shadowUpdateOverrides&&(t.shadowUpdateOverrides=this.shadowUpdateOverrides.slice()),t.innerConeAngle=this._innerConeAngle,t.outerConeAngle=this._outerConeAngle,t.numCascades=this.numCascades,t.cascadeDistribution=this.cascadeDistribution,t.cascadeBlend=this._cascadeBlend,t.shape=this._shape,t.shadowDepthState.copy(this.shadowDepthState),t.shadowBias=this.shadowBias,t.normalOffsetBias=this._normalOffsetBias,t.shadowResolution=this._shadowResolution,t.shadowDistance=this.shadowDistance,t.shadowIntensity=this.shadowIntensity,t.shadowSamples=this.shadowSamples,t.shadowBlockerSamples=this.shadowBlockerSamples,t.penumbraSize=this.penumbraSize,t.penumbraFalloff=this.penumbraFalloff,t}static getLightUnitConversion(t,e=Math.PI/4,s=0){switch(t){case Fe:{const i=Math.cos(e),r=Math.cos(s);return 2*Math.PI*(1-r+(r-i)/2)}case Le:return 4*Math.PI;case le:return 1}}_getUniformBiasValues(t){const e=t.shadowCamera._farClip;switch(this._type){case Le:ai.bias=this.shadowBias,ai.normalBias=this._normalOffsetBias;break;case Fe:this._isVsm?ai.bias=-1e-5*20:ai.bias=this.shadowBias*20,ai.normalBias=this._isVsm?this.vsmBias/(this.attenuationEnd/7):this._normalOffsetBias;break;case le:this._isVsm?ai.bias=-1e-5*20:ai.bias=this.shadowBias/e*100,ai.normalBias=this._isVsm?this.vsmBias/(e/7):this._normalOffsetBias;break}return ai}getColor(){return this._color}getBoundingSphere(t){if(this._type===Fe){const e=this.attenuationEnd,s=this._outerConeAngle,i=this._outerConeAngleCos,r=this._node;Vl.copy(r.up),s>45?(t.radius=e*this._outerConeAngleSin,Vl.mulScalar(-e*i)):(t.radius=e/(2*i),Vl.mulScalar(-t.radius)),t.center.add2(r.getPosition(),Vl)}else this._type===Le&&(t.center=this._node.getPosition(),t.radius=this.attenuationEnd)}getBoundingBox(t){if(this._type===Fe){const e=this.attenuationEnd,s=this._outerConeAngle,i=this._node,r=Math.abs(Math.sin(s*z.DEG_TO_RAD)*e);t.center.set(0,-e*.5,0),t.halfExtents.set(r,e*.5,r),t.setFromTransformedAabb(t,i.getWorldTransform(),!0)}else this._type===Le&&(t.center.copy(this._node.getPosition()),t.halfExtents.set(this.attenuationEnd,this.attenuationEnd,this.attenuationEnd))}_updateShadowBias(){if(this._type===Le&&!this.clusteredLighting)this.shadowDepthState.depthBias=0,this.shadowDepthState.depthBiasSlope=0;else{const t=this.shadowBias*-1e3;this.shadowDepthState.depthBias=t,this.shadowDepthState.depthBiasSlope=t}}_updateLinearColor(){let t=this._intensity;this._usePhysicalUnits&&(t=this._luminance/Ho.getLightUnitConversion(this._type,this._outerConeAngle*z.DEG_TO_RAD,this._innerConeAngle*z.DEG_TO_RAD));const e=this._color,s=this._colorLinear;t>=1?Ja.linear(e).mulScalar(t):Ja.copy(e).mulScalar(t).linear(),s[0]=Ja.r,s[1]=Ja.g,s[2]=Ja.b}setColor(){arguments.length===1?this._color.set(arguments[0].r,arguments[0].g,arguments[0].b):arguments.length===3&&this._color.set(arguments[0],arguments[1],arguments[2]),this._updateLinearColor()}layersDirty(){this.layers.forEach(t=>{t.hasLight(this)&&t.markLightsDirty()})}updateKey(){let t=this._type<<29|this._shadowType<<25|this._falloffMode<<23|(this._normalOffsetBias!==0?1:0)<<22|(this._cookie?1:0)<<21|(this._cookieFalloff?1:0)<<20|Wd[this._cookieChannel.charAt(0)]<<18|(this._cookieTransform?1:0)<<12|this._shape<<10|(this.numCascades>0?1:0)<<9|(this._cascadeBlend>0?1:0)<<8|(this.affectSpecularity?1:0)<<7|this.mask<<6|(this._castShadows?1:0)<<3;this._cookieChannel.length===3&&(t|=Wd[this._cookieChannel.charAt(1)]<<16,t|=Wd[this._cookieChannel.charAt(2)]<<14),t!==this.key&&this.layersDirty(),this.key=t}}class F0{constructor(t,e,s){c(this,"_areaLightsEnabled",!1);c(this,"_cells",new A(10,3,10));c(this,"_maxLightsPerCell",255);c(this,"_shadowsEnabled",!0);c(this,"_shadowType",zt);c(this,"_shadowAtlasResolution",2048);c(this,"_cookiesEnabled",!1);c(this,"_cookieAtlasResolution",2048);c(this,"debugLayer");c(this,"atlasSplit",null);this._supportsAreaLights=t,this._maxTextureSize=e,this._dirtyLightsFnc=s}applySettings(t){this.shadowsEnabled=t.lightingShadowsEnabled??this.shadowsEnabled,this.cookiesEnabled=t.lightingCookiesEnabled??this.cookiesEnabled,this.areaLightsEnabled=t.lightingAreaLightsEnabled??this.areaLightsEnabled,this.shadowAtlasResolution=t.lightingShadowAtlasResolution??this.shadowAtlasResolution,this.cookieAtlasResolution=t.lightingCookieAtlasResolution??this.cookieAtlasResolution,this.maxLightsPerCell=t.lightingMaxLightsPerCell??this.maxLightsPerCell,this.shadowType=t.lightingShadowType??this.shadowType,t.lightingCells&&(this.cell=new A(t.lightingCells))}set cells(t){this._cells.copy(t)}get cells(){return this._cells}set maxLightsPerCell(t){this._maxLightsPerCell=z.clamp(t,1,255)}get maxLightsPerCell(){return this._maxLightsPerCell}set cookieAtlasResolution(t){this._cookieAtlasResolution=z.clamp(t,32,this._maxTextureSize)}get cookieAtlasResolution(){return this._cookieAtlasResolution}set shadowAtlasResolution(t){this._shadowAtlasResolution=z.clamp(t,32,this._maxTextureSize)}get shadowAtlasResolution(){return this._shadowAtlasResolution}set shadowType(t){this._shadowType!==t&&(this._shadowType=t,this._dirtyLightsFnc())}get shadowType(){return this._shadowType}set cookiesEnabled(t){this._cookiesEnabled!==t&&(this._cookiesEnabled=t,this._dirtyLightsFnc())}get cookiesEnabled(){return this._cookiesEnabled}set areaLightsEnabled(t){this._supportsAreaLights&&this._areaLightsEnabled!==t&&(this._areaLightsEnabled=t,this._dirtyLightsFnc())}get areaLightsEnabled(){return this._areaLightsEnabled}set shadowsEnabled(t){this._shadowsEnabled!==t&&(this._shadowsEnabled=t,this._dirtyLightsFnc())}get shadowsEnabled(){return this._shadowsEnabled}}const YM=`
    attribute vec2 vertex_position;
    varying vec2 uv0;
    void main(void) {
        gl_Position = vec4(vertex_position, 0.5, 1.0);
        uv0 = vertex_position.xy * 0.5 + 0.5;
    }
    `,KM=new bt(!0,Ut,ct,ct);class mn{constructor(t){c(this,"shaderCache",[]);this.morph=t,t.incRefCount(),this.device=t.device,this._weights=[],this._weightMap=new Map;for(let r=0;r<t._targets.length;r++){const n=t._targets[r];n.name&&this._weightMap.set(n.name,r),this.setWeight(r,n.defaultWeight)}this._activeTargets=[],this.maxSubmitCount=this.device.maxTextures,this._shaderMorphWeights=new Float32Array(this.maxSubmitCount);const e=(r,n)=>(this[n]=t._createTexture(r,t._renderTextureFormat),new St({colorBuffer:this[n],depth:!1}));t.morphPositions&&(this.rtPositions=e("MorphRTPos","texturePositions")),t.morphNormals&&(this.rtNormals=e("MorphRTNrm","textureNormals")),this._textureParams=new Float32Array([t.morphTextureWidth,t.morphTextureHeight]);const s=t.aabb.halfExtents;this._aabbSize=new Float32Array([s.x*4,s.y*4,s.z*4]);const i=t.aabb.getMin();this._aabbMin=new Float32Array([i.x*2,i.y*2,i.z*2]),this._aabbNrmSize=new Float32Array([2,2,2]),this._aabbNrmMin=new Float32Array([-1,-1,-1]),this.aabbSizeId=this.device.scope.resolve("aabbSize"),this.aabbMinId=this.device.scope.resolve("aabbMin");for(let r=0;r<this.maxSubmitCount;r++)this[`morphBlendTex${r}`]=this.device.scope.resolve(`morphBlendTex${r}`);this.morphFactor=this.device.scope.resolve("morphFactor[0]"),this.zeroTextures=!1}destroy(){this.shader=null;const t=this.morph;t&&(this.morph=null,t.decRefCount(),t.refCount<1&&t.destroy()),this.rtPositions&&(this.rtPositions.destroy(),this.rtPositions=null),this.texturePositions&&(this.texturePositions.destroy(),this.texturePositions=null),this.rtNormals&&(this.rtNormals.destroy(),this.rtNormals=null),this.textureNormals&&(this.textureNormals.destroy(),this.textureNormals=null)}clone(){return new mn(this.morph)}_getWeightIndex(t){if(typeof t=="string"){const e=this._weightMap.get(t);return e===void 0&&b.error(`Cannot find morph target with name: ${t}.`),e}return t}getWeight(t){const e=this._getWeightIndex(t);return this._weights[e]}setWeight(t,e){const s=this._getWeightIndex(t);b.assert(s>=0&&s<this.morph._targets.length),this._weights[s]=e,this._dirty=!0}_getFragmentShader(t){let e="",s="";for(let i=0;i<t;i++)e+=`uniform highp sampler2D morphBlendTex${i};`,s+=`color.xyz += morphFactor[${i}] * texture2D(morphBlendTex${i}, uv0).xyz;`;return`

            varying vec2 uv0;
            ${this.morph.intRenderFormat?"#define MORPH_INT":""}
            ${t>0?`uniform highp float morphFactor[${t}];`:""}
            ${e}

            #ifdef MORPH_INT
                uniform vec3 aabbSize;
                uniform vec3 aabbMin;
            #endif

            void main (void) {
                highp vec4 color = vec4(0, 0, 0, 1);

                ${s}

                #ifdef MORPH_INT
                    color.xyz = (color.xyz - aabbMin) / aabbSize * 65535.0;
                    gl_FragColor = uvec4(color);
                #else
                    gl_FragColor = color;
                #endif
            }
        `}_getShader(t){let e=this.shaderCache[t];if(!e){const s=this._getFragmentShader(t),i=this.morph.intRenderFormat?"uvec4":"vec4";e=Bs(this.device,YM,s,`textureMorph${t}`,void 0,{fragmentOutputTypes:[i]}),this.shaderCache[t]=e}return e}_updateTextureRenderTarget(t,e,s){const i=this.device,r=(h,d)=>{this.morphFactor.setValue(this._shaderMorphWeights),i.setBlendState(d?KM:bt.NOBLEND);const u=this._getShader(h);fn(i,t,u)};this.setAabbUniforms(s);let n=0,a=!1;const o=this._activeTargets.length;for(let h=0;h<o;h++){const d=this._activeTargets[h],u=d.target[e];u&&(this[`morphBlendTex${n}`].setValue(u),this._shaderMorphWeights[n]=d.weight,n++,n>=this.maxSubmitCount&&(r(n,a),n=0,a=!0))}(n>0||o===0&&!this.zeroTextures)&&r(n,a)}_updateTextureMorph(){const t=this.device;G.pushGpuMarker(t,"MorphUpdate"),(this._activeTargets.length>0||!this.zeroTextures)&&(this.rtPositions&&this._updateTextureRenderTarget(this.rtPositions,"texturePositions",!0),this.rtNormals&&this._updateTextureRenderTarget(this.rtNormals,"textureNormals",!1),this.zeroTextures=this._activeTargets.length===0),G.popGpuMarker(t)}setAabbUniforms(t=!0){this.aabbSizeId.setValue(t?this._aabbSize:this._aabbNrmSize),this.aabbMinId.setValue(t?this._aabbMin:this._aabbNrmMin)}prepareRendering(t){this.setAabbUniforms()}update(){this._dirty=!1;const t=this.morph._targets;let e=0;const s=1e-5;for(let i=0;i<t.length;i++){const r=Math.abs(this.getWeight(i));if(r>s){this._activeTargets.length<=e&&(this._activeTargets[e]={});const n=this._activeTargets[e++];n.absWeight=r,n.weight=this.getWeight(i),n.target=t[i]}}this._activeTargets.length=e,this.morph.intRenderFormat&&this._activeTargets.length>this.maxSubmitCount&&(this._activeTargets.sort((i,r)=>i.absWeight<r.absWeight?1:r.absWeight<i.absWeight?-1:0),this._activeTargets.length=this.maxSubmitCount),this._updateTextureMorph()}}class Ui{constructor(){c(this,"graph",null);c(this,"meshInstances",[]);c(this,"skinInstances",[]);c(this,"morphInstances",[]);this.cameras=[],this.lights=[],this._shadersVersion=0,this._immutable=!1}getGraph(){return this.graph}setGraph(t){this.graph=t}getCameras(){return this.cameras}setCameras(t){this.cameras=t}getLights(){return this.lights}setLights(t){this.lights=t}getMaterials(){const t=[];for(let e=0;e<this.meshInstances.length;e++){const s=this.meshInstances[e];t.indexOf(s.material)===-1&&t.push(s.material)}return t}clone(){const t=[],e=[],s=function(h){const d=h.clone();t.push(h),e.push(d);for(let u=0;u<h._children.length;u++)d.addChild(s(h._children[u]));return d},i=s(this.graph),r=[],n=[],a=[];for(let h=0;h<this.skinInstances.length;h++){const d=this.skinInstances[h].skin,u=new hl(d),f=[];for(let p=0;p<d.boneNames.length;p++){const m=d.boneNames[p],_=i.findByName(m);f.push(_)}u.bones=f,n.push(u)}for(let h=0;h<this.morphInstances.length;h++){const d=this.morphInstances[h].morph,u=new mn(d);a.push(u)}for(let h=0;h<this.meshInstances.length;h++){const d=this.meshInstances[h],u=t.indexOf(d.node),f=new Be(d.mesh,d.material,e[u]);if(d.skinInstance){const p=this.skinInstances.indexOf(d.skinInstance);f.skinInstance=n[p]}if(d.morphInstance){const p=this.morphInstances.indexOf(d.morphInstance);f.morphInstance=a[p]}r.push(f)}const o=new Ui;return o.graph=i,o.meshInstances=r,o.skinInstances=n,o.morphInstances=a,o.getGraph().syncHierarchy(),o}destroy(){const t=this.meshInstances;for(let e=0;e<t.length;e++)t[e].destroy();this.meshInstances.length=0}generateWireframe(){Be._prepareRenderStyleForArray(this.meshInstances,Lr)}}class k0 extends qc{constructor(e,s,{preferHighPrecision:i=!1}={}){super();c(this,"_aabb");c(this,"preferHighPrecision");b.assert(s,"Morph constructor takes a GraphicsDevice as a parameter, and it was not provided."),this.device=s,this.preferHighPrecision=i,b.assert(e.every(o=>!o.used),"A specified target has already been used to create a Morph, use its clone instead."),this._targets=e.slice();const r=this.device,n=r.textureHalfFloatRenderable?it:void 0,a=r.textureFloatRenderable?et:void 0;this._renderTextureFormat=this.preferHighPrecision?a??n:n??a,this._renderTextureFormat=this._renderTextureFormat??Rc,this.intRenderFormat=sa(this._renderTextureFormat),this._textureFormat=this.preferHighPrecision?Ac:it,this._init(),this._updateMorphFlags()}get aabb(){if(!this._aabb){const e=new A,s=new A;for(let i=0;i<this._targets.length;i++){const r=this._targets[i].aabb;e.min(r.getMin()),s.max(r.getMax())}this._aabb=new ve,this._aabb.setMinMax(e,s)}return this._aabb}get morphPositions(){return this._morphPositions}get morphNormals(){return this._morphNormals}_init(){this._initTextureBased();for(let e=0;e<this._targets.length;e++)this._targets[e]._postInit()}_findSparseSet(e,s,i){let r=1;const n=e[0].length;for(let a=0;a<n;a+=3){let o=!1;for(let h=0;h<e.length;h++){const d=e[h];if(d[a]!==0||d[a+1]!==0||d[a+2]!==0){o=!0;break}}o?(s.push(r),i.push(a/3),r++):s.push(0)}return r}_initTextureBased(){const e=[],s=[];for(let _=0;_<this._targets.length;_++){const g=this._targets[_];g.options.deltaPositions&&(e.push(g.options.deltaPositions),s.push({target:g,name:"texturePositions"})),g.options.deltaNormals&&(e.push(g.options.deltaNormals),s.push({target:g,name:"textureNormals"}))}const i=[],r=[],n=this._findSparseSet(e,i,r),a=this.device.maxTextureSize;let o=Math.ceil(Math.sqrt(n));o=Math.min(o,a);const h=Math.ceil(n/o);if(h>a)return!1;this.morphTextureWidth=o,this.morphTextureHeight=h;let d=!1,u=3;const f=Bt.float2Half;this._textureFormat===it&&(d=!0,u=4);const p=[];for(let _=0;_<e.length;_++)p.push(this._createTexture("MorphTarget",this._textureFormat));for(let _=0;_<e.length;_++){const g=e[_],y=p[_],w=y.lock();if(d)for(let x=0;x<r.length;x++){const M=r[x]*3,S=x*u+u;w[S]=f(g[M]),w[S+1]=f(g[M+1]),w[S+2]=f(g[M+2])}else for(let x=0;x<r.length;x++){const M=r[x]*3,S=x*u+u;w[S]=g[M],w[S+1]=g[M+1],w[S+2]=g[M+2]}y.unlock(),s[_].target._setTexture(s[_].name,y)}const m=[{semantic:va,components:1,type:Oo,asInt:!0}];return this.vertexBufferIds=new fs(this.device,new Dt(this.device,m,i.length),i.length,{data:new Uint32Array(i)}),!0}destroy(){var e;(e=this.vertexBufferIds)==null||e.destroy(),this.vertexBufferIds=null;for(let s=0;s<this._targets.length;s++)this._targets[s].destroy();this._targets.length=0}get targets(){return this._targets}_updateMorphFlags(){this._morphPositions=!1,this._morphNormals=!1;for(let e=0;e<this._targets.length;e++){const s=this._targets[e];s.morphPositions&&(this._morphPositions=!0),s.morphNormals&&(this._morphNormals=!0)}}_createTexture(e,s){return new ce(this.device,{width:this.morphTextureWidth,height:this.morphTextureHeight,format:s,cubemap:!1,mipmaps:!1,minFilter:fe,magFilter:fe,addressU:oe,addressV:oe,name:e})}}class sd{constructor(t){c(this,"used",!1);b.assert(arguments.length===1),this.options=t,this._name=t.name,this._defaultWeight=t.defaultWeight||0,this._aabb=t.aabb,this.deltaPositions=t.deltaPositions}destroy(){var t,e;(t=this.texturePositions)==null||t.destroy(),this.texturePositions=null,(e=this.textureNormals)==null||e.destroy(),this.textureNormals=null}get name(){return this._name}get defaultWeight(){return this._defaultWeight}get aabb(){return this._aabb||(this._aabb=new ve,this.deltaPositions&&this._aabb.compute(this.deltaPositions)),this._aabb}get morphPositions(){return!!this.texturePositions}get morphNormals(){return!!this.textureNormals}clone(){return b.assert(this.options,"MorphTarget cannot be cloned, was it created with a preserveData option?"),new sd(this.options)}_postInit(){this.options.preserveData||(this.options=null),this.used=!0}_setTexture(t,e){this[t]=e}}let oi,b_=1;const re=4,$d=new q,qd=new q,Vs=new A,He=new A,Ss=new A,Dn=new A,qt=new A,tt=new A,Ln=new A,Fn=new A,eo=new A,w_=new A,Ct=new A,Gl=new A,Tr=new A;function na(l){return l-Math.floor(l)}function ZM(l){return Math.max(Math.min(l,1),0)}function Xd(l,t){return l-t*Math.floor(l/t)}function QM(l){let t=na(l),e=na(255*l),s=na(65025*l),i=na(160581375*l);return t-=e/255,e-=s/255,s-=i/255,i-=i/255,[t,e,s,i]}function Hl(l){let t=na(l),e=na(255*l);return t-=e/255,e-=e/255,[t,e]}class JM{constructor(t){this._emitter=t}calcSpawnPosition(t,e,s,i,r){const n=this._emitter,a=Math.random(),o=Math.random(),h=Math.random(),d=Math.random();if(n.useCpu&&(t[r*re+0+n.numParticlesPot*2*re]=a,t[r*re+1+n.numParticlesPot*2*re]=o,t[r*re+2+n.numParticlesPot*2*re]=h),He.x=a-.5,He.y=o-.5,He.z=h-.5,n.emitterShape===qs){const p=Math.max(Math.abs(He.x),Math.max(Math.abs(He.y),Math.abs(He.z))),m=p+(.5-p)*s[0],_=p+(.5-p)*s[1],g=p+(.5-p)*s[2];He.x=m*(p===Math.abs(He.x)?Math.sign(He.x):2*He.x),He.y=_*(p===Math.abs(He.y)?Math.sign(He.y):2*He.y),He.z=g*(p===Math.abs(He.z)?Math.sign(He.z):2*He.z),n.localSpace?Vs.copy(e.transformPoint(He)):Vs.copy(i).add(e.transformPoint(He))}else{He.normalize();const p=n.emitterRadius===0?0:n.emitterRadiusInner/n.emitterRadius,m=d*(1-p)+p;n.localSpace?Vs.copy(He.mulScalar(m*n.emitterRadius)):Vs.copy(i).add(He.mulScalar(m*n.emitterRadius))}let f=-z.lerp(n.rate,n.rate2,a)*r;if(n.pack8){const p=(Vs.x-n.worldBounds.center.x)/n.worldBoundsSize.x+.5,m=(Vs.y-n.worldBounds.center.y)/n.worldBoundsSize.y+.5,_=(Vs.z-n.worldBounds.center.z)/n.worldBoundsSize.z+.5;let g=z.lerp(n.startAngle*z.DEG_TO_RAD,n.startAngle2*z.DEG_TO_RAD,a);g=g%(Math.PI*2)/(Math.PI*2);const y=Hl(p);t[r*re]=y[0],t[r*re+1]=y[1];const w=Hl(m);t[r*re+2]=w[0],t[r*re+3]=w[1];const C=Hl(_);t[r*re+0+n.numParticlesPot*re]=C[0],t[r*re+1+n.numParticlesPot*re]=C[1];const x=Hl(g);t[r*re+2+n.numParticlesPot*re]=x[0],t[r*re+3+n.numParticlesPot*re]=x[1];const M=1;t[r*re+3+n.numParticlesPot*re*2]=M;const S=Math.max(n.lifetime,(n.numParticles-1)*Math.max(n.rate,n.rate2)),v=n.lifetime+1;f=(f+S)/(S+v);const E=QM(f);t[r*re+0+n.numParticlesPot*re*3]=E[0],t[r*re+1+n.numParticlesPot*re*3]=E[1],t[r*re+2+n.numParticlesPot*re*3]=E[2],t[r*re+3+n.numParticlesPot*re*3]=E[3]}else t[r*re]=Vs.x,t[r*re+1]=Vs.y,t[r*re+2]=Vs.z,t[r*re+3]=z.lerp(n.startAngle*z.DEG_TO_RAD,n.startAngle2*z.DEG_TO_RAD,a),t[r*re+3+n.numParticlesPot*re]=f}update(t,e,s,i,r,n,a,o){let h,d,u;const f=this._emitter;if(f.meshInstance.node){const T=f.meshInstance.node.worldTransform;for(let R=0;R<12;R++)$d.data[R]=T.data[R];qd.copy($d),qd.invert(),oi=f.meshInstance.node.localScale,b_=Math.max(Math.max(oi.x,oi.y),oi.z)}n=f.meshInstance.node===null||f.localSpace?A.ZERO:f.meshInstance.node.getPosition();const p=f.camera?f.camera._node.getPosition():A.ZERO,m=f.useMesh?17:15;let _,g,y,w,C,x,M,S,v;const E=f.precision-1;for(let T=0;T<f.numParticles;T++){const R=Math.floor(f.vbCPU[T*f.numParticleVerts*(f.useMesh?6:4)+3]),D=s[R*re+0+f.numParticlesPot*2*re];Ss.x=D,Ss.y=s[R*re+1+f.numParticlesPot*2*re],Ss.z=s[R*re+2+f.numParticlesPot*2*re];const P=f.rate+(f.rate2-f.rate)*D,L=f.lifetime;let k=s[R*re+3+f.numParticlesPot*re]+a;const H=ZM(k/L);let N=0,I=0;const F=0;(k-a<=0||k>=L)&&this.calcSpawnPosition(s,i,r,n,R);let B=k>0&&k<L;B&&(u=H*E,_=Math.floor(u),g=Math.ceil(u),u%=1,h=f.qRotSpeed[_],d=f.qRotSpeed[g],y=h+(d-h)*u,h=f.qRotSpeed2[_],d=f.qRotSpeed2[g],w=h+(d-h)*u,h=f.qScale[_],d=f.qScale[g],N=h+(d-h)*u,h=f.qScale2[_],d=f.qScale2[g],C=h+(d-h)*u,h=f.qAlpha[_],d=f.qAlpha[g],x=h+(d-h)*u,h=f.qAlpha2[_],d=f.qAlpha2[g],M=h+(d-h)*u,h=f.qRadialSpeed[_],d=f.qRadialSpeed[g],S=h+(d-h)*u,h=f.qRadialSpeed2[_],d=f.qRadialSpeed2[g],v=h+(d-h)*u,S+=(v-S)*(D*100%1),Dn.x=s[R*re],Dn.y=s[R*re+1],Dn.z=s[R*re+2],f.localSpace?eo.copy(Dn):eo.copy(Dn).sub(n),eo.normalize().mulScalar(S),_*=3,g*=3,h=f.qLocalVelocity[_],d=f.qLocalVelocity[g],tt.x=h+(d-h)*u,h=f.qLocalVelocity[_+1],d=f.qLocalVelocity[g+1],tt.y=h+(d-h)*u,h=f.qLocalVelocity[_+2],d=f.qLocalVelocity[g+2],tt.z=h+(d-h)*u,h=f.qLocalVelocity2[_],d=f.qLocalVelocity2[g],Fn.x=h+(d-h)*u,h=f.qLocalVelocity2[_+1],d=f.qLocalVelocity2[g+1],Fn.y=h+(d-h)*u,h=f.qLocalVelocity2[_+2],d=f.qLocalVelocity2[g+2],Fn.z=h+(d-h)*u,h=f.qVelocity[_],d=f.qVelocity[g],qt.x=h+(d-h)*u,h=f.qVelocity[_+1],d=f.qVelocity[g+1],qt.y=h+(d-h)*u,h=f.qVelocity[_+2],d=f.qVelocity[g+2],qt.z=h+(d-h)*u,h=f.qVelocity2[_],d=f.qVelocity2[g],Ln.x=h+(d-h)*u,h=f.qVelocity2[_+1],d=f.qVelocity2[g+1],Ln.y=h+(d-h)*u,h=f.qVelocity2[_+2],d=f.qVelocity2[g+2],Ln.z=h+(d-h)*u,tt.x+=(Fn.x-tt.x)*Ss.x,tt.y+=(Fn.y-tt.y)*Ss.y,tt.z+=(Fn.z-tt.z)*Ss.z,f.initialVelocity>0&&(f.emitterShape===qb?(He.copy(Ss).mulScalar(2).sub(A.ONE).normalize(),tt.add(He.mulScalar(f.initialVelocity))):tt.add(A.FORWARD.mulScalar(f.initialVelocity))),qt.x+=(Ln.x-qt.x)*Ss.x,qt.y+=(Ln.y-qt.y)*Ss.y,qt.z+=(Ln.z-qt.z)*Ss.z,y+=(w-y)*Ss.y,N=(N+(C-N)*(D*1e4%1))*b_,I=(M-x)*(D*1e3%1),f.meshInstance.node&&(f.localSpace?(tt.x/=oi.x,tt.y/=oi.y,tt.z/=oi.z):$d.transformPoint(tt,tt)),f.localSpace?(qd.transformPoint(qt,qt),tt.add(qt).add(eo)):(tt.add(qt.mul(oi)),tt.add(eo.mul(oi))),Gl.copy(tt),w_.copy(Dn).add(tt.mulScalar(a)),Ct.copy(w_),s[R*re]=Ct.x,s[R*re+1]=Ct.y,s[R*re+2]=Ct.z,s[R*re+3]+=y*a,f.wrap&&f.wrapBounds&&(f.localSpace||Ct.sub(n),Ct.x=Xd(Ct.x,f.wrapBounds.x)-f.wrapBounds.x*.5,Ct.y=Xd(Ct.y,f.wrapBounds.y)-f.wrapBounds.y*.5,Ct.z=Xd(Ct.z,f.wrapBounds.z)-f.wrapBounds.z*.5,f.localSpace||Ct.add(n)),f.sort>0&&(f.sort===1?(Tr.copy(Ct).sub(p),f.particleDistance[R]=-(Tr.x*Tr.x+Tr.y*Tr.y+Tr.z*Tr.z)):f.sort===2?f.particleDistance[R]=k:f.sort===3&&(f.particleDistance[R]=-k))),o?k<0&&(s[R*re+3+f.numParticlesPot*2*re]=-1):(k>=L&&(k-=Math.max(L,(f.numParticles-1)*P),s[R*re+3+f.numParticlesPot*2*re]=f.loop?1:-1),k<0&&f.loop&&(s[R*re+3+f.numParticlesPot*2*re]=1)),s[R*re+3+f.numParticlesPot*2*re]<0&&(B=!1),s[R*re+3+f.numParticlesPot*re]=k;for(let U=0;U<f.numParticleVerts;U++){const V=(T*f.numParticleVerts+U)*(f.useMesh?6:4);let X=f.vbCPU[V],Z=f.vbCPU[V+1],K=f.vbCPU[V+2];B||(X=Z=K=0);const J=T*f.numParticleVerts*m+U*m;t[J]=Ct.x,t[J+1]=Ct.y,t[J+2]=Ct.z,t[J+3]=H,t[J+4]=f.alignToMotion?F:s[R*re+3],t[J+5]=N,t[J+6]=I,t[J+7]=Gl.x,t[J+8]=X,t[J+9]=Z,t[J+10]=K,t[J+11]=Gl.y,t[J+12]=R,t[J+13]=Gl.z,t[J+14]=f.vbCPU[V+3],f.useMesh&&(t[J+15]=f.vbCPU[V+4],t[J+16]=f.vbCPU[V+5])}}if(f.sort>Ou&&f.camera){const T=f.useMesh?6:4,R=f.particleDistance;for(let D=0;D<f.numParticles;D++)e[D][0]=D,e[D][1]=R[Math.floor(f.vbCPU[D*f.numParticleVerts*T+3])];f.vbOld.set(f.vbCPU),e.sort((D,P)=>D[1]-P[1]);for(let D=0;D<f.numParticles;D++){const P=e[D][0]*f.numParticleVerts*T,L=D*f.numParticleVerts*T;for(let k=0;k<f.numParticleVerts*T;k++)f.vbCPU[L+k]=f.vbOld[P+k]}}}}const T_=new Js,A_=new Js,E_=new Js;class e1{constructor(t,e){this._emitter=t,this.frameRandomUniform=new Float32Array(3),this.emitterPosUniform=new Float32Array(3),this.emitterScaleUniform=new Float32Array([1,1,1]),this.worldBoundsMulUniform=new Float32Array(3),this.worldBoundsAddUniform=new Float32Array(3),this.inBoundsSizeUniform=new Float32Array(3),this.inBoundsCenterUniform=new Float32Array(3),this.constantParticleTexIN=e.scope.resolve("particleTexIN"),this.constantParticleTexOUT=e.scope.resolve("particleTexOUT"),this.constantEmitterPos=e.scope.resolve("emitterPos"),this.constantEmitterScale=e.scope.resolve("emitterScale"),this.constantSpawnBounds=e.scope.resolve("spawnBounds"),this.constantSpawnPosInnerRatio=e.scope.resolve("spawnPosInnerRatio"),this.constantSpawnBoundsSphere=e.scope.resolve("spawnBoundsSphere"),this.constantSpawnBoundsSphereInnerRatio=e.scope.resolve("spawnBoundsSphereInnerRatio"),this.constantInitialVelocity=e.scope.resolve("initialVelocity"),this.constantFrameRandom=e.scope.resolve("frameRandom"),this.constantDelta=e.scope.resolve("delta"),this.constantRate=e.scope.resolve("rate"),this.constantRateDiv=e.scope.resolve("rateDiv"),this.constantLifetime=e.scope.resolve("lifetime"),this.constantGraphSampleSize=e.scope.resolve("graphSampleSize"),this.constantGraphNumSamples=e.scope.resolve("graphNumSamples"),this.constantInternalTex0=e.scope.resolve("internalTex0"),this.constantInternalTex1=e.scope.resolve("internalTex1"),this.constantInternalTex2=e.scope.resolve("internalTex2"),this.constantInternalTex3=e.scope.resolve("internalTex3"),this.constantEmitterMatrix=e.scope.resolve("emitterMatrix"),this.constantEmitterMatrixInv=e.scope.resolve("emitterMatrixInv"),this.constantNumParticles=e.scope.resolve("numParticles"),this.constantNumParticlesPot=e.scope.resolve("numParticlesPot"),this.constantLocalVelocityDivMult=e.scope.resolve("localVelocityDivMult"),this.constantVelocityDivMult=e.scope.resolve("velocityDivMult"),this.constantRotSpeedDivMult=e.scope.resolve("rotSpeedDivMult"),this.constantSeed=e.scope.resolve("seed"),this.constantStartAngle=e.scope.resolve("startAngle"),this.constantStartAngle2=e.scope.resolve("startAngle2"),this.constantOutBoundsMul=e.scope.resolve("outBoundsMul"),this.constantOutBoundsAdd=e.scope.resolve("outBoundsAdd"),this.constantInBoundsSize=e.scope.resolve("inBoundsSize"),this.constantInBoundsCenter=e.scope.resolve("inBoundsCenter"),this.constantMaxVel=e.scope.resolve("maxVel"),this.constantFaceTangent=e.scope.resolve("faceTangent"),this.constantFaceBinorm=e.scope.resolve("faceBinorm")}_setInputBounds(){this.inBoundsSizeUniform[0]=this._emitter.prevWorldBoundsSize.x,this.inBoundsSizeUniform[1]=this._emitter.prevWorldBoundsSize.y,this.inBoundsSizeUniform[2]=this._emitter.prevWorldBoundsSize.z,this.constantInBoundsSize.setValue(this.inBoundsSizeUniform),this.inBoundsCenterUniform[0]=this._emitter.prevWorldBoundsCenter.x,this.inBoundsCenterUniform[1]=this._emitter.prevWorldBoundsCenter.y,this.inBoundsCenterUniform[2]=this._emitter.prevWorldBoundsCenter.z,this.constantInBoundsCenter.setValue(this.inBoundsCenterUniform)}randomize(){this.frameRandomUniform[0]=Math.random(),this.frameRandomUniform[1]=Math.random(),this.frameRandomUniform[2]=Math.random()}update(t,e,s,i,r){G.pushGpuMarker(t,"ParticleGPU");const n=this._emitter;t.setBlendState(bt.NOBLEND),t.setDepthState(us.NODEPTH),t.setCullMode(vt),this.randomize(),this.constantGraphSampleSize.setValue(1/n.precision),this.constantGraphNumSamples.setValue(n.precision),this.constantNumParticles.setValue(n.numParticles),this.constantNumParticlesPot.setValue(n.numParticlesPot),this.constantInternalTex0.setValue(n.internalTex0),this.constantInternalTex1.setValue(n.internalTex1),this.constantInternalTex2.setValue(n.internalTex2),this.constantInternalTex3.setValue(n.internalTex3);const a=n.meshInstance.node,o=a===null?A.ONE:a.localScale;if(n.pack8){this.worldBoundsMulUniform[0]=n.worldBoundsMul.x,this.worldBoundsMulUniform[1]=n.worldBoundsMul.y,this.worldBoundsMulUniform[2]=n.worldBoundsMul.z,this.constantOutBoundsMul.setValue(this.worldBoundsMulUniform),this.worldBoundsAddUniform[0]=n.worldBoundsAdd.x,this.worldBoundsAddUniform[1]=n.worldBoundsAdd.y,this.worldBoundsAddUniform[2]=n.worldBoundsAdd.z,this.constantOutBoundsAdd.setValue(this.worldBoundsAddUniform),this._setInputBounds();let p=n.maxVel*Math.max(Math.max(o.x,o.y),o.z);p=Math.max(p,1),this.constantMaxVel.setValue(p)}const h=a===null||n.localSpace?A.ZERO:a.getPosition(),d=a===null?q.IDENTITY:a.getWorldTransform();n.emitterShape===qs?(T_.setFromMat4(e),this.constantSpawnBounds.setValue(T_.data),this.constantSpawnPosInnerRatio.setValue(s)):(this.constantSpawnBoundsSphere.setValue(n.emitterRadius),this.constantSpawnBoundsSphereInnerRatio.setValue(n.emitterRadius===0?0:n.emitterRadiusInner/n.emitterRadius)),this.constantInitialVelocity.setValue(n.initialVelocity),A_.setFromMat4(d),E_.invertMat4(d),this.emitterPosUniform[0]=h.x,this.emitterPosUniform[1]=h.y,this.emitterPosUniform[2]=h.z,this.constantEmitterPos.setValue(this.emitterPosUniform),this.constantFrameRandom.setValue(this.frameRandomUniform),this.constantDelta.setValue(i),this.constantRate.setValue(n.rate),this.constantRateDiv.setValue(n.rate2-n.rate),this.constantStartAngle.setValue(n.startAngle*z.DEG_TO_RAD),this.constantStartAngle2.setValue(n.startAngle2*z.DEG_TO_RAD),this.constantSeed.setValue(n.seed),this.constantLifetime.setValue(n.lifetime),this.emitterScaleUniform[0]=o.x,this.emitterScaleUniform[1]=o.y,this.emitterScaleUniform[2]=o.z,this.constantEmitterScale.setValue(this.emitterScaleUniform),this.constantEmitterMatrix.setValue(A_.data),this.constantEmitterMatrixInv.setValue(E_.data),this.constantLocalVelocityDivMult.setValue(n.localVelocityUMax),this.constantVelocityDivMult.setValue(n.velocityUMax),this.constantRotSpeedDivMult.setValue(n.rotSpeedUMax[0]);let u=n.swapTex?n.particleTexOUT:n.particleTexIN;u=n.beenReset?n.particleTexStart:u;const f=n.swapTex?n.particleTexIN:n.particleTexOUT;this.constantParticleTexIN.setValue(u),fn(t,n.swapTex?n.rtParticleTexIN:n.rtParticleTexOUT,r?n.shaderParticleUpdateOnStop:n.loop?n.shaderParticleUpdateRespawn:n.shaderParticleUpdateNoRespawn),n.material.setParameter("particleTexOUT",u),n.material.setParameter("particleTexIN",f),n.beenReset=!1,n.swapTex=!n.swapTex,n.prevWorldBoundsSize.copy(n.worldBoundsSize),n.prevWorldBoundsCenter.copy(n.worldBounds.center),n.pack8&&this._setInputBounds(),G.popGpuMarker(t)}}class t1 extends Nt{generateKey(t){let s=`particle_${Nt.definesHash(t.defines)}_`;for(const i in t)t.hasOwnProperty(i)&&(s+=t[i]);return s}_animTex(t){let e="";return e+=t.animTexLoop?j.particleAnimFrameLoopVS:j.particleAnimFrameClampVS,e+=j.particleAnimTexVS,e}createShaderDefinition(t,e){const s=`#define PARTICLE_${e.useCpu?"CPU":"GPU"}
`;let i=`#define PARTICLE
${s}`,r=`#define VERTEXSHADER
${s}`;e.mesh&&(r+=`#define USE_MESH
`),e.localSpace&&(r+=`#define LOCAL_SPACE
`),e.screenSpace&&(r+=`#define SCREEN_SPACE
`),e.animTex&&(r+=`
uniform vec2 animTexTilesParams;
`),e.animTex&&(r+=`
uniform vec4 animTexParams;
`),e.animTex&&(r+=`
uniform vec2 animTexIndexParams;
`),e.normal===2&&(r+=`
varying mat3 ParticleMat;
`),e.normal===1&&(r+=`
varying vec3 Normal;
`),e.soft&&(r+=`
varying float vDepth;
`);const n=e.customFace?j.particle_customFaceVS:j.particle_billboardVS;e.useCpu?(e.soft>0&&(r+=j.screenDepthPS),r+=j.particle_cpuVS,e.localSpace&&(r+=j.particle_localShiftVS),e.animTex&&(r+=this._animTex(e)),e.alignToMotion&&(r+=j.particle_pointAlongVS),r+=e.mesh?j.particle_meshVS:n,e.normal===1&&(r+=j.particle_normalVS),e.normal===2&&(r+=j.particle_TBNVS),e.stretch>0&&(r+=j.particle_stretchVS),r+=j.particle_cpu_endVS,e.soft>0&&(r+=j.particle_softVS)):(r+=j.particle_initVS,r+=e.pack8?j.particleInputRgba8PS:j.particleInputFloatPS,e.soft>0&&(r+=j.screenDepthPS),r+=j.particleVS,e.localSpace&&(r+=j.particle_localShiftVS),e.animTex&&(r+=this._animTex(e)),e.wrap&&(r+=j.particle_wrapVS),e.alignToMotion&&(r+=j.particle_pointAlongVS),r+=e.mesh?j.particle_meshVS:n,e.normal===1&&(r+=j.particle_normalVS),e.normal===2&&(r+=j.particle_TBNVS),e.stretch>0&&(r+=j.particle_stretchVS),r+=j.particle_endVS,e.soft>0&&(r+=j.particle_softVS)),r+=`}
`,e.normal>0&&(e.normal===1?i+=`
varying vec3 Normal;
`:e.normal===2&&(i+=`
varying mat3 ParticleMat;
`),i+=`
uniform vec3 lightCube[6];
`),e.soft&&(i+=`
varying float vDepth;
`),i+=j.decodePS,i+=`#include "gammaPS"
`,i+=`#include "tonemappingPS"
`,i+=`#include "fogPS"
`,e.normal===2&&(i+=`
uniform sampler2D normalMap;
`),e.soft>0&&(i+=j.screenDepthPS),i+=j.particlePS,e.soft>0&&(i+=j.particle_softPS),e.normal===1&&(i+=`
vec3 normal = Normal;
`),e.normal===2&&(i+=j.particle_normalMapPS),e.normal>0&&(i+=e.halflambert?j.particle_halflambertPS:j.particle_lambertPS),e.normal>0&&(i+=j.particle_lightingPS),e.blend===Gt?i+=j.particle_blendNormalPS:e.blend===bp?i+=j.particle_blendAddPS:e.blend===wp&&(i+=j.particle_blendMultiplyPS),i+=j.particle_endPS;const a=new Map(Object.entries({...j,...e.chunks}));return Ft.createDefinition(t,{name:"ParticleShader",vertexCode:r,fragmentCode:i,fragmentDefines:e.defines,fragmentIncludes:a,vertexDefines:e.defines})}}const s1=new t1;class i1 extends Sn{constructor(e){super();c(this,"emitter",null);this.emitter=e,b.assert(e)}getShaderVariant(e){const{device:s,scene:i,cameraShaderParams:r}=e,{emitter:n}=this,a={defines:Op(this,e),pass:xn,useCpu:this.emitter.useCpu,normal:n.lighting?n.normalMap!==null?2:1:0,halflambert:this.emitter.halfLambert,stretch:this.emitter.stretch,alignToMotion:this.emitter.alignToMotion,soft:this.emitter.depthSoftening,mesh:this.emitter.useMesh,gamma:(r==null?void 0:r.shaderOutputGamma)??al,toneMap:(r==null?void 0:r.toneMapping)??Pp,fog:i&&!this.emitter.noFog?i.fog.type:"none",wrap:this.emitter.wrap&&this.emitter.wrapBounds,localSpace:this.emitter.localSpace,screenSpace:n.inTools?!1:this.emitter.screenSpace,blend:this.blendType,animTex:this.emitter._isAnimated(),animTexLoop:this.emitter.animLoop,pack8:this.emitter.pack8,customFace:this.emitter.orientation!==$h},o=new Jc(e.viewUniformFormat,e.viewBindGroupFormat,e.vertexFormat),h=za(s);return h.register("particle",s1),h.getProgram("particle",a,o,this.userId)}}const C_=[[-1,-1],[1,-1],[1,1],[-1,1]];function rs(l,t,e,s,i=et,r,n){let a=fe;n&&(i===Te||i===cs)&&(a=at);const o=new ce(l,{width:t,height:e,format:i,cubemap:!1,mipmaps:!1,minFilter:a,magFilter:a,addressU:oe,addressV:oe,name:"ParticleSystemTexture"}),h=o.lock();if(i===Te||i===cs){const d=new Uint8Array(s.length);for(let u=0;u<s.length;u++)d[u]=s[u]*r*255;s=d}return h.set(s),o.unlock(),o}function M_(l){return Math.max(Math.min(l,1),0)}const P_=new Ls([0,0,1,0]),R_=new Ls([0,1,1,1]),I_=new Yr([0,0,1,0],[0,0,1,0],[0,0,1,0]),r1=new Yr([0,1,1,1],[0,1,1,1],[0,1,1,1]);let li=2;const Wl=4,hi=new Float32Array(3),Ar=new q,D_=new A,$l=new A,ql=new A;let Xu,yh;function ne(l,t){yh[l]!==void 0&&yh[l]!==null?Xu[l]=yh[l]:Xu[l]=t}function O0(l,t,e){return(l*255<<16|t*255<<8|e*255)/(1<<24)}function L_(l,t){const e=l.length/3,s=new Array(e*4);for(let i=0;i<e;i++)s[i*4]=l[i*3],s[i*4+1]=l[i*3+1],s[i*4+2]=l[i*3+2],s[i*4+3]=O0(t[i*3],t[i*3+1],t[i*3+2]);return s}function n1(l,t){const e=new Array(t.length*4);for(let s=0;s<t.length;s++)e[s*4]=l[s*3],e[s*4+1]=l[s*3+1],e[s*4+2]=l[s*3+2],e[s*4+3]=t[s];return e}function a1(l,t,e,s,i){const r=new Array(l.length*4);for(let n=0;n<l.length;n++)r[n*4]=l[n],r[n*4+1]=t[n],r[n*4+2]=0,r[n*4+3]=O0(e[n],s[n],i[n]);return r}function o1(l,t){const e=new Array(l.length*4);for(let s=0;s<l.length;s++)e[s*4]=l[s],e[s*4+1]=t[s],e[s*4+2]=0,e[s*4+3]=0;return e}function l1(l){const t=Math.max(l.rate,l.rate2)*l.numParticles+l.lifetime;return Date.now()+t*1e3}function h1(l,t){const e=new Float32Array(l.length);for(let s=0;s<l.length;s++)e[s]=l[s]-t[s];return e}function kr(l,t){const e=t.length,s=l.length/e;for(let i=0;i<s;i++)for(let r=0;r<e;r++){const n=Math.abs(l[i*e+r]);t[r]=Math.max(t[r],n)}}function c1(l,t){const e=t.length,s=l.length/e;for(let i=0;i<s;i++)for(let r=0;r<e;r++)l[i*e+r]/=t[r]===0?1:t[r],l[i*e+r]*=.5,l[i*e+r]+=.5}function Er(l,t,e){const s=h1(t,l);return kr(s,e),c1(s,e),s}const d1=new Ht;class u1{constructor(t,e){c(this,"material",null);c(this,"internalTex0",null);c(this,"internalTex1",null);c(this,"internalTex2",null);c(this,"colorParam",null);this.graphicsDevice=t;const s=t,i=32;this.precision=i,this._addTimeTime=0,Xu=this,yh=e,ne("numParticles",1),this.numParticles>t.maxTextureSize&&(b.warn(`WARNING: can't create more than ${t.maxTextureSize} particles on this device.`),this.numParticles=t.maxTextureSize),ne("rate",1),ne("rate2",this.rate),ne("lifetime",50),ne("emitterExtents",new A(0,0,0)),ne("emitterExtentsInner",new A(0,0,0)),ne("emitterRadius",0),ne("emitterRadiusInner",0),ne("emitterShape",qs),ne("initialVelocity",1),ne("wrap",!1),ne("localSpace",!1),ne("screenSpace",!1),ne("wrapBounds",null),ne("colorMap",this.defaultParamTexture),ne("normalMap",null),ne("loop",!0),ne("preWarm",!1),ne("sort",Ou),ne("mode",u0),ne("scene",null),ne("lighting",!1),ne("halfLambert",!1),ne("intensity",1),ne("stretch",0),ne("alignToMotion",!1),ne("depthSoftening",0),ne("mesh",null),ne("particleNormal",new A(0,1,0)),ne("orientation",$h),ne("depthWrite",!1),ne("noFog",!1),ne("blendType",Gt),ne("node",null),ne("startAngle",0),ne("startAngle2",this.startAngle),ne("animTilesX",1),ne("animTilesY",1),ne("animStartFrame",0),ne("animNumFrames",1),ne("animNumAnimations",1),ne("animIndex",0),ne("randomizeAnimIndex",!1),ne("animSpeed",1),ne("animLoop",!0),this._gpuUpdater=new e1(this,s),this._cpuUpdater=new JM(this),this.emitterPosUniform=new Float32Array(3),this.wrapBoundsUniform=new Float32Array(3),this.emitterScaleUniform=new Float32Array([1,1,1]),ne("colorGraph",r1),ne("colorGraph2",this.colorGraph),ne("scaleGraph",R_),ne("scaleGraph2",this.scaleGraph),ne("alphaGraph",R_),ne("alphaGraph2",this.alphaGraph),ne("localVelocityGraph",I_),ne("localVelocityGraph2",this.localVelocityGraph),ne("velocityGraph",I_),ne("velocityGraph2",this.velocityGraph),ne("rotationSpeedGraph",P_),ne("rotationSpeedGraph2",this.rotationSpeedGraph),ne("radialSpeedGraph",P_),ne("radialSpeedGraph2",this.radialSpeedGraph),this.animTilesParams=new Float32Array(2),this.animParams=new Float32Array(4),this.animIndexParams=new Float32Array(2),this.vbToSort=null,this.vbOld=null,this.particleDistance=null,this.camera=null,this.swapTex=!1,this.useMesh=!0,this.useCpu=!t.supportsGpuParticles,this.pack8=!0,this.localBounds=new ve,this.worldBoundsNoTrail=new ve,this.worldBoundsTrail=[new ve,new ve],this.worldBounds=new ve,this.worldBoundsSize=new A,this.prevWorldBoundsSize=new A,this.prevWorldBoundsCenter=new A,this.prevEmitterExtents=this.emitterExtents,this.prevEmitterRadius=this.emitterRadius,this.worldBoundsMul=new A,this.worldBoundsAdd=new A,this.timeToSwitchBounds=0,this.shaderParticleUpdateRespawn=null,this.shaderParticleUpdateNoRespawn=null,this.shaderParticleUpdateOnStop=null,this.numParticleVerts=0,this.numParticleIndices=0,this.material=null,this.meshInstance=null,this.drawOrder=0,this.seed=Math.random(),this.fixedTimeStep=1/60,this.maxSubSteps=10,this.simTime=0,this.simTimeTotal=0,this.beenReset=!1,this._layer=null,this.rebuild()}get defaultParamTexture(){return b.assert(this.graphicsDevice),d1.get(this.graphicsDevice,()=>{const s=new Float32Array(1024);for(let r=0;r<16;r++)for(let n=0;n<16;n++){const a=n+1-8.5,o=r+1-8.5,h=M_(1-M_(Math.sqrt(a*a+o*o)/16)-.5),d=r*16+n;s[d*4]=1,s[d*4+1]=1,s[d*4+2]=1,s[d*4+3]=h}const i=rs(this.graphicsDevice,16,16,s,cs,1,!0);return i.minFilter=at,i.magFilter=at,i})}onChangeCamera(){this.resetMaterial()}calculateBoundsMad(){this.worldBoundsMul.x=1/this.worldBoundsSize.x,this.worldBoundsMul.y=1/this.worldBoundsSize.y,this.worldBoundsMul.z=1/this.worldBoundsSize.z,this.worldBoundsAdd.copy(this.worldBounds.center).mul(this.worldBoundsMul).mulScalar(-1),this.worldBoundsAdd.x+=.5,this.worldBoundsAdd.y+=.5,this.worldBoundsAdd.z+=.5}calculateWorldBounds(){if(!this.node)return;if(this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),!this.useCpu){let s=!1;this.emitterShape===qs?s=!this.emitterExtents.equals(this.prevEmitterExtents):s=this.emitterRadius!==this.prevEmitterRadius,s&&this.calculateLocalBounds()}const t=this.node.getWorldTransform();this.localSpace?this.worldBoundsNoTrail.copy(this.localBounds):this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,t),this.worldBoundsTrail[0].add(this.worldBoundsNoTrail),this.worldBoundsTrail[1].add(this.worldBoundsNoTrail);const e=this.simTimeTotal;e>=this.timeToSwitchBounds&&(this.worldBoundsTrail[0].copy(this.worldBoundsTrail[1]),this.worldBoundsTrail[1].copy(this.worldBoundsNoTrail),this.timeToSwitchBounds=e+this.lifetime),this.worldBounds.copy(this.worldBoundsTrail[0]),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.localSpace?(this.meshInstance.aabb.setFromTransformedAabb(this.worldBounds,t),this.meshInstance.mesh.aabb.setFromTransformedAabb(this.worldBounds,t)):(this.meshInstance.aabb.copy(this.worldBounds),this.meshInstance.mesh.aabb.copy(this.worldBounds)),this.meshInstance._aabbVer=1-this.meshInstance._aabbVer,this.pack8&&this.calculateBoundsMad()}resetWorldBounds(){this.node&&(this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,this.localSpace?q.IDENTITY:this.node.getWorldTransform()),this.worldBoundsTrail[0].copy(this.worldBoundsNoTrail),this.worldBoundsTrail[1].copy(this.worldBoundsNoTrail),this.worldBounds.copy(this.worldBoundsTrail[0]),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),this.simTimeTotal=0,this.timeToSwitchBounds=0)}calculateLocalBounds(){let t=Number.MAX_VALUE,e=Number.MAX_VALUE,s=Number.MAX_VALUE,i=-Number.MAX_VALUE,r=-Number.MAX_VALUE,n=-Number.MAX_VALUE,a=0,o=0;const h=this.lifetime/this.precision,d=[this.qVelocity,this.qVelocity2],u=[this.qLocalVelocity,this.qLocalVelocity2],f=[0,0],p=[0,0],m=[0,0],_=[0,0],g=[0,0];let y,w,C;for(let M=0;M<this.precision+1;M++){const S=Math.min(M,this.precision-1);for(let v=0;v<2;v++)y=u[v][S*3+0]*h+f[v],w=u[v][S*3+1]*h+p[v],C=u[v][S*3+2]*h+m[v],t=Math.min(y,t),e=Math.min(w,e),s=Math.min(C,s),i=Math.max(y,i),r=Math.max(w,r),n=Math.max(C,n),f[v]=y,p[v]=w,m[v]=C;for(let v=0;v<2;v++)g[v]+=h*Math.sqrt(d[v][S*3+0]*d[v][S*3+0]+d[v][S*3+1]*d[v][S*3+1]+d[v][S*3+2]*d[v][S*3+2]);_[0]+=this.qRadialSpeed[S]*h,_[1]+=this.qRadialSpeed2[S]*h,a=Math.max(a,Math.max(Math.abs(_[0]),Math.abs(_[1]))),o=Math.max(o,this.qScale[S])}this.emitterShape===qs?(y=this.emitterExtents.x*.5,w=this.emitterExtents.y*.5,C=this.emitterExtents.z*.5):(y=this.emitterRadius,w=this.emitterRadius,C=this.emitterRadius);const x=Math.max(g[0],g[1]);$l.x=t-o-y-a-x,$l.y=e-o-w-a-x,$l.z=s-o-C-a-x,ql.x=i+o+y+a+x,ql.y=r+o+w+a+x,ql.z=n+o+C+a+x,this.localBounds.setMinMax($l,ql)}rebuild(){const t=this.graphicsDevice;this.colorMap===null&&(this.colorMap=this.defaultParamTexture),this.spawnBounds=this.emitterShape===qs?this.emitterExtents:this.emitterRadius,this.useCpu=this.useCpu||this.sort>Ou||t.maxVertexTextures<=1||t.fragmentUniformsCount<64||t.forceCpuParticles,this._destroyResources(),this.pack8=(this.pack8||!t.textureFloatRenderable)&&!this.useCpu,li=this.useCpu||this.pack8?4:2,this.useMesh=!!this.mesh,this.numParticlesPot=z.nextPowerOfTwo(this.numParticles),this.rebuildGraphs(),this.calculateLocalBounds(),this.resetWorldBounds(),this.node&&(this.worldBounds.setFromTransformedAabb(this.localBounds,this.localSpace?q.IDENTITY:this.node.getWorldTransform()),this.worldBoundsTrail[0].copy(this.worldBounds),this.worldBoundsTrail[1].copy(this.worldBounds),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),this.pack8&&this.calculateBoundsMad()),this.vbToSort=new Array(this.numParticles);for(let d=0;d<this.numParticles;d++)this.vbToSort[d]=[0,0];this.particleDistance=new Float32Array(this.numParticles),this._gpuUpdater.randomize(),this.particleTex=new Float32Array(this.numParticlesPot*li*Wl);const e=this.node===null||this.localSpace?A.ZERO:this.node.getPosition();this.emitterShape===qs&&(this.node===null||this.localSpace?Ar.setTRS(A.ZERO,ie.IDENTITY,this.spawnBounds):Ar.setTRS(A.ZERO,this.node.getRotation(),D_.copy(this.spawnBounds).mul(this.node.localScale)),hi[0]=this.emitterExtents.x!==0?this.emitterExtentsInner.x/this.emitterExtents.x:0,hi[1]=this.emitterExtents.y!==0?this.emitterExtentsInner.y/this.emitterExtents.y:0,hi[2]=this.emitterExtents.z!==0?this.emitterExtentsInner.z/this.emitterExtents.z:0);for(let d=0;d<this.numParticles;d++)this._cpuUpdater.calcSpawnPosition(this.particleTex,Ar,hi,e,d),this.useCpu&&(this.particleTex[d*Wl+3+this.numParticlesPot*2*Wl]=1);this.particleTexStart=new Float32Array(this.numParticlesPot*li*Wl);for(let d=0;d<this.particleTexStart.length;d++)this.particleTexStart[d]=this.particleTex[d];this.useCpu||(this.pack8?(this.particleTexIN=rs(t,this.numParticlesPot,li,this.particleTex,Te,1,!1),this.particleTexOUT=rs(t,this.numParticlesPot,li,this.particleTex,Te,1,!1),this.particleTexStart=rs(t,this.numParticlesPot,li,this.particleTexStart,Te,1,!1)):(this.particleTexIN=rs(t,this.numParticlesPot,li,this.particleTex),this.particleTexOUT=rs(t,this.numParticlesPot,li,this.particleTex),this.particleTexStart=rs(t,this.numParticlesPot,li,this.particleTexStart)),this.rtParticleTexIN=new St({colorBuffer:this.particleTexIN,depth:!1}),this.rtParticleTexOUT=new St({colorBuffer:this.particleTexOUT,depth:!1}),this.swapTex=!1);const s=(this.localSpace?`#define LOCAL_SPACE
`:"")+j.particleUpdaterInitPS+(this.pack8?j.particleInputRgba8PS+j.particleOutputRgba8PS:j.particleInputFloatPS+j.particleOutputFloatPS)+(this.emitterShape===qs?j.particleUpdaterAABBPS:j.particleUpdaterSpherePS)+j.particleUpdaterStartPS,i=s+j.particleUpdaterRespawnPS+j.particleUpdaterEndPS,r=s+j.particleUpdaterNoRespawnPS+j.particleUpdaterEndPS,n=s+j.particleUpdaterOnStopPS+j.particleUpdaterEndPS,a=`Shape:${this.emitterShape}-Pack:${this.pack8}-Local:${this.localSpace}`;this.shaderParticleUpdateRespawn=Bs(t,j.fullscreenQuadVS,i,`ParticleUpdateRespawn-${a}`),this.shaderParticleUpdateNoRespawn=Bs(t,j.fullscreenQuadVS,r,`ParticleUpdateNoRespawn-${a}`),this.shaderParticleUpdateOnStop=Bs(t,j.fullscreenQuadVS,n,`ParticleUpdateStop-${a}`),this.numParticleVerts=this.useMesh?this.mesh.vertexBuffer.numVertices:4,this.numParticleIndices=this.useMesh?this.mesh.indexBuffer[0].numIndices:6,this._allocate(this.numParticles);const o=new ke(t);o.vertexBuffer=this.vertexBuffer,o.indexBuffer[0]=this.indexBuffer,o.primitive[0].type=Fs,o.primitive[0].base=0,o.primitive[0].count=this.numParticles*this.numParticleIndices,o.primitive[0].indexed=!0,this.material=this._createMaterial(),this.resetMaterial();const h=this.meshInstance?this.meshInstance.visible:!0;this.meshInstance=new Be(o,this.material,this.node),this.meshInstance.pick=!1,this.meshInstance.updateKey(),this.meshInstance.cull=!0,this.localSpace?this.meshInstance.aabb.setFromTransformedAabb(this.worldBounds,this.node.getWorldTransform()):this.meshInstance.aabb.copy(this.worldBounds),this.meshInstance._updateAabb=!1,this.meshInstance.visible=h,this._setMaterialTextures(),this.resetTime(),this.addTime(0,!1),this.preWarm&&this.prewarm(this.lifetime)}_isAnimated(){return this.animNumFrames>=1&&(this.animTilesX>1||this.animTilesY>1)&&(this.colorMap&&this.colorMap!==this.defaultParamTexture||this.normalMap)}rebuildGraphs(){const t=this.precision,e=this.graphicsDevice;this.qLocalVelocity=this.localVelocityGraph.quantize(t),this.qVelocity=this.velocityGraph.quantize(t),this.qColor=this.colorGraph.quantizeClamped(t,0,1),this.qRotSpeed=this.rotationSpeedGraph.quantize(t),this.qScale=this.scaleGraph.quantize(t),this.qAlpha=this.alphaGraph.quantize(t),this.qRadialSpeed=this.radialSpeedGraph.quantize(t),this.qLocalVelocity2=this.localVelocityGraph2.quantize(t),this.qVelocity2=this.velocityGraph2.quantize(t),this.qColor2=this.colorGraph2.quantizeClamped(t,0,1),this.qRotSpeed2=this.rotationSpeedGraph2.quantize(t),this.qScale2=this.scaleGraph2.quantize(t),this.qAlpha2=this.alphaGraph2.quantize(t),this.qRadialSpeed2=this.radialSpeedGraph2.quantize(t);for(let s=0;s<t;s++)this.qRotSpeed[s]*=z.DEG_TO_RAD,this.qRotSpeed2[s]*=z.DEG_TO_RAD;if(this.localVelocityUMax=new Float32Array(3),this.velocityUMax=new Float32Array(3),this.colorUMax=new Float32Array(3),this.rotSpeedUMax=[0],this.scaleUMax=[0],this.alphaUMax=[0],this.radialSpeedUMax=[0],this.qLocalVelocityDiv=Er(this.qLocalVelocity,this.qLocalVelocity2,this.localVelocityUMax),this.qVelocityDiv=Er(this.qVelocity,this.qVelocity2,this.velocityUMax),this.qColorDiv=Er(this.qColor,this.qColor2,this.colorUMax),this.qRotSpeedDiv=Er(this.qRotSpeed,this.qRotSpeed2,this.rotSpeedUMax),this.qScaleDiv=Er(this.qScale,this.qScale2,this.scaleUMax),this.qAlphaDiv=Er(this.qAlpha,this.qAlpha2,this.alphaUMax),this.qRadialSpeedDiv=Er(this.qRadialSpeed,this.qRadialSpeed2,this.radialSpeedUMax),this.pack8){const s=[0,0,0];kr(this.qVelocity,s);const i=[0,0,0];kr(this.qVelocity2,i);const r=[0,0,0];kr(this.qLocalVelocity,r);const n=[0,0,0];kr(this.qLocalVelocity2,n);const a=[0];kr(this.qRadialSpeed,a);const o=[0];kr(this.qRadialSpeed2,o);let h=Math.max(s[0],i[0]);h=Math.max(h,s[1]),h=Math.max(h,i[1]),h=Math.max(h,s[2]),h=Math.max(h,i[2]);let d=Math.max(r[0],n[0]);d=Math.max(d,r[1]),d=Math.max(d,n[1]),d=Math.max(d,r[2]),d=Math.max(d,n[2]);const u=Math.max(a[0],o[0]);this.maxVel=h+d+u}this.useCpu||(this.internalTex0=rs(e,t,1,L_(this.qLocalVelocity,this.qLocalVelocityDiv)),this.internalTex1=rs(e,t,1,L_(this.qVelocity,this.qVelocityDiv)),this.internalTex2=rs(e,t,1,a1(this.qRotSpeed,this.qScale,this.qScaleDiv,this.qRotSpeedDiv,this.qAlphaDiv)),this.internalTex3=rs(e,t,1,o1(this.qRadialSpeed,this.qRadialSpeedDiv))),this.colorParam=rs(e,t,1,n1(this.qColor,this.qAlpha),cs,1,!0)}_setMaterialTextures(){this.colorMap&&(b.call(()=>{Cy(this.colorMap.format)&&b.warnOnce(`ParticleEmitter: colorMap texture [${this.colorMap.name}] is not using sRGB format. Please correct it for the correct rendering.`,this.colorMap)}),this.material.setParameter("colorMap",this.colorMap),this.lighting&&this.normalMap&&this.material.setParameter("normalMap",this.normalMap))}_createMaterial(){const t=new i1(this);return t.name=`EmitterMaterial:${this.node.name}`,t.cull=vt,t.alphaWrite=!1,t.blendType=this.blendType,t.depthWrite=this.depthWrite,t}resetMaterial(){const t=this.material;t.setParameter("stretch",this.stretch),this._isAnimated()&&(t.setParameter("animTexTilesParams",this.animTilesParams),t.setParameter("animTexParams",this.animParams),t.setParameter("animTexIndexParams",this.animIndexParams)),t.setParameter("colorMult",this.intensity),this.useCpu||(t.setParameter("internalTex0",this.internalTex0),t.setParameter("internalTex1",this.internalTex1),t.setParameter("internalTex2",this.internalTex2),t.setParameter("internalTex3",this.internalTex3)),t.setParameter("colorParam",this.colorParam),t.setParameter("numParticles",this.numParticles),t.setParameter("numParticlesPot",this.numParticlesPot),t.setParameter("lifetime",this.lifetime),t.setParameter("rate",this.rate),t.setParameter("rateDiv",this.rate2-this.rate),t.setParameter("seed",this.seed),t.setParameter("scaleDivMult",this.scaleUMax[0]),t.setParameter("alphaDivMult",this.alphaUMax[0]),t.setParameter("radialSpeedDivMult",this.radialSpeedUMax[0]),t.setParameter("graphNumSamples",this.precision),t.setParameter("graphSampleSize",1/this.precision),t.setParameter("emitterScale",new Float32Array([1,1,1])),this.pack8&&(this._gpuUpdater._setInputBounds(),t.setParameter("inBoundsSize",this._gpuUpdater.inBoundsSizeUniform),t.setParameter("inBoundsCenter",this._gpuUpdater.inBoundsCenterUniform),t.setParameter("maxVel",this.maxVel)),this.wrap&&this.wrapBounds&&(this.wrapBoundsUniform[0]=this.wrapBounds.x,this.wrapBoundsUniform[1]=this.wrapBounds.y,this.wrapBoundsUniform[2]=this.wrapBounds.z,t.setParameter("wrapBounds",this.wrapBoundsUniform)),this._setMaterialTextures(),this.depthSoftening>0&&t.setParameter("softening",1/(this.depthSoftening*this.depthSoftening*100)),this.stretch>0&&(t.cull=vt),this._compParticleFaceParams()}_compParticleFaceParams(){let t,e;if(this.orientation===$h)t=new Float32Array([1,0,0]),e=new Float32Array([0,0,1]);else{let s;this.orientation===Xb?s=this.particleNormal.normalize():s=(this.node===null?q.IDENTITY:this.node.getWorldTransform()).transformVector(this.particleNormal).normalize();const i=new A(1,0,0);Math.abs(i.dot(s))===1&&i.set(0,0,1);const r=new A().cross(s,i).normalize();i.cross(r,s).normalize(),t=new Float32Array([i.x,i.y,i.z]),e=new Float32Array([r.x,r.y,r.z])}this.material.setParameter("faceTangent",t),this.material.setParameter("faceBinorm",e)}_allocate(t){const e=t*this.numParticleVerts,s=t*this.numParticleIndices;if(this.vertexBuffer===void 0||this.vertexBuffer.getNumVertices()!==e){const i=[];this.useCpu?i.push({semantic:Eu,components:4,type:Re},{semantic:Cu,components:4,type:Re},{semantic:Iy,components:4,type:Re},{semantic:Dy,components:1,type:Re},{semantic:Ly,components:this.useMesh?4:2,type:Re}):(i.push({semantic:Eu,components:4,type:Re}),this.useMesh&&i.push({semantic:Cu,components:2,type:Re}));const r=new Dt(this.graphicsDevice,i);this.vertexBuffer=new fs(this.graphicsDevice,r,e,{usage:Ph}),this.indexBuffer=new cr(this.graphicsDevice,or,s);const n=new Float32Array(this.vertexBuffer.lock());let a,o,h;if(this.useMesh){a=new Float32Array(this.mesh.vertexBuffer.lock()),o=a.length/this.mesh.vertexBuffer.numVertices;for(let f=0;f<this.mesh.vertexBuffer.format.elements.length;f++)if(this.mesh.vertexBuffer.format.elements[f].name===ds){h=this.mesh.vertexBuffer.format.elements[f].offset/4;break}}for(let f=0;f<e;f++){const p=Math.floor(f/this.numParticleVerts);if(this.useMesh){const m=f%this.numParticleVerts;n[f*6]=a[m*o],n[f*6+1]=a[m*o+1],n[f*6+2]=a[m*o+2],n[f*6+3]=p,n[f*6+4]=a[m*o+h+0],n[f*6+5]=1-a[m*o+h+1]}else{const m=f%4;n[f*4]=C_[m][0],n[f*4+1]=C_[m][1],n[f*4+2]=0,n[f*4+3]=p}}this.useCpu&&(this.vbCPU=new Float32Array(n),this.vbOld=new Float32Array(this.vbCPU.length)),this.vertexBuffer.unlock(),this.useMesh&&this.mesh.vertexBuffer.unlock();let d=0;const u=new Uint32Array(this.indexBuffer.lock());if(this.useMesh){const f=this.mesh.indexBuffer[0];a=new Nh[f.format](f.lock())}for(let f=0;f<t;f++)if(this.useMesh)for(let p=0;p<this.numParticleIndices;p++)u[f*this.numParticleIndices+p]=a[p]+f*this.numParticleVerts;else{const p=f*4;u[d++]=p,u[d++]=p+1,u[d++]=p+2,u[d++]=p,u[d++]=p+2,u[d++]=p+3}this.indexBuffer.unlock(),this.useMesh&&this.mesh.indexBuffer[0].unlock()}}reset(){if(this.beenReset=!0,this.seed=Math.random(),this.material.setParameter("seed",this.seed),this.useCpu)for(let e=0;e<this.particleTexStart.length;e++)this.particleTex[e]=this.particleTexStart[e];else this._setMaterialTextures();this.resetWorldBounds(),this.resetTime();const t=this.loop;this.loop=!0,this.addTime(0,!1),this.loop=t,this.preWarm&&this.prewarm(this.lifetime)}prewarm(t){const e=t/this.lifetime,s=Math.min(Math.floor(e*this.precision),this.precision),i=t/s;for(let r=0;r<s;r++)this.addTime(i,!1)}resetTime(){this.endTime=l1(this)}finishFrame(){this.useCpu&&this.vertexBuffer.unlock()}addTime(t,e){const s=this.graphicsDevice,i=ae();if(this.simTimeTotal+=t,this.calculateWorldBounds(),this._isAnimated()){const a=this.animTilesParams;a[0]=1/this.animTilesX,a[1]=1/this.animTilesY;const o=this.animParams;o[0]=this.animStartFrame,o[1]=this.animNumFrames*this.animSpeed,o[2]=this.animNumFrames-1,o[3]=this.animNumAnimations-1;const h=this.animIndexParams;h[0]=this.animIndex,h[1]=this.randomizeAnimIndex}this.scene&&this.camera!==this.scene._activeCamera&&(this.camera=this.scene._activeCamera,this.onChangeCamera()),this.emitterShape===qs&&(hi[0]=this.emitterExtents.x!==0?this.emitterExtentsInner.x/this.emitterExtents.x:0,hi[1]=this.emitterExtents.y!==0?this.emitterExtentsInner.y/this.emitterExtents.y:0,hi[2]=this.emitterExtents.z!==0?this.emitterExtentsInner.z/this.emitterExtents.z:0,this.meshInstance.node===null?Ar.setTRS(A.ZERO,ie.IDENTITY,this.emitterExtents):Ar.setTRS(A.ZERO,this.meshInstance.node.getRotation(),D_.copy(this.emitterExtents).mul(this.meshInstance.node.localScale)));let r;const n=this.meshInstance.node===null?A.ONE:this.meshInstance.node.localScale;if(this.emitterScaleUniform[0]=n.x,this.emitterScaleUniform[1]=n.y,this.emitterScaleUniform[2]=n.z,this.material.setParameter("emitterScale",this.emitterScaleUniform),this.localSpace&&this.meshInstance.node&&(r=this.meshInstance.node.getPosition(),this.emitterPosUniform[0]=r.x,this.emitterPosUniform[1]=r.y,this.emitterPosUniform[2]=r.z,this.material.setParameter("emitterPos",this.emitterPosUniform)),this._compParticleFaceParams(),!this.useCpu)this._gpuUpdater.update(s,Ar,hi,t,e);else{const a=new Float32Array(this.vertexBuffer.lock());this._cpuUpdater.update(a,this.vbToSort,this.particleTex,Ar,hi,r,t,e)}this.loop||Date.now()>this.endTime&&(this.onFinished&&this.onFinished(),this.meshInstance.visible=!1),this.meshInstance&&(this.meshInstance.drawOrder=this.drawOrder),this._addTimeTime+=ae()-i}_destroyResources(){var t,e,s,i,r,n,a,o,h,d,u,f;(t=this.particleTexIN)==null||t.destroy(),this.particleTexIN=null,(e=this.particleTexOUT)==null||e.destroy(),this.particleTexOUT=null,this.particleTexStart&&this.particleTexStart.destroy&&(this.particleTexStart.destroy(),this.particleTexStart=null),(s=this.rtParticleTexIN)==null||s.destroy(),this.rtParticleTexIN=null,(i=this.rtParticleTexOUT)==null||i.destroy(),this.rtParticleTexOUT=null,(r=this.internalTex0)==null||r.destroy(),this.internalTex0=null,(n=this.internalTex1)==null||n.destroy(),this.internalTex1=null,(a=this.internalTex2)==null||a.destroy(),this.internalTex2=null,(o=this.internalTex3)==null||o.destroy(),this.internalTex3=null,(h=this.colorParam)==null||h.destroy(),this.colorParam=null,(d=this.vertexBuffer)==null||d.destroy(),this.vertexBuffer=void 0,(u=this.indexBuffer)==null||u.destroy(),this.indexBuffer=void 0,(f=this.material)==null||f.destroy(),this.material=null}destroy(){this.camera=null,this._destroyResources()}}class f1 extends Nt{generateKey(t){const e=t.shaderDesc,s=e.vertexCode?cn(e.vertexCode):0,i=e.fragmentCode?cn(e.fragmentCode):0,r=Nt.definesHash(t.defines);let n=`${e.uniqueName}_${s}_${i}_${r}`;return t.skin&&(n+="_skin"),t.useInstancing&&(n+="_inst"),t.useMorphPosition&&(n+="_morphp"),t.useMorphNormal&&(n+="_morphn"),t.useMorphTextureBasedInt&&(n+="_morphi"),n}createAttributesDefinition(t,e){const s=e.shaderDesc.attributes,i=s?{...s}:void 0;e.skin&&(i.vertex_boneWeights=ei,i.vertex_boneIndices=Jt),(e.useMorphPosition||e.useMorphNormal)&&(i.morph_vertex_id=va),t.attributes=i}createVertexDefinition(t,e,s){const i=e.shaderDesc;if(t.shaderLanguage===Fh)t.vertexCode=i.vertexCode;else{const r=new Map(s),n=new Map(e.defines);r.set("transformInstancingVS",""),e.skin&&n.set("SKIN",!0),e.useInstancing&&n.set("INSTANCING",!0),(e.useMorphPosition||e.useMorphNormal)&&(n.set("MORPHING",!0),e.useMorphTextureBasedInt&&n.set("MORPHING_INT",!0),e.useMorphPosition&&n.set("MORPHING_POSITION",!0),e.useMorphNormal&&n.set("MORPHING_NORMAL",!0)),t.vertexCode=i.vertexCode,t.vertexIncludes=r,t.vertexDefines=n}}createFragmentDefinition(t,e,s){const i=e.shaderDesc;if(t.shaderLanguage===Fh)t.fragmentCode=i.fragmentCode;else{const r=new Map(s),n=new Map(e.defines);t.fragmentCode=i.fragmentCode,t.fragmentIncludes=r,t.fragmentDefines=n}}createShaderDefinition(t,e){const s=e.shaderDesc,i={name:`ShaderMaterial-${s.uniqueName}`,shaderLanguage:s.shaderLanguage,fragmentOutputTypes:s.fragmentOutputTypes,meshUniformBufferFormat:s.meshUniformBufferFormat,meshBindGroupFormat:s.meshBindGroupFormat},r=new Map(Object.entries({...j,...e.chunks}));return this.createAttributesDefinition(i,e),this.createVertexDefinition(i,e,r),this.createFragmentDefinition(i,e,r),Ft.createDefinition(t,i)}}const p1=new f1;class La extends Sn{constructor(e){super();c(this,"_shaderDesc");this.shaderDesc=e}set shaderDesc(e){e&&(b.assert(e.vertexCode,"ShaderMaterial: shaderDesc must contain vertexCode"),b.assert(e.fragmentCode,"ShaderMaterial: shaderDesc must contain fragmentCode")),this._shaderDesc=e?{...e}:void 0,this.clearVariants()}get shaderDesc(){return this._shaderDesc}copy(e){return super.copy(e),this.shaderDesc=e.shaderDesc,this}getShaderVariant(e){const{objDefs:s}=e,i={defines:Op(this,e),skin:(s&jc)!==0,useInstancing:(s&Yc)!==0,useMorphPosition:(s&Kc)!==0,useMorphNormal:(s&Zc)!==0,useMorphTextureBasedInt:(s&Qc)!==0,pass:e.pass,gamma:e.cameraShaderParams.shaderOutputGamma,toneMapping:e.cameraShaderParams.toneMapping,fog:e.cameraShaderParams.fog,shaderDesc:this.shaderDesc,chunks:this.chunks??{}},r=new Jc(e.viewUniformFormat,e.viewBindGroupFormat,e.vertexFormat),n=za(e.device);return n.register("shader-material",p1),n.getProgram("shader-material",i,r,this.userId)}}const B0=(l,t)=>{const e=t.length/3,s=l.length/3,i=new A,r=new A,n=new A,a=new A,o=new A,h=new A,d=[];for(let u=0;u<l.length;u++)d[u]=0;for(let u=0;u<e;u++){const f=t[u*3],p=t[u*3+1],m=t[u*3+2];i.set(l[f*3],l[f*3+1],l[f*3+2]),r.set(l[p*3],l[p*3+1],l[p*3+2]),n.set(l[m*3],l[m*3+1],l[m*3+2]),a.sub2(r,i),o.sub2(n,i),h.cross(a,o).normalize(),d[f*3]+=h.x,d[f*3+1]+=h.y,d[f*3+2]+=h.z,d[p*3]+=h.x,d[p*3+1]+=h.y,d[p*3+2]+=h.z,d[m*3]+=h.x,d[m*3+1]+=h.y,d[m*3+2]+=h.z}for(let u=0;u<s;u++){const f=d[u*3],p=d[u*3+1],m=d[u*3+2],_=1/Math.sqrt(f*f+p*p+m*m);d[u*3]*=_,d[u*3+1]*=_,d[u*3+2]*=_}return d},pr=(l,t,e,s)=>{const i=s.length/3,r=l.length/3,n=new A,a=new A,o=new A,h=new W,d=new W,u=new W,f=new A,p=new A,m=new Float32Array(r*3),_=new Float32Array(r*3),g=[];for(let M=0;M<i;M++){const S=s[M*3],v=s[M*3+1],E=s[M*3+2];n.set(l[S*3],l[S*3+1],l[S*3+2]),a.set(l[v*3],l[v*3+1],l[v*3+2]),o.set(l[E*3],l[E*3+1],l[E*3+2]),h.set(e[S*2],e[S*2+1]),d.set(e[v*2],e[v*2+1]),u.set(e[E*2],e[E*2+1]);const T=a.x-n.x,R=o.x-n.x,D=a.y-n.y,P=o.y-n.y,L=a.z-n.z,k=o.z-n.z,H=d.x-h.x,N=u.x-h.x,I=d.y-h.y,F=u.y-h.y,O=H*F-N*I;if(O===0)f.set(0,1,0),p.set(1,0,0);else{const B=1/O;f.set((F*T-I*R)*B,(F*D-I*P)*B,(F*L-I*k)*B),p.set((H*R-N*T)*B,(H*P-N*D)*B,(H*k-N*L)*B)}m[S*3+0]+=f.x,m[S*3+1]+=f.y,m[S*3+2]+=f.z,m[v*3+0]+=f.x,m[v*3+1]+=f.y,m[v*3+2]+=f.z,m[E*3+0]+=f.x,m[E*3+1]+=f.y,m[E*3+2]+=f.z,_[S*3+0]+=p.x,_[S*3+1]+=p.y,_[S*3+2]+=p.z,_[v*3+0]+=p.x,_[v*3+1]+=p.y,_[v*3+2]+=p.z,_[E*3+0]+=p.x,_[E*3+1]+=p.y,_[E*3+2]+=p.z}const y=new A,w=new A,C=new A,x=new A;for(let M=0;M<r;M++){C.set(t[M*3],t[M*3+1],t[M*3+2]),y.set(m[M*3],m[M*3+1],m[M*3+2]),w.set(_[M*3],_[M*3+1],_[M*3+2]);const S=C.dot(y);x.copy(C).mulScalar(S),x.sub2(y,x).normalize(),g[M*4]=x.x,g[M*4+1]=x.y,g[M*4+2]=x.z,x.cross(C,y),g[M*4+3]=x.dot(w)<0?-1:1}return g};class _n{constructor(){c(this,"positions");c(this,"normals");c(this,"colors");c(this,"uvs");c(this,"uvs1");c(this,"blendIndices");c(this,"blendWeights");c(this,"tangents");c(this,"indices")}calculateNormals(){b.assert(this.positions,"Geometry must have positions set"),b.assert(this.indices,"Geometry must have indices set"),this.normals=B0(this.positions,this.indices)}calculateTangents(){b.assert(this.positions,"Geometry must have positions set"),b.assert(this.normals,"Geometry must have normals set"),b.assert(this.uvs,"Geometry must have uvs set"),b.assert(this.indices,"Geometry must have indices set"),this.tangents=pr(this.positions,this.normals,this.uvs,this.indices)}}const ju=4/64,F_=1-ju*2;class Yu extends _n{constructor(t={}){super();const e=t.halfExtents??new A(.5,.5,.5),s=t.widthSegments??1,i=t.lengthSegments??1,r=t.heightSegments??1,n=t.yOffset??0,a=-e.y+n,o=e.y+n,h=[new A(-e.x,a,e.z),new A(e.x,a,e.z),new A(e.x,o,e.z),new A(-e.x,o,e.z),new A(e.x,a,-e.z),new A(-e.x,a,-e.z),new A(-e.x,o,-e.z),new A(e.x,o,-e.z)],d=[[0,1,3],[4,5,7],[3,2,6],[1,0,4],[1,4,2],[5,0,6]],u=[[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]],f={FRONT:0,BACK:1,TOP:2,BOTTOM:3,RIGHT:4,LEFT:5},p=[],m=[],_=[],g=[];let y=0;const w=(C,x,M)=>{const S=new A,v=new A,E=new A,T=new A;for(let R=0;R<=x;R++)for(let D=0;D<=M;D++){S.lerp(h[d[C][0]],h[d[C][1]],R/x),v.lerp(h[d[C][0]],h[d[C][2]],D/M),E.sub2(v,h[d[C][0]]),T.add2(S,E);let P=R/x,L=D/M;p.push(T.x,T.y,T.z),m.push(u[C][0],u[C][1],u[C][2]),_.push(P,1-L),P=P*F_+ju,L=L*F_+ju,P/=3,L/=3,P+=C%3/3,L+=Math.floor(C/3)/3,R<x&&D<M&&(g.push(y+M+1,y+1,y),g.push(y+M+1,y+M+2,y+1)),y++}};w(f.FRONT,s,r),w(f.BACK,s,r),w(f.TOP,s,i),w(f.BOTTOM,s,i),w(f.RIGHT,i,r),w(f.LEFT,i,r),this.positions=p,this.normals=m,this.uvs=_,this.uvs1=_,this.indices=g,t.calculateTangents&&(this.tangents=pr(p,m,_,g))}}class N0 extends _n{constructor(t={}){super();const e=t.radius??.5,s=t.latitudeBands??16,i=t.longitudeBands??16,r=[],n=[],a=[],o=[];for(let h=0;h<=s;h++){const d=h*Math.PI/s,u=Math.sin(d),f=Math.cos(d);for(let p=0;p<=i;p++){const m=p*2*Math.PI/i-Math.PI/2,_=Math.sin(m),y=Math.cos(m)*u,w=f,C=_*u,x=1-p/i,M=1-h/s;r.push(y*e,w*e,C*e),n.push(y,w,C),a.push(x,1-M)}}for(let h=0;h<s;++h)for(let d=0;d<i;++d){const u=h*(i+1)+d,f=u+i+1;o.push(u+1,f,u),o.push(u+1,f+1,f)}this.positions=r,this.normals=n,this.uvs=a,this.uvs1=a,this.indices=o,t.calculateTangents&&(this.tangents=pr(r,n,a,o))}}class m1 extends N0{constructor(t={}){const s=t.latitudeBands??16,i=t.longitudeBands??16;super({radius:.5,latitudeBands:s,longitudeBands:i});const r=.1,n=.95,a=n*n,o=this.positions;for(let h=0;h<o.length;h+=3){const d=o[h]/.5;let u=o[h+1]/.5;const f=o[h+2]/.5;u<0&&(u*=.3,d*d+f*f<a&&(u=-.1)),u+=r,u*=.5,o[h+1]=u}}}class To{static create(t,e){switch(e){case tw:return To.box(t);case sw:return To.dome(t)}return b.assert(e===wo,`Unsupported sky geometry type ${e}`),To.infinite(t)}static infinite(t){return ke.fromGeometry(t,new Yu(t))}static box(t){return ke.fromGeometry(t,new Yu({yOffset:.5}))}static dome(t){const e=new m1({latitudeBands:50,longitudeBands:50});return e.normals=void 0,e.uvs=void 0,ke.fromGeometry(t,e)}}class _1{constructor(t,e,s,i,r){c(this,"meshInstance",null);const n=new La({uniqueName:"SkyMaterial",vertexCode:j.skyboxVS,fragmentCode:j.skyboxPS,attributes:{aPosition:Xe}});n.setDefine("__INJECT_SKYBOX_DECODE_FNC",Ds.decodeFunc(i.encoding)),r!==wo&&n.setDefine("SKYMESH",""),i.cubemap&&n.setDefine("SKY_CUBEMAP",""),n.setParameter("skyboxHighlightMultiplier",e.skyboxHighlightMultiplier),i.cubemap?n.setParameter("texture_cubeMap",i):(n.setParameter("texture_envAtlas",i),n.setParameter("mipLevel",e.skyboxMip)),n.cull=xo,n.depthWrite=!1;const a=e.layers.getLayerById(Ap);if(a){const o=To.create(t,r),h=new Be(o,n,s);this.meshInstance=h,h.cull=!1,h.pick=!1,a.addMeshInstances([h]),this.skyLayer=a}}destroy(){this.meshInstance&&(this.skyLayer&&this.skyLayer.removeMeshInstances([this.meshInstance]),this.meshInstance.destroy(),this.meshInstance=null)}}class g1{constructor(t){c(this,"_type",wo);c(this,"_center",new A(0,1,0));c(this,"skyMesh",null);c(this,"node",new Oe("SkyMeshNode"));this.device=t.device,this.scene=t,this.center=new A(0,1,0),this.centerArray=new Float32Array(3),this.projectedSkydomeCenterId=this.device.scope.resolve("projectedSkydomeCenter")}applySettings(t){this.type=t.skyType??wo,this.node.setLocalPosition(new A(t.skyMeshPosition??[0,0,0])),this.node.setLocalEulerAngles(new A(t.skyMeshRotation??[0,0,0])),this.node.setLocalScale(new A(t.skyMeshScale??[1,1,1])),t.skyCenter&&(this._center=new A(t.skyCenter))}set type(t){this._type!==t&&(this._type=t,this.scene.updateShaders=!0,this.updateSkyMesh())}get type(){return this._type}set center(t){this._center.copy(t)}get center(){return this._center}updateSkyMesh(){const t=this.scene._getSkyboxTex();t&&(this.resetSkyMesh(),this.skyMesh=new _1(this.device,this.scene,this.node,t,this.type),this.scene.fire("set:skybox",t))}resetSkyMesh(){var t;(t=this.skyMesh)==null||t.destroy(),this.skyMesh=null}update(){if(this.type!==wo){const{center:t,centerArray:e}=this,s=new A;this.node.getWorldTransform().transformPoint(t,s),e[0]=s.x,e[1]=s.y,e[2]=s.z,this.projectedSkydomeCenterId.setValue(e)}}}const jh=new Oe;jh.worldTransform=q.IDENTITY;jh._dirtyWorld=jh._dirtyNormal=!1;class y1{constructor(t,e,s){this.material=e,this.layer=s,this.positions=[],this.colors=[],this.mesh=new ke(t),this.meshInstance=null}addLines(t,e){const s=this.positions,i=t.length;for(let n=0;n<i;n++){const a=t[n];s.push(a.x,a.y,a.z)}const r=this.colors;if(e.length)for(let n=0;n<i;n++){const a=e[n];r.push(a.r,a.g,a.b,a.a)}else for(let n=0;n<i;n++)r.push(e.r,e.g,e.b,e.a)}addLinesArrays(t,e){const s=this.positions;for(let r=0;r<t.length;r+=3)s.push(t[r],t[r+1],t[r+2]);const i=this.colors;if(e.length)for(let r=0;r<e.length;r+=4)i.push(e[r],e[r+1],e[r+2],e[r+3]);else{const r=t.length/3;for(let n=0;n<r;n++)i.push(e.r,e.g,e.b,e.a)}}onPreRender(t,e){this.positions.length>0&&this.material.transparent===e&&(this.mesh.setPositions(this.positions),this.mesh.setColors(this.colors),this.mesh.update(Lc,!1),this.meshInstance||(this.meshInstance=new Be(this.mesh,this.material,jh)),t.push(this.meshInstance))}clear(){this.positions.length=0,this.colors.length=0}}class x1{constructor(t){this.device=t,this.map=new Map}getBatch(t,e){let s=this.map.get(t);return s||(s=new y1(this.device,t,e),this.map.set(t,s)),s}onPreRender(t,e){this.map.forEach(s=>{s.onPreRender(t,e)})}clear(){this.map.forEach(t=>t.clear())}}const ns=[],kn=new A,S1={uniqueName:"ImmediateLine",vertexCode:`
        attribute vec3 vertex_position;
        attribute vec4 vertex_color;
        uniform mat4 matrix_model;
        uniform mat4 matrix_viewProjection;
        varying vec4 color;
        void main(void) {
            color = vertex_color;
            gl_Position = matrix_viewProjection * matrix_model * vec4(vertex_position, 1);
        }
    `,fragmentCode:`
        #include "gammaPS"
        varying vec4 color;
        void main(void) {
            gl_FragColor = vec4(gammaCorrectOutput(decodeGamma(color.rgb)), color.a);
        }
    `,attributes:{vertex_position:Xe,vertex_color:It}};class v1{constructor(t){c(this,"shaderDescs",new Map);this.device=t,this.quadMesh=null,this.textureShader=null,this.depthTextureShader=null,this.cubeLocalPos=null,this.cubeWorldPos=null,this.batchesMap=new Map,this.allBatches=new Set,this.updatedLayers=new Set,this._materialDepth=null,this._materialNoDepth=null,this.layerMeshInstances=new Map}createMaterial(t){const e=new La(S1);return e.blendType=Gt,e.depthTest=t,e.update(),e}get materialDepth(){return this._materialDepth||(this._materialDepth=this.createMaterial(!0)),this._materialDepth}get materialNoDepth(){return this._materialNoDepth||(this._materialNoDepth=this.createMaterial(!1)),this._materialNoDepth}getBatch(t,e){let s=this.batchesMap.get(t);s||(s=new x1(this.device),this.batchesMap.set(t,s)),this.allBatches.add(s);const i=e?this.materialDepth:this.materialNoDepth;return s.getBatch(i,t)}getShaderDesc(t,e){return this.shaderDescs.has(t)||this.shaderDescs.set(t,{uniqueName:`DebugShader:${t}`,vertexCode:`
                attribute vec2 vertex_position;
                uniform mat4 matrix_model;
                varying vec2 uv0;
                void main(void) {
                    gl_Position = matrix_model * vec4(vertex_position, 0, 1);
                    uv0 = vertex_position.xy + 0.5;
                }
            `,fragmentCode:e,attributes:{vertex_position:Xe}}),this.shaderDescs.get(t)}getTextureShaderDesc(t){const e=Ds.decodeFunc(t);return this.getShaderDesc(`textureShader-${t}`,`
            #include "gammaPS"
            varying vec2 uv0;
            uniform sampler2D colorMap;
            void main (void) {
                vec3 linearColor = ${e}(texture2D(colorMap, uv0));
                gl_FragColor = vec4(gammaCorrectOutput(linearColor), 1);
            }
        `)}getUnfilterableTextureShaderDesc(){return this.getShaderDesc("textureShaderUnfilterable",`
            varying vec2 uv0;
            uniform highp sampler2D colorMap;
            void main (void) {
                ivec2 uv = ivec2(uv0 * textureSize(colorMap, 0));
                gl_FragColor = vec4(texelFetch(colorMap, uv, 0).xyz, 1);
            }
        `)}getDepthTextureShaderDesc(){return this.getShaderDesc("depthTextureShader",`
            ${j.screenDepthPS}
            #include "gammaPS"
            varying vec2 uv0;
            void main() {
                float depth = getLinearScreenDepth(getImageEffectUV(uv0)) * camera_params.x;
                gl_FragColor = vec4(gammaCorrectOutput(vec3(depth)), 1.0);
            }
        `)}getQuadMesh(){return this.quadMesh||(this.quadMesh=new ke(this.device),this.quadMesh.setPositions([-.5,-.5,0,.5,-.5,0,-.5,.5,0,.5,.5,0]),this.quadMesh.update(lr)),this.quadMesh}drawMesh(t,e,s,i,r){if(!i){const a=this.getGraphNode(e);i=new Be(s,t,a)}let n=this.layerMeshInstances.get(r);n||(n=[],this.layerMeshInstances.set(r,n)),n.push(i)}drawWireAlignedBox(t,e,s,i,r,n){if(n){const o=(h,d,u)=>{kn.set(h,d,u),n.transformPoint(kn,kn),ns.push(kn.x,kn.y,kn.z)};o(t.x,t.y,t.z),o(t.x,e.y,t.z),o(t.x,e.y,t.z),o(e.x,e.y,t.z),o(e.x,e.y,t.z),o(e.x,t.y,t.z),o(e.x,t.y,t.z),o(t.x,t.y,t.z),o(t.x,t.y,e.z),o(t.x,e.y,e.z),o(t.x,e.y,e.z),o(e.x,e.y,e.z),o(e.x,e.y,e.z),o(e.x,t.y,e.z),o(e.x,t.y,e.z),o(t.x,t.y,e.z),o(t.x,t.y,t.z),o(t.x,t.y,e.z),o(t.x,e.y,t.z),o(t.x,e.y,e.z),o(e.x,e.y,t.z),o(e.x,e.y,e.z),o(e.x,t.y,t.z),o(e.x,t.y,e.z)}else ns.push(t.x,t.y,t.z,t.x,e.y,t.z,t.x,e.y,t.z,e.x,e.y,t.z,e.x,e.y,t.z,e.x,t.y,t.z,e.x,t.y,t.z,t.x,t.y,t.z,t.x,t.y,e.z,t.x,e.y,e.z,t.x,e.y,e.z,e.x,e.y,e.z,e.x,e.y,e.z,e.x,t.y,e.z,e.x,t.y,e.z,t.x,t.y,e.z,t.x,t.y,t.z,t.x,t.y,e.z,t.x,e.y,t.z,t.x,e.y,e.z,e.x,e.y,t.z,e.x,e.y,e.z,e.x,t.y,t.z,e.x,t.y,e.z);this.getBatch(r,i).addLinesArrays(ns,s),ns.length=0}drawWireSphere(t,e,s,i,r,n){const a=2*Math.PI/i;let o=0;for(let d=0;d<i;d++){const u=Math.sin(o),f=Math.cos(o);o+=a;const p=Math.sin(o),m=Math.cos(o);ns.push(t.x+e*u,t.y,t.z+e*f),ns.push(t.x+e*p,t.y,t.z+e*m),ns.push(t.x+e*u,t.y+e*f,t.z),ns.push(t.x+e*p,t.y+e*m,t.z),ns.push(t.x,t.y+e*u,t.z+e*f),ns.push(t.x,t.y+e*p,t.z+e*m)}this.getBatch(n,r).addLinesArrays(ns,s),ns.length=0}getGraphNode(t){const e=new Oe("ImmediateDebug");return e.worldTransform=t,e._dirtyWorld=e._dirtyNormal=!1,e}onPreRenderLayer(t,e,s){if(this.batchesMap.forEach((i,r)=>{r===t&&i.onPreRender(e,s)}),!this.updatedLayers.has(t)){this.updatedLayers.add(t);const i=this.layerMeshInstances.get(t);if(i){for(let r=0;r<i.length;r++)e.push(i[r]);i.length=0}}}onPostRender(){this.allBatches.forEach(t=>t.clear()),this.allBatches.clear(),this.updatedLayers.clear()}}class b1{constructor(){c(this,"type",Ba);c(this,"color",new Y(0,0,0));c(this,"density",0);c(this,"start",1);c(this,"end",1e3)}}class mi extends de{constructor(e){super();c(this,"ambientBake",!1);c(this,"ambientBakeOcclusionBrightness",0);c(this,"ambientBakeOcclusionContrast",0);c(this,"ambientLight",new Y(0,0,0));c(this,"ambientLuminance",0);c(this,"exposure",1);c(this,"lightmapSizeMultiplier",1);c(this,"lightmapMaxResolution",2048);c(this,"lightmapMode",mh);c(this,"lightmapFilterEnabled",!1);c(this,"lightmapHDR",!1);c(this,"root",null);c(this,"physicalUnits",!1);c(this,"_envAtlas",null);c(this,"_skyboxCubeMap",null);c(this,"_fogParams",new b1);b.assert(e,"Scene constructor takes a GraphicsDevice as a parameter, and it was not provided."),this.device=e,this._gravity=new A(0,-9.8,0),this._layers=null,this._prefilteredCubemaps=[],this._internalEnvAtlas=null,this._skyboxIntensity=1,this._skyboxLuminance=0,this._skyboxMip=0,this._skyboxHighlightMultiplier=1,this._skyboxRotationShaderInclude=!1,this._skyboxRotation=new ie,this._skyboxRotationMat3=new Js,this._skyboxRotationMat4=new q,this._ambientBakeNumSamples=1,this._ambientBakeSpherePart=.4,this._lightmapFilterRange=10,this._lightmapFilterSmoothness=.2,this._clusteredLightingEnabled=!0,this._lightingParams=new F0(this.device.supportsAreaLights,this.device.maxTextureSize,()=>{this.updateShaders=!0}),this._sky=new g1(this),this._stats={meshInstances:0,lights:0,dynamicLights:0,bakedLights:0,updateShadersTime:0},this.updateShaders=!0,this._shaderVersion=0,this.immediate=new v1(this.device)}get defaultDrawLayer(){return this.layers.getLayerById(Ep)}set ambientBakeNumSamples(e){this._ambientBakeNumSamples=z.clamp(Math.floor(e),1,255)}get ambientBakeNumSamples(){return this._ambientBakeNumSamples}set ambientBakeSpherePart(e){this._ambientBakeSpherePart=z.clamp(e,.001,1)}get ambientBakeSpherePart(){return this._ambientBakeSpherePart}set clusteredLightingEnabled(e){if(this.device.isWebGPU&&!e){b.warnOnce("WebGPU currently only supports clustered lighting, and this cannot be disabled.");return}if(!this._clusteredLightingEnabled&&e){console.error("Turning on disabled clustered lighting is not currently supported");return}this._clusteredLightingEnabled=e}get clusteredLightingEnabled(){return this._clusteredLightingEnabled}set envAtlas(e){e!==this._envAtlas&&(this._envAtlas=e,e&&(e.addressU=oe,e.addressV=oe,e.minFilter=at,e.magFilter=at,e.mipmaps=!1),this._prefilteredCubemaps=[],this._internalEnvAtlas&&(this._internalEnvAtlas.destroy(),this._internalEnvAtlas=null),this._resetSkyMesh())}get envAtlas(){return this._envAtlas}set layers(e){const s=this._layers;this._layers=e,this.fire("set:layers",s,e)}get layers(){return this._layers}get sky(){return this._sky}get lighting(){return this._lightingParams}get fog(){return this._fogParams}set lightmapFilterRange(e){this._lightmapFilterRange=Math.max(e,.001)}get lightmapFilterRange(){return this._lightmapFilterRange}set lightmapFilterSmoothness(e){this._lightmapFilterSmoothness=Math.max(e,.001)}get lightmapFilterSmoothness(){return this._lightmapFilterSmoothness}set prefilteredCubemaps(e){e=e||[];const s=this._prefilteredCubemaps;(s.length!==e.length||s.some((r,n)=>r!==e[n]))&&(e.length===6&&e.every(n=>!!n)?(this._internalEnvAtlas=P0.generatePrefilteredAtlas(e,{target:this._internalEnvAtlas}),this._envAtlas=this._internalEnvAtlas):(this._internalEnvAtlas&&(this._internalEnvAtlas.destroy(),this._internalEnvAtlas=null),this._envAtlas=null),this._prefilteredCubemaps=e.slice(),this._resetSkyMesh())}get prefilteredCubemaps(){return this._prefilteredCubemaps}set skybox(e){e!==this._skyboxCubeMap&&(this._skyboxCubeMap=e,this._resetSkyMesh())}get skybox(){return this._skyboxCubeMap}set skyboxIntensity(e){e!==this._skyboxIntensity&&(this._skyboxIntensity=e,this._resetSkyMesh())}get skyboxIntensity(){return this._skyboxIntensity}set skyboxLuminance(e){e!==this._skyboxLuminance&&(this._skyboxLuminance=e,this._resetSkyMesh())}get skyboxLuminance(){return this._skyboxLuminance}set skyboxMip(e){e!==this._skyboxMip&&(this._skyboxMip=e,this._resetSkyMesh())}get skyboxMip(){return this._skyboxMip}set skyboxHighlightMultiplier(e){e!==this._skyboxHighlightMultiplier&&(this._skyboxHighlightMultiplier=e,this._resetSkyMesh())}get skyboxHighlightMultiplier(){return this._skyboxHighlightMultiplier}set skyboxRotation(e){if(!this._skyboxRotation.equals(e)){const s=e.equals(ie.IDENTITY);this._skyboxRotation.copy(e),s?this._skyboxRotationMat3.setIdentity():(this._skyboxRotationMat4.setTRS(A.ZERO,e,A.ONE),this._skyboxRotationMat3.invertMat4(this._skyboxRotationMat4)),!this._skyboxRotationShaderInclude&&!s&&(this._skyboxRotationShaderInclude=!0,this._resetSkyMesh())}}get skyboxRotation(){return this._skyboxRotation}destroy(){this._resetSkyMesh(),this.root=null,this.off()}drawLine(e,s,i=Y.WHITE,r=!0,n=this.defaultDrawLayer){this.immediate.getBatch(n,r).addLines([e,s],[i,i])}drawLines(e,s,i=!0,r=this.defaultDrawLayer){this.immediate.getBatch(r,i).addLines(e,s)}drawLineArrays(e,s,i=!0,r=this.defaultDrawLayer){this.immediate.getBatch(r,i).addLinesArrays(e,s)}applySettings(e){const s=e.physics,i=e.render;this._gravity.set(s.gravity[0],s.gravity[1],s.gravity[2]),this.ambientLight.set(i.global_ambient[0],i.global_ambient[1],i.global_ambient[2]),this.ambientLuminance=i.ambientLuminance,this.fog.type=i.fog,this.fog.color.set(i.fog_color[0],i.fog_color[1],i.fog_color[2]),this.fog.start=i.fog_start,this.fog.end=i.fog_end,this.fog.density=i.fog_density,this.lightmapSizeMultiplier=i.lightmapSizeMultiplier,this.lightmapMaxResolution=i.lightmapMaxResolution,this.lightmapMode=i.lightmapMode,this.exposure=i.exposure,this._skyboxIntensity=i.skyboxIntensity??1,this._skyboxLuminance=i.skyboxLuminance??2e4,this._skyboxMip=i.skyboxMip??0,i.skyboxRotation&&(this.skyboxRotation=new ie().setFromEulerAngles(i.skyboxRotation[0],i.skyboxRotation[1],i.skyboxRotation[2])),this.sky.applySettings(i),this.clusteredLightingEnabled=i.clusteredLightingEnabled??!1,this.lighting.applySettings(i),["lightmapFilterEnabled","lightmapFilterRange","lightmapFilterSmoothness","ambientBake","ambientBakeNumSamples","ambientBakeSpherePart","ambientBakeOcclusionBrightness","ambientBakeOcclusionContrast"].forEach(r=>{i.hasOwnProperty(r)&&(this[r]=i[r])}),this._resetSkyMesh()}_getSkyboxTex(){const e=this._prefilteredCubemaps;return this._skyboxMip?e[[0,1,3,4,5,6][this._skyboxMip]]||this._envAtlas||e[0]||this._skyboxCubeMap:this._skyboxCubeMap||e[0]||this._envAtlas}_updateSkyMesh(){this.sky.skyMesh||this.sky.updateSkyMesh(),this.sky.update()}_resetSkyMesh(){this.sky.resetSkyMesh(),this.updateShaders=!0}setSkybox(e){e?(this.skybox=e[0]||null,e[1]&&!e[1].cubemap?this.envAtlas=e[1]:this.prefilteredCubemaps=e.slice(1)):(this.skybox=null,this.envAtlas=null)}get lightmapPixelFormat(){return this.lightmapHDR&&this.device.getRenderableHdrFormat()||Te}}c(mi,"EVENT_SETLAYERS","set:layers"),c(mi,"EVENT_SETSKYBOX","set:skybox"),c(mi,"EVENT_PRERENDER","prerender"),c(mi,"EVENT_POSTRENDER","postrender"),c(mi,"EVENT_PRERENDER_LAYER","prerender:layer"),c(mi,"EVENT_POSTRENDER_LAYER","postrender:layer"),c(mi,"EVENT_PRECULL","precull"),c(mi,"EVENT_POSTCULL","postcull");class z0{constructor(t,e,s){this.device=t,this.inverseBindPose=e,this.boneNames=s}}const w1=[0,0,1,0,0,1,0,0,1,0,0,1],T1=[0,1,3,2,3,1];class A1 extends de{constructor(t,e){super(),this._device=t,this._pixelsPerUnit=e&&e.pixelsPerUnit!==void 0?e.pixelsPerUnit:1,this._renderMode=e&&e.renderMode!==void 0?e.renderMode:Pi,this._atlas=e&&e.atlas!==void 0?e.atlas:null,this._frameKeys=e&&e.frameKeys!==void 0?e.frameKeys:null,this._meshes=[],this._updatingProperties=!1,this._meshesDirty=!1,this._atlas&&this._frameKeys&&this._createMeshes()}set frameKeys(t){this._frameKeys=t,this._atlas&&this._frameKeys&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes()),this.fire("set:frameKeys",t)}get frameKeys(){return this._frameKeys}set atlas(t){t!==this._atlas&&(this._atlas&&(this._atlas.off("set:frames",this._onSetFrames,this),this._atlas.off("set:frame",this._onFrameChanged,this),this._atlas.off("remove:frame",this._onFrameRemoved,this)),this._atlas=t,this._atlas&&this._frameKeys&&(this._atlas.on("set:frames",this._onSetFrames,this),this._atlas.on("set:frame",this._onFrameChanged,this),this._atlas.on("remove:frame",this._onFrameRemoved,this),this._updatingProperties?this._meshesDirty=!0:this._createMeshes()),this.fire("set:atlas",t))}get atlas(){return this._atlas}set pixelsPerUnit(t){this._pixelsPerUnit!==t&&(this._pixelsPerUnit=t,this.fire("set:pixelsPerUnit",t),this._atlas&&this._frameKeys&&this.renderMode===Pi&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes()))}get pixelsPerUnit(){return this._pixelsPerUnit}set renderMode(t){if(this._renderMode===t)return;const e=this._renderMode;this._renderMode=t,this.fire("set:renderMode",t),(e===Pi||t===Pi)&&this._atlas&&this._frameKeys&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes())}get renderMode(){return this._renderMode}get meshes(){return this._meshes}_createMeshes(){const t=this._meshes.length;for(let i=0;i<t;i++){const r=this._meshes[i];r&&r.destroy()}const e=this._frameKeys.length;this._meshes=new Array(e);const s=this.renderMode===ht||this._renderMode===st?this._create9SliceMesh:this._createSimpleMesh;for(let i=0;i<e;i++){const r=this._atlas.frames[this._frameKeys[i]];this._meshes[i]=r?s.call(this,r):null}this.fire("set:meshes")}_createSimpleMesh(t){const e=t.rect,s=this._atlas.texture.width,i=this._atlas.texture.height,r=e.z/this._pixelsPerUnit,n=e.w/this._pixelsPerUnit,a=t.pivot.x,o=t.pivot.y,h=[-a*r,-o*n,0,(1-a)*r,-o*n,0,(1-a)*r,(1-o)*n,0,-a*r,(1-o)*n,0],d=e.x/s,u=1-e.y/i,f=(e.x+e.z)/s,p=1-(e.y+e.w)/i,m=[d,u,f,u,f,p,d,p],_=new _n;return _.positions=h,_.normals=w1,_.uvs=m,_.indices=T1,ke.fromGeometry(this._device,_)}_create9SliceMesh(){const t=W.ONE,e=3,s=3,i=[],r=[],n=[],a=[];let o=0;for(let d=0;d<=e;d++){const u=d===0||d===e?0:1;for(let f=0;f<=s;f++){const p=-t.x+2*t.x*(d<=1?0:3)/e,m=0,_=-(-t.y+2*t.y*(f<=1?0:3)/s),g=f===0||f===s?0:1;i.push(-p,m,_),r.push(0,1,0),n.push(u,g),d<e&&f<s&&(a.push(o+s+1,o+1,o),a.push(o+s+1,o+s+2,o+1)),o++}}const h=new _n;return h.positions=i,h.normals=r,h.uvs=n,h.indices=a,ke.fromGeometry(this._device,h)}_onSetFrames(t){this._updatingProperties?this._meshesDirty=!0:this._createMeshes()}_onFrameChanged(t,e){const s=this._frameKeys.indexOf(t);s<0||(e?this.renderMode===Pi&&(this._meshes[s]=this._createSimpleMesh(e)):this._meshes[s]=null,this.fire("set:meshes"))}_onFrameRemoved(t){const e=this._frameKeys.indexOf(t);e<0||(this._meshes[e]=null,this.fire("set:meshes"))}startUpdate(){this._updatingProperties=!0,this._meshesDirty=!1}endUpdate(){this._updatingProperties=!1,this._meshesDirty&&this._atlas&&this._frameKeys&&this._createMeshes(),this._meshesDirty=!1}destroy(){for(const t of this._meshes)t&&t.destroy();this._meshes.length=0}}class E1 extends de{constructor(){super(),this._texture=null,this._frames=null}set texture(t){this._texture=t,this.fire("set:texture",t)}get texture(){return this._texture}set frames(t){this._frames=t,this.fire("set:frames",t)}get frames(){return this._frames}setFrame(t,e){let s=this._frames[t];s?(s.rect.copy(e.rect),s.pivot.copy(e.pivot),s.border.copy(e.border)):(s={rect:e.rect.clone(),pivot:e.pivot.clone(),border:e.border.clone()},this._frames[t]=s),this.fire("set:frame",t.toString(),s)}removeFrame(t){const e=this._frames[t];e&&(delete this._frames[t],this.fire("remove:frame",t.toString(),e))}destroy(){this._texture&&this._texture.destroy()}}class k_{constructor(t,e,s,i){this.time=t,this.position=e,this.rotation=s,this.scale=i}}class O_{constructor(){this._name="",this._keys=[]}}class B_{constructor(){c(this,"name","");c(this,"duration",0);this._nodes=[],this._nodeDict={}}getNode(t){return this._nodeDict[t]}addNode(t){this._nodes.push(t),this._nodeDict[t._name]=t}get nodes(){return this._nodes}}class C1{constructor(){this._written=!1,this._name="",this._keyFrames=[],this._quat=new ie,this._pos=new A,this._scale=new A,this._targetNode=null}getTarget(){return this._targetNode}setTarget(t){this._targetNode=t}}class jd{constructor(t){c(this,"looping",!0);this._animation=null,this._time=0,this._interpolatedKeys=[],this._interpolatedKeyDict={},this._currKeyIndices={},this.graph=null;const e=s=>{const i=new C1;i._name=s.name,this._interpolatedKeys.push(i),this._interpolatedKeyDict[s.name]=i,this._currKeyIndices[s.name]=0;for(let r=0;r<s._children.length;r++)e(s._children[r])};e(t)}set animation(t){this._animation=t,this.currentTime=0}get animation(){return this._animation}set currentTime(t){this._time=t;const e=this._interpolatedKeys.length;for(let s=0;s<e;s++){const r=this._interpolatedKeys[s]._name;this._currKeyIndices[r]=0}this.addTime(0),this.updateGraph()}get currentTime(){return this._time}get numNodes(){return this._interpolatedKeys.length}addTime(t){if(this._animation!==null){const e=this._animation._nodes,s=this._animation.duration;if(this._time===s&&!this.looping)return;if(this._time+=t,this._time>s){this._time=this.looping?0:s;for(let r=0;r<e.length;r++){const a=e[r]._name;this._currKeyIndices[a]=0}}else if(this._time<0){this._time=this.looping?s:0;for(let r=0;r<e.length;r++){const n=e[r],a=n._name;this._currKeyIndices[a]=n._keys.length-2}}const i=t>=0?1:-1;for(let r=0;r<e.length;r++){const n=e[r],a=n._name,o=n._keys,h=this._interpolatedKeyDict[a];if(h===void 0){b.warn(`Unknown skeleton node name: ${a}`);continue}let d=!1;if(o.length!==1)for(let u=this._currKeyIndices[a];u<o.length-1&&u>=0;u+=i){const f=o[u],p=o[u+1];if(f.time<=this._time&&p.time>=this._time){const m=(this._time-f.time)/(p.time-f.time);h._pos.lerp(f.position,p.position,m),h._quat.slerp(f.rotation,p.rotation,m),h._scale.lerp(f.scale,p.scale,m),h._written=!0,this._currKeyIndices[a]=u,d=!0;break}}(o.length===1||!d&&this._time===0&&this.looping)&&(h._pos.copy(o[0].position),h._quat.copy(o[0].rotation),h._scale.copy(o[0].scale),h._written=!0)}}}blend(t,e,s){const i=this._interpolatedKeys.length;for(let r=0;r<i;r++){const n=t._interpolatedKeys[r],a=e._interpolatedKeys[r],o=this._interpolatedKeys[r];n._written&&a._written?(o._quat.slerp(n._quat,e._interpolatedKeys[r]._quat,s),o._pos.lerp(n._pos,e._interpolatedKeys[r]._pos,s),o._scale.lerp(n._scale,a._scale,s),o._written=!0):n._written?(o._quat.copy(n._quat),o._pos.copy(n._pos),o._scale.copy(n._scale),o._written=!0):a._written&&(o._quat.copy(a._quat),o._pos.copy(a._pos),o._scale.copy(a._scale),o._written=!0)}}setGraph(t){if(this.graph=t,t)for(let e=0;e<this._interpolatedKeys.length;e++){const s=this._interpolatedKeys[e],i=t.findByName(s._name);this._interpolatedKeys[e].setTarget(i)}else for(let e=0;e<this._interpolatedKeys.length;e++)this._interpolatedKeys[e].setTarget(null)}updateGraph(){if(this.graph)for(let t=0;t<this._interpolatedKeys.length;t++){const e=this._interpolatedKeys[t];if(e._written){const s=e.getTarget();s.localPosition.copy(e._pos),s.localRotation.copy(e._quat),s.localScale.copy(e._scale),s._dirtyLocal||s._dirtifyLocal(),e._written=!1}}}}const Ts=4/64,Gs=1-Ts*2;class Vp extends _n{constructor(t,e,s,i,r,n){super();const a=new A,o=new A,h=new A,d=new A,u=new A,f=new A,p=[],m=[],_=[],g=[],y=[];let w;if(s>0)for(let C=0;C<=i;C++)for(let x=0;x<=r;x++){const M=x/r*2*Math.PI-Math.PI,S=Math.sin(M),v=Math.cos(M);u.set(S*t,-s/2,v*t),d.set(S*e,s/2,v*e),a.lerp(u,d,C/i),o.sub2(d,u).normalize(),f.set(v,0,-S),h.cross(f,o).normalize(),p.push(a.x,a.y,a.z),m.push(h.x,h.y,h.z);let E=x/r,T=C/i;_.push(E,1-T);const R=T;if(T=E,E=R,E=E*Gs+Ts,T=T*Gs+Ts,E/=3,g.push(E,1-T),C<i&&x<r){const D=C*(r+1)+x,P=C*(r+1)+(x+1),L=(C+1)*(r+1)+x,k=(C+1)*(r+1)+(x+1);y.push(D,P,L),y.push(P,k,L)}}if(n){const C=Math.floor(r/2),x=r,M=s/2;for(let S=0;S<=C;S++){const v=S*Math.PI*.5/C,E=Math.sin(v),T=Math.cos(v);for(let R=0;R<=x;R++){const D=R*2*Math.PI/x-Math.PI/2,P=Math.sin(D),k=Math.cos(D)*E,H=T,N=P*E;let I=1-R/x,F=1-S/C;p.push(k*e,H*e+M,N*e),m.push(k,H,N),_.push(I,1-F),I=I*Gs+Ts,F=F*Gs+Ts,I/=3,F/=3,I+=1/3,g.push(I,1-F)}}w=(i+1)*(r+1);for(let S=0;S<C;++S)for(let v=0;v<x;++v){const E=S*(x+1)+v,T=E+x+1;y.push(w+E+1,w+T,w+E),y.push(w+E+1,w+T+1,w+T)}for(let S=0;S<=C;S++){const v=Math.PI*.5+S*Math.PI*.5/C,E=Math.sin(v),T=Math.cos(v);for(let R=0;R<=x;R++){const D=R*2*Math.PI/x-Math.PI/2,P=Math.sin(D),k=Math.cos(D)*E,H=T,N=P*E;let I=1-R/x,F=1-S/C;p.push(k*e,H*e-M,N*e),m.push(k,H,N),_.push(I,1-F),I=I*Gs+Ts,F=F*Gs+Ts,I/=3,F/=3,I+=2/3,g.push(I,1-F)}}w=(i+1)*(r+1)+(x+1)*(C+1);for(let S=0;S<C;++S)for(let v=0;v<x;++v){const E=S*(x+1)+v,T=E+x+1;y.push(w+E+1,w+T,w+E),y.push(w+E+1,w+T+1,w+T)}}else{if(w=(i+1)*(r+1),t>0)for(let C=0;C<r;C++){const x=C/r*2*Math.PI,M=Math.sin(x),S=-s/2,v=Math.cos(x);let E=1-(M+1)/2,T=(v+1)/2;p.push(M*t,S,v*t),m.push(0,-1,0),_.push(E,1-T),E=E*Gs+Ts,T=T*Gs+Ts,E/=3,T/=3,E+=1/3,g.push(E,1-T),C>1&&y.push(w,w+C,w+C-1)}if(w+=r,e>0)for(let C=0;C<r;C++){const x=C/r*2*Math.PI,M=Math.sin(x),S=s/2,v=Math.cos(x);let E=1-(M+1)/2,T=(v+1)/2;p.push(M*e,S,v*e),m.push(0,1,0),_.push(E,1-T),E=E*Gs+Ts,T=T*Gs+Ts,E/=3,T/=3,E+=2/3,g.push(E,1-T),C>1&&y.push(w,w+C-1,w+C)}}this.positions=p,this.normals=m,this.uvs=_,this.uvs1=g,this.indices=y}}class M1 extends Vp{constructor(t={}){const e=t.radius??.3,s=t.height??1,i=t.heightSegments??1,r=t.sides??20;super(e,e,s-2*e,i,r,!0),t.calculateTangents&&(this.tangents=pr(this.positions,this.normals,this.uvs,this.indices))}}class P1 extends Vp{constructor(t={}){const e=t.baseRadius??.5,s=t.peakRadius??0,i=t.height??1,r=t.heightSegments??5,n=t.capSegments??18;super(e,s,i,r,n,!1),t.calculateTangents&&(this.tangents=pr(this.positions,this.normals,this.uvs,this.indices))}}class R1 extends Vp{constructor(t={}){const e=t.radius??.5,s=t.height??1,i=t.heightSegments??5,r=t.capSegments??20;super(e,e,s,i,r,!1),t.calculateTangents&&(this.tangents=pr(this.positions,this.normals,this.uvs,this.indices))}}class I1 extends _n{constructor(t={}){super();const e=t.halfExtents??new W(.5,.5),s=t.widthSegments??5,i=t.lengthSegments??5,r=[],n=[],a=[],o=[];let h=0;for(let d=0;d<=s;d++)for(let u=0;u<=i;u++){const f=-e.x+2*e.x*d/s,p=0,m=-(-e.y+2*e.y*u/i),_=d/s,g=u/i;r.push(f,p,m),n.push(0,1,0),a.push(_,1-g),d<s&&u<i&&(o.push(h+i+1,h+1,h),o.push(h+i+1,h+i+2,h+1)),h++}this.positions=r,this.normals=n,this.uvs=a,this.uvs1=a,this.indices=o,t.calculateTangents&&(this.tangents=pr(r,n,a,o))}}class D1 extends _n{constructor(t={}){super();const e=t.tubeRadius??.2,s=t.ringRadius??.3,i=(t.sectorAngle??360)*z.DEG_TO_RAD,r=t.segments??30,n=t.sides??20,a=[],o=[],h=[],d=[];for(let u=0;u<=n;u++)for(let f=0;f<=r;f++){const p=Math.cos(i*f/r)*(s+e*Math.cos(2*Math.PI*u/n)),m=Math.sin(2*Math.PI*u/n)*e,_=Math.sin(i*f/r)*(s+e*Math.cos(2*Math.PI*u/n)),g=Math.cos(i*f/r)*Math.cos(2*Math.PI*u/n),y=Math.sin(2*Math.PI*u/n),w=Math.sin(i*f/r)*Math.cos(2*Math.PI*u/n),C=u/n,x=1-f/r;if(a.push(p,m,_),o.push(g,y,w),h.push(C,1-x),u<n&&f<r){const M=u*(r+1)+f,S=(u+1)*(r+1)+f,v=u*(r+1)+(f+1),E=(u+1)*(r+1)+(f+1);d.push(M,S,v),d.push(S,E,v)}}this.positions=a,this.normals=o,this.uvs=h,this.uvs1=h,this.indices=d,t.calculateTangents&&(this.tangents=pr(a,o,h,d))}}class L1{constructor(t,e){c(this,"processedCache",new Map);c(this,"definitionsCache",new Map);c(this,"_generators",new Map);this._device=t,this._isClearingCache=!1,this._precached=!1,this._programsCollection=[],this._defaultStdMatOption=new qh,this._defaultStdMatOptionMin=new qh;const s=new E0;e.shaderOptBuilder.updateRef(this._defaultStdMatOption,{},s,e,null,[],xn,null),e.shaderOptBuilder.updateMinRef(this._defaultStdMatOptionMin,{},e,null,Fp,null),t.on("destroy:shader",i=>{this.removeFromCache(i)})}destroy(){this.clearCache()}register(t,e){this._generators.has(t)||this._generators.set(t,e)}unregister(t){this._generators.has(t)&&this._generators.delete(t)}isRegistered(t){return this._generators.has(t)}generateShaderDefinition(t,e,s,i){var n,a;let r=this.definitionsCache.get(s);if(!r){let o;(n=i.litOptions)!=null&&n.lights&&(o=i.litOptions.lights,i.litOptions.lights=o.map(d=>{const u=d.clone?d.clone():d;return u.key=d.key,u})),this.storeNewProgram(e,i),(a=i.litOptions)!=null&&a.lights&&(i.litOptions.lights=o),this._precached&&b.log(`ProgramLibrary#getProgram: Cache miss for shader ${e} key ${s} after shaders precaching`);const h=this._device;r=t.createShaderDefinition(h,i),r.name=r.name??(i.pass?`${e}-pass:${i.pass}`:e),this.definitionsCache.set(s,r)}return r}getCachedShader(t){return this.processedCache.get(t)}setCachedShader(t,e){this.processedCache.set(t,e)}getProgram(t,e,s,i){const r=this._generators.get(t);if(!r)return b.warn(`ProgramLibrary#getProgram: No program library functions registered for: ${t}`),null;const n=r.generateKey(e),a=cn(n),o=s.generateKey(this._device),h=cn(o),d=`${a}#${h}`;let u=this.getCachedShader(d);if(!u){const f=this.generateShaderDefinition(r,t,a,e);b.assert(f);let p="",m;e.pass!==void 0&&(m=ti.get(this._device).getByIndex(e.pass),p=`-${m.name}`),this._device.fire("shader:generate",{userMaterialId:i,shaderPassInfo:m,definition:f});const _={name:`${f.name}${p}-proc`,attributes:f.attributes,vshader:f.vshader,vincludes:f.vincludes,fincludes:f.fincludes,fshader:f.fshader,processingOptions:s,shaderLanguage:f.shaderLanguage,meshUniformBufferFormat:f.meshUniformBufferFormat,meshBindGroupFormat:f.meshBindGroupFormat};u=new r0(this._device,_),b.call(()=>{u._generationKey=n,u._processingKey=o}),this.setCachedShader(d,u)}return u}storeNewProgram(t,e){let s={};if(t==="standard"){const i=this._getDefaultStdMatOptions(e.pass);for(const r in e)(e.hasOwnProperty(r)&&i[r]!==e[r]||r==="pass")&&(s[r]=e[r]);for(const r in e.litOptions)s[r]=e.litOptions[r]}else s=e;this._programsCollection.push(JSON.stringify({name:t,options:s}))}dumpPrograms(){let t=`let device = pc.app ? pc.app.graphicsDevice : pc.Application.getApplication().graphicsDevice;
`;t+="let shaders = [",this._programsCollection[0]&&(t+=`
	${this._programsCollection[0]}`);for(let s=1;s<this._programsCollection.length;++s)t+=`,
	${this._programsCollection[s]}`;t+=`
];
`,t+=`pc.getProgramLibrary(device).precompile(shaders);
`,t+=`if (pc.version != "${ho}" || pc.revision != "${iy}")
`,t+='	console.warn("precompile-shaders.js: engine version mismatch, rebuild shaders lib with current engine");';const e=document.createElement("a");e.setAttribute("href",`data:text/plain;charset=utf-8,${encodeURIComponent(t)}`),e.setAttribute("download","precompile-shaders.js"),e.style.display="none",document.body.appendChild(e),e.click(),document.body.removeChild(e)}clearCache(){this._isClearingCache=!0,this.processedCache.forEach(t=>{t.destroy()}),this.processedCache.clear(),this._isClearingCache=!1}removeFromCache(t){this._isClearingCache||this.processedCache.forEach((e,s)=>{t===e&&this.processedCache.delete(s)})}_getDefaultStdMatOptions(t){const e=ti.get(this._device).getByIndex(t);return t===ll||t===Na||t===ol||e.isShadow?this._defaultStdMatOptionMin:this._defaultStdMatOption}precompile(t){if(t){const e=new Array(t.length);for(let s=0;s<t.length;s++){if(t[s].name==="standard"){const i=t[s].options,r=this._getDefaultStdMatOptions(i.pass);for(const n in r)r.hasOwnProperty(n)&&i[n]===void 0&&(i[n]=r[n])}e[s]=this.getProgram(t[s].name,t[s].options)}}this._precached=!0}}const F1=`
    vec4 dirLm = texture2D(texture_dirLightMap, vUv1);

    if (bakeDir > 0.5) {
        if (dAtten > 0.00001) {
            dirLm.xyz = dirLm.xyz * 2.0 - vec3(1.0);
            dAtten = saturate(dAtten);
            gl_FragColor.rgb = normalize(dLightDirNormW.xyz*dAtten + dirLm.xyz*dirLm.w) * 0.5 + vec3(0.5);
            gl_FragColor.a = dirLm.w + dAtten;
            gl_FragColor.a = max(gl_FragColor.a, 1.0 / 255.0);
        } else {
            gl_FragColor = dirLm;
        }
    } else {
        gl_FragColor.rgb = dirLm.xyz;
        gl_FragColor.a = max(dirLm.w, dAtten > 0.00001? (1.0/255.0) : 0.0);
    }
`,k1=`
#ifdef LIGHTMAP_RGBM
    gl_FragColor.rgb = dDiffuseLight;
    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(0.5));
    gl_FragColor.rgb /= 8.0;
    gl_FragColor.a = clamp( max( max( gl_FragColor.r, gl_FragColor.g ), max( gl_FragColor.b, 1.0 / 255.0 ) ), 0.0,1.0 );
    gl_FragColor.a = ceil(gl_FragColor.a * 255.0) / 255.0;
    gl_FragColor.rgb /= gl_FragColor.a;
#else
    gl_FragColor = vec4(dDiffuseLight, 1.0);
#endif
`,O1=`

varying vec2 vUv0;

uniform sampler2D source;
uniform vec2 pixelOffset;

bool isUsed(vec4 pixel) {
    #if HDR
        return any(greaterThan(pixel.rgb, vec3(0.0)));
    #else
        return pixel.a > 0.0;
    #endif
}

void main(void) {
    vec4 c = texture2DLod(source, vUv0, 0.0);
    c = isUsed(c) ? c : texture2DLod(source, vUv0 - pixelOffset, 0.0);
    c = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(0, -pixelOffset.y), 0.0);
    c = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(pixelOffset.x, -pixelOffset.y), 0.0);
    c = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(-pixelOffset.x, 0), 0.0);
    c = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(pixelOffset.x, 0), 0.0);
    c = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(-pixelOffset.x, pixelOffset.y), 0.0);
    c = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(0, pixelOffset.y), 0.0);
    c = isUsed(c) ? c : texture2DLod(source, vUv0 + pixelOffset, 0.0);
    gl_FragColor = c;
}
`,B1=`
// bilateral filter, based on https://www.shadertoy.com/view/4dfGDH# and
// http://people.csail.mit.edu/sparis/bf_course/course_notes.pdf

// A bilateral filter is a non-linear, edge-preserving, and noise-reducing smoothing filter for images.
// It replaces the intensity of each pixel with a weighted average of intensity values from nearby pixels.
// This weight can be based on a Gaussian distribution. Crucially, the weights depend not only on
// Euclidean distance of pixels, but also on the radiometric differences (e.g., range differences, such
// as color intensity, depth distance, etc.). This preserves sharp edges.

float normpdf3(in vec3 v, in float sigma) {
    return 0.39894 * exp(-0.5 * dot(v, v) / (sigma * sigma)) / sigma;
}

vec3 decodeRGBM(vec4 rgbm) {
    vec3 color = (8.0 * rgbm.a) * rgbm.rgb;
    return color * color;
}

float saturate(float x) {
    return clamp(x, 0.0, 1.0);
}

vec4 encodeRGBM(vec3 color) { // modified RGBM
    vec4 encoded;
    encoded.rgb = pow(color.rgb, vec3(0.5));
    encoded.rgb *= 1.0 / 8.0;

    encoded.a = saturate( max( max( encoded.r, encoded.g ), max( encoded.b, 1.0 / 255.0 ) ) );
    encoded.a = ceil(encoded.a * 255.0) / 255.0;

    encoded.rgb /= encoded.a;
    return encoded;
}

vec3 decode(vec4 pixel) {
    #if HDR
        return pixel.rgb;
    #else
        return decodeRGBM(pixel);
    #endif
}

bool isUsed(vec4 pixel) {
    #if HDR
        return any(greaterThan(pixel.rgb, vec3(0.0)));
    #else
        return pixel.a > 0.0;
    #endif
}

// filter size
#define MSIZE 15

varying vec2 vUv0;
uniform sampler2D source;
uniform vec2 pixelOffset;
uniform vec2 sigmas;
uniform float bZnorm;
uniform float kernel[MSIZE];

void main(void) {
    
    vec4 pixel = texture2DLod(source, vUv0, 0.0);

    // lightmap specific optimization - skip pixels that were not baked
    // this also allows dilate filter that work on the output of this to work correctly, as it depends on .a being zero
    // to dilate, which the following blur filter would otherwise modify
    if (!isUsed(pixel)) {
        gl_FragColor = pixel;
        return ;
    }

    // range sigma - controls blurriness based on a pixel distance
    float sigma = sigmas.x;

    // domain sigma - controls blurriness based on a pixel similarity (to preserve edges)
    float bSigma = sigmas.y;

    vec3 pixelHdr = decode(pixel);
    vec3 accumulatedHdr = vec3(0.0);
    float accumulatedFactor = 0.000001;  // avoid division by zero

    // read out the texels
    const int kSize = (MSIZE-1)/2;
    for (int i = -kSize; i <= kSize; ++i) {
        for (int j = -kSize; j <= kSize; ++j) {
            
            // sample the pixel with offset
            vec2 coord = vUv0 + vec2(float(i), float(j)) * pixelOffset;
            vec4 pix = texture2DLod(source, coord, 0.0);

            // lightmap - only use baked pixels
            if (isUsed(pix)) {
                vec3 hdr = decode(pix);

                // bilateral factors
                float factor = kernel[kSize + j] * kernel[kSize + i];
                factor *= normpdf3(hdr - pixelHdr, bSigma) * bZnorm;

                // accumulate
                accumulatedHdr += factor * hdr;
                accumulatedFactor += factor;
            }
        }
    }

    vec3 finalHDR = accumulatedHdr / accumulatedFactor;

    #if HDR
        gl_FragColor = vec4(finalHDR, 1.0);
    #else
        gl_FragColor = encodeRGBM(finalHDR);
    #endif
}
`,Ao={bakeDirLmEndPS:F1,bakeLmEndPS:k1,dilatePS:O1,bilateralDeNoisePS:B1},On=new q,N_=new ie,Yd=new ve,z_=new ve,N1=new Y(1,1,0,.4),Kd=.28209479177387814;class z1{constructor(t,e,s,i,r,n){const a=t.getProp("x"),o=t.getProp("y"),h=t.getProp("z"),d=t.getProp("rot_1"),u=t.getProp("rot_2"),f=t.getProp("rot_3"),p=t.getProp("rot_0"),m=t.getProp("motion_0"),_=t.getProp("motion_1"),g=t.getProp("motion_2"),y=t.getProp("scale_0"),w=t.getProp("scale_1"),C=t.getProp("scale_2"),x=t.getProp("f_dc_0"),M=t.getProp("f_dc_1"),S=t.getProp("f_dc_2"),v=t.getProp("opacity"),E=T=>{if(T>0)return 1/(1+Math.exp(-T));const R=Math.exp(T);return R/(1+R)};this.read=T=>{e&&(e.x=a[T],e.y=o[T],e.z=h[T]),s&&s.set(d[T],u[T],f[T],p[T]),i&&i.set(Math.exp(y[T]),Math.exp(w[T]),Math.exp(C[T])),n&&m&&n.set(m[T],_[T],g[T]),r&&r.set(.5+x[T]*Kd,.5+M[T]*Kd,.5+S[T]*Kd,E(v[T]))}}}const U_=(l,t,e)=>{N_.set(e.x,e.y,e.z,e.w).normalize(),l.setTRS(t,N_,A.ONE)};class Fa{constructor(t){c(this,"elements");c(this,"numSplats");c(this,"is4D");var e,s,i;this.elements=t,this.numSplats=(e=this.getElement("vertex"))==null?void 0:e.count,this.is4D=!!((i=(s=this.getElement("vertex"))==null?void 0:s.properties.find(r=>r.name==="t"))!=null&&i.storage)}appendGSplatData(t,e,s){const i=this.getElement("vertex").properties;i.find(n=>n.name==="time_index")||i.push({type:"float",name:"time_index",storage:new Float32Array(this.numSplats),byteSize:4}),this.numSplats+=t.numSplats;for(let n=0;n<i.length;n++){const a=i[n],o=t.getElement("vertex").properties.find(h=>h.name===a.name);if(a.name==="time_index"){const h=new Float32Array(this.numSplats);h.fill(e),h.set(a.storage,0),a.storage=h}else if(o&&a.name==="t"){const h=new Float32Array(this.numSplats);if(h.set(a.storage,0),s)for(let d=a.storage.length;d<this.numSplats;d++)h[d]=o.storage[d-a.storage.length]+s[2*e];else h.set(o.storage,a.storage.length);a.storage=h}else if(o){const h=new Float32Array(this.numSplats);h.set(a.storage,0),h.set(o.storage,a.storage.length),a.storage=h}}}static calcSplatAabb(t,e,s,i){U_(On,e,s),Yd.center.set(0,0,0),Yd.halfExtents.set(i.x*2,i.y*2,i.z*2),t.setFromTransformedAabb(Yd,On)}getProp(t,e="vertex"){var s,i;return(i=(s=this.getElement(e))==null?void 0:s.properties.find(r=>r.name===t))==null?void 0:i.storage}getElement(t){return this.elements.find(e=>e.name===t)}addProp(t,e){this.getElement("vertex").properties.push({type:"float",name:t,storage:e,byteSize:4})}createIter(t,e,s,i,r){return new z1(this,t,e,s,i,r)}calcAabb(t,e){let s,i,r,n,a,o,h=!0;const d=this.getProp("x"),u=this.getProp("y"),f=this.getProp("z"),p=this.getProp("scale_0"),m=this.getProp("scale_1"),_=this.getProp("scale_2");for(let g=0;g<this.numSplats;++g){if(e&&!e(g))continue;const y=2*Math.exp(Math.max(p[g],m[g],_[g])),w=d[g],C=u[g],x=f[g];h?(h=!1,s=w-y,i=C-y,r=x-y,n=w+y,a=C+y,o=x+y):(s=Math.min(s,w-y),i=Math.min(i,C-y),r=Math.min(r,x-y),n=Math.max(n,w+y),a=Math.max(a,C+y),o=Math.max(o,x+y))}return h||(t.center.set((s+n)*.5,(i+a)*.5,(r+o)*.5),t.halfExtents.set((n-s)*.5,(a-i)*.5,(o-r)*.5)),!h}calcAabbExact(t,e){const s=new A,i=new ie,r=new A,n=this.createIter(s,i,r);let a=!0;for(let o=0;o<this.numSplats;++o)e&&!e(o)||(n.read(o),a?(a=!1,Fa.calcSplatAabb(t,s,i,r)):(Fa.calcSplatAabb(z_,s,i,r),t.add(z_)));return!a}getCenters(t){const e=this.getProp("x"),s=this.getProp("y"),i=this.getProp("z");for(let r=0;r<this.numSplats;++r)t[r*3+0]=e[r],t[r*3+1]=s[r],t[r*3+2]=i[r]}getMuT(){const t=this.getProp("t");if(!t)return;const e=new Float32Array(this.numSplats);for(let s=0;s<this.numSplats;++s)e[s]=t[s];return e}getTScale(){const t=this.getProp("t_scale");if(!t)return;const e=new Float32Array(this.numSplats);for(let s=0;s<this.numSplats;++s)e[s]=Math.exp(t[s]);return e}getMotion(t){const e=this.getProp("motion_0"),s=this.getProp("motion_1"),i=this.getProp("motion_2");if(!(!e||!s||!i))for(let r=0;r<this.numSplats;++r)t[r*3+0]=e[r],t[r*3+1]=s[r],t[r*3+2]=i[r]}getTimeIndex(t){const e=this.getProp("time_index");e&&t.set(e,0)}calcFocalPoint(t,e){const s=this.getProp("x"),i=this.getProp("y"),r=this.getProp("z"),n=this.getProp("scale_0"),a=this.getProp("scale_1"),o=this.getProp("scale_2");t.x=0,t.y=0,t.z=0;let h=0;for(let d=0;d<this.numSplats;++d){if(e&&!e(d))continue;const u=1/(1+Math.exp(Math.max(n[d],a[d],o[d])));t.x+=s[d]*u,t.y+=i[d]*u,t.z+=r[d]*u,h+=u}t.mulScalar(1/h)}renderWireframeBounds(t,e){const s=new A,i=new ie,r=new A,n=new A,a=new A,o=this.createIter(s,i,r);for(let h=0;h<this.numSplats;++h)o.read(h),U_(On,s,i),On.mul2(e,On),n.set(r.x*-2,r.y*-2,r.z*-2),a.set(r.x*2,r.y*2,r.z*2),t.immediate.drawWireAlignedBox(n,a,N1,!0,t.defaultDrawLayer,On)}get isCompressed(){return!1}get shBands(){return{9:1,24:2,45:3}[(()=>{for(let s=0;s<45;++s)if(!this.getProp(`f_rest_${s}`))return s;return 45})()]??0}calcMortonOrder(){const t=C=>{let x=C[0],M=C[0];for(let S=1;S<C.length;S++)C[S]<x&&(x=C[S]),C[S]>M&&(M=C[S]);return{min:x,max:M}},e=(C,x,M)=>{const S=v=>(v&=1023,v=(v^v<<16)&4278190335,v=(v^v<<8)&50393103,v=(v^v<<4)&51130563,v=(v^v<<2)&153391689,v);return(S(M)<<2)+(S(x)<<1)+S(C)},s=this.getProp("x"),i=this.getProp("y"),r=this.getProp("z"),{min:n,max:a}=t(s),{min:o,max:h}=t(i),{min:d,max:u}=t(r),f=n===a?0:1024/(a-n),p=o===h?0:1024/(h-o),m=d===u?0:1024/(u-d),_=new Map;for(let C=0;C<this.numSplats;C++){const x=Math.floor((s[C]-n)*f),M=Math.floor((i[C]-o)*p),S=Math.floor((r[C]-d)*m),v=e(x,M,S),E=_.get(v);E?E.push(C):_.set(v,[C])}const g=Array.from(_.keys()).sort((C,x)=>C-x),y=new Uint32Array(this.numSplats);let w=0;for(let C=0;C<g.length;++C){const x=_.get(g[C]);for(let M=0;M<x.length;++M)y[w++]=x[M]}return y}reorder(t){const e=new Map,s=n=>{if(e.has(n)){const a=e.get(n);return e.delete(n),a}return new ArrayBuffer(n)},i=n=>{e.set(n.byteLength,n)},r=n=>{const a=new n.constructor(s(n.byteLength));for(let o=0;o<t.length;o++)a[o]=n[t[o]];return i(n.buffer),a};this.elements.forEach(n=>{n.properties.forEach(a=>{a.storage&&(a.storage=r(a.storage))})})}reorderData(){this.reorder(this.calcMortonOrder())}}const U0=(l={})=>{console.log("____ ENGINE IVAN","gsplat-material createGSplatMaterial");const t=l.dither??Os,e=t!==Os,s=new La({uniqueName:"SplatMaterial",vertexCode:l.vertex??j.gsplatVS,fragmentCode:l.fragment??j.gsplatPS,attributes:{vertex_position:Xe,vertex_id_attrib:Sa}});return s.setDefine(`DITHER_${t.toUpperCase()}`,""),s.cull=vt,s.blendType=e?hs:Gt,s.depthWrite=e,s.update(),s};async function U1(){self.onmessage=async t=>{const{data:e}=t;switch(e.type){case"initWorker":break;case"updateSHData":l(e.numSplats,e.shBands,e.SHData);break}};const l=(t,e,s)=>{const i=new Uint32Array(t*4),r=new Uint32Array(t*4),n=new Uint32Array(t*4),a=new Uint32Array(t*4),o={1:3,2:8,3:15}[e],h=s,d=2047,u=1023,f=new Float32Array(1),p=new Uint32Array(f.buffer),m=new Array(o*3).fill(0);for(let _=0;_<t;++_){for(let y=0;y<o;++y)m[y*3]=h[y][_],m[y*3+1]=h[y+o][_],m[y*3+2]=h[y+o*2][_];let g=m[0];for(let y=1;y<o*3;++y)g=Math.max(g,Math.abs(m[y]));if(g!==0){for(let y=0;y<o;++y)m[y*3+0]=Math.max(0,Math.min(d,Math.floor((m[y*3+0]/g*.5+.5)*d+.5))),m[y*3+1]=Math.max(0,Math.min(u,Math.floor((m[y*3+1]/g*.5+.5)*u+.5))),m[y*3+2]=Math.max(0,Math.min(d,Math.floor((m[y*3+2]/g*.5+.5)*d+.5)));f[0]=g,i[_*4+0]=p[0],i[_*4+1]=m[0]<<21|m[1]<<11|m[2],i[_*4+2]=m[3]<<21|m[4]<<11|m[5],i[_*4+3]=m[6]<<21|m[7]<<11|m[8],e>1&&(r[_*4+0]=m[9]<<21|m[10]<<11|m[11],r[_*4+1]=m[12]<<21|m[13]<<11|m[14],r[_*4+2]=m[15]<<21|m[16]<<11|m[17],r[_*4+3]=m[18]<<21|m[19]<<11|m[20],e>2?(n[_*4+0]=m[21]<<21|m[22]<<11|m[23],n[_*4+1]=m[24]<<21|m[25]<<11|m[26],n[_*4+2]=m[27]<<21|m[28]<<11|m[29],n[_*4+3]=m[30]<<21|m[31]<<11|m[32],a[_*4+0]=m[33]<<21|m[34]<<11|m[35],a[_*4+1]=m[36]<<21|m[37]<<11|m[38],a[_*4+2]=m[39]<<21|m[40]<<11|m[41],a[_*4+3]=m[42]<<21|m[43]<<11|m[44]):n[_]=m[21]<<21|m[22]<<11|m[23])}}self.postMessage({type:"updatedSHData",sh1to3Data:i,sh4to7Data:r,sh8to11Data:n,sh12to15Data:a},[i.buffer,r.buffer,n.buffer,a.buffer])}}class V1 extends de{constructor(){super();c(this,"worker");this._initWorker()}async _initWorker(){this.worker=new Worker(URL.createObjectURL(new Blob([`(${U1.toString()})()`],{type:"application/javascript"}))),this.worker.onmessage=e=>{if(!this.worker)return;const{data:s}=e;switch(s.type){case"updatedSHData":this.fire("updatedSHData",s.sh1to3Data,s.sh4to7Data,s.sh8to11Data,s.sh12to15Data);break}}}updateSHData(e,s,i){var r;(r=this.worker)==null||r.postMessage({type:"updateSHData",numSplats:e,shBands:s,SHData:i})}destroy(){var e;this.worker&&((e=this.worker)==null||e.terminate(),this.worker=null)}}const V_=(l,t)=>{const e=[];for(let s=0;s<t;++s)e.push(l.getProp(`f_rest_${s}`));return e};class G1{constructor(t,e){c(this,"device");c(this,"numSplats");c(this,"numSplatsVisible");c(this,"timeOption");c(this,"centers");c(this,"muT");c(this,"tScale");c(this,"motion");c(this,"timeIndex");c(this,"opacity");c(this,"threshold");c(this,"aabb");c(this,"colorTexture");c(this,"transformATexture");c(this,"transformBTexture");c(this,"transformRTexture");c(this,"transformTSpeedTexture");c(this,"transformTTexture");c(this,"is4D");c(this,"shBands");c(this,"sh1to3Texture");c(this,"sh4to7Texture");c(this,"sh8to11Texture");c(this,"sh12to15Texture");c(this,"updateDataWorker");console.log("____ ENGINE IVAN","new GSplat");const s=e.numSplats;this.device=t,this.numSplats=s,this.numSplatsVisible=s,this.updateDataWorker=new V1,this.centers=new Float32Array(e.numSplats*3),this.motion=new Float32Array(e.numSplats*3),this.timeIndex=new Float32Array(e.numSplats),e.getCenters(this.centers),e.getMotion(this.motion),e.getTimeIndex(this.timeIndex),this.muT=e.getMuT(this.timeOption),this.tScale=e.getTScale(),this.is4D=e.is4D,this.aabb=new ve,e.calcAabb(this.aabb);const i=this.evalTextureSize(s);this.colorTexture=this.createTexture("splatColor",it,i),this.thresholdTexture=this.createTexture("splatThreshold",xa,i),this.transformATexture=this.createTexture("transformA",yt,i),this.transformBTexture=this.createTexture("transformB",it,i),this.transformRTexture=this.createTexture("transformR",et,i),this.is4D&&(this.transformTSpeedTexture=this.createTexture("transformTSpeed",et,i),this.transformTTexture=this.createTexture("transformT",et,i)),this.updateColorData(e),this.updateThresholdData(e),this.updateTransformData(e),this.shBands=e.shBands,this.shBands>0&&(this.sh1to3Texture=this.createTexture("splatSH_1to3",yt,i),this.shBands>1&&(this.sh4to7Texture=this.createTexture("splatSH_4to7",yt,i),this.shBands>2?(this.sh8to11Texture=this.createTexture("splatSH_8to11",yt,i),this.sh12to15Texture=this.createTexture("splatSH_12to15",yt,i)):this.sh8to11Texture=this.createTexture("splatSH_8to11",on,i)),this.updateSHData(e))}updateData(t){console.log("____ ENGINE IVAN","updateData GSplat");const e=t.numSplats;this.numSplats=e,this.numSplatsVisible=e,this.centers=new Float32Array(t.numSplats*3),this.motion=new Float32Array(t.numSplats*3),this.timeIndex=new Float32Array(t.numSplats),t.getCenters(this.centers),t.getMotion(this.motion),t.getTimeIndex(this.timeIndex),this.muT=t.getMuT(this.timeOption),this.tScale=t.getTScale(),this.is4D=t.is4D,this.aabb=new ve,t.calcAabb(this.aabb);const s=this.evalTextureSize(e);this.colorTexture=this.createTexture("splatColor",it,s),this.thresholdTexture=this.createTexture("splatThreshold",xa,s),this.transformATexture=this.createTexture("transformA",yt,s),this.transformBTexture=this.createTexture("transformB",it,s),this.transformRTexture=this.createTexture("transformR",et,s),this.is4D&&(this.transformTSpeedTexture=this.createTexture("transformTSpeed",et,s),this.transformTTexture=this.createTexture("transformT",et,s)),this.updateColorData(t),this.updateTransformData(t),this.updateThresholdData(t),this.shBands=t.shBands,this.shBands>0&&(this.sh1to3Texture=this.createTexture("splatSH_1to3",yt,s),this.shBands>1&&(this.sh4to7Texture=this.createTexture("splatSH_4to7",yt,s),this.shBands>2?(this.sh8to11Texture=this.createTexture("splatSH_8to11",yt,s),this.sh12to15Texture=this.createTexture("splatSH_12to15",yt,s)):this.sh8to11Texture=this.createTexture("splatSH_8to11",on,s)),this.updateSHData(t))}destroy(){var t,e,s,i,r,n,a,o,h,d,u;(t=this.colorTexture)==null||t.destroy(),(e=this.thresholdTexture)==null||e.destroy(),(s=this.transformATexture)==null||s.destroy(),(i=this.transformBTexture)==null||i.destroy(),(r=this.transformRTexture)==null||r.destroy(),(n=this.transformTSpeedTexture)==null||n.destroy(),(a=this.transformTTexture)==null||a.destroy(),(o=this.sh1to3Texture)==null||o.destroy(),(h=this.sh4to7Texture)==null||h.destroy(),(d=this.sh8to11Texture)==null||d.destroy(),(u=this.sh12to15Texture)==null||u.destroy()}createMaterial(t){console.log("====== ENGINE IVAN","GSplat.createMaterial");const e=U0(t);return e.setParameter("splatColor",this.colorTexture),e.setParameter("splatThreshold",this.thresholdTexture),e.setParameter("transformA",this.transformATexture),e.setParameter("transformB",this.transformBTexture),e.setParameter("transformR",this.transformRTexture),this.transformTSpeedTexture&&e.setParameter("transformTSpeed",this.transformTSpeedTexture),this.transformTTexture&&e.setParameter("transformT",this.transformTTexture),e.setParameter("numSplats",this.numSplatsVisible),e.setDefine("SH_BANDS",this.shBands),e.setDefine("IS_4D",this.is4D),this.sh1to3Texture&&e.setParameter("splatSH_1to3",this.sh1to3Texture),this.sh4to7Texture&&e.setParameter("splatSH_4to7",this.sh4to7Texture),this.sh8to11Texture&&e.setParameter("splatSH_8to11",this.sh8to11Texture),this.sh12to15Texture&&e.setParameter("splatSH_12to15",this.sh12to15Texture),e}evalTextureSize(t){const e=Math.ceil(Math.sqrt(t)),s=Math.ceil(t/e);return new W(e,s)}createTexture(t,e,s){return new ce(this.device,{name:t,width:s.x,height:s.y,format:e,cubemap:!1,mipmaps:!1,minFilter:fe,magFilter:fe,addressU:oe,addressV:oe})}updateThresholdData(t){console.log("____ ENGINE IVAN","updateThresholdData");const e=this.thresholdTexture,s=1/255,r=new URL(location.href).searchParams.get("cutoff");if(!e)return;const n=Bt.float2Half,a=e.lock();let o=t.getProp("cf");if(!o){o=new Float32Array(t.numSplats);for(let h=0;h<t.numSplats;++h)o[h]=r?Number(r):0}this.threshold=o;for(let h=0;h<this.numSplats;++h){const d=o?o[h]*254/255+.00392156862745098:s;a[h]=n(d)}e.unlock()}updateColorData(t){console.log("____ ENGINE IVAN","updateColorData");const e=this.colorTexture;if(!e)return;const s=Bt.float2Half,i=e.lock(),r=t.getProp("f_dc_0"),n=t.getProp("f_dc_1"),a=t.getProp("f_dc_2"),o=t.getProp("opacity"),h=.28209479177387814;this.opacity=new Float32Array(this.numSplats);for(let d=0;d<this.numSplats;++d){const u=r[d]*h+.5,f=n[d]*h+.5,p=a[d]*h+.5,m=1/(1+Math.exp(-o[d]));this.opacity[d]=m,i[d*4+0]=s(u),i[d*4+1]=s(f),i[d*4+2]=s(p),i[d*4+3]=s(m)}e.unlock()}updateTransformData(t){var C,x,M,S;console.log("____ ENGINE IVAN","updateTransformData");const e=Bt.float2Half;if(!this.transformATexture)return;const s=this.transformATexture.lock(),i=new Float32Array(s.buffer),r=this.transformRTexture.lock(),n=new Float32Array(r.buffer),a=this.transformBTexture.lock(),o=(C=this.transformTSpeedTexture)==null?void 0:C.lock();let h;o&&(h=new Float32Array(o.buffer));const d=(x=this.transformTTexture)==null?void 0:x.lock();let u;d&&(u=new Float32Array(d.buffer));const f=new A,p=new ie,m=new A,_=new A,g=t.createIter(f,p,m,null,_),y=t.getProp("t"),w=t.getProp("t_scale");for(let v=0;v<this.numSplats;v++)g.read(v),p.normalize(),p.w<0&&p.mulScalar(-1),i[v*4+0]=f.x,i[v*4+1]=f.y,i[v*4+2]=f.z,a[v*4+0]=e(m.x),a[v*4+1]=e(m.y),a[v*4+2]=e(m.z),n[v*4+0]=p.x,n[v*4+1]=p.y,n[v*4+2]=p.z,this.is4D&&h&&u&&(h[v*4+0]=_.x,h[v*4+1]=_.y,h[v*4+2]=_.z,u[v*4+0]=y?y[v]:0,u[v*4+1]=w?Math.exp(w[v]):0);this.transformATexture.unlock(),this.transformBTexture.unlock(),this.transformRTexture.unlock(),(M=this.transformTSpeedTexture)==null||M.unlock(),(S=this.transformTTexture)==null||S.unlock()}updateSHData(t){var p,m,_,g,y,w,C;console.log("____ ENGINE IVAN","updateSHData");const e=(p=this.sh1to3Texture)==null?void 0:p.lock(),s=(m=this.sh4to7Texture)==null?void 0:m.lock(),i=(_=this.sh8to11Texture)==null?void 0:_.lock(),r=(g=this.sh12to15Texture)==null?void 0:g.lock(),n={1:3,2:8,3:15}[this.shBands],a=V_(t,n*3),o=2047,h=1023,d=new Float32Array(1),u=new Uint32Array(d.buffer),f=new Array(n*3).fill(0);for(let x=0;x<t.numSplats;++x){for(let S=0;S<n;++S)f[S*3]=a[S][x],f[S*3+1]=a[S+n][x],f[S*3+2]=a[S+n*2][x];let M=f[0];for(let S=1;S<n*3;++S)M=Math.max(M,Math.abs(f[S]));if(M!==0){for(let S=0;S<n;++S)f[S*3+0]=Math.max(0,Math.min(o,Math.floor((f[S*3+0]/M*.5+.5)*o+.5))),f[S*3+1]=Math.max(0,Math.min(h,Math.floor((f[S*3+1]/M*.5+.5)*h+.5))),f[S*3+2]=Math.max(0,Math.min(o,Math.floor((f[S*3+2]/M*.5+.5)*o+.5)));d[0]=M,e[x*4+0]=u[0],e[x*4+1]=f[0]<<21|f[1]<<11|f[2],e[x*4+2]=f[3]<<21|f[4]<<11|f[5],e[x*4+3]=f[6]<<21|f[7]<<11|f[8],this.shBands>1&&(s[x*4+0]=f[9]<<21|f[10]<<11|f[11],s[x*4+1]=f[12]<<21|f[13]<<11|f[14],s[x*4+2]=f[15]<<21|f[16]<<11|f[17],s[x*4+3]=f[18]<<21|f[19]<<11|f[20],this.shBands>2?(i[x*4+0]=f[21]<<21|f[22]<<11|f[23],i[x*4+1]=f[24]<<21|f[25]<<11|f[26],i[x*4+2]=f[27]<<21|f[28]<<11|f[29],i[x*4+3]=f[30]<<21|f[31]<<11|f[32],r[x*4+0]=f[33]<<21|f[34]<<11|f[35],r[x*4+1]=f[36]<<21|f[37]<<11|f[38],r[x*4+2]=f[39]<<21|f[40]<<11|f[41],r[x*4+3]=f[42]<<21|f[43]<<11|f[44]):i[x]=f[21]<<21|f[22]<<11|f[23])}}this.sh1to3Texture.unlock(),(y=this.sh4to7Texture)==null||y.unlock(),(w=this.sh8to11Texture)==null||w.unlock(),(C=this.sh12to15Texture)==null||C.unlock()}updateSHDataByWorker(t){const e={1:3,2:8,3:15}[this.shBands],s=V_(t,e*3);this.updateDataWorker.updateSHData(t.numSplats,this.shBands,s),this.updateDataWorker.on("updatedSHData",(i,r,n,a)=>{var d,u,f,p,m,_,g,y,w,C;const o=(d=this.sh1to3Texture)==null?void 0:d.lock();if(new Uint32Array(o.buffer).set(i),(u=this.sh1to3Texture)==null||u.unlock(),this.shBands>1){const x=(f=this.sh4to7Texture)==null?void 0:f.lock();if(new Uint32Array(x.buffer).set(r),(p=this.sh4to7Texture)==null||p.unlock(),this.shBands>2){const S=(m=this.sh8to11Texture)==null?void 0:m.lock();new Uint32Array(S.buffer).set(n),(_=this.sh8to11Texture)==null||_.unlock();const E=(g=this.sh12to15Texture)==null?void 0:g.lock();new Uint32Array(E.buffer).set(a),(y=this.sh12to15Texture)==null||y.unlock()}else{const S=(w=this.sh8to11Texture)==null?void 0:w.lock();new Uint32Array(S.buffer).set(n),(C=this.sh8to11Texture)==null||C.unlock()}}})}}async function H1(){let l=4;class t{constructor($,ue){this.lChild=$,this.rChild=ue,this.indexes=[]}setLeftChild($){this.lChild=$}setRightChild($){this.rChild=$}}class e{constructor($,ue,ge,xe){this.maxDepth=$,this.timeScaleRaio=xe,this.minTime=Math.floor(ue*xe),this.maxTime=Math.ceil(ge*xe),this.rootNode=new t(null,null)}insertNode($,ue,ge){$=Math.floor($*this.timeScaleRaio),ue=Math.ceil(ue*this.timeScaleRaio),this._insertNode(this.rootNode,$,ue,ge,this.minTime,this.maxTime,0)}_insertNode($,ue,ge,xe,Ne,Q,Pe){if(ue<=Ne&&Q<=ge){$.indexes.push(xe);return}if(Pe>=this.maxDepth){$.indexes.push(xe);return}let $e=Math.floor((Ne+Q)/2);ue<=$e&&($.lChild==null&&($.lChild=new t(null,null)),this._insertNode($.lChild,ue,ge,xe,Ne,$e,Pe+1)),ge>$e&&($.rChild==null&&($.rChild=new t(null,null)),this._insertNode($.rChild,ue,ge,xe,$e+1,Q,Pe+1))}gatherIndexesNumber($){$=Math.floor($*this.timeScaleRaio);let ue=this.minTime,ge=this.maxTime,xe=this.rootNode,Ne=0;for(;!($<ue||$>ge||xe==null||(xe.indexes.length>0&&(Ne=Ne+xe.indexes.length),ue==ge));){let Q=Math.floor((ue+ge)/2);$<=Q?(ge=Q,xe=xe.lChild):(ue=Q+1,xe=xe.rChild)}return Ne}gatherIndexes($,ue,ge){$=Math.floor($*this.timeScaleRaio);let xe=this.minTime,Ne=this.maxTime,Q=this.rootNode,Pe=0;for(;!($<xe||$>Ne||Q==null);){if(Q.indexes&&Q.indexes.length>0){const Ke=Q.indexes.length,Ns=Ke*l;new Uint32Array(ue,ge,Ke).set(Q.indexes),Pe+=Q.indexes.length,ge+=Ns}if(xe==Ne)break;let $e=Math.floor((xe+Ne)/2);$<=$e?(Ne=$e,Q=Q.lChild):(xe=$e+1,Q=Q.rChild)}return Pe}}let s=null,i=null,r=null,n=null,a=null,o=null,h=null,d=null,u=null,f=null,p=null,m=null,_=null,g=null,y=null,w=null,C=null,x=null,M=null,S=null,v=null,E=null,T=null,R=null,D=null,P=null,L=null,k=Float32Array.BYTES_PER_ELEMENT,H=Uint32Array.BYTES_PER_ELEMENT,N=0,I=!0,F,O,B={x:0,y:0,z:0},U={x:0,y:0,z:0},V=!0,X=!1,Z=!1,K=0,J=0,se=!1,_e=null,ut=!1,mt=.03,ft=Math.sqrt(-2*Math.log(mt)),Vi=65536,Ga=new e(16,0,5,Vi/5);self.onmessage=async Lt=>{const{data:$}=Lt;switch($.type){case"initWorker":N=$.numSplats,_l(),I=$.is4d,await rd($.sortWasmUrl),Ha(),self.postMessage({type:"initialized"});break;case"initData":if($.dataReady){if(o&&$.centers&&o.length===$.centers.length){const ue=new Float32Array($.centers);o.set(ue)}if(f&&$.timeIndex&&f.length===$.timeIndex.length){const ue=new Uint32Array($.timeIndex);f.set(ue)}if(_&&$.motion&&_.length===$.motion.length){const ue=new Float32Array($.motion);_.set(ue)}if(I&&p&&m&&$.muT&&$.tScale&&p.length===$.muT.length&&m.length===$.tScale.length){p.set($.muT),m.set($.tScale);let ue=function(ge,xe){return ge>xe?ge:xe};for(let ge=0;ge<p.length;++ge)ft=Math.sqrt(-2*Math.log(ue(mt,$.threshold[ge]/($.opacity[ge]+1e-9)))),Ga.insertNode($.muT[ge]-ue(ft*$.tScale[ge],.6),$.muT[ge]+ft*$.tScale[ge],ge)}if(h)for(let ue=0;ue<h.length;++ue)h[ue]=ue;a&&$.timeOption&&a.set($.timeOption),setTimeout(()=>{te()},0)}break;case"setTime":F=$.time,bn();break;case"setUseTemporalSort":V=$.useTemporalSort;break;case"sort":if(!r)return;r[0]=$.cameraPosition.x,r[1]=$.cameraPosition.y,r[2]=$.cameraPosition.z,n[0]=$.cameraDirection.x,n[1]=$.cameraDirection.y,n[2]=$.cameraDirection.z,bn();break}};const bn=()=>{_e&&clearTimeout(_e),_e=setTimeout(()=>{_e=null,gl()},0)},_l=()=>{J=Math.max(10,Math.min(20,Math.round(Math.log2(N/4)))),K=2**J+1},Ha=()=>(g=0,y=g+N*k*3,v=y+100*k*2,E=v+N*H,T=E+3*k,R=T+3*k,D=R+3*k,P=D+3*k,L=P+N*H,x=L+K*H,o=new Float32Array(i,g,N*3),a=new Float32Array(i,y,100*2),h=new Uint32Array(i,v,N),d=new Uint32Array(h),r=new Float32Array(i,E,3),n=new Float32Array(i,T,3),u=new Uint32Array(i,x,N),I&&(M=x+N*H,S=M+N*k,C=S+N*k,w=C+N*3*k,p=new Float32Array(i,M,N),m=new Float32Array(i,S,N),_=new Float32Array(i,C,N*3),f=new Uint32Array(i,w,N)),{sharedMemory:i,layout:{timeOptionPtr:y,timeIndexPtr:w,centersPtr:g,motionPtr:C,muTPtr:M,tScalePtr:S,orderPtr:v,cameraPositionPtr:E,cameraDirectionPtr:T,boundMinPtr:R,boundMaxPtr:D,distancesPtr:P,countBufferPtr:L,indexPtr:x}}),rd=async Lt=>{let $=N*k*3;$+=N*H,$+=3*k,$+=3*k,$+=3*k,$+=3*k,$+=N*k,$+=K*H,$+=N*H,$+=100*k*2,$+=N*H,I&&($+=N*k,$+=N*k,$+=N*k*3);const ue=64*1024,ge=Math.ceil($/ue),Ne={env:{memory:new WebAssembly.Memory({initial:ge,maximum:ge,shared:!0}),pthread_self:function(){return 0},emscripten_builtin_memalign:function(){return 0},emscripten_get_now:function(){return performance.now()},loggerVec3:(Q,Pe,$e,Ke)=>{console.log(`C++ loggerVec3 [${Q}] 0:${Pe} 1:${$e} 2:${Ke}`)},loggerFloat:(Q,Pe)=>{console.log(`C++ LogFloat [${Q}] a:${Pe}`)},loggerValue:(Q,Pe,$e,Ke,Ns)=>{console.log(`C++ loggerValue [${Q}] minDist:${Pe} maxDist:${$e} range:${Ke} divider:${Ns}`)},loggerCamera:(Q,Pe,$e,Ke,Ns,_r,yl)=>{console.log(`C++ loggerCamera [${Q}] x:${Pe} y:${$e} z:${Ke} dx:${Ns} dy:${_r} dz:${yl}`)},loggerBound:(Q,Pe,$e,Ke,Ns,_r)=>{console.log(`C++ loggerBound minX:${Q} minY:${Pe} minZ:${$e} maxX:${Ke} maxY:${Ns} maxZ:${_r}`)},loggerDebug:Q=>{}}};try{const Pe=await(await fetch(Lt)).arrayBuffer();return s=(await WebAssembly.instantiate(Pe,Ne)).instance,i=Ne.env.memory.buffer,s}catch(Q){throw console.error("加载WASM模块失败:",Q),Q}},te=()=>{if(!s)return;const{calcAABB:Lt}=s.exports;Lt(g,R,D,N)},gl=()=>{if(!s||v===null||g===null||E===null||T===null||R===null||D===null)return;const Lt=r[0],$=r[1],ue=r[2],ge=n[0],xe=n[1],Ne=n[2],Q=.001;if(!X&&Math.abs(Lt-B.x)<Q&&Math.abs($-B.y)<Q&&Math.abs(ue-B.z)<Q&&Math.abs(ge-U.x)<Q&&Math.abs(xe-U.y)<Q&&Math.abs(Ne-U.z)<Q&&Math.abs(F-O)<.01)return;if(Z){se=!0;return}let Pe=0;if(performance.now(),I&&M&&S)Pe=Ga.gatherIndexes(F,i,x);else if(ut)Pe=N;else{for(let Ke=0;Ke<N;++Ke)u[Pe]=Ke,++Pe;ut=!0}performance.now(),Z=!0,X=!1,O=F,B.x=Lt,B.y=$,B.z=ue,U.x=ge,U.y=xe,U.z=Ne,se=!1;const{sortIndexes:$e}=s.exports;try{let Ke=$e(v,g,C,M,S,E,T,R,D,P,L,x,F,V,I,Pe,K,J,y,w);d.set(h),self.postMessage({type:"sortCompleted",count:Ke-0,order:d})}catch(Ke){console.error("排序操作失败:",Ke),self.postMessage({type:"error",error:Ke.message})}Z=!1,se&&bn()}}class W1 extends de{constructor(e,s=!0){super();c(this,"worker",null);c(this,"numSplats",0);c(this,"is4d",!0);c(this,"sortStartTime",0);c(this,"orderTexture");this.numSplats=e,this.is4d=s,this._initWorker()}async _initWorker(){this.worker=new Worker(URL.createObjectURL(new Blob([`(${H1.toString()})()`],{type:"application/javascript"}))),this.worker.onmessage=s=>{if(!this.worker)return;const{data:i}=s;switch(i.type){case"initialized":this.fire("initialized");break;case"sortCompleted":if(i.order){const n=this.orderTexture.lock();new Uint32Array(n.buffer).set(i.order),this.orderTexture.unlock()}let r=0;this.sortStartTime!==0&&(r=performance.now()-this.sortStartTime),this.fire("updated",s.data.count,r),this.sortStartTime=0;break;case"error":console.error("Worker错误:",i.error),this.fire("error",i.error);break}},this.worker.postMessage({type:"initWorker",sortWasmUrl:"https://frontend.4dv-intelligence.com/viewer-static/test-cutoff-sorter.wasm",numSplats:this.numSplats,is4d:this.is4d})}initData(e,s,i,r,n,a,o,h,d){var u;(!o||o.length===0)&&(o=[0,60]),this.orderTexture=e,(u=this.worker)==null||u.postMessage({type:"initData",centers:s,muT:i,tScale:r,motion:n,timeIndex:a,timeOption:o,dataReady:!0,opacity:h,threshold:d})}resize(e){this.destroy(),this.numSplats=e,this._initWorker()}setCamera(e,s){this.worker&&(this.sortStartTime===0&&(this.sortStartTime=performance.now()),this.worker.postMessage({type:"sort",cameraPosition:{x:e.x,y:e.y,z:e.z},cameraDirection:{x:s.x,y:s.y,z:s.z}}))}setCurrentTime(e){this.worker&&(this.sortStartTime===0&&(this.sortStartTime=performance.now()),this.worker.postMessage({type:"setTime",time:e}))}setUseTemporalSort(e){this.worker&&this.worker.postMessage({type:"setUseTemporalSort",useTemporalSort:e})}destroy(){this.worker&&(this.worker.terminate(),this.worker=null)}}const $1=new q,Bn=new A,Nn=new A,Xl=[0,0];class Gp{constructor(t,e){c(this,"splat");c(this,"mesh");c(this,"meshInstance");c(this,"material");c(this,"orderTexture");c(this,"options",{});c(this,"sorter",null);c(this,"time",0);c(this,"lastCameraPosition",new A);c(this,"lastCameraDirection",new A);c(this,"cameras",[]);console.log("____ ENGINE IVAN","new GSplatInstance",t.numSplats),this.splat=t,this.options=Object.assign(this.options,e);const s=t.device;this.orderTexture=this.splat.createTexture("splatOrder",on,this.splat.evalTextureSize(this.splat.numSplats)),this.createMaterial(this.options);const i=128,n=Math.ceil(t.numSplats/i)*i/i,a=new Uint32Array(n);for(let p=0;p<n;++p)a[p]=p*i;const o=new Dt(s,[{semantic:Sa,components:1,type:Oo,asInt:!0}]),h=new fs(s,o,n,{usage:ts,data:a.buffer}),d=new Float32Array(12*i),u=new Uint32Array(6*i);for(let p=0;p<i;++p){d.set([-1,-1,p,1,-1,p,1,1,p,-1,1,p],p*12);const m=p*4;u.set([0+m,1+m,2+m,0+m,2+m,3+m],p*6)}const f=new ke(s);f.setPositions(d,3),f.setIndices(u),f.update(),this.mesh=f,this.mesh.aabb.copy(t.aabb),this.meshInstance=new Be(this.mesh,this.material),this.meshInstance.setInstancing(h,!0),this.meshInstance.gsplatInstance=this,this.meshInstance.instancingCount=0,(!e.dither||e.dither===Os)&&(this.sorter=new W1(this.splat.numSplats,this.splat.is4D),this.sorter.on("initialized",()=>{var p;(p=this.sorter)==null||p.initData(this.orderTexture,t.centers,t.muT,t.tScale,t.motion,t.timeIndex,t.timeOption,t.opacity,t.threshold)}),this.sorter.on("updated",p=>{this.meshInstance.instancingCount=Math.ceil(p/i),this.material.setParameter("numSplats",p)}))}updateData(t){var h;console.log("____ ENGINE IVAN","updateData GSplatInstance",t.numSplats),this.splat=t;const e=t.device;this.orderTexture=this.splat.createTexture("splatOrder",on,this.splat.evalTextureSize(this.splat.numSplats)),this.createMaterial(this.options);const s=128,r=Math.ceil(t.numSplats/s)*s/s,n=new Uint32Array(r);for(let d=0;d<r;++d)n[d]=d*s;const a=new Dt(e,[{semantic:Sa,components:1,type:Oo,asInt:!0}]),o=new fs(e,a,r,{usage:ts,data:n.buffer});this.mesh.aabb.copy(t.aabb),this.meshInstance.setInstancing(o,!0),this.meshInstance.instancingCount=0,(h=this.sorter)==null||h.resize(t.numSplats)}releaseSeq(t){console.log("____ ENGINE IVAN","releaseSeq",t)}destroy(){var t,e,s;(t=this.material)==null||t.destroy(),(e=this.meshInstance)==null||e.destroy(),(s=this.sorter)==null||s.destroy()}clone(){return new Gp(this.splat,this.options)}createMaterial(t){console.log("____ ENGINE IVAN"," GSplatInstance.createMaterial"),this.material=this.splat.createMaterial(t),this.material.setParameter("splatOrder",this.orderTexture),this.meshInstance&&(this.meshInstance.material=this.material)}updateViewport(){const t=this.splat.device;if(Xl[0]=t.width,Xl[1]=t.height,this.cameras.length>0){const s=this.cameras[0].xr;s&&s.active&&s.views.list.length===2&&(Xl[0]/=2)}this.material.setParameter("viewport",Xl)}sort(t){if(this.sorter){this.sorter.setCurrentTime(this.time);const e=t.getWorldTransform();e.getTranslation(Bn),e.getZ(Nn);const s=this.meshInstance.node.getWorldTransform(),i=$1.invert(s);i.transformPoint(Bn,Bn),i.transformVector(Nn,Nn),(!Bn.equalsApprox(this.lastCameraPosition)||!Nn.equalsApprox(this.lastCameraDirection))&&(this.lastCameraPosition.copy(Bn),this.lastCameraDirection.copy(Nn),this.sorter.setCamera(Bn,Nn))}this.updateViewport()}update(){if(this.cameras.length>0){const t=this.cameras[0];this.sort(t._node),this.cameras.length=0}}updateTime(t){this.time=t}}const q1="FILL_WINDOW",G_="KEEP_ASPECT",H_="AUTO",X1="FIXED";let V0;function sn(){return V0}function Ku(l){V0=l}class j1{constructor(){c(this,"renderPasses",[]);c(this,"renderTargetMap",new Map)}addRenderPass(t){b.assert(t),t.frameUpdate();const e=t.beforePasses;for(let i=0;i<e.length;i++){const r=e[i];r.enabled&&this.addRenderPass(r)}t.enabled&&this.renderPasses.push(t);const s=t.afterPasses;for(let i=0;i<s.length;i++){const r=s[i];r.enabled&&this.addRenderPass(r)}}reset(){this.renderPasses.length=0}compile(){const t=this.renderTargetMap,e=this.renderPasses;for(let r=0;r<e.length;r++){const n=e[r],a=n.renderTarget;if(a!==void 0){const o=t.get(a);if(o){const h=n.colorArrayOps.length;for(let d=0;d<h;d++)n.colorArrayOps[d].clear||(o.colorArrayOps[d].store=!0);n.depthStencilOps.clearDepth||(o.depthStencilOps.storeDepth=!0),n.depthStencilOps.clearStencil||(o.depthStencilOps.storeStencil=!0)}t.set(a,n)}}for(let r=0;r<e.length-1;r++){const n=e[r],a=n.renderTarget,o=e[r+1],h=o.renderTarget;a!==h||a===void 0||o.depthStencilOps.clearDepth||o.depthStencilOps.clearStencil||o.colorArrayOps.some(d=>d.clear)||n.afterPasses.length>0||o.beforePasses.length>0||(n._skipEnd=!0,o._skipStart=!0)}let s=null,i=null;for(let r=0;r<e.length;r++){const n=e[r],a=n.renderTarget,o=a==null?void 0:a.colorBuffer;if(o!=null&&o.cubemap){if(s===o){const h=i.colorArrayOps.length;for(let d=0;d<h;d++)i.colorArrayOps[d].mipmaps=!1}s=a.colorBuffer,i=n}else n.requiresCubemaps&&(s=null,i=null)}t.clear()}render(t){this.compile();const e=this.renderPasses;for(let s=0;s<e.length;s++)e[s].render()}}class Y1{constructor(t,e){this.texture0=t,this.texture1=e}destroy(){var t,e;(t=this.texture0)==null||t.destroy(),(e=this.texture1)==null||e.destroy()}}const W_=new Ht;class qr{static createTexture(t,e,s,i=""){return new ce(t,{name:`AreaLightLUT${i}`,width:s,height:s,format:e,addressU:oe,addressV:oe,type:Bi,magFilter:at,minFilter:fe,anisotropy:1,mipmaps:!1})}static applyTextures(t,e,s){W_.remove(t),W_.get(t,()=>new Y1(e,e===s?null:s)),t.scope.resolve("areaLightsLutTex1").setValue(e),t.scope.resolve("areaLightsLutTex2").setValue(s)}static createPlaceholder(t){const e=qr.createTexture(t,it,2,"placeholder");e.lock().fill(0),e.unlock(),qr.applyTextures(t,e,e)}static set(t,e,s){function i(f,p,m){const _=qr.createTexture(f,m,64);return _.lock().set(p),_.unlock(),_}function r(f){const p=f.length,m=new Uint16Array(p),_=Bt.float2Half;for(let g=0;g<p;g++)m[g]=_(f[g]);return m}const n=e,a=s,o=r(n),h=r(a),d=i(t,o,it),u=i(t,h,it);qr.applyTextures(t,d,u)}}const Yh="en-US",Kh={en:"en-US",es:"en-ES",zh:"zh-CN","zh-HK":"zh-TW","zh-TW":"zh-HK","zh-MO":"zh-HK",fr:"fr-FR",de:"de-DE",it:"it-IT",ru:"ru-RU",ja:"ja-JP"},Hp={};function mr(l,t){for(let e=0,s=l.length;e<s;e++)Hp[l[e]]=t}function xi(l){const t=l.indexOf("-");return t!==-1?l.substring(0,t):l}function K1(l,t){const e=l.indexOf("-");return e!==-1?t+l.substring(e):t}function G0(l,t){if(t[l])return l;let e=Kh[l];if(e&&t[e])return e;const s=xi(l);return e=Kh[s],t[e]?e:t[s]?s:Yh}mr(["ja","ko","th","vi","zh","id"],l=>0);mr(["fa","hi"],l=>l>=0&&l<=1?0:1);mr(["fr","pt"],l=>l>=0&&l<2?0:1);mr(["da"],l=>l===1||!Number.isInteger(l)&&l>=0&&l<=1?0:1);mr(["de","en","it","el","es","tr","fi","sv","nb","no","ur"],l=>l===1?0:1);mr(["ru","uk"],l=>{if(Number.isInteger(l)){const t=l%10,e=l%100;if(t===1&&e!==11)return 0;if(t>=2&&t<=4&&(e<12||e>14))return 1;if(t===0||t>=5&&t<=9||e>=11&&e<=14)return 2}return 3});mr(["pl"],l=>{if(Number.isInteger(l)){if(l===1)return 0;const t=l%10,e=l%100;if(t>=2&&t<=4&&(e<12||e>14))return 1;if(t>=0&&t<=1||t>=5&&t<=9||e>=12&&e<=14)return 2}return 3});mr(["ar"],l=>{if(l===0)return 0;if(l===1)return 1;if(l===2)return 2;if(Number.isInteger(l)){const t=l%100;if(t>=3&&t<=10)return 3;if(t>=11&&t<=99)return 4}return 5});const Z1=Hp[xi(Yh)];function Zd(l){return Hp[l]||Z1}const ka=new RegExp("^\\s*(?:(?:[a-z]+[a-z0-9\\-+.]*:)?//|data:|blob:)","i");class Q1{constructor(t="",e="",s=null,i=null,r=null,n=null){this.url=t,this.filename=e,this.hash=s,this.size=i,this.opt=r,this.contents=n}equals(t){return this.url===t.url&&this.filename===t.filename&&this.hash===t.hash&&this.size===t.size&&this.opt===t.opt&&this.contents===t.contents}}let J1=-1;const eP={pvr:"extCompressedTexturePVRTC",dxt:"extCompressedTextureS3TC",etc2:"extCompressedTextureETC",etc1:"extCompressedTextureETC1",basis:"canvas"},$_=["pvr","dxt","etc2","etc1","basis"];class he extends de{constructor(t,e,s,i,r){super(),this._id=J1--,this._name=t||"",this.type=e,this.tags=new yo(this),this._preload=!1,this._file=null,this._data=i||{},this.options=r||{},this._resources=[],this.urlObject=null,this._i18n={},this.loaded=!1,this.loading=!1,this.registry=null,s&&(this.file=s)}set id(t){this._id=t}get id(){return this._id}set name(t){if(this._name===t)return;const e=this._name;this._name=t,this.fire("name",this,this._name,e)}get name(){return this._name}set file(t){var i,r;if(t&&t.variants&&["texture","textureatlas","bundle"].indexOf(this.type)!==-1){const n=((r=(i=this.registry)==null?void 0:i._loader)==null?void 0:r._app)||sn(),a=n==null?void 0:n.graphicsDevice;if(a)for(let o=0,h=$_.length;o<h;o++){const d=$_[o];if(t.variants[d]&&a[eP[d]]){t=t.variants[d];break}if(n.enableBundles){const u=n.bundles.listBundlesForAsset(this);if(u&&u.find(f=>{var p;return(p=f==null?void 0:f.file)==null?void 0:p.variants[d]}))break}}}const e=this._file,s=t?new Q1(t.url,t.filename,t.hash,t.size,t.opt,t.contents):null;(!!s!=!!e||s&&!s.equals(e))&&(this._file=s,this.fire("change",this,"file",s,e),this.reload())}get file(){return this._file}set data(t){const e=this._data;this._data=t,t!==e&&(this.fire("change",this,"data",t,e),this.loaded&&this.registry._loader.patch(this,this.registry))}get data(){return this._data}set resource(t){const e=this._resources[0];this._resources[0]=t,this.fire("change",this,"resource",t,e)}get resource(){return this._resources[0]}set resources(t){const e=this._resources;this._resources=t,this.fire("change",this,"resources",t,e)}get resources(){return this._resources}set preload(t){t=!!t,this._preload!==t&&(this._preload=t,this._preload&&!this.loaded&&!this.loading&&this.registry&&this.registry.load(this))}get preload(){return this._preload}set loadFaces(t){t=!!t,(!this.hasOwnProperty("_loadFaces")||t!==this._loadFaces)&&(this._loadFaces=t,this.loaded&&this.registry._loader.patch(this,this.registry))}get loadFaces(){return this._loadFaces}getFileUrl(){const t=this.file;if(!t||!t.url)return null;let e=t.url;if(this.registry&&this.registry.prefix&&!ka.test(e)&&(e=this.registry.prefix+e),this.type!=="script"&&t.hash){const s=e.indexOf("?")!==-1?"&":"?";e+=`${s}t=${t.hash}`}return e}getAbsoluteUrl(t){if(t.startsWith("blob:")||t.startsWith("data:"))return t;const e=me.getDirectory(this.file.url);return me.join(e,t)}getLocalizedAssetId(t){return t=G0(t,this._i18n),this._i18n[t]||null}addLocalizedAssetId(t,e){this._i18n[t]=e,this.fire("add:localized",t,e)}removeLocalizedAssetId(t){const e=this._i18n[t];e&&(delete this._i18n[t],this.fire("remove:localized",t,e))}ready(t,e){e=e||this,this.loaded?t.call(e,this):this.once("load",s=>{t.call(e,s)})}reload(){this.loaded&&(this.loaded=!1,this.registry.load(this))}unload(){if(!this.loaded&&this._resources.length===0)return;this.fire("unload",this),this.registry.fire(`unload:${this.id}`,this);const t=this._resources;this.urlObject&&(URL.revokeObjectURL(this.urlObject),this.urlObject=null),this.resources=[],this.loaded=!1,this.file&&this.registry._loader.clearCache(this.getFileUrl(),this.type);for(let e=0;e<t.length;++e){const s=t[e];s&&s.destroy&&s.destroy()}}static fetchArrayBuffer(t,e,s,i=0){var r;(r=s==null?void 0:s.file)!=null&&r.contents?setTimeout(()=>{e(null,s.file.contents)}):Ye.get(t,{cache:!0,responseType:"arraybuffer",retry:i>0,maxRetries:i},e)}}c(he,"EVENT_LOAD","load"),c(he,"EVENT_UNLOAD","unload"),c(he,"EVENT_REMOVE","remove"),c(he,"EVENT_ERROR","error"),c(he,"EVENT_CHANGE","change"),c(he,"EVENT_PROGRESS","progress"),c(he,"EVENT_ADDLOCALIZED","add:localized"),c(he,"EVENT_REMOVELOCALIZED","remove:localized");class tP{constructor(t=null){c(this,"_index",{});c(this,"_key");this._key=t}addItem(t){const e=t.tags._list;for(const s of e)this.add(s,t)}removeItem(t){const e=t.tags._list;for(const s of e)this.remove(s,t)}add(t,e){this._index[t]&&this._index[t].list.indexOf(e)!==-1||(this._index[t]||(this._index[t]={list:[]},this._key&&(this._index[t].keys={})),this._index[t].list.push(e),this._key&&(this._index[t].keys[e[this._key]]=e))}remove(t,e){if(!this._index[t]||this._key&&!this._index[t].keys[e[this._key]])return;const s=this._index[t].list.indexOf(e);s!==-1&&(this._index[t].list.splice(s,1),this._key&&delete this._index[t].keys[e[this._key]],this._index[t].list.length===0&&delete this._index[t])}find(t){const e={},s=[];let i,r,n,a,o;const h=(d,u)=>this._index[d].list.length-this._index[u].list.length;for(let d=0;d<t.length;d++){if(r=t[d],r instanceof Array){if(r.length===0)continue;if(r.length===1)r=r[0];else{o=!1;for(let u=0;u<r.length;u++)if(!this._index[r[u]]){o=!0;break}if(o)continue;n=r.slice(0).sort(h),a=n.slice(1),a.length===1&&(a=a[0]);for(let u=0;u<this._index[n[0]].list.length;u++)i=this._index[n[0]].list[u],(this._key?!e[i[this._key]]:s.indexOf(i)===-1)&&i.tags.has(a)&&(this._key&&(e[i[this._key]]=!0),s.push(i));continue}}if(r&&typeof r=="string"&&this._index[r])for(let u=0;u<this._index[r].list.length;u++)i=this._index[r].list[u],this._key?e[i[this._key]]||(e[i[this._key]]=!0,s.push(i)):s.indexOf(i)===-1&&s.push(i)}return s}}class co extends de{constructor(e){super();c(this,"_assets",new Set);c(this,"_loader");c(this,"_idToAsset",new Map);c(this,"_urlToAsset",new Map);c(this,"_nameToAsset",new Map);c(this,"_tags",new tP("_id"));c(this,"prefix",null);c(this,"bundles",null);this._loader=e}list(e={}){const s=Array.from(this._assets);return e.preload!==void 0?s.filter(i=>i.preload===e.preload):s}add(e){var s,i;this._assets.has(e)||(this._assets.add(e),this._idToAsset.set(e.id,e),(s=e.file)!=null&&s.url&&this._urlToAsset.set(e.file.url,e),this._nameToAsset.has(e.name)||this._nameToAsset.set(e.name,new Set),this._nameToAsset.get(e.name).add(e),e.on("name",this._onNameChange,this),e.registry=this,this._tags.addItem(e),e.tags.on("add",this._onTagAdd,this),e.tags.on("remove",this._onTagRemove,this),this.fire("add",e),this.fire(`add:${e.id}`,e),(i=e.file)!=null&&i.url&&this.fire(`add:url:${e.file.url}`,e),e.preload&&this.load(e))}remove(e){var s,i;if(!this._assets.has(e))return!1;if(this._assets.delete(e),this._idToAsset.delete(e.id),(s=e.file)!=null&&s.url&&this._urlToAsset.delete(e.file.url),e.off("name",this._onNameChange,this),this._nameToAsset.has(e.name)){const r=this._nameToAsset.get(e.name);r.delete(e),r.size===0&&this._nameToAsset.delete(e.name)}return this._tags.removeItem(e),e.tags.off("add",this._onTagAdd,this),e.tags.off("remove",this._onTagRemove,this),e.fire("remove",e),this.fire("remove",e),this.fire(`remove:${e.id}`,e),(i=e.file)!=null&&i.url&&this.fire(`remove:url:${e.file.url}`,e),!0}get(e){return this._idToAsset.get(Number(e))}getByUrl(e){return this._urlToAsset.get(e)}load(e,s){if((e.loading||e.loaded)&&!(s!=null&&s.force))return;const i=e.file,r=()=>{this.fire("load",e),this.fire(`load:${e.id}`,e),i&&i.url&&this.fire(`load:url:${i.url}`,e),e.fire("load",e)},n=o=>{if(o instanceof Array?e.resources=o:e.resource=o,this._loader.patch(e,this),e.type==="bundle"){const h=e.data.assets;for(let d=0;d<h.length;d++){const u=this._idToAsset.get(h[d]);u&&!u.loaded&&this.load(u,{force:!0})}e.resource.loaded?r():(this.fire("load:start",e),this.fire(`load:start:${e.id}`,e),i&&i.url&&this.fire(`load:start:url:${i.url}`,e),e.fire("load:start",e),e.resource.on("load",r))}else r()},a=(o,h,d)=>{if(e.loaded=!0,e.loading=!1,o)this.fire("error",o,e),this.fire(`error:${e.id}`,o,e),e.fire("error",o,e);else{if(e.type==="script"){const u=this._loader.getHandler("script");u._cache[e.id]&&u._cache[e.id].parentNode===document.head&&document.head.removeChild(u._cache[e.id]),u._cache[e.id]=d}n(h)}};if(i||e.type==="cubemap"){this.fire("load:start",e),this.fire(`load:${e.id}:start`,e),e.loading=!0;const o=e.getFileUrl();if(e.type==="bundle"){const h=e.data.assets;for(let d=0;d<h.length;d++){const u=this._idToAsset.get(h[d]);u&&(u.loaded||u.resource||u.loading||(u.loading=!0))}}this._loader.load(o,e.type,a,e,s)}else{const o=this._loader.open(e.type,e.data);e.loaded=!0,n(o)}}loadFromUrl(e,s,i){this.loadFromUrlAndFilename(e,null,s,i)}loadFromUrlAndFilename(e,s,i,r){const n=me.getBasename(s||e),a={filename:s||n,url:e};let o=this.getByUrl(e);if(!o)o=new he(n,i,a),this.add(o);else if(o.loaded){r(o.loadFromUrlError||null,o);return}const h=d=>{d.once("load",u=>{i==="material"?this._loadTextures(u,(f,p)=>{r(f,u)}):r(null,u)}),d.once("error",u=>{u&&(this.loadFromUrlError=u),r(u,d)}),this.load(d)};o.resource?r(null,o):i==="model"?this._loadModel(o,h):h(o)}_loadModel(e,s){const i=e.getFileUrl(),r=me.getExtension(i);if(r===".json"||r===".glb"){const n=me.getDirectory(i),a=me.getBasename(i),o=me.join(n,a.replace(r,".mapping.json"));this._loader.load(o,"json",(h,d)=>{h?(e.data={mapping:[]},s(e)):this._loadMaterials(e,d,(u,f)=>{e.data=d,s(e)})})}else s(e)}_loadMaterials(e,s,i){const r=[];let n=0;const a=(o,h)=>{this._loadTextures(h,(d,u)=>{r.push(h),r.length===n&&i(null,r)})};for(let o=0;o<s.mapping.length;o++){const h=s.mapping[o].path;if(h){n++;const d=e.getAbsoluteUrl(h);this.loadFromUrl(d,"material",a)}}n===0&&i(null,r)}_loadTextures(e,s){const i=[];let r=0;const n=e.data;if(n.mappingFormat!=="path"){b.warn(`Skipping: ${e.name}, material files must be mappingFormat: "path" to be loaded from URL`),s(null,i);return}const a=(h,d)=>{h&&console.error(h),i.push(d),i.length===r&&s(null,i)},o=ed;for(let h=0;h<o.length;h++){const d=n[o[h]];if(d&&typeof d=="string"){r++;const u=e.getAbsoluteUrl(d);this.loadFromUrl(u,"texture",a)}}r===0&&s(null,i)}_onTagAdd(e,s){this._tags.add(e,s)}_onTagRemove(e,s){this._tags.remove(e,s)}_onNameChange(e,s,i){if(this._nameToAsset.has(i)){const r=this._nameToAsset.get(i);r.delete(e),r.size===0&&this._nameToAsset.delete(i)}this._nameToAsset.has(e.name)||this._nameToAsset.set(e.name,new Set),this._nameToAsset.get(e.name).add(e)}findByTag(...e){return this._tags.find(e)}filter(e){return Array.from(this._assets).filter(s=>e(s))}find(e,s){const i=this._nameToAsset.get(e);if(!i)return null;for(const r of i)if(!s||r.type===s)return r;return null}findAll(e,s){const i=this._nameToAsset.get(e);if(!i)return[];const r=Array.from(i);return s?r.filter(n=>n.type===s):r}}c(co,"EVENT_LOAD","load"),c(co,"EVENT_ADD","add"),c(co,"EVENT_REMOVE","remove"),c(co,"EVENT_ERROR","error");class sP{constructor(t){c(this,"_idToBundle",new Map);c(this,"_assetToBundles",new Map);c(this,"_urlsToBundles",new Map);c(this,"_fileRequests",new Map);this._assets=t,this._assets.bundles=this,this._assets.on("add",this._onAssetAdd,this),this._assets.on("remove",this._onAssetRemove,this)}_onAssetAdd(t){if(t.type==="bundle"){this._idToBundle.set(t.id,t),this._assets.on(`load:start:${t.id}`,this._onBundleLoadStart,this),this._assets.on(`load:${t.id}`,this._onBundleLoad,this),this._assets.on(`error:${t.id}`,this._onBundleError,this);const e=t.data.assets;for(let s=0;s<e.length;s++)this._indexAssetInBundle(e[s],t)}else this._assetToBundles.has(t.id)&&this._indexAssetFileUrls(t)}_unbindAssetEvents(t){this._assets.off(`load:start:${t}`,this._onBundleLoadStart,this),this._assets.off(`load:${t}`,this._onBundleLoad,this),this._assets.off(`error:${t}`,this._onBundleError,this)}_indexAssetInBundle(t,e){let s=this._assetToBundles.get(t);s||(s=new Set,this._assetToBundles.set(t,s)),s.add(e);const i=this._assets.get(t);i&&this._indexAssetFileUrls(i)}_indexAssetFileUrls(t){const e=this._getAssetFileUrls(t);if(e)for(let s=0;s<e.length;s++){const i=this._assetToBundles.get(t.id);i&&this._urlsToBundles.set(e[s],i)}}_getAssetFileUrls(t){let e=t.getFileUrl();if(!e)return null;e=e.split("?")[0];const s=[e];if(t.type==="font"){const i=t.data.info.maps.length;for(let r=1;r<i;r++)s.push(e.replace(".png",`${r}.png`))}return s}_onAssetRemove(t){if(t.type==="bundle"){this._idToBundle.delete(t.id),this._unbindAssetEvents(t.id);const e=t.data.assets;for(let s=0;s<e.length;s++){const i=this._assetToBundles.get(e[s]);if(i&&(i.delete(t),i.size===0)){this._assetToBundles.delete(e[s]);for(const[r,n]of this._urlsToBundles)n===i&&this._urlsToBundles.delete(r)}}this._onBundleError(`Bundle ${t.id} was removed`)}else{if(!this._assetToBundles.get(t.id))return;this._assetToBundles.delete(t.id);const s=this._getAssetFileUrls(t);if(!s)return;for(let i=0;i<s.length;i++)this._urlsToBundles.delete(s[i])}}_onBundleLoadStart(t){t.resource.on("add",(e,s)=>{const i=this._fileRequests.get(e);if(i){for(let r=0;r<i.length;r++)i[r](null,s);this._fileRequests.delete(e)}})}_onBundleLoad(t){if(!t.resource){this._onBundleError(`Bundle ${t.id} failed to load`);return}if(this._fileRequests)for(const[e,s]of this._fileRequests){const i=this._urlsToBundles.get(e);if(!i||!i.has(t))continue;const r=decodeURIComponent(e);let n,a;if(t.resource.has(r))a=t.resource.get(r);else if(t.resource.loaded)n=`Bundle ${t.id} does not contain URL ${e}`;else continue;for(let o=0;o<s.length;o++)s[o](n,n||a);this._fileRequests.delete(e)}}_onBundleError(t){for(const[e,s]of this._fileRequests)if(!this._findLoadedOrLoadingBundleForUrl(e)){for(let r=0;r<s.length;r++)s[r](t);this._fileRequests.delete(e)}}_findLoadedOrLoadingBundleForUrl(t){const e=this._urlsToBundles.get(t);if(!e)return null;let s=null;for(const i of e){if(i.loaded&&i.resource)return i;i.loading&&(s=i)}return s}listBundlesForAsset(t){const e=this._assetToBundles.get(t.id);return e?Array.from(e):null}list(){return Array.from(this._idToBundle.values())}hasUrl(t){return this._urlsToBundles.has(t)}urlIsLoadedOrLoading(t){return!!this._findLoadedOrLoadingBundleForUrl(t)}loadUrl(t,e){const s=this._findLoadedOrLoadingBundleForUrl(t);if(!s){e(`URL ${t} not found in any bundles`);return}if(s.loaded){const r=decodeURIComponent(t);if(s.resource.has(r)){e(null,s.resource.get(r));return}else if(s.resource.loaded){e(`Bundle ${s.id} does not contain URL ${t}`);return}}let i=this._fileRequests.get(t);i||(i=[],this._fileRequests.set(t,i)),i.push(e)}destroy(){this._assets.off("add",this._onAssetAdd,this),this._assets.off("remove",this._onAssetRemove,this);for(const t of this._idToBundle.keys())this._unbindAssetEvents(t);this._assets=null,this._idToBundle.clear(),this._idToBundle=null,this._assetToBundles.clear(),this._assetToBundles=null,this._urlsToBundles.clear(),this._urlsToBundles=null,this._fileRequests.clear(),this._fileRequests=null}}class iP extends de{constructor(){super();c(this,"anim");c(this,"animation");c(this,"audiolistener");c(this,"button");c(this,"camera");c(this,"collision");c(this,"element");c(this,"joint");c(this,"layoutchild");c(this,"layoutgroup");c(this,"light");c(this,"model");c(this,"particlesystem");c(this,"render");c(this,"rigidbody");c(this,"screen");c(this,"script");c(this,"scrollbar");c(this,"scrollview");c(this,"sound");c(this,"sprite");c(this,"zone");this.list=[]}add(e){const s=e.id;if(this[s])throw new Error(`ComponentSystem name '${s}' already registered or not allowed`);this[s]=e,this.list.push(e)}remove(e){const s=e.id;if(!this[s])throw new Error(`No ComponentSystem named '${s}' registered`);delete this[s];const i=this.list.indexOf(this[s]);i!==-1&&this.list.splice(i,1)}destroy(){this.off();for(let e=0;e<this.list.length;e++)this.list[e].destroy()}}class Zu extends de{constructor(){super(...arguments);c(this,"_index",new Map);c(this,"_loaded",!1)}addFile(e,s){this._index.has(e)||(this._index.set(e,s),this.fire("add",e,s))}has(e){return this._index.has(e)}get(e){return this._index.get(e)||null}destroy(){this._index.clear()}set loaded(e){!e||this._loaded||(this._loaded=!0,this.fire("load"))}get loaded(){return this._loaded}}c(Zu,"EVENT_ADD","add"),c(Zu,"EVENT_LOAD","load");class rP extends de{constructor(e,s=""){super();c(this,"headerSize",512);c(this,"paddingSize",512);c(this,"bytesRead",0);c(this,"bytesReceived",0);c(this,"headerRead",!1);c(this,"reader",null);c(this,"data",new Uint8Array(0));c(this,"decoder",null);c(this,"prefix","");c(this,"fileName","");c(this,"fileSize",0);c(this,"fileType","");c(this,"ustarFormat","");this.prefix=s||"",this.reader=e.body.getReader(),this.reader.read().then(i=>{this.pump(i.done,i.value)}).catch(i=>{this.fire("error",i)})}pump(e,s){if(e)return this.fire("done"),null;this.bytesReceived+=s.byteLength;const i=new Uint8Array(this.data.length+s.length);for(i.set(this.data),i.set(s,this.data.length),this.data=i;this.readFile(););return this.reader.read().then(r=>{this.pump(r.done,r.value)}).catch(r=>{this.fire("error",r)})}readFile(){if(!this.headerRead&&this.bytesReceived>this.bytesRead+this.headerSize){this.headerRead=!0;const e=new DataView(this.data.buffer,this.bytesRead,this.headerSize);this.decoder??(this.decoder=new TextDecoder("windows-1252"));const s=this.decoder.decode(e);if(this.fileName=s.substring(0,100).replace(/\0/g,""),this.fileSize=parseInt(s.substring(124,136),8),this.fileType=s.substring(156,157),this.ustarFormat=s.substring(257,263),this.ustarFormat.indexOf("ustar")!==-1){const i=s.substring(345,500).replace(/\0/g,"");i.length>0&&(this.fileName=i.trim()+this.fileName.trim())}this.bytesRead+=512}if(this.headerRead){if(this.bytesReceived<this.bytesRead+this.fileSize)return!1;if(this.fileType===""||this.fileType==="0"){const s=new DataView(this.data.buffer,this.bytesRead,this.fileSize),i={name:this.prefix+this.fileName,size:this.fileSize,data:s};this.fire("file",i)}this.bytesRead+=this.fileSize,this.headerRead=!1;const e=this.bytesRead%this.paddingSize;return e!==0&&(this.bytesRead+=this.paddingSize-e),!0}return!1}}class Ge{constructor(t,e){c(this,"handlerType","");c(this,"_app");c(this,"_maxRetries",0);this._app=t,this.handlerType=e}set maxRetries(t){this._maxRetries=t}get maxRetries(){return this._maxRetries}load(t,e,s){}open(t,e,s){return e}patch(t,e){}}class nP extends Ge{constructor(t){super(t,"bundle"),this._assets=t.assets}_fetchRetries(t,e,s=0){return new Promise((i,r)=>{const n=()=>{fetch(t,e).then(i).catch(a=>{s++,s<this.maxRetries?(b.error(`Bundle failed to load retrying (attempt ${s}`),n()):r(a)})};n()})}load(t,e){typeof t=="string"&&(t={load:t,original:t}),this._fetchRetries(t.load,{mode:"cors",credentials:"include"},this.maxRetries).then(s=>{const i=new Zu;e(null,i);const r=new rP(s,this._assets.prefix);r.on("file",n=>{i.addFile(n.name,n.data)}),r.on("done",()=>{i.loaded=!0}),r.on("error",n=>{b.error(n),e(n)})}).catch(s=>{b.error(s),e(s)})}open(t,e){return e}}class _a{constructor(t){this._handlers={},this._requests={},this._cache={},this._app=t}addHandler(t,e){this._handlers[t]=e,e._loader=this}removeHandler(t){delete this._handlers[t]}getHandler(t){return this._handlers[t]}static makeKey(t,e){return`${t}-${e}`}load(t,e,s,i,r){var o;const n=this._handlers[e];if(!n){const h=`No resource handler for asset type: '${e}' when loading [${t}]`;b.errorOnce(h),s(h);return}if(!t){this._loadNull(n,s,i);return}const a=_a.makeKey(t,e);if(this._cache[a]!==void 0)s(null,this._cache[a]);else if(this._requests[a])this._requests[a].push(s);else{this._requests[a]=[s];const h=this,d=function(f,p){if(f){h._onFailure(a,f);return}if(p.load instanceof DataView){if(n.openBinary){if(!h._requests[a])return;try{const m=n.openBinary(p.load);h._onSuccess(a,m)}catch(m){h._onFailure(a,m)}return}p.load=URL.createObjectURL(new Blob([p.load])),i&&(i.urlObject&&URL.revokeObjectURL(i.urlObject),i.urlObject=p.load)}n.load(p,(m,_,g)=>{if(h._requests[a]){if(m){h._onFailure(a,m);return}try{h._onSuccess(a,n.open(p.original,_,i),g)}catch(y){h._onFailure(a,y)}}},i)},u=t.split("?")[0];if(this._app.enableBundles&&this._app.bundles.hasUrl(u)&&!(r&&r.bundlesIgnore)){if(!this._app.bundles.urlIsLoadedOrLoading(u)){const f=this._app.bundles.listBundlesForAsset(i);let p;r&&r.bundlesFilter&&(p=r.bundlesFilter(f)),p||(f==null||f.sort((m,_)=>m.file.size-_.file.size),p=f==null?void 0:f[0]),p&&((o=this._app.assets)==null||o.load(p))}this._app.bundles.loadUrl(u,(f,p)=>{d(f,{load:p,original:u})})}else d(null,{load:t,original:i&&i.file.filename||t})}}_loadNull(t,e,s){const i=function(r,n,a){if(r)e(r);else try{e(null,t.open(null,n,s),a)}catch(o){e(o)}};t.load(null,i,s)}_onSuccess(t,e,s){e!==null?this._cache[t]=e:delete this._cache[t];for(let i=0;i<this._requests[t].length;i++)this._requests[t][i](null,e,s);delete this._requests[t]}_onFailure(t,e){if(console.error(e),this._requests[t]){for(let s=0;s<this._requests[t].length;s++)this._requests[t][s](e);delete this._requests[t]}}open(t,e){const s=this._handlers[t];return s?s.open(null,e):(console.warn(`No resource handler found for: ${t}`),e)}patch(t,e){const s=this._handlers[t.type];if(!s){console.warn(`No resource handler found for: ${t.type}`);return}s.patch&&s.patch(t,e)}clearCache(t,e){const s=_a.makeKey(t,e);delete this._cache[s]}getFromCache(t,e){const s=_a.makeKey(t,e);if(this._cache[s])return this._cache[s]}enableRetry(t=5){t=Math.max(0,t)||0;for(const e in this._handlers)this._handlers[e].maxRetries=t}disableRetry(){for(const t in this._handlers)this._handlers[t].maxRetries=0}destroy(){this._handlers={},this._requests={},this._cache={}}}class aP{_validate(t){if(!t.header)throw new Error('pc.I18n#addData: Missing "header" field');if(!t.header.version)throw new Error('pc.I18n#addData: Missing "header.version" field');if(t.header.version!==1)throw new Error('pc.I18n#addData: Invalid "header.version" field');if(t.data){if(!Array.isArray(t.data))throw new Error('pc.I18n#addData: "data" field must be an array')}else throw new Error('pc.I18n#addData: Missing "data" field');for(let e=0,s=t.data.length;e<s;e++){const i=t.data[e];if(!i.info)throw new Error(`pc.I18n#addData: missing "data[${e}].info" field`);if(!i.info.locale)throw new Error(`pc.I18n#addData: missing "data[${e}].info.locale" field`);if(typeof i.info.locale!="string")throw new Error(`pc.I18n#addData: "data[${e}].info.locale" must be a string`);if(!i.messages)throw new Error(`pc.I18n#addData: missing "data[${e}].messages" field`)}}parse(t){return this._validate(t),t.data}}class oP extends de{constructor(t){super(),this.locale=Yh,this._translations={},this._availableLangs={},this._app=t,this._assets=[],this._parser=new aP}set assets(t){const e={};for(let i=0,r=t.length;i<r;i++){const n=t[i]instanceof he?t[i].id:t[i];e[n]=!0}let s=this._assets.length;for(;s--;){const i=this._assets[s];if(!e[i]){this._app.assets.off(`add:${i}`,this._onAssetAdd,this);const r=this._app.assets.get(i);r&&this._onAssetRemove(r),this._assets.splice(s,1)}}for(const i in e){const r=parseInt(i,10);if(this._assets.indexOf(r)!==-1)continue;this._assets.push(r);const n=this._app.assets.get(r);n?this._onAssetAdd(n):this._app.assets.once(`add:${r}`,this._onAssetAdd,this)}}get assets(){return this._assets}set locale(t){if(this._locale===t)return;let e=xi(t);if(e==="in"&&(e="id",t=K1(t,e),this._locale===t))return;const s=this._locale;this._locale=t,this._lang=e,this._pluralFn=Zd(this._lang),this.fire("set:locale",t,s)}get locale(){return this._locale}static findAvailableLocale(t,e){return G0(t,e)}findAvailableLocale(t){if(this._translations[t])return t;const e=xi(t);return this._findFallbackLocale(t,e)}getText(t,e){let s=t,i;e||(e=this._locale,i=this._lang);let r=this._translations[e];return r||(i||(i=xi(e)),e=this._findFallbackLocale(e,i),r=this._translations[e]),r&&r.hasOwnProperty(t)&&(s=r[t],Array.isArray(s)&&(s=s[0]),s==null&&(s=t)),s}getPluralText(t,e,s){let i=t,r,n;s?(r=xi(s),n=Zd(r)):(s=this._locale,r=this._lang,n=this._pluralFn);let a=this._translations[s];if(a||(s=this._findFallbackLocale(s,r),r=xi(s),n=Zd(r),a=this._translations[s]),a&&a[t]&&n){const o=n(e);i=a[t][o],i==null&&(i=t)}return i}addData(t){let e;try{e=this._parser.parse(t)}catch(s){console.error(s);return}for(let s=0,i=e.length;s<i;s++){const r=e[s],n=r.info.locale,a=r.messages;if(!this._translations[n]){this._translations[n]={};const o=xi(n);this._availableLangs[o]||(this._availableLangs[o]=n)}Object.assign(this._translations[n],a),this.fire("data:add",n,a)}}removeData(t){let e;try{e=this._parser.parse(t)}catch(s){console.error(s);return}for(let s=0,i=e.length;s<i;s++){const r=e[s],n=r.info.locale,a=this._translations[n];if(!a)continue;const o=r.messages;for(const h in o)delete a[h];Object.keys(a).length===0&&(delete this._translations[n],delete this._availableLangs[xi(n)]),this.fire("data:remove",n,o)}}destroy(){this._translations=null,this._availableLangs=null,this._assets=null,this._parser=null,this.off()}_findFallbackLocale(t,e){let s=Kh[t];return s&&this._translations[s]||(s=Kh[e],s&&this._translations[s])||(s=this._availableLangs[e],s&&this._translations[s])?s:Yh}_onAssetAdd(t){t.on("load",this._onAssetLoad,this),t.on("change",this._onAssetChange,this),t.on("remove",this._onAssetRemove,this),t.on("unload",this._onAssetUnload,this),t.resource&&this._onAssetLoad(t)}_onAssetLoad(t){this.addData(t.resource)}_onAssetChange(t){t.resource&&this.addData(t.resource)}_onAssetRemove(t){t.off("load",this._onAssetLoad,this),t.off("change",this._onAssetChange,this),t.off("remove",this._onAssetRemove,this),t.off("unload",this._onAssetUnload,this),t.resource&&this.removeData(t.resource),this._app.assets.once(`add:${t.id}`,this._onAssetAdd,this)}_onAssetUnload(t){t.resource&&this.removeData(t.resource)}}class lP extends de{constructor(e){super();c(this,"_scripts",{});c(this,"_list",[]);c(this,"_scriptSchemas",new Map);this.app=e}destroy(){this.app=null,this.off()}addSchema(e,s){s&&this._scriptSchemas.set(e,s)}getSchema(e){return this._scriptSchemas.get(e)}add(e){const s=e.__name;return this._scripts.hasOwnProperty(s)?(setTimeout(()=>{if(e.prototype.swap){const i=this._scripts[s],r=this._list.indexOf(i);this._list[r]=e,this._scripts[s]=e,this.fire("swap",s,e),this.fire(`swap:${s}`,e)}else console.warn(`script registry already has '${s}' script, define 'swap' method for new script type to enable code hot swapping`)}),!1):(this._scripts[s]=e,this._list.push(e),this.fire("add",s,e),this.fire(`add:${s}`,e),setTimeout(()=>{if(!this._scripts.hasOwnProperty(s)||!this.app||!this.app.systems||!this.app.systems.script)return;const i=this.app.systems.script._components;let r;const n=[],a=[];for(i.loopIndex=0;i.loopIndex<i.length;i.loopIndex++){const o=i.items[i.loopIndex];if(o._scriptsIndex[s]&&o._scriptsIndex[s].awaiting){o._scriptsData&&o._scriptsData[s]&&(r=o._scriptsData[s].attributes);const h=o.create(s,{preloading:!0,ind:o._scriptsIndex[s].ind,attributes:r});h&&n.push(h);for(const d of o.scripts)o.initializeAttributes(d)}}for(let o=0;o<n.length;o++)n[o].enabled&&(n[o]._initialized=!0,a.push(n[o]),n[o].initialize&&n[o].initialize());for(let o=0;o<a.length;o++)!a[o].enabled||a[o]._postInitialized||(a[o]._postInitialized=!0,a[o].postInitialize&&a[o].postInitialize())}),!0)}remove(e){let s=e,i=e;if(typeof i!="string"?i=s.__name:s=this.get(i),this.get(i)!==s)return!1;delete this._scripts[i];const r=this._list.indexOf(s);return this._list.splice(r,1),this.fire("remove",i,s),this.fire(`remove:${i}`,s),!0}get(e){return this._scripts[e]||null}has(e){if(typeof e=="string")return this._scripts.hasOwnProperty(e);if(!e)return!1;const s=e.__name;return this._scripts[s]===e}list(){return this._list}}const hP=(l,t)=>l.constructor.order-t.constructor.order,cP=l=>l.sort(hP),to=[],H0=[],dP=()=>H0.pop()??[],q_=l=>{l.length=0,H0.push(l)},dc=class dc extends Oe{constructor(e,s=sn()){super(e);c(this,"anim");c(this,"animation");c(this,"audiolistener");c(this,"button");c(this,"camera");c(this,"collision");c(this,"element");c(this,"gsplat");c(this,"layoutchild");c(this,"layoutgroup");c(this,"light");c(this,"model");c(this,"particlesystem");c(this,"render");c(this,"rigidbody");c(this,"screen");c(this,"script");c(this,"scrollbar");c(this,"scrollview");c(this,"sound");c(this,"sprite");c(this,"c",{});c(this,"_app");c(this,"_destroying",!1);c(this,"_guid",null);c(this,"_template",!1);b.assert(s,"Could not find current application"),this._app=s}addComponent(e,s){const i=this._app.systems[e];return i?this.c[e]?(b.warn(`addComponent: Entity already has '${e}' component`),null):i.addComponent(this,s):(b.error(`addComponent: System '${e}' doesn't exist`),null)}removeComponent(e){const s=this._app.systems[e];if(!s){b.error(`removeComponent: System '${e}' doesn't exist`);return}if(!this.c[e]){b.warn(`removeComponent: Entity doesn't have '${e}' component`);return}s.removeComponent(this)}findComponent(e){const s=this.findOne(i=>{var r;return(r=i.c)==null?void 0:r[e]});return s&&s.c[e]}findComponents(e){return this.find(s=>{var i;return(i=s.c)==null?void 0:i[e]}).map(s=>s.c[e])}findScript(e){const s=this.findOne(i=>{var r,n;return(n=(r=i.c)==null?void 0:r.script)==null?void 0:n.has(e)});return s==null?void 0:s.c.script.get(e)}findScripts(e){return this.find(i=>{var r,n;return(n=(r=i.c)==null?void 0:r.script)==null?void 0:n.has(e)}).map(i=>i.c.script.get(e))}getGuid(){return this._guid||this.setGuid(sS.create()),this._guid}setGuid(e){const s=this._app._entityIndex;this._guid&&delete s[this._guid],this._guid=e,s[this._guid]=this}_notifyHierarchyStateChanged(e,s){let i=!1;e===this&&to.length===0&&(i=!0),e._beingEnabled=!0,e._onHierarchyStateChanged(s),e._onHierarchyStatePostChanged&&to.push(e);const r=e._children;for(let n=0,a=r.length;n<a;n++)r[n]._enabled&&this._notifyHierarchyStateChanged(r[n],s);if(e._beingEnabled=!1,i){for(let n=0;n<to.length;n++)to[n]._onHierarchyStatePostChanged();to.length=0}}_onHierarchyStateChanged(e){super._onHierarchyStateChanged(e);const s=this._getSortedComponents();for(let i=0;i<s.length;i++){const r=s[i];r.enabled&&(e?r.onEnable():r.onDisable())}q_(s)}_onHierarchyStatePostChanged(){const e=this._getSortedComponents();for(let s=0;s<e.length;s++)e[s].onPostStateChange();q_(e)}findByGuid(e){if(this._guid===e)return this;const s=this._app._entityIndex[e];return s&&(s===this||s.isDescendantOf(this))?s:null}destroy(){this._destroying=!0;for(const e in this.c)this.c[e].enabled=!1;for(const e in this.c)this.c[e].system.removeComponent(this);super.destroy(),this._guid&&delete this._app._entityIndex[this._guid],this._destroying=!1}clone(){const e={},s=this._cloneRecursively(e);return e[this.getGuid()]=s,W0(this,this,s,e),s}_getSortedComponents(){const e=this.c,s=dP();let i=0;for(const r in e)if(e.hasOwnProperty(r)){const n=e[r];i|=n.constructor.order!==0,s.push(n)}return i&&s.length>1&&cP(s),s}_cloneRecursively(e){const s=new this.constructor(void 0,this._app);super._cloneInternal(s);for(const i in this.c)this.c[i].system.cloneComponent(this,s);for(let i=0;i<this._children.length;i++){const r=this._children[i];if(r instanceof dc){const n=r._cloneRecursively(e);s.addChild(n),e[r.getGuid()]=n}}return s}};c(dc,"EVENT_DESTROY","destroy");let je=dc;function W0(l,t,e,s){if(t instanceof je){const i=t.c;for(const a in i){const o=i[a],h=o.system.getPropertiesOfType("entity");for(let d=0,u=h.length;d<u;d++){const p=h[d].name,m=o[p];if(!!l.findByGuid(m)){const g=s[m].getGuid();g?e.c[a][p]=g:b.warn("Could not find corresponding entity id when resolving duplicated entity references")}}}i.script&&e.script.resolveDuplicatedEntityReferenceProperties(i.script,s),i.render&&e.render.resolveDuplicatedEntityReferenceProperties(i.render,s),i.button&&e.button.resolveDuplicatedEntityReferenceProperties(i.button,s),i.scrollview&&e.scrollview.resolveDuplicatedEntityReferenceProperties(i.scrollview,s),i.scrollbar&&e.scrollbar.resolveDuplicatedEntityReferenceProperties(i.scrollbar,s),i.anim&&e.anim.resolveDuplicatedEntityReferenceProperties(i.anim,s);const r=t.children.filter(a=>a instanceof je),n=e.children.filter(a=>a instanceof je);for(let a=0,o=r.length;a<o;a++)W0(l,r[a],n[a],s)}}class X_{constructor(t,e){c(this,"name");c(this,"url");c(this,"data",null);c(this,"_loading",!1);c(this,"_onLoadedCallbacks",[]);this.name=t,this.url=e}get loaded(){return!!this.data}get loading(){return this._loading}}class uP{constructor(t){c(this,"_app");c(this,"_list",[]);c(this,"_index",{});c(this,"_urlIndex",{});this._app=t}destroy(){this._app=null}list(){return this._list}add(t,e){if(this._index.hasOwnProperty(t))return b.warn(`pc.SceneRegistry: trying to add more than one scene called: ${t}`),!1;const s=new X_(t,e),i=this._list.push(s);return this._index[s.name]=i-1,this._urlIndex[s.url]=i-1,!0}find(t){return this._index.hasOwnProperty(t)?this._list[this._index[t]]:null}findByUrl(t){return this._urlIndex.hasOwnProperty(t)?this._list[this._urlIndex[t]]:null}remove(t){if(this._index.hasOwnProperty(t)){const e=this._index[t];let s=this._list[e];delete this._urlIndex[s.url],delete this._index[t],this._list.splice(e,1);for(let i=0;i<this._list.length;i++)s=this._list[i],this._index[s.name]=i,this._urlIndex[s.url]=i}}_loadSceneData(t,e,s){const i=this._app;let r=t;if(typeof t=="string"&&(t=this.findByUrl(r)||this.find(r)||new X_("Untitled",r)),r=t.url,!r){s("Cannot find scene to load");return}if(t.loaded){s(null,t);return}i.assets&&i.assets.prefix&&!ka.test(r)&&(r=me.join(i.assets.prefix,r)),t._onLoadedCallbacks.push(s),t._loading||i.loader.getHandler("hierarchy").load(r,(a,o)=>{t.data=o,t._loading=!1;for(let h=0;h<t._onLoadedCallbacks.length;h++)t._onLoadedCallbacks[h](a,t);e||(t.data=null),t._onLoadedCallbacks.length=0}),t._loading=!0}loadSceneData(t,e){this._loadSceneData(t,!0,e)}unloadSceneData(t){typeof t=="string"&&(t=this.findByUrl(t)),t&&(t.data=null)}_loadSceneHierarchy(t,e,s){this._loadSceneData(t,!1,(i,r)=>{if(i){s&&s(i);return}e&&e(r);const n=this._app,a=()=>{const o=n.loader.getHandler("hierarchy");n.systems.script.preloading=!0;const h=o.open(r.url,r.data);n.systems.script.preloading=!1,n.loader.clearCache(r.url,"hierarchy"),n.root.addChild(h),n.systems.fire("initialize",h),n.systems.fire("postInitialize",h),n.systems.fire("postPostInitialize",h),s&&s(null,h)};n._preloadScripts(r.data,a)})}loadSceneHierarchy(t,e){this._loadSceneHierarchy(t,null,e)}loadSceneSettings(t,e){this._loadSceneData(t,!1,(s,i)=>{s?e&&e(s):(this._app.applySceneSettings(i.data.settings),e&&e(null))})}changeScene(t,e){const s=this._app,i=r=>{const{children:n}=s.root;for(;n.length;)n[0].destroy();s.applySceneSettings(r.data.settings)};this._loadSceneHierarchy(t,i,e)}loadScene(t,e){const s=this._app,i=s.loader.getHandler("scene");s.assets&&s.assets.prefix&&!ka.test(t)&&(t=me.join(s.assets.prefix,t)),i.load(t,(r,n)=>{if(r)e&&e(r);else{const a=()=>{s.systems.script.preloading=!0;const o=i.open(t,n),h=this.findByUrl(t);h&&!h.loaded&&(h.data=n),s.systems.script.preloading=!1,s.loader.clearCache(t,"scene"),s.loader.patch({resource:o,type:"scene"},s.assets),s.root.addChild(o.root),s.systems.rigidbody&&typeof Ammo<"u"&&s.systems.rigidbody.gravity.set(o._gravity.x,o._gravity.y,o._gravity.z),e&&e(null,o)};s._preloadScripts(n,a)}})}}class fP{constructor(t){this.frame={fps:0,ms:0,dt:0,updateStart:0,updateTime:0,renderStart:0,renderTime:0,physicsStart:0,physicsTime:0,cullTime:0,sortTime:0,skinTime:0,morphTime:0,instancingTime:0,triangles:0,otherPrimitives:0,shaders:0,materials:0,cameras:0,shadowMapUpdates:0,shadowMapTime:0,depthMapTime:0,forwardTime:0,lightClustersTime:0,lightClusters:0,_timeToCountFrames:0,_fpsAccum:0},this.drawCalls={forward:0,depth:0,shadow:0,immediate:0,misc:0,total:0,skinned:0,instanced:0,removedByInstancing:0},this.misc={renderTargetCreationTime:0},this.particles={updatesPerFrame:0,_updatesPerFrame:0,frameTime:0,_frameTime:0},this.shaders=t._shaderStats,this.vram=t._vram,Object.defineProperty(this.vram,"totalUsed",{get:function(){return this.tex+this.vb+this.ib}}),Object.defineProperty(this.vram,"geom",{get:function(){return this.vb+this.ib}})}get scene(){return sn().scene._stats}get lightmapper(){var t;return(t=sn().lightmapper)==null?void 0:t.stats}get batcher(){const t=sn()._batcher;return t?t._stats:null}}const Hr=class Hr extends de{constructor(e){super();c(this,"_batcher",null);c(this,"_destroyRequested",!1);c(this,"_inFrameUpdate",!1);c(this,"_librariesLoaded",!1);c(this,"_fillMode",G_);c(this,"_resolutionMode",X1);c(this,"_allowResize",!0);c(this,"_skyboxAsset",null);c(this,"_soundManager");c(this,"_visibilityChangeHandler");c(this,"_entityIndex",{});c(this,"_inTools",!1);c(this,"_scriptPrefix","");c(this,"_time",0);c(this,"enableBundles",typeof TextDecoder<"u");c(this,"frameRequestId");c(this,"timeScale",1);c(this,"maxDeltaTime",.1);c(this,"frame",0);c(this,"frameGraph",new j1);c(this,"renderer");c(this,"scriptsOrder",[]);c(this,"stats");c(this,"autoRender",!0);c(this,"renderNextFrame",!1);c(this,"graphicsDevice");c(this,"root");c(this,"scene");c(this,"lightmapper",null);c(this,"loader",new _a(this));c(this,"assets");c(this,"bundles");c(this,"scenes",new uP(this));c(this,"scripts",new lP(this));c(this,"systems",new iP);c(this,"i18n",new oP(this));c(this,"keyboard",null);c(this,"mouse",null);c(this,"touch",null);c(this,"gamepads",null);c(this,"elementInput",null);c(this,"xr",null);(ho==null?void 0:ho.indexOf("$"))<0&&b.log(`Powered by PlayCanvas ${ho} ${iy}`),Hr._applications[e.id]=this,Ku(this),this.root=new je,this.root._enabledInHierarchy=!0}init(e){const{assetPrefix:s,batchManager:i,componentSystems:r,elementInput:n,gamepads:a,graphicsDevice:o,keyboard:h,lightmapper:d,mouse:u,resourceHandlers:f,scriptsOrder:p,scriptPrefix:m,soundManager:_,touch:g,xr:y}=e;b.assert(o,"The application cannot be created without a valid GraphicsDevice"),this.graphicsDevice=o,this._initDefaultMaterial(),this._initProgramLibrary(),this.stats=new fP(o),this._soundManager=_,this.scene=new mi(o),this._registerSceneImmediate(this.scene),this.assets=new co(this.loader),s&&(this.assets.prefix=s),this.bundles=new sP(this.assets),this.scriptsOrder=p||[],this.defaultLayerWorld=new Fr({name:"World",id:zi}),this.defaultLayerDepth=new Fr({name:"Depth",id:es,enabled:!1,opaqueSortMode:_h}),this.defaultLayerSkybox=new Fr({name:"Skybox",id:Ap,opaqueSortMode:_h}),this.defaultLayerUi=new Fr({name:"UI",id:nl,transparentSortMode:Zb}),this.defaultLayerImmediate=new Fr({name:"Immediate",id:Ep,opaqueSortMode:_h});const w=new v_("default");w.pushOpaque(this.defaultLayerWorld),w.pushOpaque(this.defaultLayerDepth),w.pushOpaque(this.defaultLayerSkybox),w.pushTransparent(this.defaultLayerWorld),w.pushOpaque(this.defaultLayerImmediate),w.pushTransparent(this.defaultLayerImmediate),w.pushTransparent(this.defaultLayerUi),this.scene.layers=w,qr.createPlaceholder(o),this.renderer=new Xh(o),this.renderer.scene=this.scene,d&&(this.lightmapper=new d(o,this.root,this.scene,this.renderer,this.assets),this.once("prerender",this._firstBake,this)),i&&(this._batcher=new i(o,this.root,this.scene),this.once("prerender",this._firstBatch,this)),this.keyboard=h||null,this.mouse=u||null,this.touch=g||null,this.gamepads=a||null,n&&(this.elementInput=n,this.elementInput.app=this),this.xr=y?new y(this):null,this.elementInput&&this.elementInput.attachSelectEvents(),this._scriptPrefix=m||"",this.enableBundles&&this.loader.addHandler("bundle",new nP(this)),f.forEach(C=>{const x=new C(this);this.loader.addHandler(x.handlerType,x)}),r.forEach(C=>{this.systems.add(new C(this))}),this._visibilityChangeHandler=this.onVisibilityChange.bind(this),typeof document<"u"&&(document.hidden!==void 0?(this._hiddenAttr="hidden",document.addEventListener("visibilitychange",this._visibilityChangeHandler,!1)):document.mozHidden!==void 0?(this._hiddenAttr="mozHidden",document.addEventListener("mozvisibilitychange",this._visibilityChangeHandler,!1)):document.msHidden!==void 0?(this._hiddenAttr="msHidden",document.addEventListener("msvisibilitychange",this._visibilityChangeHandler,!1)):document.webkitHidden!==void 0&&(this._hiddenAttr="webkitHidden",document.addEventListener("webkitvisibilitychange",this._visibilityChangeHandler,!1))),this.tick=pP(this)}static getApplication(e){return e?Hr._applications[e]:sn()}_initDefaultMaterial(){const e=new _s;e.name="Default Material",iC(this.graphicsDevice,e)}_initProgramLibrary(){const e=new L1(this.graphicsDevice,new _s);$E(this.graphicsDevice,e)}get soundManager(){return this._soundManager}get batcher(){return b.assert(this._batcher,"BatchManager has not been created and is required for correct functionality."),this._batcher}get fillMode(){return this._fillMode}get resolutionMode(){return this._resolutionMode}configure(e,s){Ye.get(e,(i,r)=>{if(i){s(i);return}const n=r.application_properties,a=r.scenes,o=r.assets;this._parseApplicationProperties(n,h=>{this._parseScenes(a),this._parseAssets(o),s(h||null)})})}preload(e){this.fire("preload:start");const s=this.assets.list({preload:!0});if(s.length===0){this.fire("preload:end"),e();return}let i=0;const r=()=>{i++,this.fire("preload:progress",i/s.length),i===s.length&&(this.fire("preload:end"),e())};s.forEach(n=>{n.loaded?r():(n.once("load",r),n.once("error",r),this.assets.load(n))})}_preloadScripts(e,s){s()}_parseApplicationProperties(e,s){if(typeof e.maxAssetRetries=="number"&&e.maxAssetRetries>0&&this.loader.enableRetry(e.maxAssetRetries),e.useDevicePixelRatio||(e.useDevicePixelRatio=e.use_device_pixel_ratio),e.resolutionMode||(e.resolutionMode=e.resolution_mode),e.fillMode||(e.fillMode=e.fill_mode),this._width=e.width,this._height=e.height,e.useDevicePixelRatio&&(this.graphicsDevice.maxPixelRatio=window.devicePixelRatio),this.setCanvasResolution(e.resolutionMode,this._width,this._height),this.setCanvasFillMode(e.fillMode,this._width,this._height),e.layers&&e.layerOrder){const i=new v_("application"),r={};for(const n in e.layers){const a=e.layers[n];a.id=parseInt(n,10),a.enabled=a.id!==es,r[n]=new Fr(a)}for(let n=0,a=e.layerOrder.length;n<a;n++){const o=e.layerOrder[n],h=r[o.layer];h&&(o.transparent?i.pushTransparent(h):i.pushOpaque(h),i.subLayerEnabled[n]=o.enabled)}this.scene.layers=i}if(e.batchGroups){const i=this.batcher;if(i)for(let r=0,n=e.batchGroups.length;r<n;r++){const a=e.batchGroups[r];i.addGroup(a.name,a.dynamic,a.maxAabbSize,a.id,a.layers)}}e.i18nAssets&&(this.i18n.assets=e.i18nAssets),this._loadLibraries(e.libraries,s)}_loadLibraries(e,s){const i=e.length;let r=i;const n=/^https?:\/\//;if(i){const a=(o,h)=>{r--,o?s(o):r===0&&(this.onLibrariesLoaded(),s(null))};for(let o=0;o<i;++o){let h=e[o];!n.test(h.toLowerCase())&&this._scriptPrefix&&(h=me.join(this._scriptPrefix,h)),this.loader.load(h,"script",a)}}else this.onLibrariesLoaded(),s(null)}_parseScenes(e){if(e)for(let s=0;s<e.length;s++)this.scenes.add(e[s].name,e[s].url)}_parseAssets(e){const s=[],i={},r={};for(let n=0;n<this.scriptsOrder.length;n++){const a=this.scriptsOrder[n];e[a]&&(i[a]=!0,s.push(e[a]))}if(this.enableBundles)for(const n in e)e[n].type==="bundle"&&(r[n]=!0,s.push(e[n]));for(const n in e)i[n]||r[n]||s.push(e[n]);for(let n=0;n<s.length;n++){const a=s[n],o=new he(a.name,a.type,a.file,a.data);if(o.id=parseInt(a.id,10),o.preload=a.preload?a.preload:!1,o.loaded=a.type==="script"&&a.data&&a.data.loadingType>0,o.tags.add(a.tags),a.i18n)for(const h in a.i18n)o.addLocalizedAssetId(h,a.i18n[h]);this.assets.add(o)}}start(){b.call(()=>{b.assert(!this._alreadyStarted,"The application can be started only one time."),this._alreadyStarted=!0}),this.frame=0,this.fire("start",{timestamp:ae(),target:this}),this._librariesLoaded||this.onLibrariesLoaded(),this.systems.fire("initialize",this.root),this.fire("initialize"),this.systems.fire("postInitialize",this.root),this.systems.fire("postPostInitialize",this.root),this.fire("postinitialize"),this.tick()}inputUpdate(e){this.controller&&this.controller.update(e),this.mouse&&this.mouse.update(),this.keyboard&&this.keyboard.update(),this.gamepads&&this.gamepads.update()}update(e){this.frame++,this.graphicsDevice.updateClientRect(),this.stats.frame.updateStart=ae(),this.systems.fire(this._inTools?"toolsUpdate":"update",e),this.systems.fire("animationUpdate",e),this.systems.fire("postUpdate",e),this.fire("update",e),this.inputUpdate(e),this.stats.frame.updateTime=ae()-this.stats.frame.updateStart}frameStart(){this.graphicsDevice.frameStart()}frameEnd(){this.graphicsDevice.frameEnd()}render(){this.stats.frame.renderStart=ae(),this.fire("prerender"),this.root.syncHierarchy(),this._batcher&&this._batcher.updateAll(),Xh._skipRenderCounter=0,this.renderComposition(this.scene.layers),this.fire("postrender"),this.stats.frame.renderTime=ae()-this.stats.frame.renderStart}renderComposition(e){G.clearGpuMarkers(),this.renderer.update(e),this.renderer.buildFrameGraph(this.frameGraph,e),this.frameGraph.render(this.graphicsDevice)}_fillFrameStatsBasic(e,s,i){const r=this.stats.frame;r.dt=s,r.ms=i,e>r._timeToCountFrames?(r.fps=r._fpsAccum,r._fpsAccum=0,r._timeToCountFrames=e+1e3):r._fpsAccum++,this.stats.drawCalls.total=this.graphicsDevice._drawCallsPerFrame,this.graphicsDevice._drawCallsPerFrame=0}_fillFrameStats(){let e=this.stats.frame;e.cameras=this.renderer._camerasRendered,e.materials=this.renderer._materialSwitches,e.shaders=this.graphicsDevice._shaderSwitchesPerFrame,e.shadowMapUpdates=this.renderer._shadowMapUpdates,e.shadowMapTime=this.renderer._shadowMapTime,e.depthMapTime=this.renderer._depthMapTime,e.forwardTime=this.renderer._forwardTime;const s=this.graphicsDevice._primsPerFrame;e.triangles=s[Fs]/3+Math.max(s[lr]-2,0)+Math.max(s[Kr]-2,0),e.cullTime=this.renderer._cullTime,e.sortTime=this.renderer._sortTime,e.skinTime=this.renderer._skinTime,e.morphTime=this.renderer._morphTime,e.lightClusters=this.renderer._lightClusters,e.lightClustersTime=this.renderer._lightClustersTime,e.otherPrimitives=0;for(let i=0;i<s.length;i++)i<Fs&&(e.otherPrimitives+=s[i]),s[i]=0;this.renderer._camerasRendered=0,this.renderer._materialSwitches=0,this.renderer._shadowMapUpdates=0,this.graphicsDevice._shaderSwitchesPerFrame=0,this.renderer._cullTime=0,this.renderer._layerCompositionUpdateTime=0,this.renderer._lightClustersTime=0,this.renderer._sortTime=0,this.renderer._skinTime=0,this.renderer._morphTime=0,this.renderer._shadowMapTime=0,this.renderer._depthMapTime=0,this.renderer._forwardTime=0,e=this.stats.drawCalls,e.forward=this.renderer._forwardDrawCalls,e.culled=this.renderer._numDrawCallsCulled,e.depth=0,e.shadow=this.renderer._shadowDrawCalls,e.skinned=this.renderer._skinDrawCalls,e.immediate=0,e.instanced=0,e.removedByInstancing=0,e.misc=e.total-(e.forward+e.shadow),this.renderer._depthDrawCalls=0,this.renderer._shadowDrawCalls=0,this.renderer._forwardDrawCalls=0,this.renderer._numDrawCallsCulled=0,this.renderer._skinDrawCalls=0,this.renderer._immediateRendered=0,this.renderer._instancedDrawCalls=0,this.stats.misc.renderTargetCreationTime=this.graphicsDevice.renderTargetCreationTime,e=this.stats.particles,e.updatesPerFrame=e._updatesPerFrame,e.frameTime=e._frameTime,e._updatesPerFrame=0,e._frameTime=0}setCanvasFillMode(e,s,i){this._fillMode=e,this.resizeCanvas(s,i)}setCanvasResolution(e,s,i){this._resolutionMode=e,e===H_&&s===void 0&&(s=this.graphicsDevice.canvas.clientWidth,i=this.graphicsDevice.canvas.clientHeight),this.graphicsDevice.resizeCanvas(s,i)}isHidden(){return document[this._hiddenAttr]}onVisibilityChange(){this.isHidden()?this._soundManager&&this._soundManager.suspend():this._soundManager&&this._soundManager.resume()}resizeCanvas(e,s){if(!this._allowResize||this.xr&&this.xr.session)return;const i=window.innerWidth,r=window.innerHeight;if(this._fillMode===G_){const n=this.graphicsDevice.canvas.width/this.graphicsDevice.canvas.height,a=i/r;n>a?(e=i,s=e/n):(s=r,e=s*n)}else this._fillMode===q1&&(e=i,s=r);return this.graphicsDevice.canvas.style.width=`${e}px`,this.graphicsDevice.canvas.style.height=`${s}px`,this.updateCanvasSize(),{width:e,height:s}}updateCanvasSize(){var e;if(!(!this._allowResize||(e=this.xr)!=null&&e.active)&&this._resolutionMode===H_){const s=this.graphicsDevice.canvas;this.graphicsDevice.resizeCanvas(s.clientWidth,s.clientHeight)}}onLibrariesLoaded(){this._librariesLoaded=!0,this.systems.rigidbody&&this.systems.rigidbody.onLibraryLoaded()}applySceneSettings(e){let s;if(this.systems.rigidbody&&typeof Ammo<"u"){const[i,r,n]=e.physics.gravity;this.systems.rigidbody.gravity.set(i,r,n)}this.scene.applySettings(e),e.render.hasOwnProperty("skybox")&&(e.render.skybox?(s=this.assets.get(e.render.skybox),s?this.setSkybox(s):this.assets.once(`add:${e.render.skybox}`,this.setSkybox,this)):this.setSkybox(null))}setAreaLightLuts(e,s){e&&s?qr.set(this.graphicsDevice,e,s):b.warn("setAreaLightLuts: LUTs for area light are not valid")}setSkybox(e){if(e!==this._skyboxAsset){const s=()=>{this.setSkybox(null)},i=()=>{this.scene.setSkybox(this._skyboxAsset?this._skyboxAsset.resources:null)};this._skyboxAsset&&(this.assets.off(`load:${this._skyboxAsset.id}`,i,this),this.assets.off(`remove:${this._skyboxAsset.id}`,s,this),this._skyboxAsset.off("change",i,this)),this._skyboxAsset=e,this._skyboxAsset&&(this.assets.on(`load:${this._skyboxAsset.id}`,i,this),this.assets.once(`remove:${this._skyboxAsset.id}`,s,this),this._skyboxAsset.on("change",i,this),this.scene.skyboxMip===0&&!this._skyboxAsset.loadFaces&&(this._skyboxAsset.loadFaces=!0),this.assets.load(this._skyboxAsset)),i()}}_firstBake(){var e;(e=this.lightmapper)==null||e.bake(null,this.scene.lightmapMode)}_firstBatch(){var e;(e=this.batcher)==null||e.generate()}_processTimestamp(e){return e}drawLine(e,s,i,r,n){this.scene.drawLine(e,s,i,r,n)}drawLines(e,s,i=!0,r=this.scene.defaultDrawLayer){this.scene.drawLines(e,s,i,r)}drawLineArrays(e,s,i=!0,r=this.scene.defaultDrawLayer){this.scene.drawLineArrays(e,s,i,r)}drawWireSphere(e,s,i=Y.WHITE,r=20,n=!0,a=this.scene.defaultDrawLayer){this.scene.immediate.drawWireSphere(e,s,i,r,n,a)}drawWireAlignedBox(e,s,i=Y.WHITE,r=!0,n=this.scene.defaultDrawLayer,a){this.scene.immediate.drawWireAlignedBox(e,s,i,r,n,a)}drawMeshInstance(e,s=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(null,null,null,e,s)}drawMesh(e,s,i,r=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(s,i,e,null,r)}drawQuad(e,s,i=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(s,e,this.scene.immediate.getQuadMesh(),null,i)}drawTexture(e,s,i,r,n,a,o=this.scene.defaultDrawLayer,h=!0){if(h===!1&&!this.graphicsDevice.isWebGPU)return;const d=new q;d.setTRS(new A(e,s,0),ie.IDENTITY,new A(i,-r,0)),a||(a=new La,a.cull=vt,a.setParameter("colorMap",n),a.shaderDesc=h?this.scene.immediate.getTextureShaderDesc(n.encoding):this.scene.immediate.getUnfilterableTextureShaderDesc(),a.update()),this.drawQuad(d,a,o)}drawDepthTexture(e,s,i,r,n=this.scene.defaultDrawLayer){const a=new La;a.cull=vt,a.shaderDesc=this.scene.immediate.getDepthTextureShaderDesc(),a.update(),this.drawTexture(e,s,i,r,null,a,n)}destroy(){var r,n,a,o;if(this._inFrameUpdate){this._destroyRequested=!0;return}const e=this.graphicsDevice.canvas.id;this.fire("destroy",this),this.off("librariesloaded"),typeof document<"u"&&(document.removeEventListener("visibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("mozvisibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("msvisibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("webkitvisibilitychange",this._visibilityChangeHandler,!1)),this._visibilityChangeHandler=null,this.root.destroy(),this.root=null,this.mouse&&(this.mouse.off(),this.mouse.detach(),this.mouse=null),this.keyboard&&(this.keyboard.off(),this.keyboard.detach(),this.keyboard=null),this.touch&&(this.touch.off(),this.touch.detach(),this.touch=null),this.elementInput&&(this.elementInput.detach(),this.elementInput=null),this.gamepads&&(this.gamepads.destroy(),this.gamepads=null),this.controller&&(this.controller=null),this.systems.destroy(),this.scene.layers&&this.scene.layers.destroy();const s=this.assets.list();for(let h=0;h<s.length;h++)s[h].unload(),s[h].off();this.assets.off(),this.bundles.destroy(),this.bundles=null,this.i18n.destroy(),this.i18n=null;const i=this.loader.getHandler("script");i==null||i.clearCache(),this.loader.destroy(),this.loader=null,this.scene.destroy(),this.scene=null,this.systems=null,this.context=null,this.scripts.destroy(),this.scripts=null,this.scenes.destroy(),this.scenes=null,(r=this.lightmapper)==null||r.destroy(),this.lightmapper=null,this._batcher&&(this._batcher.destroy(),this._batcher=null),this._entityIndex={},this.defaultLayerDepth.onDisable=null,this.defaultLayerDepth.onEnable=null,this.defaultLayerDepth=null,this.defaultLayerWorld=null,(n=this.xr)==null||n.end(),(a=this.xr)==null||a.destroy(),this.renderer.destroy(),this.renderer=null,this.graphicsDevice.destroy(),this.graphicsDevice=null,this.tick=null,this.off(),(o=this._soundManager)==null||o.destroy(),this._soundManager=null,Hr._applications[e]=null,sn()===this&&Ku(null),Hr.cancelTick(this)}static cancelTick(e){e.frameRequestId&&(window.cancelAnimationFrame(e.frameRequestId),e.frameRequestId=void 0)}getEntityFromIndex(e){return this._entityIndex[e]}_registerSceneImmediate(e){this.on("postrender",e.immediate.onPostRender,e.immediate)}};c(Hr,"_applications",{});let Zh=Hr;const Qd={},pP=function(l){const t=l;return function(e,s){var o,h,d,u;if(!t.graphicsDevice)return;t.frameRequestId&&((h=(o=t.xr)==null?void 0:o.session)==null||h.cancelAnimationFrame(t.frameRequestId),cancelAnimationFrame(t.frameRequestId),t.frameRequestId=null),t._inFrameUpdate=!0,Ku(t);const i=t._processTimestamp(e)||ae(),r=i-(t._time||i);let n=r/1e3;if(n=z.clamp(n,0,t.maxDeltaTime),n*=t.timeScale,t._time=i,(d=t.xr)!=null&&d.session?t.frameRequestId=t.xr.session.requestAnimationFrame(t.tick):t.frameRequestId=be.browser||be.worker?requestAnimationFrame(t.tick):null,t.graphicsDevice.contextLost)return;t._fillFrameStatsBasic(i,n,r),t._fillFrameStats(),t.fire("frameupdate",r);let a=!0;s?(a=(u=t.xr)==null?void 0:u.update(s),t.graphicsDevice.defaultFramebuffer=s.session.renderState.baseLayer.framebuffer):t.graphicsDevice.defaultFramebuffer=null,a&&(b.trace(jx,`---- Frame ${t.frame}`),b.trace(nd,`-- UpdateStart ${ae().toFixed(2)}ms`),t.update(n),t.fire("framerender"),(t.autoRender||t.renderNextFrame)&&(b.trace(nd,`-- RenderStart ${ae().toFixed(2)}ms`),t.updateCanvasSize(),t.frameStart(),t.render(),t.frameEnd(),t.renderNextFrame=!1,b.trace(nd,`-- RenderEnd ${ae().toFixed(2)}ms`)),Qd.timestamp=ae(),Qd.target=t,t.fire("frameend",Qd)),t._inFrameUpdate=!1,t._destroyRequested&&t.destroy()}};class mP{constructor(){c(this,"elementInput");c(this,"keyboard");c(this,"mouse");c(this,"touch");c(this,"gamepads");c(this,"scriptPrefix");c(this,"assetPrefix");c(this,"scriptsOrder");c(this,"soundManager");c(this,"graphicsDevice");c(this,"lightmapper");c(this,"batchManager");c(this,"xr");c(this,"componentSystems",[]);c(this,"resourceHandlers",[])}}const so=new Bf;class $0{constructor(t,e,s){this.scene=t,this.light=e,this.store(),e.numCascades=1,this.scene.clusteredLightingEnabled&&(e.castShadows=e.bakeShadows&&s.shadowsEnabled),e.type!==le&&(e._node.getWorldTransform(),e.getBoundingSphere(so),this.lightBounds=new ve,this.lightBounds.center.copy(so.center),this.lightBounds.halfExtents.set(so.radius,so.radius,so.radius))}store(){this.mask=this.light.mask,this.shadowUpdateMode=this.light.shadowUpdateMode,this.enabled=this.light.enabled,this.intensity=this.light.intensity,this.rotation=this.light._node.getLocalRotation().clone(),this.numCascades=this.light.numCascades,this.castShadows=this.light._castShadows}restore(){const t=this.light;t.mask=this.mask,t.shadowUpdateMode=this.shadowUpdateMode,t.enabled=this.enabled,t.intensity=this.intensity,t._node.setLocalRotation(this.rotation),t.numCascades=this.numCascades,t._castShadows=this.castShadows}startBake(){this.light.enabled=!0,this.light._destroyShadowMap(),this.light.beginFrame()}endBake(t){const e=this.light;e.enabled=!1,e.shadowMap&&(e.shadowMap.cached&&t.add(e,e.shadowMap),e.shadowMap=null)}}const jl=new W;class _P extends $0{constructor(t,e){super(t.scene,e,t.lightingParams)}get numVirtualLights(){return this.light.type===le?this.light.bakeNumSamples:1}prepareVirtualLight(t,e){const s=this.light;if(s._node.setLocalRotation(this.rotation),t>0){const n=s.bakeArea;ul.circlePointDeterministic(jl,t,e),jl.mulScalar(n*.5),s._node.rotateLocal(jl.x,0,jl.y)}s._node.getWorldTransform();const i=2.2,r=Math.pow(this.intensity,i);s.intensity=Math.pow(r/e,1/i)}}const j_=new A;class Y_ extends $0{constructor(t){const e=t.scene,s=new je("AmbientLight");s.addComponent("light",{type:"directional",affectDynamic:!0,affectLightmapped:!1,bake:!0,bakeNumSamples:e.ambientBakeNumSamples,castShadows:!0,normalOffsetBias:.05,shadowBias:.2,shadowDistance:1,shadowResolution:2048,shadowType:zt,color:Y.WHITE,intensity:1,bakeDir:!1}),super(e,s.light.light,t.lightingParams)}get numVirtualLights(){return this.light.bakeNumSamples}prepareVirtualLight(t,e){ul.spherePointDeterministic(j_,t,e,0,this.scene.ambientBakeSpherePart),this.light._node.lookAt(j_.mulScalar(-1)),this.light._node.rotateLocal(90,0,0);const s=2.2,i=2*Math.PI*this.scene.ambientBakeSpherePart,r=Math.pow(i,s);this.light.intensity=Math.pow(r/e,1/s)}}class Yl{constructor(t,e=null){this.node=t,this.component=t.render||t.model,e=e||this.component.meshInstances,this.store(),this.meshInstances=e,this.bounds=null,this.renderTargets=[]}store(){this.castShadows=this.component.castShadows}restore(){this.component.castShadows=this.castShadows}}const K_=15;class gP{constructor(t){this.device=t,this.shaderDilate=Bs(t,j.fullscreenQuadVS,Ao.dilatePS,"lmDilate"),this.constantTexSource=t.scope.resolve("source"),this.constantPixelOffset=t.scope.resolve("pixelOffset"),this.pixelOffset=new Float32Array(2),this.shaderDenoise=[],this.sigmas=null,this.constantSigmas=null,this.kernel=null}setSourceTexture(t){this.constantTexSource.setValue(t)}prepare(t,e){this.pixelOffset[0]=1/t,this.pixelOffset[1]=1/e,this.constantPixelOffset.setValue(this.pixelOffset)}prepareDenoise(t,e,s){const i=s?0:1;if(!this.shaderDenoise[i]){const r=`lmBilateralDeNoise-${s?"hdr":"rgbm"}`,n=s?`#define HDR
`:"";this.shaderDenoise[i]=Bs(this.device,j.fullscreenQuadVS,n+Ao.bilateralDeNoisePS,r),this.sigmas=new Float32Array(2),this.constantSigmas=this.device.scope.resolve("sigmas"),this.constantKernel=this.device.scope.resolve("kernel[0]"),this.bZnorm=this.device.scope.resolve("bZnorm")}this.sigmas[0]=t,this.sigmas[1]=e,this.constantSigmas.setValue(this.sigmas),this.evaluateDenoiseUniforms(t,e)}getDenoise(t){const e=t?0:1;return this.shaderDenoise[e]}getDilate(t,e){const s=e?0:1;if(!this.shaderDilate[s]){const i=`lmDilate-${e?"hdr":"rgbm"}`,r=e?`#define HDR
`:"";this.shaderDilate[s]=Bs(t,j.fullscreenQuadVS,r+Ao.dilatePS,i)}return this.shaderDilate[s]}evaluateDenoiseUniforms(t,e){function s(a,o){return .39894*Math.exp(-.5*a*a/(o*o))/o}this.kernel=this.kernel||new Float32Array(K_);const i=this.kernel,r=Math.floor((K_-1)/2);for(let a=0;a<=r;++a){const o=s(a,t);i[r+a]=o,i[r-a]=o}this.constantKernel.setValue(this.kernel);const n=1/s(0,e);this.bZnorm.setValue(n)}}class yP extends gs{constructor(e,s,i,r,n,a){super(e);c(this,"viewBindGroups",[]);this.renderer=s,this.camera=i,this.worldClusters=r,this.receivers=n,this.lightArray=a}destroy(){this.viewBindGroups.forEach(e=>{e.defaultUniformBuffer.destroy(),e.destroy()}),this.viewBindGroups.length=0}execute(){const e=this.device;G.pushGpuMarker(e,"Lightmapper");const{renderer:s,camera:i,receivers:r,renderTarget:n,worldClusters:a,lightArray:o}=this;s.renderForwardLayer(i,n,null,void 0,xn,this.viewBindGroups,{meshInstances:r,splitLights:o,lightClusters:a}),G.popGpuMarker(e)}}const xP=2048,SP=0,vP=1,Kl=new A;class bP{constructor(t,e,s,i,r){this.device=t,this.root=e,this.scene=s,this.renderer=i,this.assets=r,this.shadowMapCache=i.shadowMapCache,this._tempSet=new Set,this._initCalled=!1,this.passMaterials=[],this.ambientAOMaterial=null,this.fog="",this.ambientLight=new Y,this.renderTargets=new Map,this.stats={renderPasses:0,lightmapCount:0,totalRenderTime:0,forwardTime:0,fboTime:0,shadowMapTime:0,compileTime:0,shadersLinked:0}}destroy(){var t;Ai.decRef(this.blackTex),this.blackTex=null,Ai.destroy(),this.device=null,this.root=null,this.scene=null,this.renderer=null,this.assets=null,(t=this.camera)==null||t.destroy(),this.camera=null}initBake(t){if(this.bakeHDR=this.scene.lightmapPixelFormat!==Te,!this._initCalled){this._initCalled=!0,this.lightmapFilters=new gP(t),this.constantBakeDir=t.scope.resolve("bakeDir"),this.materials=[],this.blackTex=new ce(this.device,{width:4,height:4,format:Te,type:ln,name:"lightmapBlack"}),Ai.incRef(this.blackTex);const e=new dl;e.clearColor.set(0,0,0,0),e.clearColorBuffer=!0,e.clearDepthBuffer=!1,e.clearStencilBuffer=!1,e.frustumCulling=!1,e.projection=pa,e.aspectRatio=1,e.node=new Oe,this.camera=e,this.camera.shaderParams.gammaCorrection=al,this.camera.shaderParams.toneMapping=Pp}if(this.scene.clusteredLightingEnabled){const e=new F0(t.supportsAreaLights,t.maxTextureSize,()=>{});this.lightingParams=e;const s=this.scene.lighting;e.shadowsEnabled=s.shadowsEnabled,e.shadowAtlasResolution=s.shadowAtlasResolution,e.cookiesEnabled=s.cookiesEnabled,e.cookieAtlasResolution=s.cookieAtlasResolution,e.areaLightsEnabled=s.areaLightsEnabled,e.cells=new A(3,3,3),e.maxLightsPerCell=4,this.worldClusters=new Hu(t),this.worldClusters.name="ClusterLightmapper"}}finishBake(t){this.materials=[];function e(s){Ai.decRef(s.colorBuffer),s.destroy()}this.renderTargets.forEach(s=>{e(s)}),this.renderTargets.clear(),t.forEach(s=>{s.renderTargets.forEach(i=>{e(i)}),s.renderTargets.length=0}),this.ambientAOMaterial=null,this.worldClusters&&(this.worldClusters.destroy(),this.worldClusters=null)}createMaterialForPass(t,e,s,i){const r=new _s;r.name=`lmMaterial-pass:${s}-ambient:${i}`,r.chunks.APIVersion=pi;const n=`#define UV1LAYOUT
`;if(r.chunks.transformVS=n+j.transformVS,s===SP){let a=Ao.bakeLmEndPS;i?a=`
                    dDiffuseLight = ((dDiffuseLight - 0.5) * max(${e.ambientBakeOcclusionContrast.toFixed(1)} + 1.0, 0.0)) + 0.5;
                    dDiffuseLight += vec3(${e.ambientBakeOcclusionBrightness.toFixed(1)});
                    dDiffuseLight = saturate(dDiffuseLight);
                    dDiffuseLight *= dAmbientLight;
                ${a}`:r.ambient=new Y(0,0,0),r.chunks.basePS=j.basePS+(this.bakeHDR?"":`
#define LIGHTMAP_RGBM
`),r.chunks.endPS=a,r.lightMap=this.blackTex}else r.chunks.basePS=`${j.basePS}
uniform sampler2D texture_dirLightMap;
uniform float bakeDir;
`,r.chunks.endPS=Ao.bakeDirLmEndPS;return r.chunks.outputAlphaPS=`
`,r.chunks.outputAlphaOpaquePS=`
`,r.chunks.outputAlphaPremulPS=`
`,r.cull=vt,r.forceUv1=!0,r.update(),r}createMaterials(t,e,s){for(let i=0;i<s;i++)this.passMaterials[i]||(this.passMaterials[i]=this.createMaterialForPass(t,e,i,!1));this.ambientAOMaterial||(this.ambientAOMaterial=this.createMaterialForPass(t,e,0,!0),this.ambientAOMaterial.onUpdateShader=function(i){return i.litOptions.lightMapWithoutAmbient=!0,i.litOptions.separateAmbient=!0,i})}createTexture(t,e){return new ce(this.device,{profilerHint:Oy,width:t,height:t,format:this.scene.lightmapPixelFormat,mipmaps:!1,type:this.bakeHDR?Bi:ln,minFilter:fe,magFilter:fe,addressU:oe,addressV:oe,name:e})}collectModels(t,e,s){var r,n,a;if(!t.enabled)return;let i;if((r=t.model)!=null&&r.model&&((n=t.model)!=null&&n.enabled)&&(s&&s.push(new Yl(t)),t.model.lightmapped&&e&&(i=t.model.model.meshInstances)),(a=t.render)!=null&&a.enabled&&(s&&s.push(new Yl(t)),t.render.lightmapped&&e&&(i=t.render.meshInstances)),i){let o=!0;for(let h=0;h<i.length;h++)if(!i[h].mesh.vertexBuffer.format.hasUv1){b.log(`Lightmapper - node [${t.name}] contains meshes without required uv1, excluding it from baking.`),o=!1;break}if(o){const h=[];for(let d=0;d<i.length;d++){const u=i[d].mesh;this._tempSet.has(u)?e.push(new Yl(t,[i[d]])):h.push(i[d]),this._tempSet.add(u)}this._tempSet.clear(),h.length>0&&e.push(new Yl(t,h))}}for(let o=0;o<t._children.length;o++)this.collectModels(t._children[o],e,s)}prepareShadowCasters(t){const e=[];for(let s=0;s<t.length;s++){const i=t[s].component;if(i.castShadows=i.castShadowsLightmap,i.castShadowsLightmap){const r=t[s].meshInstances;for(let n=0;n<r.length;n++)r[n].visibleThisFrame=!0,e.push(r[n])}}return e}updateTransforms(t){for(let e=0;e<t.length;e++){const s=t[e].meshInstances;for(let i=0;i<s.length;i++)s[i].node.getWorldTransform()}}calculateLightmapSize(t){let e;const s=this.scene.lightmapSizeMultiplier||16,i=Kl;let r,n;t.model?(n=t.model.lightmapSizeMultiplier,t.model.asset?(e=this.assets.get(t.model.asset).data,e.area&&(r=e.area)):t.model._area&&(e=t.model,e._area&&(r=e._area))):t.render&&(n=t.render.lightmapSizeMultiplier,t.render.type!=="asset"&&t.render._area&&(e=t.render,e._area&&(r=e._area)));const a={x:1,y:1,z:1,uv:1};r&&(a.x=r.x,a.y=r.y,a.z=r.z,a.uv=r.uv);const o=n||1;a.x*=o,a.y*=o,a.z*=o;const h=t.render||t.model,d=this.computeNodeBounds(h.meshInstances);i.copy(d.halfExtents);let u=a.x*i.y*i.z+a.y*i.x*i.z+a.z*i.x*i.y;return u/=a.uv,u=Math.sqrt(u),Math.min(z.nextPowerOfTwo(u*s),this.scene.lightmapMaxResolution||xP)}setLightmapping(t,e,s,i){for(let r=0;r<t.length;r++){const n=t[r],a=n.meshInstances;for(let o=0;o<a.length;o++){const h=a[o];if(h.setLightmapped(e),e){i&&(h._shaderDefs|=i),h.mask=dr;for(let d=0;d<s;d++){const u=n.renderTargets[d].colorBuffer;u.minFilter=at,u.magFilter=at,h.setRealtimeLightmap(Be.lightmapParamNames[d],u)}}}}}bake(t,e=mh){const s=this.device,i=ae();this.scene._updateSkyMesh(),s.fire("lightmapper:start",{timestamp:i,target:this}),this.stats.renderPasses=0,this.stats.shadowMapTime=0,this.stats.forwardTime=0;const r=s._shaderStats.linked,n=s._renderTargetCreationTime,a=s._shaderStats.compileTime,o=[],h=[];if(t){for(let u=0;u<t.length;u++)this.collectModels(t[u],o,null);this.collectModels(this.root,null,h)}else this.collectModels(this.root,o,h);if(G.pushGpuMarker(this.device,"LMBake"),o.length>0){this.renderer.shadowRenderer.frameUpdate();const u=e===mh?2:1;this.setLightmapping(o,!1,u),this.initBake(s),this.bakeInternal(u,o,h);let f=Nu;e===mh&&(f|=x0),this.scene.ambientBake&&(f|=S0),this.setLightmapping(o,!0,u,f),this.finishBake(o)}G.popGpuMarker(this.device);const d=ae();this.stats.totalRenderTime=d-i,this.stats.shadersLinked=s._shaderStats.linked-r,this.stats.compileTime=s._shaderStats.compileTime-a,this.stats.fboTime=s._renderTargetCreationTime-n,this.stats.lightmapCount=o.length,s.fire("lightmapper:end",{timestamp:d,target:this})}allocateTextures(t,e){for(let s=0;s<t.length;s++){const i=t[s],r=this.calculateLightmapSize(i.node);for(let n=0;n<e;n++){const a=this.createTexture(r,`lightmapper_lightmap_${s}`);Ai.incRef(a),i.renderTargets[n]=new St({colorBuffer:a,depth:!1})}if(!this.renderTargets.has(r)){const n=this.createTexture(r,`lightmapper_temp_lightmap_${r}`);Ai.incRef(n),this.renderTargets.set(r,new St({colorBuffer:n,depth:!1}))}}}prepareLightsToBake(t,e){if(this.scene.ambientBake){const i=new Y_(this);e.push(i)}const s=this.renderer.lights;for(let i=0;i<s.length;i++){const r=s[i],n=new _P(this,r);t.push(n),r.enabled&&(r.mask&ar)!==0&&(r.mask=ar|dr|ms,r.shadowUpdateMode=r.type===le?Lp:un,e.push(n))}e.sort()}restoreLights(t){for(let e=0;e<t.length;e++)t[e].restore()}setupScene(){this.ambientLight.copy(this.scene.ambientLight),this.scene.ambientBake||this.scene.ambientLight.set(0,0,0),this.renderer.setSceneConstants()}restoreScene(){this.scene.ambientLight.copy(this.ambientLight)}computeNodeBounds(t){const e=new ve;if(t.length>0){e.copy(t[0].aabb);for(let s=1;s<t.length;s++)e.add(t[s].aabb)}return e}computeNodesBounds(t){for(let e=0;e<t.length;e++){const s=t[e].meshInstances;t[e].bounds=this.computeNodeBounds(s)}}computeBounds(t){const e=new ve;for(let s=0;s<t.length;s++){e.copy(t[0].aabb);for(let i=1;i<t.length;i++)e.add(t[i].aabb)}return e}backupMaterials(t){for(let e=0;e<t.length;e++)this.materials[e]=t[e].material}restoreMaterials(t){for(let e=0;e<t.length;e++)t[e].material=this.materials[e]}lightCameraPrepare(t,e){const s=e.light;let i;return s.type===Fe&&(i=s.getRenderData(null,0).shadowCamera,i._node.setPosition(s._node.getPosition()),i._node.setRotation(s._node.getRotation()),i._node.rotateLocal(-90,0,0),i.projection=Xs,i.nearClip=s.attenuationEnd/1e3,i.farClip=s.attenuationEnd,i.aspectRatio=1,i.fov=s._outerConeAngle*2,this.renderer.updateCameraFrustum(i)),i}lightCameraPrepareAndCull(t,e,s,i){const r=t.light;let n=!0;if(r.type===le){Kl.copy(i.center),Kl.y+=i.halfExtents.y,this.camera.node.setPosition(Kl),this.camera.node.setEulerAngles(-90,0,0),this.camera.nearClip=0,this.camera.farClip=i.halfExtents.y*2;const a=Math.max(i.halfExtents.x,i.halfExtents.z);this.camera.orthoHeight=a}else t.lightBounds.intersects(e.bounds)||(n=!1);if(r.type===Fe){let a=!1;const o=e.meshInstances;for(let h=0;h<o.length;h++)if(o[h]._isVisible(s)){a=!0;break}a||(n=!1)}return n}setupLightArray(t,e){t[le].length=0,t[Le].length=0,t[Fe].length=0,t[e.type][0]=e,e.visibleThisFrame=!0}renderShadowMap(t,e,s,i){const r=i.light,n=this.scene.clusteredLightingEnabled,a=r.castShadows&&(!n||this.scene.lighting.shadowsEnabled);if(!e&&a)if(!r.shadowMap&&!n&&(r.shadowMap=this.shadowMapCache.get(this.device,r)),r.type===le){this.renderer._shadowRendererDirectional.cull(r,t,this.camera,s);const o=this.renderer._shadowRendererDirectional.getLightRenderPass(r,this.camera);o==null||o.render()}else{if(this.device.isWebGPU)return b.warnOnce("Lightmapper on WebGPU does not yet support spot and omni shadows."),!0;this.renderer._shadowRendererLocal.cull(r,t,s),this.renderer.shadowRenderer.render(r,this.camera,!1)}return!0}postprocessTextures(t,e,s){const r=this.lightmapFilters.getDilate(t,this.bakeHDR);let n;const a=this.scene.lightmapFilterEnabled;a&&(this.lightmapFilters.prepareDenoise(this.scene.lightmapFilterRange,this.scene.lightmapFilterSmoothness,this.bakeHDR),n=this.lightmapFilters.getDenoise(this.bakeHDR)),t.setBlendState(bt.NOBLEND),t.setDepthState(us.NODEPTH),t.setStencilState(null,null);for(let o=0;o<e.length;o++){const h=e[o];G.pushGpuMarker(this.device,`LMPost:${o}`);for(let d=0;d<s;d++){const u=h.renderTargets[d],f=u.colorBuffer,p=this.renderTargets.get(f.width),m=p.colorBuffer;this.lightmapFilters.prepare(f.width,f.height);for(let _=0;_<1;_++)this.lightmapFilters.setSourceTexture(f),fn(t,p,a&&d===0&&_===0?n:r),this.lightmapFilters.setSourceTexture(m),fn(t,u,r)}G.popGpuMarker(this.device)}}bakeInternal(t,e,s){const i=this.scene,r=i.layers,n=this.device,a=i.clusteredLightingEnabled;this.createMaterials(n,i,t),this.setupScene(),r._update(),this.computeNodesBounds(e),this.allocateTextures(e,t),this.renderer.collectLights(r);const o=[],h=[];this.prepareLightsToBake(o,h),this.updateTransforms(s);const d=this.prepareShadowCasters(s);this.renderer.updateCpuSkinMatrices(d),this.renderer.gpuUpdate(d);const u=this.computeBounds(d);let f,p,m,_;for(f=0;f<e.length;f++)for(m=e[f].meshInstances,p=0;p<m.length;p++)_=m[p],_.setLightmapped(!1),_.mask=ar,_.setRealtimeLightmap(Be.lightmapParamNames[0],this.blackTex),_.setRealtimeLightmap(Be.lightmapParamNames[1],this.blackTex);for(p=0;p<h.length;p++)h[p].light.enabled=!1;const g=[[],[],[]];let y,w,C=!1;for(f=0;f<h.length;f++){const x=h[f],M=x instanceof Y_,S=x.light.type===le;let v=x.numVirtualLights;t>1&&v>1&&x.light.bakeDir&&(v=1,b.warn("Lightmapper's BAKE_COLORDIR mode is not compatible with Light's bakeNumSamples larger than one. Forcing it to one."));for(let E=0;E<v;E++){G.pushGpuMarker(n,`Light:${x.light._node.name}:${E}`),v>1&&x.prepareVirtualLight(E,v),x.startBake();let T=!1;const R=this.lightCameraPrepare(n,x);for(w=0;w<e.length;w++){const D=e[w];if(m=D.meshInstances,!this.lightCameraPrepareAndCull(x,D,R,u))continue;this.setupLightArray(g,x.light);const L=S?[]:[x.light];for(a&&this.renderer.lightTextureAtlas.update(L,this.lightingParams),T=this.renderShadowMap(r,T,d,x),a&&this.worldClusters.update(L,this.lightingParams),this.backupMaterials(m),y=0;y<t&&!(y>0&&E>0||M&&y>0);y++){G.pushGpuMarker(n,`LMPass:${y}`);const k=D.renderTargets[y],H=D.renderTargets[y].colorBuffer.width,N=this.renderTargets.get(H),I=N.colorBuffer;y===0?C=i.updateShaders:C&&(i.updateShaders=!0);let F=this.passMaterials[y];for(M&&E+1===v&&y===0&&(F=this.ambientAOMaterial),p=0;p<m.length;p++)m[p].material=F;if(this.renderer.updateShaders(m),y===vP&&this.constantBakeDir.setValue(x.light.bakeDir?1:0),n.isWebGPU){const O=new yP(n,this.renderer,this.camera,a?this.worldClusters:null,m,g);O.init(N),O.render(),O.destroy()}else this.renderer.setCamera(this.camera,N,!0),a&&this.worldClusters.activate(),this.renderer._forwardTime=0,this.renderer._shadowMapTime=0,this.renderer.renderForward(this.camera,N,m,g,xn),n.updateEnd();for(this.stats.shadowMapTime+=this.renderer._shadowMapTime,this.stats.forwardTime+=this.renderer._forwardTime,this.stats.renderPasses++,D.renderTargets[y]=N,this.renderTargets.set(H,k),p=0;p<m.length;p++)_=m[p],_.setRealtimeLightmap(Be.lightmapParamNames[y],I),_._shaderDefs|=Nu;G.popGpuMarker(n)}this.restoreMaterials(m)}x.endBake(this.shadowMapCache),G.popGpuMarker(n)}}for(this.postprocessTextures(n,e,t),w=0;w<s.length;w++)s[w].restore();this.restoreLights(o),this.restoreScene(),a||this.shadowMapCache.clear()}}const uc=class uc extends de{constructor(e,s){super();c(this,"system");c(this,"entity");this.system=e,this.entity=s,this.system.schema&&!this._accessorsBuilt&&this.buildAccessors(this.system.schema),this.on("set",function(i,r,n){this.fire(`set_${i}`,i,r,n)}),this.on("set_enabled",this.onSetEnabled,this)}static _buildAccessors(e,s){s.forEach(i=>{const r=typeof i=="object"?i.name:i;Object.defineProperty(e,r,{get:function(){return this.data[r]},set:function(n){const a=this.data,o=a[r];a[r]=n,this.fire("set",r,o,n)},configurable:!0})}),e._accessorsBuilt=!0}buildAccessors(e){uc._buildAccessors(this,e)}onSetEnabled(e,s,i){s!==i&&this.entity.enabled&&(i?this.onEnable():this.onDisable())}onEnable(){}onDisable(){}onPostStateChange(){}get data(){const e=this.system.store[this.entity.getGuid()];return e?e.data:null}set enabled(e){}get enabled(){return!0}};c(uc,"order",0);let pe=uc;class Qe extends de{constructor(t){super(),this.app=t,this.store={},this.schema=[]}addComponent(t,e={}){const s=new this.ComponentType(this,t),i=new this.DataType;return this.store[t.getGuid()]={entity:t,data:i},t[this.id]=s,t.c[this.id]=s,this.initializeComponentData(s,e,[]),this.fire("add",t,s),s}removeComponent(t){const e=this.id,s=this.store[t.getGuid()],i=t.c[e];i.fire("beforeremove"),this.fire("beforeremove",t,i),delete this.store[t.getGuid()],t[e]=void 0,delete t.c[e],this.fire("remove",t,s.data)}cloneComponent(t,e){const s=this.store[t.getGuid()];return this.addComponent(e,s.data)}initializeComponentData(t,e={},s){for(let i=0,r=s.length;i<r;i++){const n=s[i];let a,o;typeof n=="object"?(a=n.name,o=n.type):(a=n,o=void 0);let h=e[a];h!==void 0?(o!==void 0&&(h=wP(h,o)),t[a]=h):t[a]=t.data[a]}t.enabled&&t.entity.enabled&&t.onEnable()}getPropertiesOfType(t){const e=[];return(this.schema||[]).forEach(i=>{i&&typeof i=="object"&&i.type===t&&e.push(i)}),e}destroy(){this.off()}}function wP(l,t){if(!l)return l;switch(t){case"rgb":return l instanceof Y?l.clone():new Y(l[0],l[1],l[2]);case"rgba":return l instanceof Y?l.clone():new Y(l[0],l[1],l[2],l[3]);case"vec2":return l instanceof W?l.clone():new W(l[0],l[1]);case"vec3":return l instanceof A?l.clone():new A(l[0],l[1],l[2]);case"vec4":return l instanceof ee?l.clone():new ee(l[0],l[1],l[2],l[3]);case"boolean":case"number":case"string":return l;case"entity":return l;default:throw new Error(`Could not convert unhandled type: ${t}`)}}const q0=0,Qu=1,Ju=2;class TP{constructor(){this._left=1/0,this._right=-1/0,this._len=0,this._recip=0,this._p0=0,this._p1=0,this._t=0,this._hermite={valid:!1,p0:0,m0:0,p1:0,m1:0}}update(t,e){if(t<this._left||t>=this._right){const s=e.length;if(!s)this._left=-1/0,this._right=1/0,this._len=0,this._recip=0,this._p0=this._p1=0;else if(t<e[0])this._left=-1/0,this._right=e[0],this._len=0,this._recip=0,this._p0=this._p1=0;else if(t>=e[s-1])this._left=e[s-1],this._right=1/0,this._len=0,this._recip=0,this._p0=this._p1=s-1;else{const i=this._findKey(t,e);this._left=e[i],this._right=e[i+1],this._len=this._right-this._left;const r=1/this._len;this._recip=isFinite(r)?r:0,this._p0=i,this._p1=i+1}}this._t=this._recip===0?0:(t-this._left)*this._recip,this._hermite.valid=!1}_findKey(t,e){let s=0;for(;t>=e[s+1];)s++;return s}eval(t,e,s){const i=s._data,r=s._components,n=this._p0*r;if(e===q0)for(let a=0;a<r;++a)t[a]=i[n+a];else{const a=this._t,o=this._p1*r;switch(e){case Qu:for(let h=0;h<r;++h)t[h]=z.lerp(i[n+h],i[o+h],a);break;case Ju:{const h=this._hermite;if(!h.valid){const m=a*a,_=a+a,g=1-a,y=g*g;h.valid=!0,h.p0=(1+_)*y,h.m0=a*y,h.p1=m*(3-_),h.m1=m*(a-1)}const d=(this._p0*3+1)*r,u=(this._p0*3+2)*r,f=(this._p1*3+1)*r,p=(this._p1*3+0)*r;for(let m=0;m<r;++m)t[m]=h.p0*i[d+m]+h.m0*i[u+m]*this._len+h.p1*i[f+m]+h.m1*i[p+m]*this._len;break}}}}}class Z_{constructor(t){this._name=`${t.name}Snapshot`,this._time=-1,this._cache=[],this._results=[];for(let i=0;i<t._inputs.length;++i)this._cache[i]=new TP;const e=t._curves,s=t._outputs;for(let i=0;i<e.length;++i){const r=e[i],n=s[r._output],a=[];for(let o=0;o<n._components;++o)a[o]=0;this._results[i]=a}}}const Ro=class Ro{constructor(t,e,s,i,r,n){this._name=t.name,this._track=t,this._snapshot=new Z_(t),this._playing=i,this._time=e,this._speed=s,this._loop=r,this._blendWeight=1,this._blendOrder=0,this._eventHandler=n,this.alignCursorToCurrentTime()}set name(t){this._name=t}get name(){return this._name}set track(t){this._track=t,this._snapshot=new Z_(t)}get track(){return this._track}get snapshot(){return this._snapshot}set time(t){this._time=t,this.alignCursorToCurrentTime()}get time(){return this._time}set speed(t){const e=Math.sign(t)!==Math.sign(this._speed);this._speed=t,e&&this.alignCursorToCurrentTime()}get speed(){return this._speed}set loop(t){this._loop=t}get loop(){return this._loop}set blendWeight(t){this._blendWeight=t}get blendWeight(){return this._blendWeight}set blendOrder(t){this._blendOrder=t}get blendOrder(){return this._blendOrder}set eventCursor(t){this._eventCursor=t}get eventCursor(){return this._eventCursor}get eventCursorEnd(){return this.isReverse?0:this._track.events.length-1}get nextEvent(){return this._track.events[this._eventCursor]}get isReverse(){return this._speed<0}nextEventAheadOfTime(t){return this.nextEvent?this.isReverse?this.nextEvent.time<=t:this.nextEvent.time>=t:!1}nextEventBehindTime(t){return this.nextEvent?t===this.track.duration?this.isReverse?this.nextEvent.time>=t:this.nextEvent.time<=t:this.isReverse?this.nextEvent.time>t:this.nextEvent.time<t:!1}resetEventCursor(){this._eventCursor=this.isReverse?this._track.events.length-1:0}moveEventCursor(){this._eventCursor+=this.isReverse?-1:1,this._eventCursor>=this.track.events.length?this._eventCursor=0:this._eventCursor<0&&(this._eventCursor=this.track.events.length-1)}clipFrameTime(t){const e=Ro.eventFrame;e.start=0,e.end=t,e.residual=0,this.isReverse?t<0&&(e.start=this.track.duration,e.end=0,e.residual=t+this.track.duration):t>this.track.duration&&(e.start=0,e.end=this.track.duration,e.residual=t-this.track.duration)}alignCursorToCurrentTime(){for(this.resetEventCursor();this.nextEventBehindTime(this._time)&&this._eventCursor!==this.eventCursorEnd;)this.moveEventCursor()}fireNextEvent(){this._eventHandler.fire(this.nextEvent.name,{track:this.track,...this.nextEvent}),this.moveEventCursor()}fireNextEventInFrame(t,e){return this.nextEventAheadOfTime(t)&&this.nextEventBehindTime(e)?(this.fireNextEvent(),!0):!1}activeEventsForFrame(t,e){const s=Ro.eventFrame;this.clipFrameTime(e);const i=this.eventCursor;for(;this.fireNextEventInFrame(t,s.end)&&i!==this.eventCursor;);this.loop&&Math.abs(s.residual)>0&&this.activeEventsForFrame(s.start,s.residual)}progressForTime(t){return t*this._speed/this._track.duration}_update(t){if(this._playing){let e=this._time;const s=this._track.duration,i=this._speed,r=this._loop;this._track.events.length>0&&s>0&&this.activeEventsForFrame(e,e+i*t),e+=i*t,i>=0?e>s&&(r?e=e%s||0:(e=this._track.duration,this.pause())):e<0&&(r?e=s+(e%s||0):(e=0,this.pause())),this._time=e}this._time!==this._snapshot._time&&this._track.eval(this._time,this._snapshot)}play(){this._playing=!0,this._time=0}stop(){this._playing=!1,this._time=0}pause(){this._playing=!1}resume(){this._playing=!0}reset(){this._time=0}};c(Ro,"eventFrame",{start:0,end:0,residual:0});let Qh=Ro;const X0="NONE",AP="PREV_STATE",EP="NEXT_STATE",CP="PREV_STATE_NEXT_STATE",MP="NEXT_STATE_PREV_STATE",PP="GREATER_THAN",RP="LESS_THAN",IP="GREATER_THAN_EQUAL_TO",DP="LESS_THAN_EQUAL_TO",LP="EQUAL_TO",FP="NOT_EQUAL_TO",Q_="INTEGER",J_="FLOAT",eg="BOOLEAN",xh="TRIGGER",kP="1D",OP="2D_DIRECTIONAL",BP="2D_CARTESIAN",NP="DIRECT",uo="START",ef="END",Or="ANY",Jh=[uo,ef,Or],j0="OVERWRITE",zP="ADDITIVE";class Rt{static dot(t,e){const s=t.length;let i=0;for(let r=0;r<s;++r)i+=t[r]*e[r];return i}static normalize(t){let e=Rt.dot(t,t);if(e>0){e=1/Math.sqrt(e);const s=t.length;for(let i=0;i<s;++i)t[i]*=e}}static set(t,e,s){const i=t.length;if(s==="quaternion"){let r=Rt.dot(e,e);r>0&&(r=1/Math.sqrt(r));for(let n=0;n<i;++n)t[n]=e[n]*r}else for(let r=0;r<i;++r)t[r]=e[r]}static blendVec(t,e,s,i){const r=i?1:1-s,n=t.length;for(let a=0;a<n;++a)t[a]=t[a]*r+e[a]*s}static blendQuat(t,e,s,i){const r=t.length,n=i?1:1-s;Rt.dot(t,e)<0&&(s=-s);for(let a=0;a<r;++a)t[a]=t[a]*n+e[a]*s;i||Rt.normalize(t)}static blend(t,e,s,i,r){i==="quaternion"?Rt.blendQuat(t,e,s,r):Rt.blendVec(t,e,s,r)}static stableSort(t,e){const s=t.length;for(let i=0;i<s-1;++i)for(let r=i+1;r<s;++r)if(e(t[r],t[i])){const n=t[i];t[i]=t[r],t[r]=n}}}const We=class We{constructor(t,e){this._component=t,this.mask=new Int8Array(t.layers.length),this.weights=new Float32Array(t.layers.length),this.totalWeight=0,this.counter=0,this.layerCounter=0,this.valueType=e,this.dirty=!0,this.value=e===We.TYPE_QUAT?[0,0,0,1]:[0,0,0],this.baseValue=null,this.setter=null}get _normalizeWeights(){return this._component.normalizeWeights}getWeight(t){return this.dirty&&this.updateWeights(),this._normalizeWeights&&this.totalWeight===0||!this.mask[t]?0:this._normalizeWeights?this.weights[t]/this.totalWeight:z.clamp(this.weights[t],0,1)}_layerBlendType(t){return this._component.layers[t].blendType}setMask(t,e){this.mask[t]=e,this._normalizeWeights&&(this._component.layers[t].blendType===j0&&(this.mask=this.mask.fill(0,0,t)),this.dirty=!0)}updateWeights(){this.totalWeight=0;for(let t=0;t<this.weights.length;t++)this.weights[t]=this._component.layers[t].weight,this.totalWeight+=this.mask[t]*this.weights[t];this.dirty=!1}updateValue(t,e){if(this.counter===0&&(Rt.set(this.value,We.IDENTITY_QUAT_ARR,this.valueType),this._normalizeWeights||Rt.blend(this.value,this.baseValue,1,this.valueType)),!(!this.mask[t]||this.getWeight(t)===0)){if(this._layerBlendType(t)===zP&&!this._normalizeWeights)if(this.valueType===We.TYPE_QUAT){const s=We.q1.set(this.value[0],this.value[1],this.value[2],this.value[3]),i=We.q2.set(this.baseValue[0],this.baseValue[1],this.baseValue[2],this.baseValue[3]),r=We.q3.set(e[0],e[1],e[2],e[3]),n=i.invert().mul(r);n.slerp(ie.IDENTITY,n,this.getWeight(t)),s.mul(n),We.quatArr[0]=s.x,We.quatArr[1]=s.y,We.quatArr[2]=s.z,We.quatArr[3]=s.w,Rt.set(this.value,We.quatArr,this.valueType)}else We.vecArr[0]=e[0]-this.baseValue[0],We.vecArr[1]=e[1]-this.baseValue[1],We.vecArr[2]=e[2]-this.baseValue[2],Rt.blend(this.value,We.vecArr,this.getWeight(t),this.valueType,!0);else Rt.blend(this.value,e,this.getWeight(t),this.valueType);this.setter&&this.setter(this.value)}}unbind(){this.setter&&this.setter(this.baseValue)}};c(We,"TYPE_QUAT","quaternion"),c(We,"TYPE_VEC3","vector3"),c(We,"q1",new ie),c(We,"q2",new ie),c(We,"q3",new ie),c(We,"quatArr",[0,0,0,1]),c(We,"vecArr",[0,0,0]),c(We,"IDENTITY_QUAT_ARR",[0,0,0,1]);let Eo=We;class Y0{constructor(t){this._binder=t,this._clips=[],this._inputs=[],this._outputs=[],this._targets={}}get clips(){return this._clips}addClip(t){const e=this._targets,s=this._binder,i=t.track.curves,r=t.snapshot,n=[],a=[];for(let o=0;o<i.length;++o){const d=i[o].paths;for(let u=0;u<d.length;++u){const f=d[u],p=s.resolve(f);let m=e[p&&p.targetPath||null];if(!m&&p){m={target:p,value:[],curves:0,blendCounter:0};for(let _=0;_<m.target.components;++_)m.value.push(0);if(e[p.targetPath]=m,s.animComponent){if(!s.animComponent.targets[p.targetPath]){let _;p.targetPath.substring(p.targetPath.length-13)==="localRotation"?_=Eo.TYPE_QUAT:_=Eo.TYPE_VEC3,s.animComponent.targets[p.targetPath]=new Eo(s.animComponent,_)}s.animComponent.targets[p.targetPath].layerCounter++,s.animComponent.targets[p.targetPath].setMask(s.layerIndex,1)}}m&&(m.curves++,n.push(r._results[o]),a.push(m))}}this._clips.push(t),this._inputs.push(n),this._outputs.push(a)}removeClip(t){const e=this._targets,s=this._binder,i=this._clips,n=i[t].track.curves;for(let a=0;a<n.length;++a){const h=n[a].paths;for(let d=0;d<h.length;++d){const u=h[d],f=this._binder.resolve(u);f&&(f.curves--,f.curves===0&&(s.unresolve(u),delete e[f.targetPath],s.animComponent&&s.animComponent.targets[f.targetPath].layerCounter--))}}i.splice(t,1),this._inputs.splice(t,1),this._outputs.splice(t,1)}removeClips(){for(;this._clips.length>0;)this.removeClip(0)}updateClipTrack(t,e){this._clips.forEach(s=>{s.name.includes(t)&&(s.track=e)}),this.rebind()}findClip(t){const e=this._clips;for(let s=0;s<e.length;++s){const i=e[s];if(i.name===t)return i}return null}rebind(){this._binder.rebind(),this._targets={};const t=[...this.clips];this.removeClips(),t.forEach(e=>{this.addClip(e)})}assignMask(t){return this._binder.assignMask(t)}update(t,e=!0){const s=this._clips,i=s.map((a,o)=>o);Rt.stableSort(i,(a,o)=>s[a].blendOrder<s[o].blendOrder);for(let a=0;a<i.length;++a){const o=i[a],h=s[o],d=this._inputs[o],u=this._outputs[o],f=h.blendWeight;if(f>0&&h._update(t),!e)break;let p,m,_;if(f>=1)for(let g=0;g<d.length;++g)p=d[g],m=u[g],_=m.value,Rt.set(_,p,m.target.type),m.blendCounter++;else if(f>0)for(let g=0;g<d.length;++g)p=d[g],m=u[g],_=m.value,m.blendCounter===0?Rt.set(_,p,m.target.type):Rt.blend(_,p,f,m.target.type),m.blendCounter++}const r=this._targets,n=this._binder;for(const a in r)if(r.hasOwnProperty(a)){const o=r[a];if(n.animComponent&&o.target.isTransform){const h=n.animComponent.targets[a];h.counter===h.layerCounter&&(h.counter=0),h.path||(h.path=a,h.baseValue=o.target.get(),h.setter=o.target.set),h.updateValue(n.layerIndex,o.value),h.counter++}else o.target.set(o.value);o.blendCounter=0}this._binder.update(t)}}class K0{constructor(t){this._events=[...t],this._events.sort((e,s)=>e.time-s.time)}get events(){return this._events}}const fc=class fc{constructor(t,e,s,i,r,n=new K0([])){this._name=t,this._duration=e,this._inputs=s,this._outputs=i,this._curves=r,this._animEvents=n}get name(){return this._name}get duration(){return this._duration}get inputs(){return this._inputs}get outputs(){return this._outputs}get curves(){return this._curves}set events(t){this._animEvents=t}get events(){return this._animEvents.events}eval(t,e){e._time=t;const s=this._inputs,i=this._outputs,r=this._curves,n=e._cache,a=e._results;for(let o=0;o<s.length;++o)n[o].update(t,s[o]._data);for(let o=0;o<r.length;++o){const h=r[o],d=i[h._output],u=a[o];n[h._input].eval(u,h._interpolation,d)}}};c(fc,"EMPTY",Object.freeze(new fc("empty",Number.MAX_VALUE,[],[],[])));let ki=fc;class Xr{static joinPath(t,e){e=e||".";const s=function(i){return i.replace(/\\/g,"\\\\").replace(new RegExp(`\\${e}`,"g"),`\\${e}`)};return t.map(s).join(e)}static splitPath(t,e){e=e||".";const s=[];let i="",r=0;for(;r<t.length;){let n=t[r++];n==="\\"&&r<t.length?(n=t[r++],n==="\\"||n===e?i+=n:i+=`\\${n}`):n===e?(s.push(i),i=""):i+=n}return i.length>0&&s.push(i),s}static encode(t,e,s){return`${Array.isArray(t)?t.join("/"):t}/${e}/${Array.isArray(s)?s.join("/"):s}`}resolve(t){return null}unresolve(t){}update(t){}}class tf{constructor(t,e,s,i){t.set?(this._set=t.set,this._get=t.get):this._set=t,this._type=e,this._components=s,this._targetPath=i,this._isTransform=this._targetPath.substring(this._targetPath.length-13)==="localRotation"||this._targetPath.substring(this._targetPath.length-13)==="localPosition"||this._targetPath.substring(this._targetPath.length-10)==="localScale"}get set(){return this._set}get get(){return this._get}get type(){return this._type}get components(){return this._components}get targetPath(){return this._targetPath}get isTransform(){return this._isTransform}}class tr{constructor(t){c(this,"_isPathInMask",(t,e)=>{const s=this._mask[t];if(s){if(s.children||e&&s.value!==!1)return!0}else return!1;return!1});if(this.graph=t,!t)return;this._mask=null;const e={},s=function(r){e[r.name]=r;for(let n=0;n<r.children.length;++n)s(r.children[n])};s(t),this.nodes=e,this.targetCache={},this.visitedFallbackGraphPaths={};const i=function(r){let n=r;for(;n&&!(n instanceof je);)n=n.parent;let a;return n&&(n.render?a=n.render.meshInstances:n.model&&(a=n.model.meshInstances)),a};this.nodeCounts={},this.activeNodes=[],this.handlers={localPosition:function(r){const n=r.localPosition,a=function(o){n.set(...o)};return tr.createAnimTarget(a,"vector",3,r,"localPosition")},localRotation:function(r){const n=r.localRotation,a=function(o){n.set(...o)};return tr.createAnimTarget(a,"quaternion",4,r,"localRotation")},localScale:function(r){const n=r.localScale,a=function(o){n.set(...o)};return tr.createAnimTarget(a,"vector",3,r,"localScale")},weight:function(r,n){n.indexOf("name.")===0?n=n.replace("name.",""):n=Number(n);const a=i(r);let o;if(a){for(let h=0;h<a.length;++h)if(a[h].node.name===r.name&&a[h].morphInstance){const d=a[h].morphInstance,u=f=>{d.setWeight(n,f[0])};o||(o=[]),o.push(u)}}if(o){const h=d=>{for(let u=0;u<o.length;++u)o[u](d)};return tr.createAnimTarget(h,"number",1,r,`weight.${n}`)}return null},materialTexture:(r,n)=>{const a=i(r);if(a){let o;for(let h=0;h<a.length;++h)if(a[h].node.name===r.name){o=a[h];break}if(o){const h=d=>{const u=this.animComponent.system.app.assets.get(d[0]);u&&u.resource&&u.type==="texture"&&(o.material[n]=u.resource,o.material.update())};return tr.createAnimTarget(h,"vector",1,r,"materialTexture","material")}}return null}}}_isPathActive(t){if(!this._mask)return!0;const e=[t.entityPath[0],this.graph.name];for(let s=0;s<e.length;++s){let i=e[s];if(this._isPathInMask(i,t.entityPath.length===1))return!0;for(let r=1;r<t.entityPath.length;r++)if(i+=`/${t.entityPath[r]}`,this._isPathInMask(i,r===t.entityPath.length-1))return!0}return!1}findNode(t){if(!this._isPathActive(t))return null;let e;if(this.graph&&(e=this.graph.findByPath(t.entityPath),e||(e=this.graph.findByPath(t.entityPath.slice(1)))),!e){e=this.nodes[t.entityPath[t.entityPath.length-1]||""];const s=Xr.encode(t.entityPath[t.entityPath.length-1]||"","graph",t.propertyPath);this.visitedFallbackGraphPaths[s]===1&&b.warnOnce(`Anim Binder: Multiple animation curves with the path ${s} are present in the ${this.graph.path} graph which may result in the incorrect binding of animations`),Number.isFinite(this.visitedFallbackGraphPaths[s])?this.visitedFallbackGraphPaths[s]++:this.visitedFallbackGraphPaths[s]=0}return e}static createAnimTarget(t,e,s,i,r,n){const a=Xr.encode(i.path,n||"entity",r);return new tf(t,e,s,a)}resolve(t){const e=Xr.encode(t.entityPath,t.component,t.propertyPath);let s=this.targetCache[e];if(s)return s;const i=this.findNode(t);if(!i)return null;const r=this.handlers[t.propertyPath];return!r||(s=r(i),!s)?null:(this.targetCache[e]=s,this.nodeCounts[i.path]?this.nodeCounts[i.path]++:(this.activeNodes.push(i),this.nodeCounts[i.path]=1),s)}unresolve(t){if(t.component!=="graph")return;const e=this.nodes[t.entityPath[t.entityPath.length-1]||""];if(this.nodeCounts[e.path]--,this.nodeCounts[e.path]===0){const s=this.activeNodes,i=s.indexOf(e.node),r=s.length;i<r-1&&(s[i]=s[r-1]),s.pop()}}update(t){const e=this.activeNodes;for(let s=0;s<e.length;++s)e[s]._dirtifyLocal()}assignMask(t){return t!==this._mask?(this._mask=t,!0):!1}}class Z0 extends pe{constructor(){super(...arguments);c(this,"_animations",{});c(this,"_assets",[]);c(this,"_loop",!0);c(this,"animEvaluator",null);c(this,"model",null);c(this,"skeleton",null);c(this,"fromSkel",null);c(this,"toSkel",null);c(this,"animationsIndex",{});c(this,"prevAnim",null);c(this,"currAnim",null);c(this,"blend",0);c(this,"blending",!1);c(this,"blendSpeed",0);c(this,"activate",!0);c(this,"speed",1)}set animations(e){this._animations=e,this.onSetAnimations()}get animations(){return this._animations}set assets(e){const s=this._assets;if(s&&s.length){for(let r=0;r<s.length;r++)if(s[r]){const n=this.system.app.assets.get(s[r]);if(n){n.off("change",this.onAssetChanged,this),n.off("remove",this.onAssetRemoved,this);const a=this.animationsIndex[n.id];this.currAnim===a&&this._stopCurrentAnimation(),delete this.animations[a],delete this.animationsIndex[n.id]}}}this._assets=e;const i=e.map(r=>r instanceof he?r.id:r);this.loadAnimationAssets(i)}get assets(){return this._assets}set currentTime(e){if(this.skeleton&&(this.skeleton.currentTime=e,this.skeleton.addTime(0),this.skeleton.updateGraph()),this.animEvaluator){const s=this.animEvaluator.clips;for(let i=0;i<s.length;++i)s[i].time=e}}get currentTime(){if(this.skeleton)return this.skeleton._time;if(this.animEvaluator){const e=this.animEvaluator.clips;if(e.length>0)return e[e.length-1].time}return 0}get duration(){return this.currAnim?this.animations[this.currAnim].duration:(b.warn("No animation is playing to get a duration. Returning 0."),0)}set loop(e){if(this._loop=e,this.skeleton&&(this.skeleton.looping=e),this.animEvaluator)for(let s=0;s<this.animEvaluator.clips.length;++s)this.animEvaluator.clips[s].loop=e}get loop(){return this._loop}play(e,s=0){if(!(!this.enabled||!this.entity.enabled)){if(!this.animations[e]){b.error(`Trying to play animation '${e}' which doesn't exist`);return}if(this.prevAnim=this.currAnim,this.currAnim=e,this.model){!this.skeleton&&!this.animEvaluator&&this._createAnimationController();const i=this.animations[this.prevAnim],r=this.animations[this.currAnim];if(this.blending=s>0&&!!this.prevAnim,this.blending&&(this.blend=0,this.blendSpeed=1/s),this.skeleton&&(this.blending?(this.fromSkel.animation=i,this.fromSkel.addTime(this.skeleton._time),this.toSkel.animation=r):this.skeleton.animation=r),this.animEvaluator){const n=this.animEvaluator;if(this.blending)for(;n.clips.length>1;)n.removeClip(0);else this.animEvaluator.removeClips();const a=new Qh(this.animations[this.currAnim],0,1,!0,this.loop);a.name=this.currAnim,a.blendWeight=this.blending?0:1,a.reset(),this.animEvaluator.addClip(a)}}this.playing=!0}}getAnimation(e){return this.animations[e]}setModel(e){e!==this.model&&(this._resetAnimationController(),this.model=e,this.animations&&this.currAnim&&this.animations[this.currAnim]&&this.play(this.currAnim))}onSetAnimations(){const e=this.entity.model;if(e){const s=e.model;s&&s!==this.model&&this.setModel(s)}if(!this.currAnim&&this.activate&&this.enabled&&this.entity.enabled){const s=Object.keys(this._animations);s.length>0&&this.play(s[0])}}_resetAnimationController(){this.skeleton=null,this.fromSkel=null,this.toSkel=null,this.animEvaluator=null}_createAnimationController(){const e=this.model,s=this.animations;let i=!1,r=!1;for(const a in s)s.hasOwnProperty(a)&&(s[a].constructor===ki?r=!0:i=!0);const n=e.getGraph();i?(this.fromSkel=new jd(n),this.toSkel=new jd(n),this.skeleton=new jd(n),this.skeleton.looping=this.loop,this.skeleton.setGraph(n)):r&&(this.animEvaluator=new Y0(new tr(this.entity)))}loadAnimationAssets(e){if(!e||!e.length)return;const s=this.system.app.assets,i=n=>{if(n.resources.length>1)for(let a=0;a<n.resources.length;a++)this.animations[n.resources[a].name]=n.resources[a],this.animationsIndex[n.id]=n.resources[a].name;else this.animations[n.name]=n.resource,this.animationsIndex[n.id]=n.name;this.animations=this.animations},r=n=>{n.off("change",this.onAssetChanged,this),n.on("change",this.onAssetChanged,this),n.off("remove",this.onAssetRemoved,this),n.on("remove",this.onAssetRemoved,this),n.resource?i(n):(n.once("load",i,this),this.enabled&&this.entity.enabled&&s.load(n))};for(let n=0,a=e.length;n<a;n++){const o=s.get(e[n]);o?r(o):s.on(`add:${e[n]}`,r)}}onAssetChanged(e,s,i,r){if(s==="resource"||s==="resources")if(s==="resources"&&i&&i.length===0&&(i=null),i){let n=!1;if(i.length>1){if(r&&r.length>1)for(let a=0;a<r.length;a++)delete this.animations[r[a].name];else delete this.animations[e.name];n=!1;for(let a=0;a<i.length;a++)this.animations[i[a].name]=i[a],!n&&this.currAnim===i[a].name&&this.playing&&this.enabled&&this.entity.enabled&&(n=!0,this.play(i[a].name));n||(this._stopCurrentAnimation(),this.onSetAnimations())}else{if(r&&r.length>1)for(let a=0;a<r.length;a++)delete this.animations[r[a].name];this.animations[e.name]=i[0]||i,n=!1,this.currAnim===e.name&&this.playing&&this.enabled&&this.entity.enabled&&(n=!0,this.play(e.name)),n||(this._stopCurrentAnimation(),this.onSetAnimations())}this.animationsIndex[e.id]=e.name}else{if(r.length>1)for(let n=0;n<r.length;n++)delete this.animations[r[n].name],this.currAnim===r[n].name&&this._stopCurrentAnimation();else delete this.animations[e.name],this.currAnim===e.name&&this._stopCurrentAnimation();delete this.animationsIndex[e.id]}}onAssetRemoved(e){if(e.off("remove",this.onAssetRemoved,this),this.animations){if(e.resources.length>1)for(let s=0;s<e.resources.length;s++)delete this.animations[e.resources[s].name],this.currAnim===e.resources[s].name&&this._stopCurrentAnimation();else delete this.animations[e.name],this.currAnim===e.name&&this._stopCurrentAnimation();delete this.animationsIndex[e.id]}}_stopCurrentAnimation(){if(this.currAnim=null,this.playing=!1,this.skeleton&&(this.skeleton.currentTime=0,this.skeleton.animation=null),this.animEvaluator){for(let e=0;e<this.animEvaluator.clips.length;++e)this.animEvaluator.clips[e].stop();this.animEvaluator.update(0),this.animEvaluator.removeClips()}}onEnable(){super.onEnable();const e=this.assets,s=this.system.app.assets;if(e)for(let i=0,r=e.length;i<r;i++){let n=e[i];n instanceof he||(n=s.get(n)),n&&!n.resource&&s.load(n)}if(this.activate&&!this.currAnim){const i=Object.keys(this.animations);i.length>0&&this.play(i[0])}}onBeforeRemove(){for(let e=0;e<this.assets.length;e++){let s=this.assets[e];typeof s=="number"&&(s=this.system.app.assets.get(s)),s&&(s.off("change",this.onAssetChanged,this),s.off("remove",this.onAssetRemoved,this))}this.skeleton=null,this.fromSkel=null,this.toSkel=null,this.animEvaluator=null}update(e){if(this.blending&&(this.blend+=e*this.blendSpeed,this.blend>=1&&(this.blend=1)),this.playing){const i=this.skeleton;if(i!==null&&this.model!==null){if(this.blending)i.blend(this.fromSkel,this.toSkel,this.blend);else{const r=e*this.speed;i.addTime(r),this.speed>0&&i._time===i.animation.duration&&!this.loop?this.playing=!1:this.speed<0&&i._time===0&&!this.loop&&(this.playing=!1)}this.blending&&this.blend===1&&(i.animation=this.toSkel.animation),i.updateGraph()}}const s=this.animEvaluator;if(s){for(let i=0;i<s.clips.length;++i){const r=s.clips[i];r.speed=this.speed,this.playing?r.resume():r.pause()}this.blending&&s.clips.length>1&&(s.clips[1].blendWeight=this.blend),s.update(e)}this.blending&&this.blend===1&&(this.blending=!1)}}class UP{constructor(){this.enabled=!0}}const sf=["enabled"];class VP extends Qe{constructor(t){super(t),this.id="animation",this.ComponentType=Z0,this.DataType=UP,this.schema=sf,this.on("beforeremove",this.onBeforeRemove,this),this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){s=["activate","enabled","loop","speed","assets"];for(const i of s)e.hasOwnProperty(i)&&(t[i]=e[i]);super.initializeComponentData(t,e,sf)}cloneComponent(t,e){this.addComponent(e,{}),e.animation.assets=t.animation.assets.slice(),e.animation.speed=t.animation.speed,e.animation.loop=t.animation.loop,e.animation.activate=t.animation.activate,e.animation.enabled=t.animation.enabled;const s={},i=t.animation.animations;for(const a in i)i.hasOwnProperty(a)&&(s[a]=i[a]);e.animation.animations=s;const r={},n=t.animation.animationsIndex;for(const a in n)n.hasOwnProperty(a)&&(r[a]=n[a]);return e.animation.animationsIndex=r,e.animation}onBeforeRemove(t,e){e.onBeforeRemove()}onUpdate(t){const e=this.store;for(const s in e)if(e.hasOwnProperty(s)){const i=e[s];i.data.enabled&&i.entity.enabled&&i.entity.animation.update(t)}}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}pe._buildAccessors(Z0.prototype,sf);class Wo{constructor(t,e,s,i,r=1){this._state=t,this._parent=e,this._name=s,Array.isArray(i)?(this._point=new W(i[0],i[1]),this._pointLength=this._point.length()):(this._point=i,this._pointLength=i),this._speed=r,this._weightedSpeed=1,this._weight=1,this._animTrack=null}get parent(){return this._parent}get name(){return this._name}get path(){return this._parent?`${this._parent.path}.${this._name}`:this._name}get point(){return this._point}get pointLength(){return this._pointLength}set weight(t){this._weight=t}get weight(){return this._parent?this._parent.weight*this._weight:this._weight}get normalizedWeight(){const t=this._state.totalWeight;return t===0?0:this.weight/t}get speed(){return this._weightedSpeed*this._speed}get absoluteSpeed(){return Math.abs(this._speed)}set weightedSpeed(t){this._weightedSpeed=t}get weightedSpeed(){return this._weightedSpeed}set animTrack(t){this._animTrack=t}get animTrack(){return this._animTrack}}class Ua extends Wo{constructor(t,e,s,i,r,n,a,o,h){super(t,e,s,i),this._parameters=r,this._parameterValues=new Array(r.length),this._children=[],this._findParameter=h,this._syncAnimations=a!==!1,this._pointCache={};for(let d=0;d<n.length;d++){const u=n[d];u.children?this._children.push(o(u.type,t,this,u.name,1,u.parameter?[u.parameter]:u.parameters,u.children,u.syncAnimations,o,h)):this._children.push(new Wo(t,this,u.name,u.point,u.speed))}}get weight(){return this.calculateWeights(),this._parent?this._parent.weight*this._weight:this._weight}get syncAnimations(){return this._syncAnimations}getChild(t){for(let e=0;e<this._children.length;e++)if(this._children[e].name===t)return this._children[e];return null}updateParameterValues(){let t=!0;for(let e=0;e<this._parameterValues.length;e++){const s=this._findParameter(this._parameters[e]).value;this._parameterValues[e]!==s&&(this._parameterValues[e]=s,t=!1)}return t}getNodeWeightedDuration(t){return this._children[t].animTrack.duration/this._children[t].speedMultiplier*this._children[t].weight}getNodeCount(){let t=0;for(let e=0;e<this._children.length;e++)this._children[e].constructor===Ua?t+=this._children[e].getNodeCount():t++;return t}}class GP extends Ua{constructor(t,e,s,i,r,n,a,o,h){n.sort((d,u)=>d.point-u.point),super(t,e,s,i,r,n,a,o,h)}calculateWeights(){if(this.updateParameterValues())return;let t=0;this._children[0].weight=0;for(let e=0;e<this._children.length;e++){const s=this._children[e];if(e!==this._children.length-1){const i=this._children[e+1];if(s.point===i.point)s.weight=.5,i.weight=.5;else if(z.between(this._parameterValues[0],s.point,i.point,!0)){const r=Math.abs(s.point-i.point),n=Math.abs(s.point-this._parameterValues[0]),a=(r-n)/r;s.weight=a,i.weight=1-a}else i.weight=0}this._syncAnimations&&(t+=s.animTrack.duration/s.absoluteSpeed*s.weight)}if(this._syncAnimations)for(let e=0;e<this._children.length;e++){const s=this._children[e];s.weightedSpeed=s.animTrack.duration/s.absoluteSpeed/t}}}const bi=class bi extends Ua{pointDistanceCache(t,e){const s=`${t}${e}`;return this._pointCache[s]||(this._pointCache[s]=this._children[e].point.clone().sub(this._children[t].point)),this._pointCache[s]}calculateWeights(){if(this.updateParameterValues())return;let t,e;bi._p.set(...this._parameterValues),t=0,e=0;for(let s=0;s<this._children.length;s++){const i=this._children[s],r=i.point;bi._pip.set(bi._p.x,bi._p.y).sub(r);let n=Number.MAX_VALUE;for(let a=0;a<this._children.length;a++){if(s===a)continue;const o=this.pointDistanceCache(s,a),h=z.clamp(1-bi._pip.dot(o)/o.lengthSq(),0,1);h<n&&(n=h)}i.weight=n,t+=n,this._syncAnimations&&(e+=i.animTrack.duration/i.absoluteSpeed*i.weight)}for(let s=0;s<this._children.length;s++){const i=this._children[s];i.weight=i._weight/t,this._syncAnimations&&(i.weightedSpeed=i.animTrack.duration/i.absoluteSpeed/e)}}};c(bi,"_p",new W),c(bi,"_pip",new W);let rf=bi;const wi=class wi extends Ua{pointCache(t,e){const s=`${t}${e}`;return this._pointCache[s]||(this._pointCache[s]=new W((this._children[e].pointLength-this._children[t].pointLength)/((this._children[e].pointLength+this._children[t].pointLength)/2),W.angleRad(this._children[t].point,this._children[e].point)*2)),this._pointCache[s]}calculateWeights(){if(this.updateParameterValues())return;let t,e;wi._p.set(...this._parameterValues);const s=wi._p.length();t=0,e=0;for(let i=0;i<this._children.length;i++){const r=this._children[i],n=r.point,a=r.pointLength;let o=Number.MAX_VALUE;for(let h=0;h<this._children.length;h++){if(i===h)continue;const d=this.pointCache(i,h),u=this._children[h].pointLength;wi._pip.set((s-a)/((u+a)/2),W.angleRad(n,wi._p)*2);const f=z.clamp(1-Math.abs(wi._pip.dot(d)/d.lengthSq()),0,1);f<o&&(o=f)}r.weight=o,t+=o,this._syncAnimations&&(e+=r.animTrack.duration/r.absoluteSpeed*r.weight)}for(let i=0;i<this._children.length;i++){const r=this._children[i];if(r.weight=r._weight/t,this._syncAnimations){const n=r.animTrack.duration/e*t;r.weightedSpeed=r.absoluteSpeed*n}}}};c(wi,"_p",new W),c(wi,"_pip",new W);let nf=wi;class HP extends Ua{calculateWeights(){if(this.updateParameterValues())return;let t=0,e=0;for(let s=0;s<this._children.length;s++)if(t+=Math.max(this._parameterValues[s],0),this._syncAnimations){const i=this._children[s];e+=i.animTrack.duration/i.absoluteSpeed*i.weight}for(let s=0;s<this._children.length;s++){const i=this._children[s],r=Math.max(this._parameterValues[s],0);t?(i.weight=r/t,this._syncAnimations&&(i.weightedSpeed=i.animTrack.duration/i.absoluteSpeed/e)):(i.weight=0,this._syncAnimations&&(i.weightedSpeed=0))}}}class tg{constructor(t,e,s=1,i=!0,r){c(this,"_animations",{});c(this,"_animationList",[]);this._controller=t,this._name=e,this._speed=s,this._loop=i,this._hasAnimations=!1,r?this._blendTree=this._createTree(r.type,this,null,e,1,r.parameter?[r.parameter]:r.parameters,r.children,r.syncAnimations,this._createTree,this._controller.findParameter):this._blendTree=new Wo(this,null,e,1,s)}_createTree(t,e,s,i,r,n,a,o,h,d){switch(t){case kP:return new GP(e,s,i,r,n,a,o,h,d);case BP:return new rf(e,s,i,r,n,a,o,h,d);case OP:return new nf(e,s,i,r,n,a,o,h,d);case NP:return new HP(e,s,i,r,n,a,o,h,d)}b.error(`Invalid anim blend type: ${t}`)}_getNodeFromPath(t){let e=this._blendTree;for(let s=1;s<t.length;s++)e=e.getChild(t[s]);return e}addAnimation(t,e){const s=t.join("."),i=this._animationList.findIndex(r=>r.path===s);if(i>=0)this._animationList[i].animTrack=e;else{const r=this._getNodeFromPath(t);r.animTrack=e,this._animationList.push(r)}this._updateHasAnimations()}_updateHasAnimations(){this._hasAnimations=this._animationList.length>0&&this._animationList.every(t=>t.animTrack&&t.animTrack!==ki.EMPTY)}get name(){return this._name}set animations(t){this._animationList=t,this._updateHasAnimations()}get animations(){return this._animationList}get hasAnimations(){return this._hasAnimations}set speed(t){this._speed=t}get speed(){return this._speed}set loop(t){this._loop=t}get loop(){return this._loop}get nodeCount(){return!this._blendTree||this._blendTree.constructor===Wo?1:this._blendTree.getNodeCount()}get playable(){return Jh.indexOf(this.name)!==-1||this.animations.length===this.nodeCount}get looping(){if(this.animations.length>0){const t=`${this.name}.${this.animations[0].animTrack.name}`,e=this._controller.animEvaluator.findClip(t);if(e)return e.loop}return!1}get totalWeight(){let t=0;for(let e=0;e<this.animations.length;e++)t+=this.animations[e].weight;return t}get timelineDuration(){let t=0;for(let e=0;e<this.animations.length;e++){const s=this.animations[e];s.animTrack.duration>t&&(t=s.animTrack.duration)}return t}}class ec{constructor({from:t,to:e,time:s=0,priority:i=0,conditions:r=[],exitTime:n=null,transitionOffset:a=null,interruptionSource:o=X0}){this._from=t,this._to=e,this._time=s,this._priority=i,this._conditions=r,this._exitTime=n,this._transitionOffset=a,this._interruptionSource=o}get from(){return this._from}set to(t){this._to=t}get to(){return this._to}get time(){return this._time}get priority(){return this._priority}get conditions(){return this._conditions}get exitTime(){return this._exitTime}get transitionOffset(){return this._transitionOffset}get interruptionSource(){return this._interruptionSource}get hasExitTime(){return!!this.exitTime}}class WP{constructor(t,e,s,i,r,n,a){c(this,"_states",{});c(this,"_stateNames",[]);c(this,"_findTransitionsFromStateCache",{});c(this,"_findTransitionsBetweenStatesCache",{});c(this,"_previousStateName",null);c(this,"_activeStateName",uo);c(this,"_activeStateDuration",0);c(this,"_activeStateDurationDirty",!0);c(this,"_playing",!1);c(this,"_activate");c(this,"_transitions");c(this,"_currTransitionTime",1);c(this,"_totalTransitionTime",1);c(this,"_isTransitioning",!1);c(this,"_transitionInterruptionSource",X0);c(this,"_transitionPreviousStates",[]);c(this,"_timeInState",0);c(this,"_timeInStateBefore",0);c(this,"findParameter",t=>this._findParameter(t));this._animEvaluator=t,this._eventHandler=r,this._findParameter=n,this._consumeTrigger=a;for(let o=0;o<e.length;o++)this._states[e[o].name]=new tg(this,e[o].name,e[o].speed,e[o].loop,e[o].blendTree),this._stateNames.push(e[o].name);this._transitions=s.map(o=>new ec({...o})),this._activate=i}get animEvaluator(){return this._animEvaluator}set activeState(t){this._activeStateName=t}get activeState(){return this._findState(this._activeStateName)}get activeStateName(){return this._activeStateName}get activeStateAnimations(){return this.activeState.animations}set previousState(t){this._previousStateName=t}get previousState(){return this._findState(this._previousStateName)}get previousStateName(){return this._previousStateName}get playable(){let t=!0;for(let e=0;e<this._stateNames.length;e++)this._states[this._stateNames[e]].playable||(t=!1);return t}set playing(t){this._playing=t}get playing(){return this._playing}get activeStateProgress(){return this._getActiveStateProgressForTime(this._timeInState)}get activeStateDuration(){if(this._activeStateDurationDirty){let t=0;for(let e=0;e<this.activeStateAnimations.length;e++){const s=this._animEvaluator.findClip(this.activeStateAnimations[e].name);s&&(t=Math.max(t,s.track.duration))}this._activeStateDuration=t,this._activeStateDurationDirty=!1}return this._activeStateDuration}set activeStateCurrentTime(t){this._timeInStateBefore=t,this._timeInState=t;for(let e=0;e<this.activeStateAnimations.length;e++){const s=this.animEvaluator.findClip(this.activeStateAnimations[e].name);s&&(s.time=t)}}get activeStateCurrentTime(){return this._timeInState}get transitioning(){return this._isTransitioning}get transitionProgress(){return this._currTransitionTime/this._totalTransitionTime}get states(){return this._stateNames}assignMask(t){return this._animEvaluator.assignMask(t)}_findState(t){return this._states[t]}_getActiveStateProgressForTime(t){if(this.activeStateName===uo||this.activeStateName===ef||this.activeStateName===Or)return 1;const e=this._animEvaluator.findClip(this.activeStateAnimations[0].name);return e?e.progressForTime(t):null}_findTransitionsFromState(t){let e=this._findTransitionsFromStateCache[t];return e||(e=this._transitions.filter(s=>s.from===t),Go(e),this._findTransitionsFromStateCache[t]=e),e}_findTransitionsBetweenStates(t,e){let s=this._findTransitionsBetweenStatesCache[`${t}->${e}`];return s||(s=this._transitions.filter(i=>i.from===t&&i.to===e),Go(s),this._findTransitionsBetweenStatesCache[`${t}->${e}`]=s),s}_transitionHasConditionsMet(t){const e=t.conditions;for(let s=0;s<e.length;s++){const i=e[s],r=this._findParameter(i.parameterName);switch(i.predicate){case PP:if(!(r.value>i.value))return!1;break;case RP:if(!(r.value<i.value))return!1;break;case IP:if(!(r.value>=i.value))return!1;break;case DP:if(!(r.value<=i.value))return!1;break;case LP:if(r.value!==i.value)return!1;break;case FP:if(r.value===i.value)return!1;break}}return!0}_findTransition(t,e){let s=[];if(t&&e)s=s.concat(this._findTransitionsBetweenStates(t,e));else if(!this._isTransitioning)s=s.concat(this._findTransitionsFromState(this._activeStateName)),s=s.concat(this._findTransitionsFromState(Or));else switch(this._transitionInterruptionSource){case AP:s=s.concat(this._findTransitionsFromState(this._previousStateName)),s=s.concat(this._findTransitionsFromState(Or));break;case EP:s=s.concat(this._findTransitionsFromState(this._activeStateName)),s=s.concat(this._findTransitionsFromState(Or));break;case CP:s=s.concat(this._findTransitionsFromState(this._previousStateName)),s=s.concat(this._findTransitionsFromState(this._activeStateName)),s=s.concat(this._findTransitionsFromState(Or));break;case MP:s=s.concat(this._findTransitionsFromState(this._activeStateName)),s=s.concat(this._findTransitionsFromState(this._previousStateName)),s=s.concat(this._findTransitionsFromState(Or));break}if(s=s.filter(i=>{if(i.to===this.activeStateName)return!1;if(i.hasExitTime){let r=this._getActiveStateProgressForTime(this._timeInStateBefore),n=this._getActiveStateProgressForTime(this._timeInState);if(i.exitTime<1&&this.activeState.loop&&(r-=Math.floor(r),n-=Math.floor(n)),n===r){if(n!==i.exitTime)return null}else if(!(i.exitTime>r&&i.exitTime<=n))return null}return this._transitionHasConditionsMet(i)}),s.length>0){const i=s[0];if(i.to===ef){const r=this._findTransitionsFromState(uo)[0];i.to=r.to}return i}return null}updateStateFromTransition(t){let e,s,i;this.previousState=t.from?this.activeStateName:null,this.activeState=t.to,this._activeStateDurationDirty=!0;for(let h=0;h<t.conditions.length;h++){const d=t.conditions[h];this._findParameter(d.parameterName).type===xh&&this._consumeTrigger(d.parameterName)}if(this.previousState){this._isTransitioning||(this._transitionPreviousStates=[]),this._transitionPreviousStates.push({name:this._previousStateName,weight:1});const h=Math.min(this._totalTransitionTime!==0?this._currTransitionTime/this._totalTransitionTime:1,1);for(let d=0;d<this._transitionPreviousStates.length;d++){this._isTransitioning?d!==this._transitionPreviousStates.length-1?this._transitionPreviousStates[d].weight*=1-h:this._transitionPreviousStates[d].weight=h:this._transitionPreviousStates[d].weight=1,e=this._findState(this._transitionPreviousStates[d].name);for(let u=0;u<e.animations.length;u++)s=e.animations[u],i=this._animEvaluator.findClip(`${s.name}.previous.${d}`),i||(i=this._animEvaluator.findClip(s.name),i.name=`${s.name}.previous.${d}`),d!==this._transitionPreviousStates.length-1&&i.pause()}}this._isTransitioning=!0,this._totalTransitionTime=t.time,this._currTransitionTime=0,this._transitionInterruptionSource=t.interruptionSource;const r=this.activeState,n=t.transitionOffset&&t.transitionOffset>0&&t.transitionOffset<1;let a=0,o=0;if(n){const h=r.timelineDuration*t.transitionOffset;a=h,o=h}this._timeInState=a,this._timeInStateBefore=o;for(let h=0;h<r.animations.length;h++){if(i=this._animEvaluator.findClip(r.animations[h].name),i)i.reset();else{const d=Number.isFinite(r.animations[h].speed)?r.animations[h].speed:r.speed;i=new Qh(r.animations[h].animTrack,this._timeInState,d,!0,r.loop,this._eventHandler),i.name=r.animations[h].name,this._animEvaluator.addClip(i)}if(t.time>0?i.blendWeight=0:i.blendWeight=r.animations[h].normalizedWeight,i.play(),n)i.time=r.timelineDuration*t.transitionOffset;else{const d=r.speed>=0?0:this.activeStateDuration;i.time=d}}}_transitionToState(t){if(!this._findState(t))return;let e=this._findTransition(this._activeStateName,t);e||(this._animEvaluator.removeClips(),e=new ec({from:null,to:t})),this.updateStateFromTransition(e)}assignAnimation(t,e,s,i){const r=t.split(".");let n=this._findState(r[0]);n||(n=new tg(this,r[0],s),this._states[r[0]]=n,this._stateNames.push(r[0])),n.addAnimation(r,e),this._animEvaluator.updateClipTrack(n.name,e),s!==void 0&&(n.speed=s),i!==void 0&&(n.loop=i),!this._playing&&this._activate&&this.playable&&this.play(),this._activeStateDurationDirty=!0}removeNodeAnimations(t){if(Jh.indexOf(t)!==-1)return!1;const e=this._findState(t);return e?(e.animations=[],!0):(b.error("Attempting to unassign animation tracks from a state that does not exist.",t),!1)}play(t){t&&this._transitionToState(t),this._playing=!0}pause(){this._playing=!1}reset(){this._previousStateName=null,this._activeStateName=uo,this._playing=!1,this._currTransitionTime=1,this._totalTransitionTime=1,this._isTransitioning=!1,this._timeInState=0,this._timeInStateBefore=0,this._animEvaluator.removeClips()}rebind(){this._animEvaluator.rebind()}update(t){if(!this._playing)return;let e,s,i;(this.activeState.loop||this._timeInState<this.activeStateDuration)&&(this._timeInStateBefore=this._timeInState,this._timeInState+=t*this.activeState.speed,!this.activeState.loop&&this._timeInState>this.activeStateDuration&&(this._timeInState=this.activeStateDuration,t=this.activeStateDuration-this._timeInStateBefore));const r=this._findTransition(this._activeStateName);if(r&&this.updateStateFromTransition(r),this._isTransitioning)if(this._currTransitionTime+=t,this._currTransitionTime<=this._totalTransitionTime){const n=this._totalTransitionTime!==0?this._currTransitionTime/this._totalTransitionTime:1;for(let a=0;a<this._transitionPreviousStates.length;a++){e=this._findState(this._transitionPreviousStates[a].name);const o=this._transitionPreviousStates[a].weight;for(let h=0;h<e.animations.length;h++)s=e.animations[h],i=this._animEvaluator.findClip(`${s.name}.previous.${a}`),i&&(i.blendWeight=(1-n)*s.normalizedWeight*o)}e=this.activeState;for(let a=0;a<e.animations.length;a++)s=e.animations[a],this._animEvaluator.findClip(s.name).blendWeight=n*s.normalizedWeight}else{this._isTransitioning=!1;const n=this.activeStateAnimations.length,a=this._animEvaluator.clips.length;for(let o=0;o<a-n;o++)this._animEvaluator.removeClip(0);this._transitionPreviousStates=[],e=this.activeState;for(let o=0;o<e.animations.length;o++)s=e.animations[o],i=this._animEvaluator.findClip(s.name),i&&(i.blendWeight=s.normalizedWeight)}else if(this.activeState._blendTree.constructor!==Wo){e=this.activeState;for(let n=0;n<e.animations.length;n++)s=e.animations[n],i=this._animEvaluator.findClip(s.name),i&&(i.blendWeight=s.normalizedWeight,s.parent.syncAnimations&&(i.speed=s.speed))}this._animEvaluator.update(t,this.activeState.hasAnimations)}}const Jd=new W,Zl=new A,io=new ee,ro=new Y,no=new ie;class Si extends tr{constructor(t,e,s,i,r){super(e),this.animComponent=t,this._mask=i,this.layerName=s,this.layerIndex=r}static _packFloat(t){return t[0]}static _packBoolean(t){return!!t[0]}static _packVec2(t){return Jd.x=t[0],Jd.y=t[1],Jd}static _packVec3(t){return Zl.x=t[0],Zl.y=t[1],Zl.z=t[2],Zl}static _packVec4(t){return io.x=t[0],io.y=t[1],io.z=t[2],io.w=t[3],io}static _packColor(t){return ro.r=t[0],ro.g=t[1],ro.b=t[2],ro.a=t[3],ro}static _packQuat(t){return no.x=t[0],no.y=t[1],no.z=t[2],no.w=t[3],no}resolve(t){const e=Xr.encode(t.entityPath,t.component,t.propertyPath);let s=this.targetCache[e];if(s)return s;let i,r,n;switch(t.component){case"entity":i=this._getEntityFromHierarchy(t.entityPath),n=Xr.encode(i.path,"entity",t.propertyPath),r=i;break;case"graph":if(r=this.findNode(t),!r)return null;n=Xr.encode(r.path,"graph",t.propertyPath);break;default:if(i=this._getEntityFromHierarchy(t.entityPath),r=i.findComponent(t.component),!r)return null;n=Xr.encode(i.path,t.component,t.propertyPath);break}return s=this._createAnimTargetForProperty(r,t.propertyPath,n),this.targetCache[e]=s,s}update(t){const e=this.activeNodes;if(e)for(let s=0;s<e.length;s++)e[s]._dirtifyLocal()}_getEntityFromHierarchy(t){if(!this.animComponent.entity.name===t[0])return null;const e=this.animComponent.entity;return t.length===1?e:e._parent.findByPath(t)}_resolvePath(t,e,s){const i=e.length-(s?0:1);for(let r=0;r<i;r++)t=t[e[r]];return t}_setter(t,e,s){const i=this._resolvePath(t,e),r=e[e.length-1],n=`set${r.substring(0,1).toUpperCase()}${r.substring(1)}`;if(i[n]){let h=i[`get${r.substring(0,1).toUpperCase()}${r.substring(1)}`].bind(i)();h=[h.x,h.y,h.z,h.w];const d=i[n].bind(i);return{set:u=>{d(s(u))},get:()=>h}}const a=i[r];if(typeof a=="object"&&a.hasOwnProperty("copy"))return function(o){a.copy(s(o))};if([W,A,ee,Y,ie].indexOf(i.constructor)!==-1&&e.length>1){const o=e.length>2?this._resolvePath(t,e.slice(0,-1)):t,h=e[e.length-2];return function(d){i[r]=s(d),o[h]=i}}return function(o){i[r]=s(o)}}_createAnimTargetForProperty(t,e,s){if(this.handlers&&e[0].startsWith("weight."))return this.handlers.weight(t,e[0].replace("weight.",""));if(this.handlers&&e[0]==="material"&&e.length===2){const o=e[1];if(o.endsWith("Map"))return this.handlers.materialTexture(t,o)}const i=this._resolvePath(t,e,!0);if(typeof i>"u")return null;let r,n,a;if(typeof i=="number")r=this._setter(t,e,Si._packFloat),n="vector",a=1;else if(typeof i=="boolean")r=this._setter(t,e,Si._packBoolean),n="vector",a=1;else if(typeof i=="object")switch(i.constructor){case W:r=this._setter(t,e,Si._packVec2),n="vector",a=2;break;case A:r=this._setter(t,e,Si._packVec3),n="vector",a=3;break;case ee:r=this._setter(t,e,Si._packVec4),n="vector",a=4;break;case Y:r=this._setter(t,e,Si._packColor),n="vector",a=4;break;case ie:r=this._setter(t,e,Si._packQuat),n="quaternion",a=4;break;default:return null}return e.indexOf("material")!==-1?new tf(o=>{r(o),t.material.update()},n,a,s):new tf(r,n,a,s)}rebind(){this.targetCache={},this.visitedFallbackGraphPaths={},this.animComponent.rootBone?this.graph=this.animComponent.rootBone:this.graph=this.animComponent.entity;const t={},e=function(s){t[s.name]=s;for(let i=0;i<s.children.length;++i)e(s.children[i])};e(this.graph),this.nodes=t}}class $P{constructor(t,e,s,i=1,r=j0){c(this,"_name");c(this,"_controller");c(this,"_component");c(this,"_weight");c(this,"_blendType");c(this,"_mask",null);c(this,"_blendTime",0);c(this,"_blendTimeElapsed",0);c(this,"_startingWeight",0);c(this,"_targetWeight",0);this._name=t,this._controller=e,this._component=s,this._weight=i,this._blendType=r}get name(){return this._name}set playing(t){this._controller.playing=t}get playing(){return this._controller.playing}get playable(){return this._controller.playable}get activeState(){return this._controller.activeStateName}get previousState(){return this._controller.previousStateName}get activeStateProgress(){return this._controller.activeStateProgress}get activeStateDuration(){return this._controller.activeStateDuration}set activeStateCurrentTime(t){const e=this._controller,s=e.playing;e.playing=!0,e.activeStateCurrentTime=t,s||e.update(0),e.playing=s}get activeStateCurrentTime(){return this._controller.activeStateCurrentTime}get transitioning(){return this._controller.transitioning}get transitionProgress(){return this.transitioning?this._controller.transitionProgress:null}get states(){return this._controller.states}set weight(t){this._weight=t,this._component.dirtifyTargets()}get weight(){return this._weight}set blendType(t){t!==this._blendType&&(this._blendType=t,this._controller.normalizeWeights&&this._component.rebind())}get blendType(){return this._blendType}set mask(t){this._controller.assignMask(t)&&this._component.rebind(),this._mask=t}get mask(){return this._mask}play(t){this._controller.play(t)}pause(){this._controller.pause()}reset(){this._controller.reset()}rebind(){this._controller.rebind()}update(t){this._blendTime&&(this._blendTimeElapsed<this._blendTime?(this.weight=z.lerp(this._startingWeight,this._targetWeight,this._blendTimeElapsed/this._blendTime),this._blendTimeElapsed+=t):(this.weight=this._targetWeight,this._blendTime=0,this._blendTimeElapsed=0,this._startingWeight=0,this._targetWeight=0)),this._controller.update(t)}blendToWeight(t,e){this._startingWeight=this.weight,this._targetWeight=t,this._blendTime=Math.max(0,e),this._blendTimeElapsed=0}assignAnimation(t,e,s,i){if(!(e instanceof ki)){b.error("assignAnimation: animTrack supplied to function was not of type AnimTrack");return}this._controller.assignAnimation(t,e,s,i),this._controller._transitions.length===0&&this._controller._transitions.push(new ec({from:"START",to:t})),this._component.activate&&this._component.playable&&(this._component.playing=!0)}removeNodeAnimations(t){this._controller.removeNodeAnimations(t)&&(this._component.playing=!1)}getAnimationAsset(t){return this._component.animationAssets[`${this.name}:${t}`]}transition(t,e=0,s=null){this._controller.updateStateFromTransition(new ec({from:this._controller.activeStateName,to:t,time:e,transitionOffset:s}))}}class Sh{constructor(t){if(this._layers=[],this._parameters={},Array.isArray(t.layers))this._layers=t.layers;else for(const e in t.layers){const s=t.layers[e],i={name:s.name,blendType:s.blendType,weight:s.weight,states:[],transitions:[]};for(let r=0;r<s.states.length;r++)i.states.push(t.states[s.states[r]]);for(let r=0;r<s.transitions.length;r++){const n=t.transitions[s.transitions[r]];if(n.conditions&&!Array.isArray(n.conditions)){const a=Object.keys(n.conditions),o=[];for(let h=0;h<a.length;h++){const d=n.conditions[a[h]];d.parameterName&&o.push(d)}n.conditions=o}Number.isInteger(n.from)&&(n.from=t.states[n.from].name),Number.isInteger(n.to)&&(n.to=t.states[n.to].name),i.transitions.push(n)}this._layers.push(i)}for(const e in t.parameters){const s=t.parameters[e];this._parameters[s.name]={type:s.type,value:s.value}}}get parameters(){return Object.assign({},this._parameters)}get layers(){return this._layers}}class Q0 extends pe{constructor(){super(...arguments);c(this,"_stateGraphAsset",null);c(this,"_animationAssets",{});c(this,"_speed",1);c(this,"_activate",!0);c(this,"_playing",!1);c(this,"_rootBone",null);c(this,"_stateGraph",null);c(this,"_layers",[]);c(this,"_layerIndices",{});c(this,"_parameters",{});c(this,"_targets",{});c(this,"_consumedTriggers",new Set);c(this,"_normalizeWeights",!1);c(this,"findParameter",e=>this._parameters[e]);c(this,"consumeTrigger",e=>{this._consumedTriggers.add(e)})}set stateGraphAsset(e){if(e===null){this.removeStateGraph();return}this._stateGraphAsset&&this.system.app.assets.get(this._stateGraphAsset).off("change",this._onStateGraphAssetChangeEvent,this);let s,i;e instanceof he?(s=e.id,i=this.system.app.assets.get(s),i||(this.system.app.assets.add(e),i=this.system.app.assets.get(s))):(s=e,i=this.system.app.assets.get(s)),!(!i||this._stateGraphAsset===s)&&(i.resource?(this._stateGraph=i.resource,this.loadStateGraph(this._stateGraph),i.on("change",this._onStateGraphAssetChangeEvent,this)):(i.once("load",r=>{this._stateGraph=r.resource,this.loadStateGraph(this._stateGraph)}),i.on("change",this._onStateGraphAssetChangeEvent,this),this.system.app.assets.load(i)),this._stateGraphAsset=s)}get stateGraphAsset(){return this._stateGraphAsset}set normalizeWeights(e){this._normalizeWeights=e,this.unbind()}get normalizeWeights(){return this._normalizeWeights}set animationAssets(e){this._animationAssets=e,this.loadAnimationAssets()}get animationAssets(){return this._animationAssets}set speed(e){this._speed=e}get speed(){return this._speed}set activate(e){this._activate=e}get activate(){return this._activate}set playing(e){this._playing=e}get playing(){return this._playing}set rootBone(e){if(typeof e=="string"){const s=this.entity.root.findByGuid(e);b.assert(s,`rootBone entity for supplied guid:${e} cannot be found in the scene`),this._rootBone=s}else e instanceof je?this._rootBone=e:this._rootBone=null;this.rebind()}get rootBone(){return this._rootBone}set stateGraph(e){this._stateGraph=e}get stateGraph(){return this._stateGraph}get layers(){return this._layers}set layerIndices(e){this._layerIndices=e}get layerIndices(){return this._layerIndices}set parameters(e){this._parameters=e}get parameters(){return this._parameters}set targets(e){this._targets=e}get targets(){return this._targets}get playable(){for(let e=0;e<this._layers.length;e++)if(!this._layers[e].playable)return!1;return!0}get baseLayer(){return this._layers.length>0?this._layers[0]:null}_onStateGraphAssetChangeEvent(e){const s=this.animationAssets,i=this.layers.map(r=>r.mask);this.removeStateGraph(),this._stateGraph=new Sh(e._data),this.loadStateGraph(this._stateGraph),this.animationAssets=s,this.loadAnimationAssets(),this.layers.forEach((r,n)=>{r.mask=i[n]}),this.rebind()}dirtifyTargets(){const e=Object.values(this._targets);for(let s=0;s<e.length;s++)e[s].dirty=!0}_addLayer({name:e,states:s,transitions:i,weight:r,mask:n,blendType:a}){let o;this.rootBone?o=this.rootBone:o=this.entity;const h=this._layers.length,d=new Si(this,o,e,n,h),u=new Y0(d),f=new WP(u,s,i,this._activate,this,this.findParameter,this.consumeTrigger);return this._layers.push(new $P(e,f,this,r,a)),this._layerIndices[e]=h,this._layers[h]}addLayer(e,s,i,r){const n=this.findAnimationLayer(e);if(n)return n;const a=[{name:"START",speed:1}],o=[];return this._addLayer({name:e,states:a,transitions:o,weight:s,mask:i,blendType:r})}_assignParameters(e){this._parameters={};const s=Object.keys(e.parameters);for(let i=0;i<s.length;i++){const r=s[i];this._parameters[r]={type:e.parameters[r].type,value:e.parameters[r].value}}}loadStateGraph(e){this._stateGraph=e,this._assignParameters(e),this._layers=[];let s=!1;for(let i=0;i<e.layers.length;i++){const r=e.layers[i];this._addLayer({...r}),r.states.some(n=>n.blendTree)&&(s=!0)}s||this.setupAnimationAssets()}setupAnimationAssets(){for(let e=0;e<this._layers.length;e++){const s=this._layers[e],i=s.name;for(let r=0;r<s.states.length;r++){const n=s.states[r];if(Jh.indexOf(n)===-1){const a=`${i}:${n}`;this._animationAssets[a]||(this._animationAssets[a]={asset:null})}}}this.loadAnimationAssets()}loadAnimationAssets(){for(let e=0;e<this._layers.length;e++){const s=this._layers[e];for(let i=0;i<s.states.length;i++){const r=s.states[i];if(Jh.indexOf(r)!==-1)continue;const n=this._animationAssets[`${s.name}:${r}`];if(!n||!n.asset){this.findAnimationLayer(s.name).assignAnimation(r,ki.EMPTY);continue}const a=n.asset,o=this.system.app.assets.get(a);o&&(o.resource?this.onAnimationAssetLoaded(s.name,r,o):(o.once("load",(function(h,d){return(function(u){this.onAnimationAssetLoaded(h,d,u)}).bind(this)}).bind(this)(s.name,r)),this.system.app.assets.load(o)))}}}onAnimationAssetLoaded(e,s,i){this.findAnimationLayer(e).assignAnimation(s,i.resource)}removeStateGraph(){this._stateGraph=null,this._stateGraphAsset=null,this._animationAssets={},this._layers=[],this._layerIndices={},this._parameters={},this._playing=!1,this.unbind(),this._targets={}}reset(){this._assignParameters(this._stateGraph);for(let e=0;e<this._layers.length;e++){const s=this._layers[e].playing;this._layers[e].reset(),this._layers[e].playing=s}}unbind(){this._normalizeWeights||Object.keys(this._targets).forEach(e=>{this._targets[e].unbind()})}rebind(){this._targets={};for(let e=0;e<this._layers.length;e++)this._layers[e].rebind()}findAnimationLayer(e){const s=this._layerIndices[e];return this._layers[s]||null}addAnimationState(e,s,i=1,r=!0,n="Base"){var o;this._stateGraph||this.loadStateGraph(new Sh({layers:[{name:n,states:[{name:"START",speed:1},{name:e,speed:i,loop:r,defaultState:!0}],transitions:[{from:"START",to:e}]}],parameters:{}}));const a=this.findAnimationLayer(n);a?a.assignAnimation(e,s,i,r):(o=this.addLayer(n))==null||o.assignAnimation(e,s,i,r)}assignAnimation(e,s,i,r=1,n=!0){if(!this._stateGraph&&e.indexOf(".")===-1){this.loadStateGraph(new Sh({layers:[{name:"Base",states:[{name:"START",speed:1},{name:e,speed:r,loop:n,defaultState:!0}],transitions:[{from:"START",to:e}]}],parameters:{}})),this.baseLayer.assignAnimation(e,s);return}const a=i?this.findAnimationLayer(i):this.baseLayer;if(!a){b.error("assignAnimation: Trying to assign an anim track to a layer that doesn't exist");return}a.assignAnimation(e,s,r,n)}removeNodeAnimations(e,s){const i=s?this.findAnimationLayer(s):this.baseLayer;if(!i){b.error("removeStateAnimations: Trying to remove animation tracks from a state before the state graph has been loaded. Have you called loadStateGraph?");return}i.removeNodeAnimations(e)}getParameterValue(e,s){const i=this._parameters[e];if(i&&i.type===s)return i.value;b.log(`Cannot get parameter value. No parameter found in anim controller named "${e}" of type "${s}"`)}setParameterValue(e,s,i){const r=this._parameters[e];if(r&&r.type===s){r.value=i;return}b.log(`Cannot set parameter value. No parameter found in anim controller named "${e}" of type "${s}"`)}getFloat(e){return this.getParameterValue(e,J_)}setFloat(e,s){this.setParameterValue(e,J_,s)}getInteger(e){return this.getParameterValue(e,Q_)}setInteger(e,s){typeof s=="number"&&s%1===0?this.setParameterValue(e,Q_,s):b.error("Attempting to assign non integer value to integer parameter",e,s)}getBoolean(e){return this.getParameterValue(e,eg)}setBoolean(e,s){this.setParameterValue(e,eg,!!s)}getTrigger(e){return this.getParameterValue(e,xh)}setTrigger(e,s=!1){this.setParameterValue(e,xh,!0),s&&this._consumedTriggers.add(e)}resetTrigger(e){this.setParameterValue(e,xh,!1)}onBeforeRemove(){Number.isFinite(this._stateGraphAsset)&&this.system.app.assets.get(this._stateGraphAsset).off("change",this._onStateGraphAssetChangeEvent,this)}update(e){for(let s=0;s<this.layers.length;s++)this.layers[s].update(e*this.speed);this._consumedTriggers.forEach(s=>{this.parameters[s].value=!1}),this._consumedTriggers.clear()}resolveDuplicatedEntityReferenceProperties(e,s){e.rootBone&&s[e.rootBone.getGuid()]?this.rootBone=s[e.rootBone.getGuid()]:this.rebind()}}class qP{constructor(){this.enabled=!0}}const af=["enabled"];class XP extends Qe{constructor(t){super(t),this.id="anim",this.ComponentType=Q0,this.DataType=qP,this.schema=af,this.on("beforeremove",this.onBeforeRemove,this),this.app.systems.on("animationUpdate",this.onAnimationUpdate,this)}initializeComponentData(t,e,s){super.initializeComponentData(t,e,af);const i=["animationAssets","stateGraph","layers","masks"];Object.keys(e).forEach(r=>{i.includes(r)||(t[r]=e[r])}),e.stateGraph&&(t.stateGraph=e.stateGraph,t.loadStateGraph(t.stateGraph)),e.layers&&e.layers.forEach((r,n)=>{r._controller.states.forEach(a=>{r._controller._states[a]._animationList.forEach(o=>{if(!o.animTrack||o.animTrack===ki.EMPTY){const h=this.app.assets.get(r._component._animationAssets[`${r.name}:${o.name}`].asset);h&&!h.loaded&&h.once("load",()=>{t.layers[n].assignAnimation(o.name,h.resource)})}else t.layers[n].assignAnimation(o.name,o.animTrack)})})}),e.animationAssets&&(t.animationAssets=Object.assign(t.animationAssets,e.animationAssets)),e.masks&&Object.keys(e.masks).forEach(r=>{if(t.layers[r]){const n=e.masks[r].mask,a={};Object.keys(n).forEach(o=>{a[decodeURI(o)]=n[o]}),t.layers[r].mask=a}})}onAnimationUpdate(t){const e=this.store;for(const s in e)if(e.hasOwnProperty(s)){const i=e[s].entity.anim;i.data.enabled&&i.entity.enabled&&i.playing&&i.update(t)}}cloneComponent(t,e){let s;(!t.anim.rootBone||t.anim.rootBone===t)&&(s={},t.anim.layers.forEach((r,n)=>{if(r.mask){const a={};Object.keys(r.mask).forEach(o=>{const h=o.split("/");h.shift();const d=[e.name,...h].join("/");a[d]=r.mask[o]}),s[n]={mask:a}}}));const i={enabled:t.anim.enabled,stateGraphAsset:t.anim.stateGraphAsset,animationAssets:t.anim.animationAssets,speed:t.anim.speed,activate:t.anim.activate,playing:t.anim.playing,rootBone:t.anim.rootBone,stateGraph:t.anim.stateGraph,layers:t.anim.layers,layerIndices:t.anim.layerIndices,parameters:t.anim.parameters,normalizeWeights:t.anim.normalizeWeights,masks:s};return this.addComponent(e,i)}onBeforeRemove(t,e){e.onBeforeRemove()}destroy(){super.destroy(),this.app.systems.off("animationUpdate",this.onAnimationUpdate,this)}}pe._buildAccessors(Q0.prototype,af);class J0 extends pe{setCurrentListener(){if(this.enabled&&this.entity.audiolistener&&this.entity.enabled){this.system.current=this.entity;const t=this.system.current.getPosition();this.system.manager.listener.setPosition(t)}}onEnable(){this.setCurrentListener()}onDisable(){this.system.current===this.entity&&(this.system.current=null)}}class jP{constructor(){this.enabled=!0}}const ex=["enabled"];class YP extends Qe{constructor(t){super(t),this.id="audiolistener",this.ComponentType=J0,this.DataType=jP,this.schema=ex,this.manager=t.soundManager,b.assert(this.manager,"AudioListenerComponentSystem cannot be created without sound manager"),this.current=null,this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){s=["enabled"],super.initializeComponentData(t,e,s)}onUpdate(t){if(this.current){const e=this.current.getPosition();this.manager.listener.setPosition(e);const s=this.current.getWorldTransform();this.manager.listener.setOrientation(s)}}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}pe._buildAccessors(J0.prototype,ex);const of=0,sg=1,vh="group",lf="image",tx="text",bh="stretch",KP="contain",ZP="cover",Je={DEFAULT:"DEFAULT",HOVER:"HOVER",PRESSED:"PRESSED",INACTIVE:"INACTIVE"},fl={};fl[Je.DEFAULT]="_defaultTint";fl[Je.HOVER]="hoverTint";fl[Je.PRESSED]="pressedTint";fl[Je.INACTIVE]="inactiveTint";const pl={};pl[Je.DEFAULT]="_defaultSpriteAsset";pl[Je.HOVER]="hoverSpriteAsset";pl[Je.PRESSED]="pressedSpriteAsset";pl[Je.INACTIVE]="inactiveSpriteAsset";const ml={};ml[Je.DEFAULT]="_defaultSpriteFrame";ml[Je.HOVER]="hoverSpriteFrame";ml[Je.PRESSED]="pressedSpriteFrame";ml[Je.INACTIVE]="inactiveSpriteFrame";class _t extends pe{constructor(e,s){super(e,s);c(this,"_visualState",Je.DEFAULT);c(this,"_isHovering",!1);c(this,"_hoveringCounter",0);c(this,"_isPressed",!1);c(this,"_defaultTint",new Y(1,1,1,1));c(this,"_defaultSpriteAsset",null);c(this,"_defaultSpriteFrame",0);c(this,"_imageEntity",null);c(this,"_evtElementAdd",null);c(this,"_evtImageEntityElementAdd",null);c(this,"_evtImageEntityElementRemove",null);c(this,"_evtImageEntityElementColor",null);c(this,"_evtImageEntityElementOpacity",null);c(this,"_evtImageEntityElementSpriteAsset",null);c(this,"_evtImageEntityElementSpriteFrame",null);this._visualState=Je.DEFAULT,this._isHovering=!1,this._hoveringCounter=0,this._isPressed=!1,this._defaultTint=new Y(1,1,1,1),this._defaultSpriteAsset=null,this._defaultSpriteFrame=0,this._toggleLifecycleListeners("on",e)}get data(){const e=this.system.store[this.entity.getGuid()];return e?e.data:null}set enabled(e){this._setValue("enabled",e)}get enabled(){return this.data.enabled}set active(e){this._setValue("active",e)}get active(){return this.data.active}set imageEntity(e){if(this._imageEntity!==e){const s=typeof e=="string";if(this._imageEntity&&s&&this._imageEntity.getGuid()===e)return;this._imageEntity&&this._imageEntityUnsubscribe(),e instanceof Oe?this._imageEntity=e:s?this._imageEntity=this.system.app.getEntityFromIndex(e)||null:this._imageEntity=null,this._imageEntity&&this._imageEntitySubscribe(),this._imageEntity?this.data.imageEntity=this._imageEntity.getGuid():s&&e&&(this.data.imageEntity=e)}}get imageEntity(){return this._imageEntity}set hitPadding(e){this._setValue("hitPadding",e)}get hitPadding(){return this.data.hitPadding}set transitionMode(e){this._setValue("transitionMode",e)}get transitionMode(){return this.data.transitionMode}set hoverTint(e){this._setValue("hoverTint",e)}get hoverTint(){return this.data.hoverTint}set pressedTint(e){this._setValue("pressedTint",e)}get pressedTint(){return this.data.pressedTint}set inactiveTint(e){this._setValue("inactiveTint",e)}get inactiveTint(){return this.data.inactiveTint}set fadeDuration(e){this._setValue("fadeDuration",e)}get fadeDuration(){return this.data.fadeDuration}set hoverSpriteAsset(e){this._setValue("hoverSpriteAsset",e)}get hoverSpriteAsset(){return this.data.hoverSpriteAsset}set hoverSpriteFrame(e){this._setValue("hoverSpriteFrame",e)}get hoverSpriteFrame(){return this.data.hoverSpriteFrame}set pressedSpriteAsset(e){this._setValue("pressedSpriteAsset",e)}get pressedSpriteAsset(){return this.data.pressedSpriteAsset}set pressedSpriteFrame(e){this._setValue("pressedSpriteFrame",e)}get pressedSpriteFrame(){return this.data.pressedSpriteFrame}set inactiveSpriteAsset(e){this._setValue("inactiveSpriteAsset",e)}get inactiveSpriteAsset(){return this.data.inactiveSpriteAsset}set inactiveSpriteFrame(e){this._setValue("inactiveSpriteFrame",e)}get inactiveSpriteFrame(){return this.data.inactiveSpriteFrame}_setValue(e,s){const i=this.data,r=i[e];i[e]=s,this.fire("set",e,r,s)}_toggleLifecycleListeners(e,s){var i;this[e]("set_active",this._onSetActive,this),this[e]("set_transitionMode",this._onSetTransitionMode,this),this[e]("set_hoverTint",this._onSetTransitionValue,this),this[e]("set_pressedTint",this._onSetTransitionValue,this),this[e]("set_inactiveTint",this._onSetTransitionValue,this),this[e]("set_hoverSpriteAsset",this._onSetTransitionValue,this),this[e]("set_hoverSpriteFrame",this._onSetTransitionValue,this),this[e]("set_pressedSpriteAsset",this._onSetTransitionValue,this),this[e]("set_pressedSpriteFrame",this._onSetTransitionValue,this),this[e]("set_inactiveSpriteAsset",this._onSetTransitionValue,this),this[e]("set_inactiveSpriteFrame",this._onSetTransitionValue,this),e==="on"?this._evtElementAdd=this.entity.on("element:add",this._onElementComponentAdd,this):((i=this._evtElementAdd)==null||i.off(),this._evtElementAdd=null)}_onSetActive(e,s,i){s!==i&&this._updateVisualState()}_onSetTransitionMode(e,s,i){s!==i&&(this._cancelTween(),this._resetToDefaultVisualState(s),this._forceReapplyVisualState())}_onSetTransitionValue(e,s,i){s!==i&&this._forceReapplyVisualState()}_imageEntitySubscribe(){this._evtImageEntityElementAdd=this._imageEntity.on("element:add",this._onImageElementGain,this),this._imageEntity.element&&this._onImageElementGain()}_imageEntityUnsubscribe(){var e,s;(e=this._evtImageEntityElementAdd)==null||e.off(),this._evtImageEntityElementAdd=null,(s=this._imageEntity)!=null&&s.element&&this._onImageElementLose()}_imageEntityElementSubscribe(){const e=this._imageEntity.element;this._evtImageEntityElementRemove=e.once("beforeremove",this._onImageElementLose,this),this._evtImageEntityElementColor=e.on("set:color",this._onSetColor,this),this._evtImageEntityElementOpacity=e.on("set:opacity",this._onSetOpacity,this),this._evtImageEntityElementSpriteAsset=e.on("set:spriteAsset",this._onSetSpriteAsset,this),this._evtImageEntityElementSpriteFrame=e.on("set:spriteFrame",this._onSetSpriteFrame,this)}_imageEntityElementUnsubscribe(){var e,s,i,r,n;(e=this._evtImageEntityElementRemove)==null||e.off(),this._evtImageEntityElementRemove=null,(s=this._evtImageEntityElementColor)==null||s.off(),this._evtImageEntityElementColor=null,(i=this._evtImageEntityElementOpacity)==null||i.off(),this._evtImageEntityElementOpacity=null,(r=this._evtImageEntityElementSpriteAsset)==null||r.off(),this._evtImageEntityElementSpriteAsset=null,(n=this._evtImageEntityElementSpriteFrame)==null||n.off(),this._evtImageEntityElementSpriteFrame=null}_onElementComponentRemove(){this._toggleHitElementListeners("off")}_onElementComponentAdd(){this._toggleHitElementListeners("on")}_onImageElementLose(){this._imageEntityElementUnsubscribe(),this._cancelTween(),this._resetToDefaultVisualState(this.transitionMode)}_onImageElementGain(){this._imageEntityElementSubscribe(),this._storeDefaultVisualState(),this._forceReapplyVisualState()}_toggleHitElementListeners(e){if(this.entity.element){const s=e==="on";if(s&&this._hasHitElementListeners)return;this.entity.element[e]("beforeremove",this._onElementComponentRemove,this),this.entity.element[e]("mouseenter",this._onMouseEnter,this),this.entity.element[e]("mouseleave",this._onMouseLeave,this),this.entity.element[e]("mousedown",this._onMouseDown,this),this.entity.element[e]("mouseup",this._onMouseUp,this),this.entity.element[e]("touchstart",this._onTouchStart,this),this.entity.element[e]("touchend",this._onTouchEnd,this),this.entity.element[e]("touchleave",this._onTouchLeave,this),this.entity.element[e]("touchcancel",this._onTouchCancel,this),this.entity.element[e]("selectstart",this._onSelectStart,this),this.entity.element[e]("selectend",this._onSelectEnd,this),this.entity.element[e]("selectenter",this._onSelectEnter,this),this.entity.element[e]("selectleave",this._onSelectLeave,this),this.entity.element[e]("click",this._onClick,this),this._hasHitElementListeners=s}}_storeDefaultVisualState(){var s;const e=(s=this._imageEntity)==null?void 0:s.element;!e||e.type===vh||(this._storeDefaultColor(e.color),this._storeDefaultOpacity(e.opacity),this._storeDefaultSpriteAsset(e.spriteAsset),this._storeDefaultSpriteFrame(e.spriteFrame))}_storeDefaultColor(e){this._defaultTint.r=e.r,this._defaultTint.g=e.g,this._defaultTint.b=e.b}_storeDefaultOpacity(e){this._defaultTint.a=e}_storeDefaultSpriteAsset(e){this._defaultSpriteAsset=e}_storeDefaultSpriteFrame(e){this._defaultSpriteFrame=e}_onSetColor(e){this._isApplyingTint||(this._storeDefaultColor(e),this._forceReapplyVisualState())}_onSetOpacity(e){this._isApplyingTint||(this._storeDefaultOpacity(e),this._forceReapplyVisualState())}_onSetSpriteAsset(e){this._isApplyingSprite||(this._storeDefaultSpriteAsset(e),this._forceReapplyVisualState())}_onSetSpriteFrame(e){this._isApplyingSprite||(this._storeDefaultSpriteFrame(e),this._forceReapplyVisualState())}_onMouseEnter(e){this._isHovering=!0,this._updateVisualState(),this._fireIfActive("mouseenter",e)}_onMouseLeave(e){this._isHovering=!1,this._isPressed=!1,this._updateVisualState(),this._fireIfActive("mouseleave",e)}_onMouseDown(e){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("mousedown",e)}_onMouseUp(e){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("mouseup",e)}_onTouchStart(e){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("touchstart",e)}_onTouchEnd(e){e.event.preventDefault(),this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchend",e)}_onTouchLeave(e){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchleave",e)}_onTouchCancel(e){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchcancel",e)}_onSelectStart(e){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("selectstart",e)}_onSelectEnd(e){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("selectend",e)}_onSelectEnter(e){this._hoveringCounter++,this._hoveringCounter===1&&(this._isHovering=!0,this._updateVisualState()),this._fireIfActive("selectenter",e)}_onSelectLeave(e){this._hoveringCounter--,this._hoveringCounter===0&&(this._isHovering=!1,this._isPressed=!1,this._updateVisualState()),this._fireIfActive("selectleave",e)}_onClick(e){this._fireIfActive("click",e)}_fireIfActive(e,s){this.data.active&&this.fire(e,s)}_updateVisualState(e){const s=this._visualState,i=this._determineVisualState();if((s!==i||e)&&this.enabled)switch(this._visualState=i,s===Je.HOVER&&this._fireIfActive("hoverend"),s===Je.PRESSED&&this._fireIfActive("pressedend"),i===Je.HOVER&&this._fireIfActive("hoverstart"),i===Je.PRESSED&&this._fireIfActive("pressedstart"),this.transitionMode){case of:{const r=fl[this._visualState],n=this[r];this._applyTint(n);break}case sg:{const r=pl[this._visualState],n=ml[this._visualState],a=this[r],o=this[n];this._applySprite(a,o);break}}}_forceReapplyVisualState(){this._updateVisualState(!0)}_resetToDefaultVisualState(e){var s;if((s=this._imageEntity)!=null&&s.element)switch(e){case of:this._cancelTween(),this._applyTintImmediately(this._defaultTint);break;case sg:this._applySprite(this._defaultSpriteAsset,this._defaultSpriteFrame);break}}_determineVisualState(){if(this.active){if(this._isPressed)return Je.PRESSED;if(this._isHovering)return Je.HOVER}else return Je.INACTIVE;return Je.DEFAULT}_applySprite(e,s){var r;const i=(r=this._imageEntity)==null?void 0:r.element;i&&(s=s||0,this._isApplyingSprite=!0,i.spriteAsset!==e&&(i.spriteAsset=e),i.spriteFrame!==s&&(i.spriteFrame=s),this._isApplyingSprite=!1)}_applyTint(e){this._cancelTween(),this.fadeDuration===0?this._applyTintImmediately(e):this._applyTintWithTween(e)}_applyTintImmediately(e){var r;const s=(r=this._imageEntity)==null?void 0:r.element;if(!e||!s||s.type===vh)return;const i=ig(e);this._isApplyingTint=!0,i.equals(s.color)||(s.color=i),s.opacity!==e.a&&(s.opacity=e.a),this._isApplyingTint=!1}_applyTintWithTween(e){var a;const s=(a=this._imageEntity)==null?void 0:a.element;if(!e||!s||s.type===vh)return;const i=ig(e),r=s.color,n=s.opacity;i.equals(r)&&e.a===n||(this._tweenInfo={startTime:ae(),from:new Y(r.r,r.g,r.b,n),to:e.clone(),lerpColor:new Y})}_updateTintTween(){const e=ae()-this._tweenInfo.startTime;let s=this.fadeDuration===0?1:e/this.fadeDuration;if(s=z.clamp(s,0,1),Math.abs(s-1)>1e-5){const i=this._tweenInfo.lerpColor;i.lerp(this._tweenInfo.from,this._tweenInfo.to,s),this._applyTintImmediately(new Y(i.r,i.g,i.b,i.a))}else this._applyTintImmediately(this._tweenInfo.to),this._cancelTween()}_cancelTween(){delete this._tweenInfo}onUpdate(){this._tweenInfo&&this._updateTintTween()}onEnable(){this._isHovering=!1,this._hoveringCounter=0,this._isPressed=!1,this._toggleHitElementListeners("on"),this._forceReapplyVisualState()}onDisable(){this._toggleHitElementListeners("off"),this._resetToDefaultVisualState(this.transitionMode)}onRemove(){this._imageEntityUnsubscribe(),this._toggleLifecycleListeners("off",this.system),this.onDisable()}resolveDuplicatedEntityReferenceProperties(e,s){e.imageEntity&&(this.imageEntity=s[e.imageEntity.getGuid()])}}c(_t,"EVENT_MOUSEDOWN","mousedown"),c(_t,"EVENT_MOUSEUP","mouseup"),c(_t,"EVENT_MOUSEENTER","mouseenter"),c(_t,"EVENT_MOUSELEAVE","mouseleave"),c(_t,"EVENT_CLICK","click"),c(_t,"EVENT_TOUCHSTART","touchstart"),c(_t,"EVENT_TOUCHEND","touchend"),c(_t,"EVENT_TOUCHCANCEL","touchcancel"),c(_t,"EVENT_TOUCHLEAVE","touchleave"),c(_t,"EVENT_SELECTSTART","selectstart"),c(_t,"EVENT_SELECTEND","selectend"),c(_t,"EVENT_SELECTENTER","selectenter"),c(_t,"EVENT_SELECTLEAVE","selectleave"),c(_t,"EVENT_HOVERSTART","hoverstart"),c(_t,"EVENT_HOVEREND","hoverend"),c(_t,"EVENT_PRESSEDSTART","pressedstart"),c(_t,"EVENT_PRESSEDEND","pressedend");function ig(l){return new Y(l.r,l.g,l.b)}class QP{constructor(){this.enabled=!0,this.active=!0,this.imageEntity=null,this.hitPadding=new ee,this.transitionMode=of,this.hoverTint=new Y(.75,.75,.75),this.pressedTint=new Y(.5,.5,.5),this.inactiveTint=new Y(.25,.25,.25),this.fadeDuration=0,this.hoverSpriteAsset=null,this.hoverSpriteFrame=0,this.pressedSpriteAsset=null,this.pressedSpriteFrame=0,this.inactiveSpriteAsset=null,this.inactiveSpriteFrame=0}}const rg=["enabled","active",{name:"hitPadding",type:"vec4"},"transitionMode",{name:"hoverTint",type:"rgba"},{name:"pressedTint",type:"rgba"},{name:"inactiveTint",type:"rgba"},"fadeDuration","hoverSpriteAsset","hoverSpriteFrame","pressedSpriteAsset","pressedSpriteFrame","inactiveSpriteAsset","inactiveSpriteFrame"];class JP extends Qe{constructor(t){super(t),this.id="button",this.ComponentType=_t,this.DataType=QP,this.schema=rg,this.on("beforeremove",this._onRemoveComponent,this),this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){t.imageEntity=e.imageEntity,super.initializeComponentData(t,e,rg)}onUpdate(t){const e=this.store;for(const s in e){const i=e[s].entity,r=i.button;r.enabled&&i.enabled&&r.onUpdate()}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}const ng=new A,ag=new ie;class Zn extends pe{constructor(e,s){super(e,s);c(this,"_compoundParent",null);c(this,"_hasOffset",!1);this.entity.on("insert",this._onInsert,this),this.on("set_type",this.onSetType,this),this.on("set_convexHull",this.onSetModel,this),this.on("set_halfExtents",this.onSetHalfExtents,this),this.on("set_linearOffset",this.onSetOffset,this),this.on("set_angularOffset",this.onSetOffset,this),this.on("set_radius",this.onSetRadius,this),this.on("set_height",this.onSetHeight,this),this.on("set_axis",this.onSetAxis,this),this.on("set_asset",this.onSetAsset,this),this.on("set_renderAsset",this.onSetRenderAsset,this),this.on("set_model",this.onSetModel,this),this.on("set_render",this.onSetRender,this)}get data(){const e=this.system.store[this.entity.getGuid()];return e?e.data:null}set enabled(e){this._setValue("enabled",e)}get enabled(){return this.data.enabled}set type(e){this._setValue("type",e)}get type(){return this.data.type}set halfExtents(e){this._setValue("halfExtents",e)}get halfExtents(){return this.data.halfExtents}set linearOffset(e){this._setValue("linearOffset",e)}get linearOffset(){return this.data.linearOffset}set angularOffset(e){this._setValue("angularOffset",e)}get angularOffset(){return this.data.angularOffset}set radius(e){this._setValue("radius",e)}get radius(){return this.data.radius}set axis(e){this._setValue("axis",e)}get axis(){return this.data.axis}set height(e){this._setValue("height",e)}get height(){return this.data.height}set asset(e){this._setValue("asset",e)}get asset(){return this.data.asset}set renderAsset(e){this._setValue("renderAsset",e)}get renderAsset(){return this.data.renderAsset}set convexHull(e){this._setValue("convexHull",e)}get convexHull(){return this.data.convexHull}set shape(e){this._setValue("shape",e)}get shape(){return this.data.shape}set model(e){this._setValue("model",e)}get model(){return this.data.model}set render(e){this._setValue("render",e)}get render(){return this.data.render}set checkVertexDuplicates(e){this._setValue("checkVertexDuplicates",e)}get checkVertexDuplicates(){return this.data.checkVertexDuplicates}_setValue(e,s){const i=this.data,r=i[e];i[e]=s,this.fire("set",e,r,s)}onSetType(e,s,i){s!==i&&this.system.changeType(this,s,i)}onSetHalfExtents(e,s,i){const r=this.data.type;this.data.initialized&&r==="box"&&this.system.recreatePhysicalShapes(this)}onSetOffset(e,s,i){this._hasOffset=!this.data.linearOffset.equals(A.ZERO)||!this.data.angularOffset.equals(ie.IDENTITY),this.data.initialized&&this.system.recreatePhysicalShapes(this)}onSetRadius(e,s,i){const r=this.data.type;this.data.initialized&&(r==="sphere"||r==="capsule"||r==="cylinder"||r==="cone")&&this.system.recreatePhysicalShapes(this)}onSetHeight(e,s,i){const r=this.data.type;this.data.initialized&&(r==="capsule"||r==="cylinder"||r==="cone")&&this.system.recreatePhysicalShapes(this)}onSetAxis(e,s,i){const r=this.data.type;this.data.initialized&&(r==="capsule"||r==="cylinder"||r==="cone")&&this.system.recreatePhysicalShapes(this)}onSetAsset(e,s,i){const r=this.system.app.assets;if(s){const n=r.get(s);n&&n.off("remove",this.onAssetRemoved,this)}if(i){i instanceof he&&(this.data.asset=i.id);const n=r.get(this.data.asset);n&&(n.off("remove",this.onAssetRemoved,this),n.on("remove",this.onAssetRemoved,this))}this.data.initialized&&this.data.type==="mesh"&&(i||(this.data.model=null),this.system.recreatePhysicalShapes(this))}onSetRenderAsset(e,s,i){const r=this.system.app.assets;if(s){const n=r.get(s);n&&n.off("remove",this.onRenderAssetRemoved,this)}if(i){i instanceof he&&(this.data.renderAsset=i.id);const n=r.get(this.data.renderAsset);n&&(n.off("remove",this.onRenderAssetRemoved,this),n.on("remove",this.onRenderAssetRemoved,this))}this.data.initialized&&this.data.type==="mesh"&&(i||(this.data.render=null),this.system.recreatePhysicalShapes(this))}onSetModel(e,s,i){this.data.initialized&&this.data.type==="mesh"&&this.system.implementations.mesh.doRecreatePhysicalShape(this)}onSetRender(e,s,i){this.onSetModel(e,s,i)}onAssetRemoved(e){e.off("remove",this.onAssetRemoved,this),this.data.asset===e.id&&(this.asset=null)}onRenderAssetRemoved(e){e.off("remove",this.onRenderAssetRemoved,this),this.data.renderAsset===e.id&&(this.renderAsset=null)}getCompoundChildShapeIndex(e){const s=this.data.shape,i=s.getNumChildShapes();for(let r=0;r<i;r++){const n=s.getChildShape(r);if(Ammo.getPointer(n)===Ammo.getPointer(e))return r}return null}_onInsert(e){if(!(typeof Ammo>"u")){if(this._compoundParent)this.system.recreatePhysicalShapes(this);else if(!this.entity.rigidbody){let s=this.entity.parent;for(;s;){if(s.collision&&s.collision.type==="compound"){s.collision.shape.getNumChildShapes()===0?this.system.recreatePhysicalShapes(s.collision):this.system.recreatePhysicalShapes(this);break}s=s.parent}}}}_updateCompound(){const e=this.entity;if(e._dirtyWorld){let s=e._dirtyLocal,i=e;for(;i&&!s&&!(i.collision&&i.collision===this._compoundParent);)i._dirtyLocal&&(s=!0),i=i.parent;if(s){e.forEach(this.system.implementations.compound._updateEachDescendantTransform,e);const r=this._compoundParent.entity.rigidbody;r&&r.activate()}}}getShapePosition(){const e=this.entity.getPosition();if(this._hasOffset){const s=this.entity.getRotation(),i=this.data.linearOffset;return ag.copy(s).transformVector(i,ng),ng.add(e)}return e}getShapeRotation(){const e=this.entity.getRotation();return this._hasOffset?ag.copy(e).mul(this.data.angularOffset):e}onEnable(){if(this.data.type==="mesh"&&(this.data.asset||this.data.renderAsset)&&this.data.initialized){const e=this.system.app.assets.get(this.data.asset||this.data.renderAsset);if(e&&(!e.resource||!this.data.shape)){this.system.recreatePhysicalShapes(this);return}}if(this.entity.rigidbody)this.entity.rigidbody.enabled&&this.entity.rigidbody.enableSimulation();else if(this._compoundParent&&this!==this._compoundParent)if(this._compoundParent.shape.getNumChildShapes()===0)this.system.recreatePhysicalShapes(this._compoundParent);else{const e=this.system._getNodeTransform(this.entity,this._compoundParent.entity);this._compoundParent.shape.addChildShape(e,this.data.shape),Ammo.destroy(e),this._compoundParent.entity.rigidbody&&this._compoundParent.entity.rigidbody.activate()}else this.entity.trigger&&this.entity.trigger.enable()}onDisable(){this.entity.rigidbody?this.entity.rigidbody.disableSimulation():this._compoundParent&&this!==this._compoundParent?this._compoundParent.entity._destroying||(this.system._removeCompoundChild(this._compoundParent,this.data.shape),this._compoundParent.entity.rigidbody&&this._compoundParent.entity.rigidbody.activate()):this.entity.trigger&&this.entity.trigger.disable()}onBeforeRemove(){this.asset&&(this.asset=null),this.renderAsset&&(this.renderAsset=null),this.entity.off("insert",this._onInsert,this),this.off()}}c(Zn,"EVENT_CONTACT","contact"),c(Zn,"EVENT_COLLISIONSTART","collisionstart"),c(Zn,"EVENT_COLLISIONEND","collisionend"),c(Zn,"EVENT_TRIGGERENTER","triggerenter"),c(Zn,"EVENT_TRIGGERLEAVE","triggerleave");class eR{constructor(){this.enabled=!0,this.type="box",this.halfExtents=new A(.5,.5,.5),this.linearOffset=new A,this.angularOffset=new ie,this.radius=.5,this.axis=1,this.height=2,this.convexHull=!1,this.asset=null,this.renderAsset=null,this.checkVertexDuplicates=!0,this.shape=null,this.model=null,this.render=null,this.initialized=!1}}const ao="static",vs="dynamic",zn="kinematic",tR=2,fo=4,hf=1,og=4,sx=5,sR=1,lg=2,iR=4,hg=16,cg=65535,cf=65533;let bs,Cr,Un;class ix{constructor(t,e,s){this.entity=e.entity,this.component=e,this.app=t,typeof Ammo<"u"&&!bs&&(bs=new Ammo.btVector3,Cr=new Ammo.btQuaternion,Un=new Ammo.btTransform),this.initialize(s)}initialize(t){const e=this.entity,s=t.shape;if(s&&typeof Ammo<"u"){e.trigger&&e.trigger.destroy();const i=1,r=this.component;if(r){const a=r.getShapePosition(),o=r.getShapeRotation();bs.setValue(a.x,a.y,a.z),Cr.setValue(o.x,o.y,o.z,o.w)}else{const a=e.getPosition(),o=e.getRotation();bs.setValue(a.x,a.y,a.z),Cr.setValue(o.x,o.y,o.z,o.w)}Un.setOrigin(bs),Un.setRotation(Cr);const n=this.app.systems.rigidbody.createBody(i,s,Un);n.setRestitution(0),n.setFriction(0),n.setDamping(0,0),bs.setValue(0,0,0),n.setLinearFactor(bs),n.setAngularFactor(bs),n.setCollisionFlags(n.getCollisionFlags()|fo),n.entity=e,this.body=n,this.component.enabled&&e.enabled&&this.enable()}}destroy(){this.body&&(this.disable(),this.app.systems.rigidbody.destroyBody(this.body),this.body=null)}_getEntityTransform(t){const e=this.component;if(e){const s=e.getShapePosition(),i=e.getShapeRotation();bs.setValue(s.x,s.y,s.z),Cr.setValue(i.x,i.y,i.z,i.w)}else{const s=this.entity.getPosition(),i=this.entity.getRotation();bs.setValue(s.x,s.y,s.z),Cr.setValue(i.x,i.y,i.z,i.w)}t.setOrigin(bs),t.setRotation(Cr)}updateTransform(){this._getEntityTransform(Un);const t=this.body;t.setWorldTransform(Un),t.activate()}enable(){const t=this.body;if(!t)return;const e=this.app.systems.rigidbody;e._triggers.indexOf(this)<0&&(e.addBody(t,hg,cf^hg),e._triggers.push(this)),t.forceActivationState(hf),this.updateTransform()}disable(){const t=this.body;if(!t)return;const e=this.app.systems.rigidbody,s=e._triggers.indexOf(this);s>-1&&(e.removeBody(t),e._triggers.splice(s,1)),t.forceActivationState(sx)}}const Ql=new q,rR=new A,nR=new A,Mr=new ie,dg=new Oe,aR=["enabled","type","halfExtents","linearOffset","angularOffset","radius","axis","height","convexHull","asset","renderAsset","shape","model","render","checkVertexDuplicates"];class vn{constructor(t){this.system=t}beforeInitialize(t,e){e.shape=null,e.model=new Ui,e.model.graph=new Oe}afterInitialize(t,e){this.recreatePhysicalShapes(t),t.data.initialized=!0}reset(t,e){this.beforeInitialize(t,e),this.afterInitialize(t,e)}recreatePhysicalShapes(t){const e=t.entity,s=t.data;if(typeof Ammo<"u"){e.trigger&&(e.trigger.destroy(),delete e.trigger),s.shape&&(t._compoundParent&&(t!==t._compoundParent&&this.system._removeCompoundChild(t._compoundParent,s.shape),t._compoundParent.entity.rigidbody&&t._compoundParent.entity.rigidbody.activate()),this.destroyShape(s)),s.shape=this.createPhysicalShape(t.entity,s);const i=!t._compoundParent;if(s.type==="compound"&&(!t._compoundParent||t===t._compoundParent))t._compoundParent=t,e.forEach(this._addEachDescendant,t);else if(s.type!=="compound"&&!t.rigidbody){t._compoundParent=null;let r=e.parent;for(;r;){if(r.collision&&r.collision.type==="compound"){t._compoundParent=r.collision;break}r=r.parent}}t._compoundParent&&t!==t._compoundParent&&(i&&t._compoundParent.shape.getNumChildShapes()===0?this.system.recreatePhysicalShapes(t._compoundParent):(this.system.updateCompoundChildTransform(e,!0),t._compoundParent.entity.rigidbody&&t._compoundParent.entity.rigidbody.activate())),e.rigidbody?(e.rigidbody.disableSimulation(),e.rigidbody.createBody(),e.enabled&&e.rigidbody.enabled&&e.rigidbody.enableSimulation()):t._compoundParent||(e.trigger?e.trigger.initialize(s):e.trigger=new ix(this.system.app,t,s))}}createPhysicalShape(t,e){}updateTransform(t,e,s,i){t.entity.trigger&&t.entity.trigger.updateTransform()}destroyShape(t){t.shape&&(Ammo.destroy(t.shape),t.shape=null)}beforeRemove(t,e){e.data.shape&&(e._compoundParent&&!e._compoundParent.entity._destroying&&(this.system._removeCompoundChild(e._compoundParent,e.data.shape),e._compoundParent.entity.rigidbody&&e._compoundParent.entity.rigidbody.activate()),e._compoundParent=null,this.destroyShape(e.data))}remove(t,e){t.rigidbody&&t.rigidbody.body&&t.rigidbody.disableSimulation(),t.trigger&&(t.trigger.destroy(),delete t.trigger)}clone(t,e){const s=this.system.store[t.getGuid()],i={enabled:s.data.enabled,type:s.data.type,halfExtents:[s.data.halfExtents.x,s.data.halfExtents.y,s.data.halfExtents.z],linearOffset:[s.data.linearOffset.x,s.data.linearOffset.y,s.data.linearOffset.z],angularOffset:[s.data.angularOffset.x,s.data.angularOffset.y,s.data.angularOffset.z,s.data.angularOffset.w],radius:s.data.radius,axis:s.data.axis,height:s.data.height,convexHull:s.data.convexHull,asset:s.data.asset,renderAsset:s.data.renderAsset,model:s.data.model,render:s.data.render,checkVertexDuplicates:s.data.checkVertexDuplicates};return this.system.addComponent(e,i)}}class oR extends vn{createPhysicalShape(t,e){if(typeof Ammo<"u"){const s=e.halfExtents,i=new Ammo.btVector3(s?s.x:.5,s?s.y:.5,s?s.z:.5),r=new Ammo.btBoxShape(i);return Ammo.destroy(i),r}}}class lR extends vn{createPhysicalShape(t,e){if(typeof Ammo<"u")return new Ammo.btSphereShape(e.radius)}}class hR extends vn{createPhysicalShape(t,e){const s=e.axis??1,i=e.radius??.5,r=Math.max((e.height??2)-2*i,0);let n=null;if(typeof Ammo<"u")switch(s){case 0:n=new Ammo.btCapsuleShapeX(i,r);break;case 1:n=new Ammo.btCapsuleShape(i,r);break;case 2:n=new Ammo.btCapsuleShapeZ(i,r);break}return n}}class cR extends vn{createPhysicalShape(t,e){const s=e.axis??1,i=e.radius??.5,r=e.height??1;let n=null,a=null;if(typeof Ammo<"u")switch(s){case 0:n=new Ammo.btVector3(r*.5,i,i),a=new Ammo.btCylinderShapeX(n);break;case 1:n=new Ammo.btVector3(i,r*.5,i),a=new Ammo.btCylinderShape(n);break;case 2:n=new Ammo.btVector3(i,i,r*.5),a=new Ammo.btCylinderShapeZ(n);break}return n&&Ammo.destroy(n),a}}class dR extends vn{createPhysicalShape(t,e){const s=e.axis??1,i=e.radius??.5,r=e.height??1;let n=null;if(typeof Ammo<"u")switch(s){case 0:n=new Ammo.btConeShapeX(i,r);break;case 1:n=new Ammo.btConeShape(i,r);break;case 2:n=new Ammo.btConeShapeZ(i,r);break}return n}}class uR extends vn{beforeInitialize(t,e){}createAmmoHull(t,e,s,i){const r=new Ammo.btConvexHullShape,n=new Ammo.btVector3,a=[];t.getPositions(a);for(let h=0;h<a.length;h+=3)n.setValue(a[h]*i.x,a[h+1]*i.y,a[h+2]*i.z),r.addPoint(n,!1);Ammo.destroy(n),r.recalcLocalAabb(),r.setMargin(.01);const o=this.system._getNodeTransform(e);s.addChildShape(o,r),Ammo.destroy(o)}createAmmoMesh(t,e,s,i,r=!0){const n=this.system;let a;if(n._triMeshCache[t.id])a=n._triMeshCache[t.id];else{const d=t.vertexBuffer,u=d.getFormat();let f,p;for(let D=0;D<u.elements.length;D++){const P=u.elements[D];if(P.name===Xe){p=new Float32Array(d.lock(),P.offset),f=P.stride/4;break}}const m=[];t.getIndices(m);const _=t.primitive[0].count/3,g=new Ammo.btVector3;let y,w,C;const x=t.primitive[0].base;a=new Ammo.btTriangleMesh,n._triMeshCache[t.id]=a;const M=new Map;b.assert(typeof a.getIndexedMeshArray=="function","Ammo.js version is too old, please update to a newer Ammo.");const S=a.getIndexedMeshArray();S.at(0).m_numTriangles=_;const v=i?i.x:1,E=i?i.y:1,T=i?i.z:1,R=D=>{const P=p[D*f]*v,L=p[D*f+1]*E,k=p[D*f+2]*T;let H;if(r){const N=`${P}:${L}:${k}`;if(H=M.get(N),H!==void 0)return H;g.setValue(P,L,k),H=a.findOrAddVertex(g,!1),M.set(N,H)}else g.setValue(P,L,k),H=a.findOrAddVertex(g,!1);return H};for(let D=0;D<_;D++)y=R(m[x+D*3]),w=R(m[x+D*3+1]),C=R(m[x+D*3+2]),a.addIndex(y),a.addIndex(w),a.addIndex(C);Ammo.destroy(g)}const o=new Ammo.btBvhTriangleMeshShape(a,!0);if(!i){const d=n._getNodeScaling(e);o.setLocalScaling(d),Ammo.destroy(d)}const h=n._getNodeTransform(e);s.addChildShape(h,o),Ammo.destroy(h)}createPhysicalShape(t,e){if(!(typeof Ammo>"u")&&(e.model||e.render)){const s=new Ammo.btCompoundShape,r=t.getWorldTransform().getScale();if(e.render){const n=e.render.meshes;for(let a=0;a<n.length;a++)e.convexHull?this.createAmmoHull(n[a],dg,s,r):this.createAmmoMesh(n[a],dg,s,r,e.checkVertexDuplicates)}else if(e.model){const n=e.model.meshInstances;for(let o=0;o<n.length;o++)this.createAmmoMesh(n[o].mesh,n[o].node,s,null,e.checkVertexDuplicates);const a=new Ammo.btVector3(r.x,r.y,r.z);s.setLocalScaling(a),Ammo.destroy(a)}return s}}recreatePhysicalShapes(t){const e=t.data;if((e.renderAsset||e.asset)&&t.enabled&&t.entity.enabled){this.loadAsset(t,e.renderAsset||e.asset,e.renderAsset?"render":"model");return}this.doRecreatePhysicalShape(t)}loadAsset(t,e,s){const i=t.data,r=this.system.app.assets,n=i[s],a=d=>{i[s]===n&&(i[s]=d.resource,this.doRecreatePhysicalShape(t))},o=d=>{d.ready(u=>{if(u.data.containerAsset){const f=r.get(u.data.containerAsset);f.loaded?a(u):(f.ready(()=>{a(u)}),r.load(f))}else a(u)}),r.load(d)},h=r.get(e);h?o(h):r.once(`add:${e}`,o)}doRecreatePhysicalShape(t){const e=t.entity,s=t.data;s.model||s.render?(this.destroyShape(s),s.shape=this.createPhysicalShape(e,s),e.rigidbody?(e.rigidbody.disableSimulation(),e.rigidbody.createBody(),e.enabled&&e.rigidbody.enabled&&e.rigidbody.enableSimulation()):e.trigger?e.trigger.initialize(s):e.trigger=new ix(this.system.app,t,s)):(this.beforeRemove(e,t),this.remove(e,s))}updateTransform(t,e,s,i){if(t.shape){const n=t.entity.getWorldTransform().getScale(),a=t.shape.getLocalScaling();(n.x!==a.x()||n.y!==a.y()||n.z!==a.z())&&this.doRecreatePhysicalShape(t)}super.updateTransform(t,e,s,i)}destroyShape(t){if(!t.shape)return;const e=t.shape.getNumChildShapes();for(let s=0;s<e;s++){const i=t.shape.getChildShape(s);Ammo.destroy(i)}Ammo.destroy(t.shape),t.shape=null}}class fR extends vn{createPhysicalShape(t,e){if(typeof Ammo<"u")return new Ammo.btCompoundShape}_addEachDescendant(t){!t.collision||t.rigidbody||(t.collision._compoundParent=this,t!==this.entity&&t.collision.system.recreatePhysicalShapes(t.collision))}_updateEachDescendant(t){t.collision&&t.collision._compoundParent===this&&(t.collision._compoundParent=null,t!==this.entity&&!t.rigidbody&&t.collision.system.recreatePhysicalShapes(t.collision))}_updateEachDescendantTransform(t){!t.collision||t.collision._compoundParent!==this.collision._compoundParent||this.collision.system.updateCompoundChildTransform(t,!1)}}class pR extends Qe{constructor(t){super(t),this.id="collision",this.ComponentType=Zn,this.DataType=eR,this.schema=aR,this.implementations={},this._triMeshCache={},this.on("beforeremove",this.onBeforeRemove,this),this.on("remove",this.onRemove,this)}initializeComponentData(t,e,s){s=["type","halfExtents","radius","axis","height","convexHull","shape","model","asset","render","renderAsset","enabled","linearOffset","angularOffset","checkVertexDuplicates"];const i={};for(let a=0,o=s.length;a<o;a++){const h=s[a];i[h]=e[h]}let r;if(e.hasOwnProperty("asset")?(r=s.indexOf("model"),r!==-1&&s.splice(r,1),r=s.indexOf("render"),r!==-1&&s.splice(r,1)):e.hasOwnProperty("model")&&(r=s.indexOf("asset"),r!==-1&&s.splice(r,1)),i.type||(i.type=t.data.type),t.data.type=i.type,Array.isArray(i.halfExtents)&&(i.halfExtents=new A(i.halfExtents)),Array.isArray(i.linearOffset)&&(i.linearOffset=new A(i.linearOffset)),Array.isArray(i.angularOffset)){const a=i.angularOffset;a.length===3?i.angularOffset=new ie().setFromEulerAngles(a[0],a[1],a[2]):i.angularOffset=new ie(i.angularOffset)}const n=this._createImplementation(i.type);n.beforeInitialize(t,i),super.initializeComponentData(t,i,s),n.afterInitialize(t,i)}_createImplementation(t){if(this.implementations[t]===void 0){let e;switch(t){case"box":e=new oR(this);break;case"sphere":e=new lR(this);break;case"capsule":e=new hR(this);break;case"cylinder":e=new cR(this);break;case"cone":e=new dR(this);break;case"mesh":e=new uR(this);break;case"compound":e=new fR(this);break;default:b.error(`_createImplementation: Invalid collision system type: ${t}`)}this.implementations[t]=e}return this.implementations[t]}_getImplementation(t){return this.implementations[t.collision.data.type]}cloneComponent(t,e){return this._getImplementation(t).clone(t,e)}onBeforeRemove(t,e){this.implementations[e.data.type].beforeRemove(t,e),e.onBeforeRemove()}onRemove(t,e){this.implementations[e.type].remove(t,e)}updateCompoundChildTransform(t,e){const s=t.collision._compoundParent;if(s!==t.collision&&t.enabled&&t.collision.enabled&&(t._dirtyLocal||e)){const i=this._getNodeTransform(t,s.entity),r=s.getCompoundChildShapeIndex(t.collision.shape);r===null?s.shape.addChildShape(i,t.collision.data.shape):s.shape.updateChildTransform(r,i,!0),Ammo.destroy(i)}}_removeCompoundChild(t,e){if(t.shape.getNumChildShapes()!==0)if(t.shape.removeChildShape)t.shape.removeChildShape(e);else{const s=t.getCompoundChildShapeIndex(e);s!==null&&t.shape.removeChildShapeByIndex(s)}}onTransformChanged(t,e,s,i){this.implementations[t.data.type].updateTransform(t,e,s,i)}changeType(t,e,s){this.implementations[e].beforeRemove(t.entity,t),this.implementations[e].remove(t.entity,t.data),this._createImplementation(s).reset(t,t.data)}recreatePhysicalShapes(t){this.implementations[t.data.type].recreatePhysicalShapes(t)}_calculateNodeRelativeTransform(t,e){if(t===e){const s=t.getWorldTransform().getScale();Ql.setScale(s.x,s.y,s.z)}else this._calculateNodeRelativeTransform(t.parent,e),Ql.mul(t.getLocalTransform())}_getNodeScaling(t){const s=t.getWorldTransform().getScale();return new Ammo.btVector3(s.x,s.y,s.z)}_getNodeTransform(t,e){let s,i;e?(this._calculateNodeRelativeTransform(t,e),s=rR,i=Mr,Ql.getTranslation(s),i.setFromMat4(Ql)):(s=t.getPosition(),i=t.getRotation());const r=new Ammo.btQuaternion,n=new Ammo.btTransform;n.setIdentity();const a=n.getOrigin(),o=t.collision;if(o&&o._hasOffset){const h=o.data.linearOffset,d=o.data.angularOffset,u=nR;Mr.copy(i).transformVector(h,u),u.add(s),Mr.copy(i).mul(d),a.setValue(u.x,u.y,u.z),r.setValue(Mr.x,Mr.y,Mr.z,Mr.w)}else a.setValue(s.x,s.y,s.z),r.setValue(i.x,i.y,i.z,i.w);return n.setRotation(r),Ammo.destroy(r),n}destroy(){for(const t in this._triMeshCache)Ammo.destroy(this._triMeshCache[t]);this._triMeshCache=null,super.destroy()}}const Jl=new Y,mR=new Ht;class _R{constructor(t,e,s){this._entity=t,this._element=t.element,this.model=new Ui,this.node=new Oe,this.model.graph=this.node,this.mesh=e,this.meshInstance=new Be(this.mesh,s,this.node),this.meshInstance.name=`ImageElement: ${t.name}`,this.meshInstance.castShadow=!1,this.meshInstance.receiveShadow=!1,this._meshDirty=!1,this.model.meshInstances.push(this.meshInstance),this._entity.addChild(this.model.graph),this.model._entity=this._entity,this.unmaskMeshInstance=null}destroy(){var t,e;this.setMaterial(null),this._element.removeModelFromLayers(this.model),this.model.destroy(),this.model=null,this.node=null,this.mesh=null,(t=this.meshInstance)==null||t.destroy(),this.meshInstance=null,(e=this.unmaskMeshInstance)==null||e.destroy(),this.unmaskMeshInstance=null,this._entity=null,this._element=null}setMesh(t){this.meshInstance&&(this.mesh=t,this.meshInstance.mesh=t,this.meshInstance.visible=!!t,this.unmaskMeshInstance&&(this.unmaskMeshInstance.mesh=t),this.forceUpdateAabb())}setMask(t){var e;if(this.meshInstance){if(this._entity.enabled&&this._element.enabled&&this._element.removeModelFromLayers(this.model),t){this.unmaskMeshInstance=new Be(this.mesh,this.meshInstance.material,this.node),this.unmaskMeshInstance.name=`Unmask: ${this._entity.name}`,this.unmaskMeshInstance.castShadow=!1,this.unmaskMeshInstance.receiveShadow=!1,this.unmaskMeshInstance.pick=!1,this.model.meshInstances.push(this.unmaskMeshInstance);for(const s in this.meshInstance.parameters)this.unmaskMeshInstance.setParameter(s,this.meshInstance.parameters[s].data)}else{const s=this.model.meshInstances.indexOf(this.unmaskMeshInstance);s>=0&&this.model.meshInstances.splice(s,1)}this._entity.enabled&&this._element.enabled&&this._element.addModelToLayers(this.model),t||((e=this.unmaskMeshInstance)==null||e.destroy(),this.unmaskMeshInstance=null)}}setMaterial(t){this.meshInstance&&(this.meshInstance.material=t,this.unmaskMeshInstance&&(this.unmaskMeshInstance.material=t))}setParameter(t,e){this.meshInstance&&(this.meshInstance.setParameter(t,e),this.unmaskMeshInstance&&this.unmaskMeshInstance.setParameter(t,e))}deleteParameter(t){this.meshInstance&&(this.meshInstance.deleteParameter(t),this.unmaskMeshInstance&&this.unmaskMeshInstance.deleteParameter(t))}setUnmaskDrawOrder(){if(!this.meshInstance)return;const t=function(e){let s;const i=e.children,r=i.length;if(r){for(let a=0;a<r;a++)i[a].element&&(s=i[a]);if(!s)return null;const n=t(s);return n||s}return null};if(this.unmaskMeshInstance){const e=t(this._entity);e&&e.element?this.unmaskMeshInstance.drawOrder=e.element.drawOrder+e.element.getMaskOffset():this.unmaskMeshInstance.drawOrder=this.meshInstance.drawOrder+this._element.getMaskOffset(),b.trace(Es,"setDrawOrder: ",this.unmaskMeshInstance.name,this.unmaskMeshInstance.drawOrder)}}setDrawOrder(t){this.meshInstance&&(b.trace(Es,"setDrawOrder: ",this.meshInstance.name,t),this.meshInstance.drawOrder=t)}setCull(t){if(!this.meshInstance)return;const e=this._element;let s=null;t&&e._isScreenSpace()&&(s=function(i){return e.isVisibleForCamera(i)}),this.meshInstance.cull=t,this.meshInstance.isVisibleFunc=s,this.unmaskMeshInstance&&(this.unmaskMeshInstance.cull=t,this.unmaskMeshInstance.isVisibleFunc=s)}setScreenSpace(t){this.meshInstance&&(this.meshInstance.screenSpace=t,this.unmaskMeshInstance&&(this.unmaskMeshInstance.screenSpace=t))}setLayer(t){this.meshInstance&&(this.meshInstance.layer=t,this.unmaskMeshInstance&&(this.unmaskMeshInstance.layer=t))}forceUpdateAabb(t){this.meshInstance&&(this.meshInstance._aabbVer=-1,this.unmaskMeshInstance&&(this.unmaskMeshInstance._aabbVer=-1))}setAabbFunc(t){this.meshInstance&&(this.meshInstance._updateAabbFunc=t,this.unmaskMeshInstance&&(this.unmaskMeshInstance._updateAabbFunc=t))}}class gR{constructor(t){c(this,"_evtSetMeshes",null);this._element=t,this._entity=t.entity,this._system=t.system,this._textureAsset=null,this._texture=null,this._materialAsset=null,this._material=null,this._spriteAsset=null,this._sprite=null,this._spriteFrame=0,this._pixelsPerUnit=null,this._targetAspectRatio=-1,this._rect=new ee(0,0,1,1),this._mask=!1,this._maskRef=0,this._outerScale=new W,this._outerScaleUniform=new Float32Array(2),this._innerOffset=new ee,this._innerOffsetUniform=new Float32Array(4),this._atlasRect=new ee,this._atlasRectUniform=new Float32Array(4),this._defaultMesh=this._createMesh(),this._renderable=new _R(this._entity,this._defaultMesh,this._material),this._color=new Y(1,1,1,1),this._colorUniform=new Float32Array([1,1,1]),this._updateRenderableEmissive(),this._renderable.setParameter("material_opacity",1),this._updateAabbFunc=this._updateAabb.bind(this),this._onScreenChange(this._element.screen),this._element.on("resize",this._onParentResizeOrPivotChange,this),this._element.on("set:pivot",this._onParentResizeOrPivotChange,this),this._element.on("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.on("set:screen",this._onScreenChange,this),this._element.on("set:draworder",this._onDrawOrderChange,this),this._element.on("screen:set:resolution",this._onResolutionChange,this)}destroy(){this.textureAsset=null,this.spriteAsset=null,this.materialAsset=null,this._renderable.setMesh(this._defaultMesh),this._renderable.destroy(),this._defaultMesh=null,this._element.off("resize",this._onParentResizeOrPivotChange,this),this._element.off("set:pivot",this._onParentResizeOrPivotChange,this),this._element.off("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.off("set:screen",this._onScreenChange,this),this._element.off("set:draworder",this._onDrawOrderChange,this),this._element.off("screen:set:resolution",this._onResolutionChange,this)}_onResolutionChange(t){}_onParentResizeOrPivotChange(){this._renderable.mesh&&this._updateMesh(this._renderable.mesh)}_onScreenSpaceChange(t){this._updateMaterial(t)}_onScreenChange(t,e){t?this._updateMaterial(t.screen.screenSpace):this._updateMaterial(!1)}_onDrawOrderChange(t){this._renderable.setDrawOrder(t),this.mask&&this._element.screen&&this._element.screen.screen.once("syncdraworder",function(){this._renderable.setUnmaskDrawOrder()},this)}_hasUserMaterial(){return!!this._materialAsset||!!this._material&&this._system.defaultImageMaterials.indexOf(this._material)===-1}_use9Slicing(){return this.sprite&&(this.sprite.renderMode===ht||this.sprite.renderMode===st)}_updateMaterial(t){const e=!!this._mask,s=!!(this.sprite&&this.sprite.renderMode===ht),i=!!(this.sprite&&this.sprite.renderMode===st);this._hasUserMaterial()||(this._material=this._system.getImageElementMaterial(t,e,s,i)),this._renderable&&(this._renderable.setCull(!this._element._isScreenSpace()||this._element._isScreenCulled()),this._renderable.setMaterial(this._material),this._renderable.setScreenSpace(t),this._renderable.setLayer(t?Ub:d0))}_createMesh(){const t=this._element,e=t.calculatedWidth,s=t.calculatedHeight,i=this._rect,r=this._system.app.graphicsDevice,n=new Float32Array([e,0,0,0,0,1,i.x+i.z,1-i.y,e,s,0,0,0,1,i.x+i.z,1-(i.y+i.w),0,0,0,0,0,1,i.x,1-i.y,0,s,0,0,0,1,i.x,1-(i.y+i.w)]),a=mR.get(r,()=>new Dt(r,[{semantic:Xe,components:3,type:Re},{semantic:ss,components:3,type:Re},{semantic:ds,components:2,type:Re}])),o=new fs(r,a,4,{data:n.buffer}),h=new ke(r);return h.vertexBuffer=o,h.primitive[0].type=lr,h.primitive[0].base=0,h.primitive[0].count=4,h.primitive[0].indexed=!1,h.aabb.setMinMax(A.ZERO,new A(e,s,0)),this._updateMesh(h),h}_updateMesh(t){const e=this._element;let s=e.calculatedWidth,i=e.calculatedHeight;if(e.fitMode!==bh&&this._targetAspectRatio>0){const n=e.calculatedWidth/e.calculatedHeight;e.fitMode===KP&&n>this._targetAspectRatio||e.fitMode===ZP&&n<this._targetAspectRatio?s=e.calculatedHeight*this._targetAspectRatio:i=e.calculatedWidth/this._targetAspectRatio}const r=e._isScreenSpace();if(this._updateMaterial(r),this._renderable&&this._renderable.forceUpdateAabb(),this.sprite&&(this.sprite.renderMode===ht||this.sprite.renderMode===st)){const n=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]],a=2/n.rect.z,o=2/n.rect.w;this._innerOffset.set(n.border.x*a,n.border.y*o,n.border.z*a,n.border.w*o);const h=this.sprite.atlas.texture;this._atlasRect.set(n.rect.x/h.width,n.rect.y/h.height,n.rect.z/h.width,n.rect.w/h.height);const d=this._pixelsPerUnit!==null?this._pixelsPerUnit:this.sprite.pixelsPerUnit,u=n.rect.z/d,f=n.rect.w/d;this._outerScale.set(Math.max(s,this._innerOffset.x*u),Math.max(i,this._innerOffset.y*f));let p=u,m=f;this._outerScale.x/=u,this._outerScale.y/=f,p*=z.clamp(s/(this._innerOffset.x*u),1e-4,1),m*=z.clamp(i/(this._innerOffset.y*f),1e-4,1),this._renderable&&(this._innerOffsetUniform[0]=this._innerOffset.x,this._innerOffsetUniform[1]=this._innerOffset.y,this._innerOffsetUniform[2]=this._innerOffset.z,this._innerOffsetUniform[3]=this._innerOffset.w,this._renderable.setParameter("innerOffset",this._innerOffsetUniform),this._atlasRectUniform[0]=this._atlasRect.x,this._atlasRectUniform[1]=this._atlasRect.y,this._atlasRectUniform[2]=this._atlasRect.z,this._atlasRectUniform[3]=this._atlasRect.w,this._renderable.setParameter("atlasRect",this._atlasRectUniform),this._outerScaleUniform[0]=this._outerScale.x,this._outerScaleUniform[1]=this._outerScale.y,this._renderable.setParameter("outerScale",this._outerScaleUniform),this._renderable.setAabbFunc(this._updateAabbFunc),this._renderable.node.setLocalScale(p,m,1),this._renderable.node.setLocalPosition((.5-e.pivot.x)*s,(.5-e.pivot.y)*i,0))}else{const n=t.vertexBuffer,a=new Float32Array(n.lock()),o=e.pivot.x,h=e.pivot.y;a[0]=s-o*s,a[1]=0-h*i,a[8]=s-o*s,a[9]=i-h*i,a[16]=0-o*s,a[17]=0-h*i,a[24]=0-o*s,a[25]=i-h*i;let d=1,u=1,f=this._rect;if(this._sprite&&this._sprite.frameKeys[this._spriteFrame]&&this._sprite.atlas){const _=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];_&&(f=_.rect,d=this._sprite.atlas.texture.width,u=this._sprite.atlas.texture.height)}a[6]=(f.x+f.z)/d,a[7]=1-f.y/u,a[14]=(f.x+f.z)/d,a[15]=1-(f.y+f.w)/u,a[22]=f.x/d,a[23]=1-f.y/u,a[30]=f.x/d,a[31]=1-(f.y+f.w)/u,n.unlock();const p=new A(0-o*s,0-h*i,0),m=new A(s-o*s,i-h*i,0);t.aabb.setMinMax(p,m),this._renderable&&(this._renderable.node.setLocalScale(1,1,1),this._renderable.node.setLocalPosition(0,0,0),this._renderable.setAabbFunc(null))}this._meshDirty=!1}_updateSprite(){let t=!1,e=null;if(this._targetAspectRatio=-1,this._sprite&&this._sprite.atlas){e=this._sprite.meshes[this.spriteFrame],t=this._sprite.renderMode===ht||this._sprite.renderMode===st;const s=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];(s==null?void 0:s.rect.w)>0&&(this._targetAspectRatio=s.rect.z/s.rect.w)}this.mesh=t?e:this._defaultMesh,this.refreshMesh()}refreshMesh(){this.mesh&&(this._element._beingInitialized?this._meshDirty=!0:this._updateMesh(this.mesh))}_updateAabb(t){return t.center.set(0,0,0),t.halfExtents.set(this._outerScale.x*.5,this._outerScale.y*.5,.001),t.setFromTransformedAabb(t,this._renderable.node.getWorldTransform()),t}_toggleMask(){this._element._dirtifyMask();const t=this._element._isScreenSpace();this._updateMaterial(t),this._renderable.setMask(!!this._mask)}_onMaterialLoad(t){this.material=t.resource}_onMaterialAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onMaterialAdded,this),this._materialAsset===t.id&&this._bindMaterialAsset(t)}_bindMaterialAsset(t){this._entity.enabled&&(t.on("load",this._onMaterialLoad,this),t.on("change",this._onMaterialChange,this),t.on("remove",this._onMaterialRemove,this),t.resource?this._onMaterialLoad(t):this._system.app.assets.load(t))}_unbindMaterialAsset(t){t.off("load",this._onMaterialLoad,this),t.off("change",this._onMaterialChange,this),t.off("remove",this._onMaterialRemove,this)}_onMaterialChange(){}_onMaterialRemove(){}_onTextureAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onTextureAdded,this),this._textureAsset===t.id&&this._bindTextureAsset(t)}_bindTextureAsset(t){this._entity.enabled&&(t.on("load",this._onTextureLoad,this),t.on("change",this._onTextureChange,this),t.on("remove",this._onTextureRemove,this),t.resource?this._onTextureLoad(t):this._system.app.assets.load(t))}_unbindTextureAsset(t){t.off("load",this._onTextureLoad,this),t.off("change",this._onTextureChange,this),t.off("remove",this._onTextureRemove,this)}_onTextureLoad(t){this.texture=t.resource}_onTextureChange(t){}_onTextureRemove(t){}_onSpriteAssetAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onSpriteAssetAdded,this),this._spriteAsset===t.id&&this._bindSpriteAsset(t)}_bindSpriteAsset(t){this._entity.enabled&&(t.on("load",this._onSpriteAssetLoad,this),t.on("change",this._onSpriteAssetChange,this),t.on("remove",this._onSpriteAssetRemove,this),t.resource?this._onSpriteAssetLoad(t):this._system.app.assets.load(t))}_unbindSpriteAsset(t){t.off("load",this._onSpriteAssetLoad,this),t.off("change",this._onSpriteAssetChange,this),t.off("remove",this._onSpriteAssetRemove,this),t.data.textureAtlasAsset&&this._system.app.assets.off(`load:${t.data.textureAtlasAsset}`,this._onTextureAtlasLoad,this)}_onSpriteAssetLoad(t){if(!t||!t.resource)this.sprite=null;else if(t.resource.atlas)this.sprite=t.resource;else{const e=t.data.textureAtlasAsset;if(e){const s=this._system.app.assets;s.off(`load:${e}`,this._onTextureAtlasLoad,this),s.once(`load:${e}`,this._onTextureAtlasLoad,this)}}}_onSpriteAssetChange(t){this._onSpriteAssetLoad(t)}_onSpriteAssetRemove(t){}_bindSprite(t){this._evtSetMeshes=t.on("set:meshes",this._onSpriteMeshesChange,this),t.on("set:pixelsPerUnit",this._onSpritePpuChange,this),t.on("set:atlas",this._onAtlasTextureChange,this),t.atlas&&t.atlas.on("set:texture",this._onAtlasTextureChange,this)}_unbindSprite(t){var e;(e=this._evtSetMeshes)==null||e.off(),this._evtSetMeshes=null,t.off("set:pixelsPerUnit",this._onSpritePpuChange,this),t.off("set:atlas",this._onAtlasTextureChange,this),t.atlas&&t.atlas.off("set:texture",this._onAtlasTextureChange,this)}_onSpriteMeshesChange(){this._sprite&&(this._spriteFrame=z.clamp(this._spriteFrame,0,this._sprite.frameKeys.length-1)),this._updateSprite()}_onSpritePpuChange(){this.sprite.renderMode!==Pi&&this._pixelsPerUnit===null&&this._updateSprite()}_onAtlasTextureChange(){this.sprite&&this.sprite.atlas&&this.sprite.atlas.texture?(this._renderable.setParameter("texture_emissiveMap",this._sprite.atlas.texture),this._renderable.setParameter("texture_opacityMap",this._sprite.atlas.texture)):(this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap"))}_onTextureAtlasLoad(t){const e=this._spriteAsset;e instanceof he?this._onSpriteAssetLoad(e):this._onSpriteAssetLoad(this._system.app.assets.get(e))}onEnable(){if(this._materialAsset){const t=this._system.app.assets.get(this._materialAsset);t&&t.resource!==this._material&&this._bindMaterialAsset(t)}if(this._textureAsset){const t=this._system.app.assets.get(this._textureAsset);t&&t.resource!==this._texture&&this._bindTextureAsset(t)}if(this._spriteAsset){const t=this._system.app.assets.get(this._spriteAsset);t&&t.resource!==this._sprite&&this._bindSpriteAsset(t)}this._element.addModelToLayers(this._renderable.model)}onDisable(){this._element.removeModelFromLayers(this._renderable.model)}_setStencil(t){this._renderable.meshInstance.stencilFront=t,this._renderable.meshInstance.stencilBack=t;let e=0;if(this._element.maskedBy&&(e=this._element.maskedBy.element._image._maskRef),this._renderable.unmaskMeshInstance){const s=new Zs({ref:e+1,func:Dh,zpass:WS});this._renderable.unmaskMeshInstance.stencilFront=s,this._renderable.unmaskMeshInstance.stencilBack=s}}_updateRenderableEmissive(){Jl.linear(this._color),this._colorUniform[0]=Jl.r,this._colorUniform[1]=Jl.g,this._colorUniform[2]=Jl.b,this._renderable.setParameter("material_emissive",this._colorUniform)}set color(t){this._color===t&&b.warn("Setting element.color to itself will have no effect");const{r:e,g:s,b:i}=t;(this._color.r!==e||this._color.g!==s||this._color.b!==i)&&(this._color.r=e,this._color.g=s,this._color.b=i,this._updateRenderableEmissive()),this._element&&this._element.fire("set:color",this._color)}get color(){return this._color}set opacity(t){t!==this._color.a&&(this._color.a=t,this._renderable.setParameter("material_opacity",t)),this._element&&this._element.fire("set:opacity",t)}get opacity(){return this._color.a}set rect(t){this._rect===t&&console.warn("Setting element.rect to itself will have no effect");let e,s,i,r;t instanceof ee?(e=t.x,s=t.y,i=t.z,r=t.w):(e=t[0],s=t[1],i=t[2],r=t[3]),!(e===this._rect.x&&s===this._rect.y&&i===this._rect.z&&r===this._rect.w)&&(this._rect.set(e,s,i,r),this._renderable.mesh&&(this._element._beingInitialized?this._meshDirty=!0:this._updateMesh(this._renderable.mesh)))}get rect(){return this._rect}_removeMaterialAssetEvents(){if(this._materialAsset){const t=this._system.app.assets;t.off(`add:${this._materialAsset}`,this._onMaterialAdded,this);const e=t.get(this._materialAsset);e&&(e.off("load",this._onMaterialLoad,this),e.off("change",this._onMaterialChange,this),e.off("remove",this._onMaterialRemove,this))}}set material(t){if(this._material!==t){if(!t){const e=this._element._isScreenSpace();this.mask?t=e?this._system.defaultScreenSpaceImageMaskMaterial:this._system.defaultImageMaskMaterial:t=e?this._system.defaultScreenSpaceImageMaterial:this._system.defaultImageMaterial}if(this._material=t,this._materialAsset){const e=this._system.app.assets.get(this._materialAsset);(!e||e.resource!==t)&&(this._removeMaterialAssetEvents(),this._materialAsset=null)}t&&(this._renderable.setMaterial(t),this._hasUserMaterial()?(this._renderable.deleteParameter("material_opacity"),this._renderable.deleteParameter("material_emissive")):(this._updateRenderableEmissive(),this._renderable.setParameter("material_opacity",this._color.a)))}}get material(){return this._material}set materialAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof he&&(s=t.id),this._materialAsset!==s)if(this._removeMaterialAssetEvents(),this._materialAsset=s,this._materialAsset){const i=e.get(this._materialAsset);i?this._bindMaterialAsset(i):(this._materialAsset=null,this.material=null,this._materialAsset=s,e.on(`add:${this._materialAsset}`,this._onMaterialAdded,this))}else this._materialAsset=null,this.material=null,this._materialAsset=s}get materialAsset(){return this._materialAsset}set texture(t){if(this._texture!==t){if(this._textureAsset){const e=this._system.app.assets.get(this._textureAsset);e&&e.resource!==t&&(this.textureAsset=null)}if(this._texture=t,t){this._spriteAsset&&(this.spriteAsset=null),this._renderable.setParameter("texture_emissiveMap",this._texture),this._renderable.setParameter("texture_opacityMap",this._texture),this._updateRenderableEmissive(),this._renderable.setParameter("material_opacity",this._color.a);const e=this._texture.width/this._texture.height;e!==this._targetAspectRatio&&(this._targetAspectRatio=e,this._element.fitMode!==bh&&this.refreshMesh())}else this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap"),this._targetAspectRatio=-1,this._element.fitMode!==bh&&this.refreshMesh()}}get texture(){return this._texture}set textureAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof he&&(s=t.id),this._textureAsset!==s){if(this._textureAsset){e.off(`add:${this._textureAsset}`,this._onTextureAdded,this);const i=e.get(this._textureAsset);i&&(i.off("load",this._onTextureLoad,this),i.off("change",this._onTextureChange,this),i.off("remove",this._onTextureRemove,this))}if(this._textureAsset=s,this._textureAsset){const i=e.get(this._textureAsset);i?this._bindTextureAsset(i):(this.texture=null,e.on(`add:${this._textureAsset}`,this._onTextureAdded,this))}else this.texture=null}}get textureAsset(){return this._textureAsset}set spriteAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof he&&(s=t.id),this._spriteAsset!==s){if(this._spriteAsset){e.off(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this);const i=e.get(this._spriteAsset);i&&this._unbindSpriteAsset(i)}if(this._spriteAsset=s,this._spriteAsset){const i=e.get(this._spriteAsset);i?this._bindSpriteAsset(i):(this.sprite=null,e.on(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this))}else this.sprite=null}this._element&&this._element.fire("set:spriteAsset",s)}get spriteAsset(){return this._spriteAsset}set sprite(t){if(this._sprite!==t){if(this._sprite&&this._unbindSprite(this._sprite),this._spriteAsset){const e=this._system.app.assets.get(this._spriteAsset);e&&e.resource!==t&&(this.spriteAsset=null)}this._sprite=t,this._sprite&&(this._bindSprite(this._sprite),this._textureAsset&&(this.textureAsset=null)),this._sprite&&this._sprite.atlas&&this._sprite.atlas.texture?(this._renderable.setParameter("texture_emissiveMap",this._sprite.atlas.texture),this._renderable.setParameter("texture_opacityMap",this._sprite.atlas.texture)):(this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap")),this._sprite&&(this._spriteFrame=z.clamp(this._spriteFrame,0,this._sprite.frameKeys.length-1)),this._updateSprite()}}get sprite(){return this._sprite}set spriteFrame(t){const e=this._spriteFrame;this._sprite?this._spriteFrame=z.clamp(t,0,this._sprite.frameKeys.length-1):this._spriteFrame=t,this._spriteFrame!==e&&this._updateSprite(),this._element&&this._element.fire("set:spriteFrame",t)}get spriteFrame(){return this._spriteFrame}set mesh(t){this._renderable.setMesh(t),this._defaultMesh===t?this._renderable.setAabbFunc(null):this._renderable.setAabbFunc(this._updateAabbFunc)}get mesh(){return this._renderable.mesh}set mask(t){this._mask!==t&&(this._mask=t,this._toggleMask())}get mask(){return this._mask}set pixelsPerUnit(t){this._pixelsPerUnit!==t&&(this._pixelsPerUnit=t,this._sprite&&(this._sprite.renderMode===ht||this._sprite.renderMode===st)&&this._updateSprite())}get pixelsPerUnit(){return this._pixelsPerUnit}get aabb(){return this._renderable.meshInstance?this._renderable.meshInstance.aabb:null}}class yR extends de{constructor(t){super(),this._app=t,t.i18n.on("set:locale",this._onSetLocale,this),this._autoLoad=!1,this._disableLocalization=!1,this._defaultAsset=null,this._localizedAsset=null}set defaultAsset(t){const e=t instanceof he?t.id:t;this._defaultAsset!==e&&(this._defaultAsset&&this._unbindDefaultAsset(),this._defaultAsset=e,this._defaultAsset&&this._bindDefaultAsset(),this._onSetLocale(this._app.i18n.locale))}get defaultAsset(){return this._defaultAsset}set localizedAsset(t){const e=t instanceof he?t.id:t;this._localizedAsset!==e&&(this._localizedAsset&&(this._app.assets.off(`add:${this._localizedAsset}`,this._onLocalizedAssetAdd,this),this._unbindLocalizedAsset()),this._localizedAsset=e,this._localizedAsset&&(this._app.assets.get(this._localizedAsset)?this._bindLocalizedAsset():this._app.assets.once(`add:${this._localizedAsset}`,this._onLocalizedAssetAdd,this)))}get localizedAsset(){return this._localizedAsset}set autoLoad(t){this._autoLoad!==t&&(this._autoLoad=t,this._autoLoad&&this._localizedAsset&&(this._unbindLocalizedAsset(),this._bindLocalizedAsset()))}get autoLoad(){return this._autoLoad}set disableLocalization(t){this._disableLocalization!==t&&(this._disableLocalization=t,this._onSetLocale(this._app.i18n.locale))}get disableLocalization(){return this._disableLocalization}_bindDefaultAsset(){const t=this._app.assets.get(this._defaultAsset);t?this._onDefaultAssetAdd(t):this._app.assets.once(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this)}_unbindDefaultAsset(){if(!this._defaultAsset)return;this._app.assets.off(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this);const t=this._app.assets.get(this._defaultAsset);t&&(t.off("add:localized",this._onLocaleAdd,this),t.off("remove:localized",this._onLocaleRemove,this),t.off("remove",this._onDefaultAssetRemove,this))}_onDefaultAssetAdd(t){this._defaultAsset===t.id&&(t.on("add:localized",this._onLocaleAdd,this),t.on("remove:localized",this._onLocaleRemove,this),t.once("remove",this._onDefaultAssetRemove,this))}_onDefaultAssetRemove(t){this._defaultAsset===t.id&&(t.off("add:localized",this._onLocaleAdd,this),t.off("remove:localized",this._onLocaleAdd,this),this._app.assets.once(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this))}_bindLocalizedAsset(){if(!this._autoLoad)return;const t=this._app.assets.get(this._localizedAsset);t&&(t.on("load",this._onLocalizedAssetLoad,this),t.on("change",this._onLocalizedAssetChange,this),t.on("remove",this._onLocalizedAssetRemove,this),t.resource?this._onLocalizedAssetLoad(t):this._app.assets.load(t))}_unbindLocalizedAsset(){const t=this._app.assets.get(this._localizedAsset);t&&(t.off("load",this._onLocalizedAssetLoad,this),t.off("change",this._onLocalizedAssetChange,this),t.off("remove",this._onLocalizedAssetRemove,this))}_onLocalizedAssetAdd(t){this._localizedAsset===t.id&&this._bindLocalizedAsset()}_onLocalizedAssetLoad(t){this.fire("load",t)}_onLocalizedAssetChange(t,e,s,i){this.fire("change",t,e,s,i)}_onLocalizedAssetRemove(t){this._localizedAsset===t.id&&(this.localizedAsset=this._defaultAsset),this.fire("remove",t)}_onLocaleAdd(t,e){this._app.i18n.locale===t&&this._onSetLocale(t)}_onLocaleRemove(t,e){this._app.i18n.locale===t&&this._onSetLocale(t)}_onSetLocale(t){if(!this._defaultAsset){this.localizedAsset=null;return}const e=this._app.assets.get(this._defaultAsset);if(!e||this._disableLocalization){this.localizedAsset=this._defaultAsset;return}const s=e.getLocalizedAssetId(t);if(!s){this.localizedAsset=this._defaultAsset;return}this.localizedAsset=s}destroy(){this.defaultAsset=null,this._app.i18n.off("set:locale",this._onSetLocale,this),this.off()}}const tc="msdf",xR="bitmap",po=0,Qn=1,df=2,rx=3,uf=4,ff=5,pf=6,mf=7,ug=8,SR=` 	
\r\v\f`,vR=/[\w|/]/;class bR{constructor(t){this._symbols=t,this._index=0,this._last=0,this._cur=this._symbols.length>0?this._symbols[0]:null,this._buf=[],this._mode="text",this._error=null}read(){let t=this._read();for(;t===ug;)t=this._read();return t!==po&&t!==Qn&&(this._last=this._index),t}buf(){return this._buf}last(){return this._last}error(){return this._error}debugPrint(){const t=["EOF","ERROR","TEXT","OPEN_BRACKET","CLOSE_BRACKET","EQUALS","STRING","IDENTIFIER","WHITESPACE"];let e=this.read(),s="";for(;s+=`${(s.length>0?`
`:"")+t[e]} '${this.buf().join("")}'`,!(e===po||e===Qn);)e=this.read();return s}_read(){return this._buf=[],this._eof()?po:this._mode==="text"?this._text():this._tag()}_text(){for(;;)switch(this._cur){case null:return this._buf.length>0?df:po;case"[":return this._mode="tag",this._buf.length>0?df:this._tag();case"\\":switch(this._next(),this._cur){case"[":this._store();break;default:this._output("\\");break}break;default:this._store();break}}_tag(){switch(this._cur){case null:return this._error="unexpected end of input reading tag",Qn;case"[":return this._store(),rx;case"]":return this._store(),this._mode="text",uf;case"=":return this._store(),ff;case" ":case"	":case`
`:case"\r":case"\v":case"\f":return this._whitespace();case'"':return this._string();default:return this._isIdentifierSymbol(this._cur)?this._identifier():(this._error="unrecognized character",Qn)}}_whitespace(){for(this._store();SR.indexOf(this._cur)!==-1;)this._store();return ug}_string(){for(this._next();;)switch(this._cur){case null:return this._error="unexpected end of input reading string",Qn;case'"':return this._next(),pf;default:this._store();break}}_identifier(){for(this._store();this._cur!==null&&this._isIdentifierSymbol(this._cur);)this._store();return mf}_isIdentifierSymbol(t){return t.length===1&&t.match(vR)!==null}_eof(){return this._cur===null}_next(){return this._eof()||(this._index++,this._cur=this._index<this._symbols.length?this._symbols[this._index]:null),this._cur}_store(){return this._buf.push(this._cur),this._next()}_output(t){this._buf.push(t)}}class wR{constructor(t){this._scanner=new bR(t),this._error=null}parse(t,e){for(;;)switch(this._scanner.read()){case po:return!0;case Qn:return!1;case df:Array.prototype.push.apply(t,this._scanner.buf());break;case rx:if(!this._parseTag(t,e))return!1;break;default:return!1}}error(){return`Error evaluating markup at #${this._scanner.last().toString()} (${this._scanner.error()||this._error})`}_parseTag(t,e){let s=this._scanner.read();if(s!==mf)return this._error="expected identifier",!1;const i=this._scanner.buf().join("");if(i[0]==="/"){for(let n=e.length-1;n>=0;--n)if(i===`/${e[n].name}`&&e[n].end===null)return e[n].end=t.length,s=this._scanner.read(),s!==uf?(this._error="expected close bracket",!1):!0;return this._error="failed to find matching tag",!1}const r={name:i,value:null,attributes:{},start:t.length,end:null};if(s=this._scanner.read(),s===ff){if(s=this._scanner.read(),s!==pf)return this._error="expected string",!1;r.value=this._scanner.buf().join(""),s=this._scanner.read()}for(;;){switch(s){case uf:return e.push(r),!0;case mf:{const n=this._scanner.buf().join("");if(s=this._scanner.read(),s!==ff)return this._error="expected equals",!1;if(s=this._scanner.read(),s!==pf)return this._error="expected string",!1;const a=this._scanner.buf().join("");r.attributes[n]=a;break}default:return this._error="expected close bracket or identifier",!1}s=this._scanner.read()}}}function nx(l,t){for(const e in t){if(!t.hasOwnProperty(e))continue;const s=t[e];s instanceof Object?(l.hasOwnProperty(e)||(l[e]={}),nx(l[e],t[e])):l[e]=s}}function TR(l){if(l.length===0)return null;const t={};for(let e=0;e<l.length;++e){const s=l[e],i={};i[s.name]={value:s.value,attributes:s.attributes},nx(t,i)}return t}function AR(l,t){if(l.length===0)return null;const e={};for(let d=0;d<l.length;++d){const u=l[d];e.hasOwnProperty(u.start)?e[u.start].open===null?e[u.start].open=[u]:e[u.start].open.push(u):e[u.start]={open:[u],close:null},e.hasOwnProperty(u.end)?e[u.end].close===null?e[u.end].close=[u]:e[u.end].close.push(u):e[u.end]={open:null,close:[u]}}let s=[];function i(d){s=s.filter(u=>d.find(f=>f===u)===void 0)}function r(d){for(let u=0;u<d.length;++u)s.push(d[u])}const n=Object.keys(e).sort((d,u)=>d-u),a=[];for(let d=0;d<n.length;++d){const u=e[n[d]];u.close!==null&&i(u.close),u.open!==null&&r(u.open),a.push({start:n[d],tags:TR(s)})}const o=[];let h=null;for(let d=0;d<a.length;++d){const u=a[d];for(;o.length<u.start;)o.push(h?h.tags:null);h=u}for(;o.length<t;)o.push(null);return o}function ER(l){const t=new wR(l),e=[],s=[];if(!t.parse(e,s))return console.warn(t.error()),{symbols:l,tags:null};const i=s.find(n=>n.end===null);if(i)return console.warn(`Markup error: found unclosed tag='${i.name}'`),{symbols:l,tags:null};const r=AR(s,e.length);return{symbols:e,tags:r}}class CR{static evaluate(t){return ER(t)}}class MR{constructor(){this.count=0,this.quad=0,this.lines={},this.positions=[],this.normals=[],this.uvs=[],this.colors=[],this.indices=[],this.outlines=[],this.shadows=[],this.meshInstance=null}}function PR(l,t){const e=new ke(l);return e.setPositions(t.positions),e.setNormals(t.normals),e.setColors32(t.colors),e.setUvs(0,t.uvs),e.setIndices(t.indices),e.setVertexStream(Lo,t.outlines,3,void 0,Re,!1),e.setVertexStream(Fo,t.shadows,3,void 0,Re,!1),e.update(),e}const fg=/^[\r\n]$/,RR=/^[ \t]$/,pg=/^[ \t\-]|\u200b$/,IR=/^[a-z0-9]$/i,mg=/^[\u1100-\u11ff]|[\u3000-\u9fff\ua960-\ua97f]|[\uac00-\ud7ff]$/,DR=/^[〕〉》」』】〙〗〟ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻]$/,LR=["​","؜","‎","‏","‪","‫","‬","‭","‮","⁦","⁧","⁨","⁩"],FR={width:0,height:0,xadvance:0,xoffset:0,yoffset:0},_g=new Y,kR=new W,De=new Y;class OR{constructor(t){this._element=t,this._system=t.system,this._entity=t.entity,this._text="",this._symbols=[],this._colorPalette=[],this._outlinePalette=[],this._shadowPalette=[],this._symbolColors=null,this._symbolOutlineParams=null,this._symbolShadowParams=null,this._i18nKey=null,this._fontAsset=new yR(this._system.app),this._fontAsset.disableLocalization=!0,this._fontAsset.on("load",this._onFontLoad,this),this._fontAsset.on("change",this._onFontChange,this),this._fontAsset.on("remove",this._onFontRemove,this),this._font=null,this._color=new Y(1,1,1,1),this._colorUniform=new Float32Array(3),this._spacing=1,this._fontSize=32,this._fontMinY=0,this._fontMaxY=0,this._originalFontSize=32,this._maxFontSize=32,this._minFontSize=8,this._autoFitWidth=!1,this._autoFitHeight=!1,this._maxLines=-1,this._lineHeight=32,this._scaledLineHeight=32,this._wrapLines=!1,this._drawOrder=0,this._alignment=new W(.5,.5),this._autoWidth=!0,this._autoHeight=!0,this.width=0,this.height=0,this._node=new Oe,this._model=new Ui,this._model.graph=this._node,this._entity.addChild(this._node),this._meshInfo=[],this._material=null,this._aabbDirty=!0,this._aabb=new ve,this._noResize=!1,this._currentMaterialType=null,this._maskedMaterialSrc=null,this._rtlReorder=!1,this._unicodeConverter=!1,this._rtl=!1,this._outlineColor=new Y(0,0,0,1),this._outlineColorUniform=new Float32Array(4),this._outlineThicknessScale=.2,this._outlineThickness=0,this._shadowColor=new Y(0,0,0,1),this._shadowColorUniform=new Float32Array(4),this._shadowOffsetScale=.005,this._shadowOffset=new W(0,0),this._shadowOffsetUniform=new Float32Array(2),this._enableMarkup=!1,this._onScreenChange(this._element.screen),t.on("resize",this._onParentResize,this),t.on("set:screen",this._onScreenChange,this),t.on("screen:set:screenspace",this._onScreenSpaceChange,this),t.on("set:draworder",this._onDrawOrderChange,this),t.on("set:pivot",this._onPivotChange,this),this._system.app.i18n.on("set:locale",this._onLocaleSet,this),this._system.app.i18n.on("data:add",this._onLocalizationData,this),this._system.app.i18n.on("data:remove",this._onLocalizationData,this),this._rangeStart=0,this._rangeEnd=0}destroy(){this._setMaterial(null),this._model&&(this._element.removeModelFromLayers(this._model),this._model.destroy(),this._model=null),this._fontAsset.destroy(),this.font=null,this._element.off("resize",this._onParentResize,this),this._element.off("set:screen",this._onScreenChange,this),this._element.off("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.off("set:draworder",this._onDrawOrderChange,this),this._element.off("set:pivot",this._onPivotChange,this),this._system.app.i18n.off("set:locale",this._onLocaleSet,this),this._system.app.i18n.off("data:add",this._onLocalizationData,this),this._system.app.i18n.off("data:remove",this._onLocalizationData,this)}_onParentResize(t,e){this._noResize||this._font&&this._updateText()}_onScreenChange(t){t?this._updateMaterial(t.screen.screenSpace):this._updateMaterial(!1)}_onScreenSpaceChange(t){this._updateMaterial(t)}_onDrawOrderChange(t){if(this._drawOrder=t,this._model)for(let e=0,s=this._model.meshInstances.length;e<s;e++)this._model.meshInstances[e].drawOrder=t}_onPivotChange(t){this._font&&this._updateText()}_onLocaleSet(t){if(this._i18nKey){if(this.fontAsset){const e=this._system.app.assets.get(this.fontAsset);(!e||!e.resource||e.resource!==this._font)&&(this.font=null)}this._resetLocalizedText()}}_onLocalizationData(t,e){this._i18nKey&&e[this._i18nKey]&&this._resetLocalizedText()}_resetLocalizedText(){this._setText(this._system.app.i18n.getText(this._i18nKey))}_setText(t){if(this.unicodeConverter){const e=this._system.getUnicodeConverter();e?t=e(t):console.warn("Element created with unicodeConverter option but no unicodeConverter function registered")}this._text!==t&&(this._font&&this._updateText(t),this._text=t)}_updateText(t){let e;if(t===void 0&&(t=this._text),this._symbols=dh.getSymbols(t.normalize?t.normalize("NFC"):t),this._symbols.length===0&&(this._symbols=[" "]),this._enableMarkup){const u=CR.evaluate(this._symbols);this._symbols=u.symbols,e=u.tags||[]}if(this._rtlReorder){const u=this._system.app.systems.element.getRtlReorder();if(u){const f=u(this._symbols);this._rtl=f.rtl,this._symbols=f.mapping.map(function(p){return this._symbols[p]},this),e&&(e=f.mapping.map(p=>e[p]))}else console.warn("Element created with rtlReorder option but no rtlReorder function registered")}else this._rtl=!1;const s=(u,f)=>`${u.toString(!0).toLowerCase()}:${f.toFixed(2)}`,i=(u,f)=>`${u.toString(!0).toLowerCase()}:${f.x.toFixed(2)}:${f.y.toFixed(2)}`;if(e){const u={},f={},p={};this._colorPalette=[Math.round(this._color.r*255),Math.round(this._color.g*255),Math.round(this._color.b*255)],this._outlinePalette=[Math.round(this._outlineColor.r*255),Math.round(this._outlineColor.g*255),Math.round(this._outlineColor.b*255),Math.round(this._outlineColor.a*255),Math.round(this._outlineThickness*255)],this._shadowPalette=[Math.round(this._shadowColor.r*255),Math.round(this._shadowColor.g*255),Math.round(this._shadowColor.b*255),Math.round(this._shadowColor.a*255),Math.round(this._shadowOffset.x*127),Math.round(this._shadowOffset.y*127)],this._symbolColors=[],this._symbolOutlineParams=[],this._symbolShadowParams=[],u[this._color.toString(!1).toLowerCase()]=0,f[s(this._outlineColor,this._outlineThickness)]=0,p[i(this._shadowColor,this._shadowOffset)]=0;for(let m=0,_=this._symbols.length;m<_;++m){const g=e[m];let y=0;if(g&&g.color&&g.color.value){const x=g.color.value;if(x.length===7&&x[0]==="#"){const M=x.substring(1).toLowerCase();u.hasOwnProperty(M)?y=u[M]:/^[0-9a-f]{6}$/.test(M)&&(y=this._colorPalette.length/3,u[M]=y,this._colorPalette.push(parseInt(M.substring(0,2),16)),this._colorPalette.push(parseInt(M.substring(2,4),16)),this._colorPalette.push(parseInt(M.substring(4,6),16)))}}this._symbolColors.push(y);let w=0;if(g&&g.outline&&(g.outline.attributes.color||g.outline.attributes.thickness)){let x=g.outline.attributes.color?_g.fromString(g.outline.attributes.color):this._outlineColor,M=Number(g.outline.attributes.thickness);(Number.isNaN(x.r)||Number.isNaN(x.g)||Number.isNaN(x.b)||Number.isNaN(x.a))&&(x=this._outlineColor),Number.isNaN(M)&&(M=this._outlineThickness);const S=s(x,M);f.hasOwnProperty(S)?w=f[S]:(w=this._outlinePalette.length/5,f[S]=w,this._outlinePalette.push(Math.round(x.r*255),Math.round(x.g*255),Math.round(x.b*255),Math.round(x.a*255),Math.round(M*255)))}this._symbolOutlineParams.push(w);let C=0;if(g&&g.shadow&&(g.shadow.attributes.color||g.shadow.attributes.offset||g.shadow.attributes.offsetX||g.shadow.attributes.offsetY)){let x=g.shadow.attributes.color?_g.fromString(g.shadow.attributes.color):this._shadowColor;const M=Number(g.shadow.attributes.offset),S=Number(g.shadow.attributes.offsetX),v=Number(g.shadow.attributes.offsetY);(Number.isNaN(x.r)||Number.isNaN(x.g)||Number.isNaN(x.b)||Number.isNaN(x.a))&&(x=this._shadowColor);const E=kR.set(Number.isNaN(S)?Number.isNaN(M)?this._shadowOffset.x:M:S,Number.isNaN(v)?Number.isNaN(M)?this._shadowOffset.y:M:v),T=i(x,E);p.hasOwnProperty(T)?C=p[T]:(C=this._shadowPalette.length/6,p[T]=C,this._shadowPalette.push(Math.round(x.r*255),Math.round(x.g*255),Math.round(x.b*255),Math.round(x.a*255),Math.round(E.x*127),Math.round(E.y*127)))}this._symbolShadowParams.push(C)}}else this._colorPalette=[],this._symbolColors=null,this._symbolOutlineParams=null,this._symbolShadowParams=null;this._updateMaterialEmissive(),this._updateMaterialOutline(),this._updateMaterialShadow();const r=this._calculateCharsPerTexture();let n=!1;const a=this._element,o=a._isScreenSpace(),h=a._isScreenCulled(),d=function(u){return a.isVisibleForCamera(u)};for(let u=0,f=this._meshInfo.length;u<f;u++){const p=r[u]||0,m=this._meshInfo[u];if(m.count!==p){if(n||(a.removeModelFromLayers(this._model),n=!0),m.count=p,m.positions.length=m.normals.length=p*3*4,m.indices.length=p*3*2,m.uvs.length=p*2*4,m.colors.length=p*4*4,m.outlines.length=p*4*3,m.shadows.length=p*4*3,m.meshInstance&&this._removeMeshInstance(m.meshInstance),p===0){m.meshInstance=null;continue}for(let y=0;y<p;y++)m.indices[y*3*2+0]=y*4,m.indices[y*3*2+1]=y*4+1,m.indices[y*3*2+2]=y*4+3,m.indices[y*3*2+3]=y*4+2,m.indices[y*3*2+4]=y*4+3,m.indices[y*3*2+5]=y*4+1,m.normals[y*4*3+0]=0,m.normals[y*4*3+1]=0,m.normals[y*4*3+2]=-1,m.normals[y*4*3+3]=0,m.normals[y*4*3+4]=0,m.normals[y*4*3+5]=-1,m.normals[y*4*3+6]=0,m.normals[y*4*3+7]=0,m.normals[y*4*3+8]=-1,m.normals[y*4*3+9]=0,m.normals[y*4*3+10]=0,m.normals[y*4*3+11]=-1;const _=PR(this._system.app.graphicsDevice,m),g=new Be(_,this._material,this._node);if(g.name=`Text Element: ${this._entity.name}`,g.castShadow=!1,g.receiveShadow=!1,g.cull=!o,g.screenSpace=o,g.drawOrder=this._drawOrder,h&&(g.cull=!0,g.isVisibleFunc=d),this._setTextureParams(g,this._font.textures[u]),g.setParameter("material_emissive",this._colorUniform),g.setParameter("material_opacity",this._color.a),g.setParameter("font_sdfIntensity",this._font.intensity),g.setParameter("font_pxrange",this._getPxRange(this._font)),g.setParameter("font_textureWidth",this._font.data.info.maps[u].width),g.setParameter("outline_color",this._outlineColorUniform),g.setParameter("outline_thickness",this._outlineThicknessScale*this._outlineThickness),g.setParameter("shadow_color",this._shadowColorUniform),this._symbolShadowParams)this._shadowOffsetUniform[0]=0,this._shadowOffsetUniform[1]=0;else{const y=-this._font.data.info.maps[u].width/this._font.data.info.maps[u].height;this._shadowOffsetUniform[0]=this._shadowOffsetScale*this._shadowOffset.x,this._shadowOffsetUniform[1]=y*this._shadowOffsetScale*this._shadowOffset.y}g.setParameter("shadow_offset",this._shadowOffsetUniform),m.meshInstance=g,this._model.meshInstances.push(g)}}this._element.maskedBy&&this._element._setMaskedBy(this._element.maskedBy),n&&this._element.enabled&&this._entity.enabled&&this._element.addModelToLayers(this._model),this._updateMeshes(),this._rangeStart=0,this._rangeEnd=this._symbols.length,this._updateRenderRange()}_removeMeshInstance(t){t.destroy();const e=this._model.meshInstances.indexOf(t);e!==-1&&this._model.meshInstances.splice(e,1)}_setMaterial(t){if(this._material=t,this._model)for(let e=0,s=this._model.meshInstances.length;e<s;e++){const i=this._model.meshInstances[e];i.material=t}}_updateMaterial(t){const e=this._element,s=e._isScreenCulled(),i=function(n){return e.isVisibleForCamera(n)},r=this._font&&this._font.type===tc;if(this._material=this._system.getTextElementMaterial(t,r,this._enableMarkup),this._model)for(let n=0,a=this._model.meshInstances.length;n<a;n++){const o=this._model.meshInstances[n];o.cull=!t,o.material=this._material,o.screenSpace=t,s?(o.cull=!0,o.isVisibleFunc=i):o.isVisibleFunc=null}}_updateMaterialEmissive(){this._symbolColors?(this._colorUniform[0]=1,this._colorUniform[1]=1,this._colorUniform[2]=1):(De.linear(this._color),this._colorUniform[0]=De.r,this._colorUniform[1]=De.g,this._colorUniform[2]=De.b)}_updateMaterialOutline(){this._symbolOutlineParams?(this._outlineColorUniform[0]=0,this._outlineColorUniform[1]=0,this._outlineColorUniform[2]=0,this._outlineColorUniform[3]=1):(De.linear(this._outlineColor),this._outlineColorUniform[0]=De.r,this._outlineColorUniform[1]=De.g,this._outlineColorUniform[2]=De.b,this._outlineColorUniform[3]=De.a)}_updateMaterialShadow(){this._symbolOutlineParams?(this._shadowColorUniform[0]=0,this._shadowColorUniform[1]=0,this._shadowColorUniform[2]=0,this._shadowColorUniform[3]=0):(De.linear(this._shadowColor),this._shadowColorUniform[0]=De.r,this._shadowColorUniform[1]=De.g,this._shadowColorUniform[2]=De.b,this._shadowColorUniform[3]=De.a)}_isWordBoundary(t){return pg.test(t)}_isValidNextChar(t){return t!==null&&!DR.test(t)}_isNextCJKBoundary(t,e){return mg.test(t)&&(pg.test(e)||IR.test(e))}_isNextCJKWholeWord(t){return mg.test(t)}_updateMeshes(){const t=this._font.data,e=this,s=Math.min(this._minFontSize,this._maxFontSize),i=this._maxFontSize,r=this._shouldAutoFit();r&&(this._fontSize=this._maxFontSize);const n=32,a=this._symbols.length;let o=0,h=0,d=0,u=0,f=1,p=0,m=0,_=0,g=0,y=0,w=0;const C=Math.abs(this._element.anchor.x-this._element.anchor.z)>=1e-4;let x=this._element.calculatedWidth;(this.autoWidth&&!C||!this._wrapLines)&&(x=Number.POSITIVE_INFINITY);let M=0,S=0,v,E,T,R;function D(I,F,O){e._lineWidths.push(Math.abs(O));const B=_>F?F+1:_,U=_>F?_+1:F,V=I.slice(B,U);if(w){let X=V.length;for(;X--&&w>0;)fg.test(V[X])&&(V.splice(X,1),w--)}e._lineContents.push(V.join("")),o=0,h-=e._scaledLineHeight,f++,g=0,y=0,w=0,p=0,_=F}let P=!0;for(;P;){P=!1,r?this._scaledLineHeight=this._lineHeight*this._fontSize/(this._maxFontSize||1e-4):this._scaledLineHeight=this._lineHeight,this.width=0,this.height=0,this._lineWidths=[],this._lineContents=[],o=0,h=0,d=0,u=0,f=1,p=0,m=0,_=0,g=0,y=0,w=0;const I=this._fontSize/n;M=this._fontMinY*I,S=this._fontMaxY*I;for(let se=0;se<this._meshInfo.length;se++)this._meshInfo[se].quad=0,this._meshInfo[se].lines={};let F=255,O=255,B=255,U=255+255*256,V=255+255*256,X=0,Z=255+255*256,K=255+255*256,J=127+127*256;for(let se=0;se<a;se++){if(v=this._symbols[se],R=se+1>=a?null:this._symbols[se+1],fg.test(v)){w++,(!this._wrapLines||this._maxLines<0||f<this._maxLines)&&(D(this._symbols,se,u),m=se+1,_=se+1);continue}let ut=0,mt=0,ft=0,Vi=1,Ga,bn;if(E=t.chars[v],!E)if(LR.indexOf(v)!==-1)E=FR;else{if(t.chars[" "])E=t.chars[" "];else for(const Q in t.chars){E=t.chars[Q];break}t.missingChars||(t.missingChars=new Set),t.missingChars.has(v)||(console.warn(`Character '${v}' is missing from the font ${t.info.face}`),t.missingChars.add(v))}if(E){let Q=0;if(y>0){const Pe=this._font.data.kerning;if(Pe){const $e=Pe[dh.getCodePoint(this._symbols[se-1])||0];$e&&(Q=$e[dh.getCodePoint(this._symbols[se])||0]||0)}}Ga=E.scale||1,bn=(E.width+E.height)/2,Vi=I*bn/Ga,ft=(E.xadvance+Q)*I,ut=(E.xoffset-Q)*I,mt=E.yoffset*I}else console.error(`Couldn't substitute missing character: '${v}'`);const _l=RR.test(v),Ha=E&&E.map||0,rd=-this._font.data.info.maps[Ha].width/this._font.data.info.maps[Ha].height,te=this._meshInfo[Ha],gl=o+this._spacing*ft;if(gl>x&&y>0&&!_l&&(this._maxLines<0||f<this._maxLines))if(g===0)m=se,D(this._symbols,se,u);else{const Q=Math.max(se-m,0);if(this._meshInfo.length<=1)te.lines[f-1]-=Q,te.quad-=Q;else{const Pe=m,$e=se;for(let Ke=Pe;Ke<$e;Ke++){const Ns=this._symbols[Ke],_r=t.chars[Ns],yl=this._meshInfo[_r&&_r.map||0];yl.lines[f-1]-=1,yl.quad-=1}}se-=Q+1,D(this._symbols,m,p);continue}T=te.quad,te.lines[f-1]=T;let Lt=o-ut,$=Lt+Vi;const ue=h-mt,ge=ue+Vi;if(this._rtl){const Q=Vi-ut-this._spacing*ft-ut;Lt-=Q,$-=Q}te.positions[T*4*3+0]=Lt,te.positions[T*4*3+1]=ue,te.positions[T*4*3+2]=d,te.positions[T*4*3+3]=$,te.positions[T*4*3+4]=ue,te.positions[T*4*3+5]=d,te.positions[T*4*3+6]=$,te.positions[T*4*3+7]=ge,te.positions[T*4*3+8]=d,te.positions[T*4*3+9]=Lt,te.positions[T*4*3+10]=ge,te.positions[T*4*3+11]=d,this.width=Math.max(this.width,gl);let xe;if(this._shouldAutoFitWidth()&&this.width>this._element.calculatedWidth&&(xe=Math.floor(this._element.fontSize*this._element.calculatedWidth/(this.width||1e-4)),xe=z.clamp(xe,s,i),xe!==this._element.fontSize)){this._fontSize=xe,P=!0;break}if(this.height=Math.max(this.height,S-(h+M)),this._shouldAutoFitHeight()&&this.height>this._element.calculatedHeight&&(xe=z.clamp(this._fontSize-1,s,i),xe!==this._element.fontSize)){this._fontSize=xe,P=!0;break}o+=this._spacing*ft,_l||(u=o),(this._isWordBoundary(v)||this._isValidNextChar(R)&&(this._isNextCJKBoundary(v,R)||this._isNextCJKWholeWord(R)))&&(g++,p=u,m=se+1),y++;const Ne=this._getUv(v);if(te.uvs[T*4*2+0]=Ne[0],te.uvs[T*4*2+1]=1-Ne[1],te.uvs[T*4*2+2]=Ne[2],te.uvs[T*4*2+3]=1-Ne[1],te.uvs[T*4*2+4]=Ne[2],te.uvs[T*4*2+5]=1-Ne[3],te.uvs[T*4*2+6]=Ne[0],te.uvs[T*4*2+7]=1-Ne[3],this._symbolColors){const Q=this._symbolColors[se]*3;F=this._colorPalette[Q],O=this._colorPalette[Q+1],B=this._colorPalette[Q+2]}if(te.colors[T*4*4+0]=F,te.colors[T*4*4+1]=O,te.colors[T*4*4+2]=B,te.colors[T*4*4+3]=255,te.colors[T*4*4+4]=F,te.colors[T*4*4+5]=O,te.colors[T*4*4+6]=B,te.colors[T*4*4+7]=255,te.colors[T*4*4+8]=F,te.colors[T*4*4+9]=O,te.colors[T*4*4+10]=B,te.colors[T*4*4+11]=255,te.colors[T*4*4+12]=F,te.colors[T*4*4+13]=O,te.colors[T*4*4+14]=B,te.colors[T*4*4+15]=255,this._symbolOutlineParams){const Q=this._symbolOutlineParams[se]*5;U=this._outlinePalette[Q]+this._outlinePalette[Q+1]*256,V=this._outlinePalette[Q+2]+this._outlinePalette[Q+3]*256,X=this._outlinePalette[Q+4]}if(te.outlines[T*4*3+0]=U,te.outlines[T*4*3+1]=V,te.outlines[T*4*3+2]=X,te.outlines[T*4*3+3]=U,te.outlines[T*4*3+4]=V,te.outlines[T*4*3+5]=X,te.outlines[T*4*3+6]=U,te.outlines[T*4*3+7]=V,te.outlines[T*4*3+8]=X,te.outlines[T*4*3+9]=U,te.outlines[T*4*3+10]=V,te.outlines[T*4*3+11]=X,this._symbolShadowParams){const Q=this._symbolShadowParams[se]*6;Z=this._shadowPalette[Q]+this._shadowPalette[Q+1]*256,K=this._shadowPalette[Q+2]+this._shadowPalette[Q+3]*256,J=this._shadowPalette[Q+4]+127+Math.round(rd*this._shadowPalette[Q+5]+127)*256}te.shadows[T*4*3+0]=Z,te.shadows[T*4*3+1]=K,te.shadows[T*4*3+2]=J,te.shadows[T*4*3+3]=Z,te.shadows[T*4*3+4]=K,te.shadows[T*4*3+5]=J,te.shadows[T*4*3+6]=Z,te.shadows[T*4*3+7]=K,te.shadows[T*4*3+8]=J,te.shadows[T*4*3+9]=Z,te.shadows[T*4*3+10]=K,te.shadows[T*4*3+11]=J,te.quad++}P||_<a&&D(this._symbols,a,o)}this._noResize=!0,this.autoWidth=this._autoWidth,this.autoHeight=this._autoHeight,this._noResize=!1;const L=this._element.pivot.x,k=this._element.pivot.y,H=this._alignment.x,N=this._alignment.y;for(let I=0;I<this._meshInfo.length;I++){if(this._meshInfo[I].count===0)continue;let F=0;for(const V in this._meshInfo[I].lines){const X=this._meshInfo[I].lines[V],Z=this._lineWidths[parseInt(V,10)],K=-L*this._element.calculatedWidth+H*(this._element.calculatedWidth-Z)*(this._rtl?-1:1),J=(1-k)*this._element.calculatedHeight-S-(1-N)*(this._element.calculatedHeight-this.height);for(let se=F;se<=X;se++)this._meshInfo[I].positions[se*4*3]+=K,this._meshInfo[I].positions[se*4*3+3]+=K,this._meshInfo[I].positions[se*4*3+6]+=K,this._meshInfo[I].positions[se*4*3+9]+=K,this._meshInfo[I].positions[se*4*3+1]+=J,this._meshInfo[I].positions[se*4*3+4]+=J,this._meshInfo[I].positions[se*4*3+7]+=J,this._meshInfo[I].positions[se*4*3+10]+=J;if(this._rtl)for(let se=F;se<=X;se++){const _e=se*4*3;for(let ft=0;ft<4;++ft)this._meshInfo[I].positions[_e+ft*3]=this._element.calculatedWidth-this._meshInfo[I].positions[_e+ft*3]+K*2;const ut=this._meshInfo[I].positions[_e+3],mt=this._meshInfo[I].positions[_e+6];this._meshInfo[I].positions[_e+3]=this._meshInfo[I].positions[_e+0],this._meshInfo[I].positions[_e+6]=this._meshInfo[I].positions[_e+9],this._meshInfo[I].positions[_e+0]=ut,this._meshInfo[I].positions[_e+9]=mt}F=X+1}const O=this._meshInfo[I].count*4,B=this._meshInfo[I].quad*4,U=new vo(this._meshInfo[I].meshInstance.mesh.vertexBuffer);for(let V=0;V<O;V++)V>=B?(U.element[Xe].set(0,0,0),U.element[ds].set(0,0),U.element[It].set(0,0,0,0),U.element[Lo].set(0,0,0,0),U.element[Fo].set(0,0,0,0)):(U.element[Xe].set(this._meshInfo[I].positions[V*3+0],this._meshInfo[I].positions[V*3+1],this._meshInfo[I].positions[V*3+2]),U.element[ds].set(this._meshInfo[I].uvs[V*2+0],this._meshInfo[I].uvs[V*2+1]),U.element[It].set(this._meshInfo[I].colors[V*4+0],this._meshInfo[I].colors[V*4+1],this._meshInfo[I].colors[V*4+2],this._meshInfo[I].colors[V*4+3]),U.element[Lo].set(this._meshInfo[I].outlines[V*3+0],this._meshInfo[I].outlines[V*3+1],this._meshInfo[I].outlines[V*3+2]),U.element[Fo].set(this._meshInfo[I].shadows[V*3+0],this._meshInfo[I].shadows[V*3+1],this._meshInfo[I].shadows[V*3+2])),U.next();U.end(),this._meshInfo[I].meshInstance.mesh.aabb.compute(this._meshInfo[I].positions),this._meshInfo[I].meshInstance._aabbVer=-1}this._aabbDirty=!0}_onFontRender(){this.font=this._font}_onFontLoad(t){this.font!==t.resource&&(this.font=t.resource)}_onFontChange(t,e,s,i){if(e==="data"){this._font.data=s;const r=this._font.data.info.maps.length;for(let n=0;n<r;n++){if(!this._meshInfo[n])continue;const a=this._meshInfo[n].meshInstance;a&&(a.setParameter("font_sdfIntensity",this._font.intensity),a.setParameter("font_pxrange",this._getPxRange(this._font)),a.setParameter("font_textureWidth",this._font.data.info.maps[n].width))}}}_onFontRemove(t){}_setTextureParams(t,e){this._font&&(this._font.type===tc?(t.deleteParameter("texture_emissiveMap"),t.deleteParameter("texture_opacityMap"),t.setParameter("texture_msdfMap",e)):this._font.type===xR&&(t.deleteParameter("texture_msdfMap"),t.setParameter("texture_emissiveMap",e),t.setParameter("texture_opacityMap",e)))}_getPxRange(t){const e=Object.keys(this._font.data.chars);for(let s=0;s<e.length;s++){const i=this._font.data.chars[e[s]];if(i.range)return(i.scale||1)*i.range}return 2}_getUv(t){const e=this._font.data;if(!e.chars[t]){const p=" ";return e.chars[p]?this._getUv(p):[0,0,0,0]}const s=e.chars[t].map,i=e.info.maps[s].width,r=e.info.maps[s].height,n=e.chars[t].x,a=e.chars[t].y,o=n,h=a,d=n+e.chars[t].width,u=a-e.chars[t].height,f=1-e.chars[t].height/r;return[o/i,f-h/r,d/i,f-u/r]}onEnable(){this._fontAsset.autoLoad=!0,this._model&&this._element.addModelToLayers(this._model)}onDisable(){this._fontAsset.autoLoad=!1,this._model&&this._element.removeModelFromLayers(this._model)}_setStencil(t){if(this._model){const e=this._model.meshInstances;for(let s=0;s<e.length;s++)e[s].stencilFront=t,e[s].stencilBack=t}}_shouldAutoFitWidth(){return this._autoFitWidth&&!this._autoWidth}_shouldAutoFitHeight(){return this._autoFitHeight&&!this._autoHeight}_shouldAutoFit(){return this._autoFitWidth&&!this._autoWidth||this._autoFitHeight&&!this._autoHeight}_calculateCharsPerTexture(t){const e={};t===void 0&&(t=this._symbols.length);for(let s=0,i=t;s<i;s++){const r=this._symbols[s];let n=this._font.data.chars[r];n||(n=this._font.data.chars[" "],n||(n=this._font.data.chars[Object.keys(this._font.data.chars)[0]]));const a=n.map;e[a]?e[a]++:e[a]=1}return e}_updateRenderRange(){const t=this._rangeStart===0?0:this._calculateCharsPerTexture(this._rangeStart),e=this._rangeEnd===0?0:this._calculateCharsPerTexture(this._rangeEnd);for(let s=0,i=this._meshInfo.length;s<i;s++){const r=t[s]||0,n=e[s]||0,a=this._meshInfo[s].meshInstance;if(a){const o=a.mesh;o&&(o.primitive[0].base=r*3*2,o.primitive[0].count=(n-r)*3*2)}}}set text(t){this._i18nKey=null;const e=t!=null&&t.toString()||"";this._setText(e)}get text(){return this._text}set key(t){const e=t!==null?t.toString():null;this._i18nKey!==e&&(this._i18nKey=e,e?(this._fontAsset.disableLocalization=!1,this._resetLocalizedText()):this._fontAsset.disableLocalization=!0)}get key(){return this._i18nKey}set color(t){const e=t.r,s=t.g,i=t.b;if(this._color===t&&console.warn("Setting element.color to itself will have no effect"),!(this._color.r===e&&this._color.g===s&&this._color.b===i)&&(this._color.r=e,this._color.g=s,this._color.b=i,!!this._model)){if(this._symbolColors)this._font&&this._updateText();else{De.linear(this._color),this._colorUniform[0]=De.r,this._colorUniform[1]=De.g,this._colorUniform[2]=De.b;for(let r=0,n=this._model.meshInstances.length;r<n;r++)this._model.meshInstances[r].setParameter("material_emissive",this._colorUniform)}this._element&&this._element.fire("set:color",this._color)}}get color(){return this._color}set opacity(t){if(this._color.a!==t&&(this._color.a=t,this._model))for(let e=0,s=this._model.meshInstances.length;e<s;e++)this._model.meshInstances[e].setParameter("material_opacity",t);this._element&&this._element.fire("set:opacity",t)}get opacity(){return this._color.a}set lineHeight(t){const e=this._lineHeight;this._lineHeight=t,this._scaledLineHeight=t,e!==t&&this._font&&this._updateText()}get lineHeight(){return this._lineHeight}set wrapLines(t){const e=this._wrapLines;this._wrapLines=t,e!==t&&this._font&&this._updateText()}get wrapLines(){return this._wrapLines}get lines(){return this._lineContents}set spacing(t){const e=this._spacing;this._spacing=t,e!==t&&this._font&&this._updateText()}get spacing(){return this._spacing}set fontSize(t){const e=this._fontSize;this._fontSize=t,this._originalFontSize=t,e!==t&&this._font&&this._updateText()}get fontSize(){return this._fontSize}set fontAsset(t){this._fontAsset.defaultAsset=t}get fontAsset(){return this._fontAsset.localizedAsset}set font(t){let e;if(this._font&&(e=this._font.type,this._font.off&&this._font.off("render",this._onFontRender,this)),this._font=t,this._fontMinY=0,this._fontMaxY=0,!t)return;const s=this._font.data;for(const r in s.chars){const n=s.chars[r];n.bounds&&(this._fontMinY=Math.min(this._fontMinY,n.bounds[1]),this._fontMaxY=Math.max(this._fontMaxY,n.bounds[3]))}if(this._font.on&&this._font.on("render",this._onFontRender,this),this._fontAsset.localizedAsset&&this._system.app.assets.get(this._fontAsset.localizedAsset).resource!==this._font&&(this._fontAsset.defaultAsset=null),t.type!==e){const r=this._element._isScreenSpace();this._updateMaterial(r)}for(let r=0,n=this._font.textures.length;r<n;r++)if(!this._meshInfo[r])this._meshInfo[r]=new MR;else{const a=this._meshInfo[r].meshInstance;a&&(a.setParameter("font_sdfIntensity",this._font.intensity),a.setParameter("font_pxrange",this._getPxRange(this._font)),a.setParameter("font_textureWidth",this._font.data.info.maps[r].width),this._setTextureParams(a,this._font.textures[r]))}let i=!1;for(let r=this._font.textures.length;r<this._meshInfo.length;r++)this._meshInfo[r].meshInstance&&(i||(this._element.removeModelFromLayers(this._model),i=!0),this._removeMeshInstance(this._meshInfo[r].meshInstance));this._meshInfo.length>this._font.textures.length&&(this._meshInfo.length=this._font.textures.length),this._updateText()}get font(){return this._font}set alignment(t){t instanceof W?this._alignment.set(t.x,t.y):this._alignment.set(t[0],t[1]),this._font&&this._updateText()}get alignment(){return this._alignment}set autoWidth(t){const e=this._autoWidth;if(this._autoWidth=t,t&&Math.abs(this._element.anchor.x-this._element.anchor.z)<1e-4&&(this._element.width=this.width),e!==t){const s=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;s!==this._fontSize&&(this._fontSize=s,this._font&&this._updateText())}}get autoWidth(){return this._autoWidth}set autoHeight(t){const e=this._autoHeight;if(this._autoHeight=t,t&&Math.abs(this._element.anchor.y-this._element.anchor.w)<1e-4&&(this._element.height=this.height),e!==t){const s=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;s!==this._fontSize&&(this._fontSize=s,this._font&&this._updateText())}}get autoHeight(){return this._autoHeight}set rtlReorder(t){this._rtlReorder!==t&&(this._rtlReorder=t,this._font&&this._updateText())}get rtlReorder(){return this._rtlReorder}set unicodeConverter(t){this._unicodeConverter!==t&&(this._unicodeConverter=t,this._setText(this._text))}get unicodeConverter(){return this._unicodeConverter}get aabb(){if(this._aabbDirty){let t=!1;for(let e=0;e<this._meshInfo.length;e++)this._meshInfo[e].meshInstance&&(t?this._aabb.add(this._meshInfo[e].meshInstance.aabb):(this._aabb.copy(this._meshInfo[e].meshInstance.aabb),t=!0));this._aabbDirty=!1}return this._aabb}set outlineColor(t){const e=t instanceof Y?t.r:t[0],s=t instanceof Y?t.g:t[1],i=t instanceof Y?t.b:t[2],r=t instanceof Y?t.a:t[3];if(this._outlineColor===t&&console.warn("Setting element.outlineColor to itself will have no effect"),!(this._outlineColor.r===e&&this._outlineColor.g===s&&this._outlineColor.b===i&&this._outlineColor.a===r)&&(this._outlineColor.r=e,this._outlineColor.g=s,this._outlineColor.b=i,this._outlineColor.a=r,!!this._model)){if(this._symbolOutlineParams)this._font&&this._updateText();else{De.linear(this._outlineColor),this._outlineColorUniform[0]=De.r,this._outlineColorUniform[1]=De.g,this._outlineColorUniform[2]=De.b,this._outlineColorUniform[3]=De.a;for(let n=0,a=this._model.meshInstances.length;n<a;n++)this._model.meshInstances[n].setParameter("outline_color",this._outlineColorUniform)}this._element&&this._element.fire("set:outline",this._color)}}get outlineColor(){return this._outlineColor}set outlineThickness(t){const e=this._outlineThickness;if(this._outlineThickness=t,e!==t&&this._font){if(!this._model)return;if(this._symbolOutlineParams)this._font&&this._updateText();else for(let s=0,i=this._model.meshInstances.length;s<i;s++)this._model.meshInstances[s].setParameter("outline_thickness",this._outlineThicknessScale*this._outlineThickness)}}get outlineThickness(){return this._outlineThickness}set shadowColor(t){const e=t instanceof Y?t.r:t[0],s=t instanceof Y?t.g:t[1],i=t instanceof Y?t.b:t[2],r=t instanceof Y?t.a:t[3];if(this._shadowColor===t&&b.warn("Setting element.shadowColor to itself will have no effect"),!(this._shadowColor.r===e&&this._shadowColor.g===s&&this._shadowColor.b===i&&this._shadowColor.a===r)&&(this._shadowColor.r=e,this._shadowColor.g=s,this._shadowColor.b=i,this._shadowColor.a=r,!!this._model))if(this._symbolShadowParams)this._font&&this._updateText();else{De.linear(this._shadowColor),this._shadowColorUniform[0]=De.r,this._shadowColorUniform[1]=De.g,this._shadowColorUniform[2]=De.b,this._shadowColorUniform[3]=De.a;for(let n=0,a=this._model.meshInstances.length;n<a;n++)this._model.meshInstances[n].setParameter("shadow_color",this._shadowColorUniform)}}get shadowColor(){return this._shadowColor}set shadowOffset(t){const e=t instanceof W?t.x:t[0],s=t instanceof W?t.y:t[1];if(!(this._shadowOffset.x===e&&this._shadowOffset.y===s)&&(this._shadowOffset.set(e,s),this._font&&this._model))if(this._symbolShadowParams)this._updateText();else for(let i=0,r=this._model.meshInstances.length;i<r;i++){const n=-this._font.data.info.maps[i].width/this._font.data.info.maps[i].height;this._shadowOffsetUniform[0]=this._shadowOffsetScale*this._shadowOffset.x,this._shadowOffsetUniform[1]=n*this._shadowOffsetScale*this._shadowOffset.y,this._model.meshInstances[i].setParameter("shadow_offset",this._shadowOffsetUniform)}}get shadowOffset(){return this._shadowOffset}set minFontSize(t){this._minFontSize!==t&&(this._minFontSize=t,this.font&&this._shouldAutoFit()&&this._updateText())}get minFontSize(){return this._minFontSize}set maxFontSize(t){this._maxFontSize!==t&&(this._maxFontSize=t,this.font&&this._shouldAutoFit()&&this._updateText())}get maxFontSize(){return this._maxFontSize}set autoFitWidth(t){this._autoFitWidth!==t&&(this._autoFitWidth=t,this._fontSize=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize,this.font&&this._updateText())}get autoFitWidth(){return this._autoFitWidth}set autoFitHeight(t){this._autoFitHeight!==t&&(this._autoFitHeight=t,this._fontSize=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize,this.font&&this._updateText())}get autoFitHeight(){return this._autoFitHeight}set maxLines(t){this._maxLines!==t&&(t===null&&this._maxLines===-1||(this._maxLines=t===null?-1:t,this.font&&this._wrapLines&&this._updateText()))}get maxLines(){return this._maxLines}set enableMarkup(t){if(t=!!t,this._enableMarkup===t)return;this._enableMarkup=t,this.font&&this._updateText();const e=this._element._isScreenSpace();this._updateMaterial(e)}get enableMarkup(){return this._enableMarkup}get symbols(){return this._symbols}get symbolColors(){return this._symbolColors===null?null:this._symbolColors.map(function(t){return this._colorPalette.slice(t*3,t*3+3)},this)}get symbolOutlineParams(){return this._symbolOutlineParams===null?null:this._symbolOutlineParams.map(function(t){return this._outlinePalette.slice(t*5,t*5+5)},this)}get symbolShadowParams(){return this._symbolShadowParams===null?null:this._symbolShadowParams.map(function(t){return this._shadowPalette.slice(t*6,t*6+6)},this)}get rtl(){return this._rtl}set rangeStart(t){t=Math.max(0,Math.min(t,this._symbols.length)),t!==this._rangeStart&&(this._rangeStart=t,this._updateRenderRange())}get rangeStart(){return this._rangeStart}set rangeEnd(t){t=Math.max(this._rangeStart,Math.min(t,this._symbols.length)),t!==this._rangeEnd&&(this._rangeEnd=t,this._updateRenderRange())}get rangeEnd(){return this._rangeEnd}}const eu=new A,gg=new q,ci=new A,BR=new A,as=new q,eh=new q,th=new q,Vn=new q;class Kt extends pe{constructor(e,s){super(e,s);c(this,"_evtLayersChanged",null);c(this,"_evtLayerAdded",null);c(this,"_evtLayerRemoved",null);this._beingInitialized=!1,this._anchor=new ee,this._localAnchor=new ee,this._pivot=new W,this._width=this._calculatedWidth=32,this._height=this._calculatedHeight=32,this._margin=new ee(0,0,-32,-32),this._modelTransform=new q,this._screenToWorld=new q,this._anchorTransform=new q,this._anchorDirty=!0,this._parentWorldTransform=new q,this._screenTransform=new q,this._screenCorners=[new A,new A,new A,new A],this._canvasCorners=[new W,new W,new W,new W],this._worldCorners=[new A,new A,new A,new A],this._cornersDirty=!0,this._canvasCornersDirty=!0,this._worldCornersDirty=!0,this.entity.on("insert",this._onInsert,this),this._patch(),this.screen=null,this._type=vh,this._image=null,this._text=null,this._group=null,this._drawOrder=0,this._fitMode=bh,this._useInput=!1,this._layers=[nl],this._addedModels=[],this._batchGroupId=-1,this._batchGroup=null,this._offsetReadAt=0,this._maskOffset=.5,this._maskedBy=null}get data(){const e=this.system.store[this.entity.getGuid()];return e?e.data:null}set enabled(e){const s=this.data,i=s.enabled;s.enabled=e,this.fire("set","enabled",i,e)}get enabled(){return this.data.enabled}get _absLeft(){return this._localAnchor.x+this._margin.x}get _absRight(){return this._localAnchor.z-this._margin.z}get _absTop(){return this._localAnchor.w-this._margin.w}get _absBottom(){return this._localAnchor.y+this._margin.y}get _hasSplitAnchorsX(){return Math.abs(this._anchor.x-this._anchor.z)>.001}get _hasSplitAnchorsY(){return Math.abs(this._anchor.y-this._anchor.w)>.001}get aabb(){return this._image?this._image.aabb:this._text?this._text.aabb:null}set anchor(e){e instanceof ee?this._anchor.copy(e):this._anchor.set(...e),!this.entity._parent&&!this.screen?this._calculateLocalAnchors():this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY),this._anchorDirty=!0,this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:anchor",this._anchor)}get anchor(){return this._anchor}set batchGroupId(e){var s,i;this._batchGroupId!==e&&(this.entity.enabled&&this._batchGroupId>=0&&((s=this.system.app.batcher)==null||s.remove(rt.ELEMENT,this.batchGroupId,this.entity)),this.entity.enabled&&e>=0&&((i=this.system.app.batcher)==null||i.insert(rt.ELEMENT,e,this.entity)),e<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&(this._image&&this._image._renderable.model?this.addModelToLayers(this._image._renderable.model):this._text&&this._text._model&&this.addModelToLayers(this._text._model)),this._batchGroupId=e)}get batchGroupId(){return this._batchGroupId}set bottom(e){this._margin.y=e;const s=this.entity.getLocalPosition(),i=this._absTop,r=this._localAnchor.y+e;this._setHeight(i-r),s.y=e+this._calculatedHeight*this._pivot.y,this.entity.setLocalPosition(s)}get bottom(){return this._margin.y}set calculatedWidth(e){this._setCalculatedWidth(e,!0)}get calculatedWidth(){return this._calculatedWidth}set calculatedHeight(e){this._setCalculatedHeight(e,!0)}get calculatedHeight(){return this._calculatedHeight}get canvasCorners(){if(!this._canvasCornersDirty||!this.screen||!this.screen.screen.screenSpace)return this._canvasCorners;const e=this.system.app.graphicsDevice,s=this.screenCorners,i=e.canvas.clientWidth/e.width,r=e.canvas.clientHeight/e.height;for(let n=0;n<4;n++)this._canvasCorners[n].set(s[n].x*i,(e.height-s[n].y)*r);return this._canvasCornersDirty=!1,this._canvasCorners}set drawOrder(e){let s=0;this.screen&&(s=this.screen.screen.priority),e>16777215&&(b.warn("Element.drawOrder larger than max size of: 16777215"),e=16777215),this._drawOrder=(s<<24)+e,this.fire("set:draworder",this._drawOrder)}get drawOrder(){return this._drawOrder}set height(e){this._height=e,this._hasSplitAnchorsY||this._setCalculatedHeight(e,!0),this.fire("set:height",this._height)}get height(){return this._height}set layers(e){if(this._addedModels.length)for(let s=0;s<this._layers.length;s++){const i=this.system.app.scene.layers.getLayerById(this._layers[s]);if(i)for(let r=0;r<this._addedModels.length;r++)i.removeMeshInstances(this._addedModels[r].meshInstances)}if(this._layers=e,!(!this.enabled||!this.entity.enabled||!this._addedModels.length))for(let s=0;s<this._layers.length;s++){const i=this.system.app.scene.layers.getLayerById(this._layers[s]);if(i)for(let r=0;r<this._addedModels.length;r++)i.addMeshInstances(this._addedModels[r].meshInstances)}}get layers(){return this._layers}set left(e){this._margin.x=e;const s=this.entity.getLocalPosition(),i=this._absRight,r=this._localAnchor.x+e;this._setWidth(i-r),s.x=e+this._calculatedWidth*this._pivot.x,this.entity.setLocalPosition(s)}get left(){return this._margin.x}set margin(e){this._margin.copy(e),this._calculateSize(!0,!0),this.fire("set:margin",this._margin)}get margin(){return this._margin}get maskedBy(){return this._maskedBy}set pivot(e){const{pivot:s,margin:i}=this,r=s.x,n=s.y;e instanceof W?s.copy(e):s.set(...e);const a=i.x+i.z,o=s.x-r;i.x+=a*o,i.z-=a*o;const h=i.y+i.w,d=s.y-n;i.y+=h*d,i.w-=h*d,this._anchorDirty=!0,this._cornersDirty=!0,this._worldCornersDirty=!0,this._calculateSize(!1,!1),this._flagChildrenAsDirty(),this.fire("set:pivot",s)}get pivot(){return this._pivot}set right(e){this._margin.z=e;const s=this.entity.getLocalPosition(),i=this._absLeft,r=this._localAnchor.z-e;this._setWidth(r-i),s.x=this._localAnchor.z-this._localAnchor.x-e-this._calculatedWidth*(1-this._pivot.x),this.entity.setLocalPosition(s)}get right(){return this._margin.z}get screenCorners(){if(!this._cornersDirty||!this.screen)return this._screenCorners;const e=this.entity.parent&&this.entity.parent.element&&this.entity.parent.element.screenCorners[0];this._screenCorners[0].set(this._absLeft,this._absBottom,0),this._screenCorners[1].set(this._absRight,this._absBottom,0),this._screenCorners[2].set(this._absRight,this._absTop,0),this._screenCorners[3].set(this._absLeft,this._absTop,0);const s=this.screen.screen.screenSpace;for(let i=0;i<4;i++)this._screenTransform.transformPoint(this._screenCorners[i],this._screenCorners[i]),s&&this._screenCorners[i].mulScalar(this.screen.screen.scale),e&&this._screenCorners[i].add(e);return this._cornersDirty=!1,this._canvasCornersDirty=!0,this._worldCornersDirty=!0,this._screenCorners}get textWidth(){return this._text?this._text.width:0}get textHeight(){return this._text?this._text.height:0}set top(e){this._margin.w=e;const s=this.entity.getLocalPosition(),i=this._absBottom,r=this._localAnchor.w-e;this._setHeight(r-i),s.y=this._localAnchor.w-this._localAnchor.y-e-this._calculatedHeight*(1-this._pivot.y),this.entity.setLocalPosition(s)}get top(){return this._margin.w}set type(e){e!==this._type&&(this._type=e,this._image&&(this._image.destroy(),this._image=null),this._text&&(this._text.destroy(),this._text=null),e===lf?this._image=new gR(this):e===tx&&(this._text=new OR(this)))}get type(){return this._type}set useInput(e){this._useInput!==e&&(this._useInput=e,this.system.app.elementInput?e?this.enabled&&this.entity.enabled&&this.system.app.elementInput.addElement(this):this.system.app.elementInput.removeElement(this):this._useInput===!0&&b.warn("Elements will not get any input events because this.system.app.elementInput is not created"),this.fire("set:useInput",e))}get useInput(){return this._useInput}set fitMode(e){this._fitMode=e,this._calculateSize(!0,!0),this._image&&this._image.refreshMesh()}get fitMode(){return this._fitMode}set width(e){this._width=e,this._hasSplitAnchorsX||this._setCalculatedWidth(e,!0),this.fire("set:width",this._width)}get width(){return this._width}get worldCorners(){if(!this._worldCornersDirty)return this._worldCorners;if(this.screen){const e=this.screenCorners;if(!this.screen.screen.screenSpace){as.copy(this.screen.screen._screenMatrix),as.data[13]=-as.data[13],as.mul2(this.screen.getWorldTransform(),as);for(let s=0;s<4;s++)as.transformPoint(e[s],this._worldCorners[s])}}else{const e=this.entity.getLocalPosition();as.setTranslate(-e.x,-e.y,-e.z),eh.setTRS(A.ZERO,this.entity.getLocalRotation(),this.entity.getLocalScale()),th.setTranslate(e.x,e.y,e.z);const s=this.entity.parent?this.entity.parent:this.entity;Vn.copy(s.getWorldTransform()),Vn.mul(th).mul(eh).mul(as),ci.set(e.x-this.pivot.x*this.calculatedWidth,e.y-this.pivot.y*this.calculatedHeight,e.z),Vn.transformPoint(ci,this._worldCorners[0]),ci.set(e.x+(1-this.pivot.x)*this.calculatedWidth,e.y-this.pivot.y*this.calculatedHeight,e.z),Vn.transformPoint(ci,this._worldCorners[1]),ci.set(e.x+(1-this.pivot.x)*this.calculatedWidth,e.y+(1-this.pivot.y)*this.calculatedHeight,e.z),Vn.transformPoint(ci,this._worldCorners[2]),ci.set(e.x-this.pivot.x*this.calculatedWidth,e.y+(1-this.pivot.y)*this.calculatedHeight,e.z),Vn.transformPoint(ci,this._worldCorners[3])}return this._worldCornersDirty=!1,this._worldCorners}set fontSize(e){this._setValue("fontSize",e)}get fontSize(){return this._text?this._text.fontSize:null}set minFontSize(e){this._setValue("minFontSize",e)}get minFontSize(){return this._text?this._text.minFontSize:null}set maxFontSize(e){this._setValue("maxFontSize",e)}get maxFontSize(){return this._text?this._text.maxFontSize:null}set maxLines(e){this._setValue("maxLines",e)}get maxLines(){return this._text?this._text.maxLines:null}set autoFitWidth(e){this._setValue("autoFitWidth",e)}get autoFitWidth(){return this._text?this._text.autoFitWidth:null}set autoFitHeight(e){this._setValue("autoFitHeight",e)}get autoFitHeight(){return this._text?this._text.autoFitHeight:null}set color(e){this._setValue("color",e)}get color(){return this._text?this._text.color:this._image?this._image.color:null}set font(e){this._setValue("font",e)}get font(){return this._text?this._text.font:null}set fontAsset(e){this._setValue("fontAsset",e)}get fontAsset(){return this._text&&typeof this._text.fontAsset=="number"?this._text.fontAsset:null}set spacing(e){this._setValue("spacing",e)}get spacing(){return this._text?this._text.spacing:null}set lineHeight(e){this._setValue("lineHeight",e)}get lineHeight(){return this._text?this._text.lineHeight:null}set wrapLines(e){this._setValue("wrapLines",e)}get wrapLines(){return this._text?this._text.wrapLines:null}set lines(e){this._setValue("lines",e)}get lines(){return this._text?this._text.lines:null}set alignment(e){this._setValue("alignment",e)}get alignment(){return this._text?this._text.alignment:null}set autoWidth(e){this._setValue("autoWidth",e)}get autoWidth(){return this._text?this._text.autoWidth:null}set autoHeight(e){this._setValue("autoHeight",e)}get autoHeight(){return this._text?this._text.autoHeight:null}set rtlReorder(e){this._setValue("rtlReorder",e)}get rtlReorder(){return this._text?this._text.rtlReorder:null}set unicodeConverter(e){this._setValue("unicodeConverter",e)}get unicodeConverter(){return this._text?this._text.unicodeConverter:null}set text(e){this._setValue("text",e)}get text(){return this._text?this._text.text:null}set key(e){this._setValue("key",e)}get key(){return this._text?this._text.key:null}set texture(e){this._setValue("texture",e)}get texture(){return this._image?this._image.texture:null}set textureAsset(e){this._setValue("textureAsset",e)}get textureAsset(){return this._image?this._image.textureAsset:null}set material(e){this._setValue("material",e)}get material(){return this._image?this._image.material:null}set materialAsset(e){this._setValue("materialAsset",e)}get materialAsset(){return this._image?this._image.materialAsset:null}set sprite(e){this._setValue("sprite",e)}get sprite(){return this._image?this._image.sprite:null}set spriteAsset(e){this._setValue("spriteAsset",e)}get spriteAsset(){return this._image?this._image.spriteAsset:null}set spriteFrame(e){this._setValue("spriteFrame",e)}get spriteFrame(){return this._image?this._image.spriteFrame:null}set pixelsPerUnit(e){this._setValue("pixelsPerUnit",e)}get pixelsPerUnit(){return this._image?this._image.pixelsPerUnit:null}set opacity(e){this._setValue("opacity",e)}get opacity(){return this._text?this._text.opacity:this._image?this._image.opacity:null}set rect(e){this._setValue("rect",e)}get rect(){return this._image?this._image.rect:null}set mask(e){this._setValue("mask",e)}get mask(){return this._image?this._image.mask:null}set outlineColor(e){this._setValue("outlineColor",e)}get outlineColor(){return this._text?this._text.outlineColor:null}set outlineThickness(e){this._setValue("outlineThickness",e)}get outlineThickness(){return this._text?this._text.outlineThickness:null}set shadowColor(e){this._setValue("shadowColor",e)}get shadowColor(){return this._text?this._text.shadowColor:null}set shadowOffset(e){this._setValue("shadowOffset",e)}get shadowOffset(){return this._text?this._text.shadowOffset:null}set enableMarkup(e){this._setValue("enableMarkup",e)}get enableMarkup(){return this._text?this._text.enableMarkup:null}set rangeStart(e){this._setValue("rangeStart",e)}get rangeStart(){return this._text?this._text.rangeStart:null}set rangeEnd(e){this._setValue("rangeEnd",e)}get rangeEnd(){return this._text?this._text.rangeEnd:null}_setValue(e,s){this._text?(this._text[e]!==s&&this._dirtyBatch(),this._text[e]=s):this._image&&(this._image[e]!==s&&this._dirtyBatch(),this._image[e]=s)}_patch(){this.entity._sync=this._sync,this.entity.setPosition=this._setPosition,this.entity.setLocalPosition=this._setLocalPosition}_unpatch(){this.entity._sync=je.prototype._sync,this.entity.setPosition=je.prototype.setPosition,this.entity.setLocalPosition=je.prototype.setLocalPosition}_setPosition(e,s,i){if(!this.element.screen){je.prototype.setPosition.call(this,e,s,i);return}e instanceof A?eu.copy(e):eu.set(e,s,i),this.getWorldTransform(),gg.copy(this.element._screenToWorld).invert(),gg.transformPoint(eu,this.localPosition),this._dirtyLocal||this._dirtifyLocal()}_setLocalPosition(e,s,i){e instanceof A?this.localPosition.copy(e):this.localPosition.set(e,s,i);const r=this.element,n=this.localPosition,a=r._pivot;r._margin.x=n.x-r._calculatedWidth*a.x,r._margin.z=r._localAnchor.z-r._localAnchor.x-r._calculatedWidth-r._margin.x,r._margin.y=n.y-r._calculatedHeight*a.y,r._margin.w=r._localAnchor.w-r._localAnchor.y-r._calculatedHeight-r._margin.y,this._dirtyLocal||this._dirtifyLocal()}_sync(){const e=this.element,s=e.screen;if(s){if(e._anchorDirty){let i=0,r=0,n=0,a=1;if(this._parent&&this._parent.element)i=this._parent.element.calculatedWidth,r=this._parent.element.calculatedHeight,n=this._parent.element.pivot.x,a=this._parent.element.pivot.y;else{const o=s.screen.resolution;i=o.x/s.screen.scale,r=o.y/s.screen.scale}e._anchorTransform.setTranslate(i*(e.anchor.x-n),-(r*(a-e.anchor.y)),0),e._anchorDirty=!1,e._calculateLocalAnchors()}e._sizeDirty&&e._calculateSize(!1,!1)}if(this._dirtyLocal){this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale);const i=this.localPosition,r=e._pivot;e._margin.x=i.x-e._calculatedWidth*r.x,e._margin.z=e._localAnchor.z-e._localAnchor.x-e._calculatedWidth-e._margin.x,e._margin.y=i.y-e._calculatedHeight*r.y,e._margin.w=e._localAnchor.w-e._localAnchor.y-e._calculatedHeight-e._margin.y,this._dirtyLocal=!1}if(!s){this._dirtyWorld&&(e._cornersDirty=!0,e._canvasCornersDirty=!0,e._worldCornersDirty=!0),je.prototype._sync.call(this);return}if(this._dirtyWorld){if(this._parent===null)this.worldTransform.copy(this.localTransform);else if(this._parent.element?e._screenToWorld.mul2(this._parent.element._modelTransform,e._anchorTransform):e._screenToWorld.copy(e._anchorTransform),e._modelTransform.mul2(e._screenToWorld,this.localTransform),s){e._screenToWorld.mul2(s.screen._screenMatrix,e._screenToWorld),s.screen.screenSpace||e._screenToWorld.mul2(s.worldTransform,e._screenToWorld),this.worldTransform.mul2(e._screenToWorld,this.localTransform);const i=e._parentWorldTransform;i.setIdentity();const r=this._parent;r&&r.element&&r!==s&&(as.setTRS(A.ZERO,r.getLocalRotation(),r.getLocalScale()),i.mul2(r.element._parentWorldTransform,as));const n=ci;n.set(0,0,this.localPosition.z);const a=BR;a.set(e._absLeft+e._pivot.x*e.calculatedWidth,e._absBottom+e._pivot.y*e.calculatedHeight,0),as.setTranslate(-a.x,-a.y,-a.z),eh.setTRS(n,this.getLocalRotation(),this.getLocalScale()),th.setTranslate(a.x,a.y,a.z),e._screenTransform.mul2(e._parentWorldTransform,th).mul(eh).mul(as),e._cornersDirty=!0,e._canvasCornersDirty=!0,e._worldCornersDirty=!0}else this.worldTransform.copy(e._modelTransform);this._dirtyWorld=!1}}_onInsert(e){const s=this._parseUpToScreen();this.entity._dirtifyWorld(),this._updateScreen(s.screen),this._dirtifyMask()}_dirtifyMask(){let e=this.entity;for(;e;){const s=e.parent;if((s===null||s.screen)&&e.element){(!this.system._prerender||!this.system._prerender.length)&&(this.system._prerender=[],this.system.app.once("prerender",this._onPrerender,this),b.trace(Es,"register prerender"));const i=this.system._prerender.indexOf(this.entity);i>=0&&this.system._prerender.splice(i,1),this.system._prerender.indexOf(e)<0&&this.system._prerender.push(e),b.trace(Es,`set prerender root to: ${e.name}`)}e=s}}_onPrerender(){for(let e=0;e<this.system._prerender.length;e++){const s=this.system._prerender[e];b.trace(Es,`prerender from: ${s.name}`),s.element&&s.element.syncMask(1)}this.system._prerender.length=0}_bindScreen(e){e._bindElement(this)}_unbindScreen(e){e._unbindElement(this)}_updateScreen(e){this.screen&&this.screen!==e&&this._unbindScreen(this.screen.screen);const s=this.screen;this.screen=e,this.screen&&this._bindScreen(this.screen.screen),this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY),this.fire("set:screen",this.screen,s),this._anchorDirty=!0;const i=this.entity.children;for(let r=0,n=i.length;r<n;r++)i[r].element&&i[r].element._updateScreen(e);this.screen&&this.screen.screen.syncDrawOrder()}syncMask(e){const s=this._parseUpToScreen();this._updateMask(s.mask,e)}_setMaskedBy(e){const s=this._image||this._text;if(e){const i=e.element._image._maskRef;b.trace(Es,`masking: ${this.entity.name} with ${i}`),s==null||s._setStencil(new Zs({ref:i,func:Dh})),this._maskedBy=e}else b.trace(Es,`no masking on: ${this.entity.name}`),s==null||s._setStencil(null),this._maskedBy=null}_updateMask(e,s){var i,r;if(e){if(this._setMaskedBy(e),this.mask){const a=e.element._image._maskRef,o=new Zs({ref:a,func:Dh,zpass:HS});this._image._setStencil(o),this._image._maskRef=s,s++,b.trace(Es,`masking from: ${this.entity.name} with ${o.ref+1}`),b.trace(Es,"depth++ to: ",s),e=this.entity}const n=this.entity.children;for(let a=0,o=n.length;a<o;a++)(i=n[a].element)==null||i._updateMask(e,s);this.mask&&s--}else{if(this._setMaskedBy(null),this.mask){const a=new Zs({ref:s,func:Ri,zpass:GS});this._image._setStencil(a),this._image._maskRef=s,s++,b.trace(Es,`masking from: ${this.entity.name} with ${a.ref}`),b.trace(Es,"depth++ to: ",s),e=this.entity}const n=this.entity.children;for(let a=0,o=n.length;a<o;a++)(r=n[a].element)==null||r._updateMask(e,s);this.mask&&s--}}_parseUpToScreen(){const e={screen:null,mask:null};let s=this.entity._parent;for(;s&&!s.screen;)s.element&&s.element.mask&&(e.mask||(e.mask=s)),s=s.parent;return s&&s.screen&&(e.screen=s),e}_onScreenResize(e){this._anchorDirty=!0,this._cornersDirty=!0,this._worldCornersDirty=!0,this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY),this.fire("screen:set:resolution",e)}_onScreenSpaceChange(){this.fire("screen:set:screenspace",this.screen.screen.screenSpace)}_onScreenRemove(){this.screen&&(this.screen._destroying?this.screen=null:this._updateScreen(null))}_calculateLocalAnchors(){let e=1e3,s=1e3;const i=this.entity._parent;if(i&&i.element)e=i.element.calculatedWidth,s=i.element.calculatedHeight;else if(this.screen){const r=this.screen.screen.resolution,n=this.screen.screen.scale;e=r.x/n,s=r.y/n}this._localAnchor.set(this._anchor.x*e,this._anchor.y*s,this._anchor.z*e,this._anchor.w*s)}getOffsetPosition(e,s){const i=this.entity.getLocalPosition().clone();return i.x+=e,i.y+=s,this._screenToWorld.transformPoint(i,i),i}onLayersChanged(e,s){this.addModelToLayers(this._image?this._image._renderable.model:this._text._model),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),s.on("add",this.onLayerAdded,this),s.on("remove",this.onLayerRemoved,this)}onLayerAdded(e){this.layers.indexOf(e.id)<0||(this._image?e.addMeshInstances(this._image._renderable.model.meshInstances):this._text&&e.addMeshInstances(this._text._model.meshInstances))}onLayerRemoved(e){this.layers.indexOf(e.id)<0||(this._image?e.removeMeshInstances(this._image._renderable.model.meshInstances):this._text&&e.removeMeshInstances(this._text._model.meshInstances))}onEnable(){var i;const e=this.system.app.scene,s=e.layers;this._image&&this._image.onEnable(),this._text&&this._text.onEnable(),this._group&&this._group.onEnable(),this.useInput&&this.system.app.elementInput&&this.system.app.elementInput.addElement(this),this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this),s&&(this._evtLayerAdded=s.on("add",this.onLayerAdded,this),this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this)),this._batchGroupId>=0&&((i=this.system.app.batcher)==null||i.insert(rt.ELEMENT,this.batchGroupId,this.entity)),this.fire("enableelement")}onDisable(){var i,r,n,a;const s=this.system.app.scene.layers;(i=this._evtLayersChanged)==null||i.off(),this._evtLayersChanged=null,s&&((r=this._evtLayerAdded)==null||r.off(),this._evtLayerAdded=null,(n=this._evtLayerRemoved)==null||n.off(),this._evtLayerRemoved=null),this._image&&this._image.onDisable(),this._text&&this._text.onDisable(),this._group&&this._group.onDisable(),this.system.app.elementInput&&this.useInput&&this.system.app.elementInput.removeElement(this),this._batchGroupId>=0&&((a=this.system.app.batcher)==null||a.remove(rt.ELEMENT,this.batchGroupId,this.entity)),this.fire("disableelement")}onRemove(){this.entity.off("insert",this._onInsert,this),this._unpatch(),this._image&&this._image.destroy(),this._text&&this._text.destroy(),this.system.app.elementInput&&this.useInput&&this.system.app.elementInput.removeElement(this),this.screen&&this.screen.screen&&(this._unbindScreen(this.screen.screen),this.screen.screen.syncDrawOrder()),this.off()}_calculateSize(e,s){if(!this.entity._parent&&!this.screen)return;this._calculateLocalAnchors();const i=this._absRight-this._absLeft,r=this._absTop-this._absBottom;e?this._setWidth(i):this._setCalculatedWidth(i,!1),s?this._setHeight(r):this._setCalculatedHeight(r,!1);const n=this.entity.getLocalPosition();n.x=this._margin.x+this._calculatedWidth*this._pivot.x,n.y=this._margin.y+this._calculatedHeight*this._pivot.y,this.entity.setLocalPosition(n),this._sizeDirty=!1}_setWidth(e){this._width=e,this._setCalculatedWidth(e,!1),this.fire("set:width",this._width)}_setHeight(e){this._height=e,this._setCalculatedHeight(e,!1),this.fire("set:height",this._height)}_setCalculatedWidth(e,s){if(!(Math.abs(e-this._calculatedWidth)<=1e-4)){if(this._calculatedWidth=e,this.entity._dirtifyLocal(),s){const i=this.entity.getLocalPosition(),r=this._pivot;this._margin.x=i.x-this._calculatedWidth*r.x,this._margin.z=this._localAnchor.z-this._localAnchor.x-this._calculatedWidth-this._margin.x}this._flagChildrenAsDirty(),this.fire("set:calculatedWidth",this._calculatedWidth),this.fire("resize",this._calculatedWidth,this._calculatedHeight)}}_setCalculatedHeight(e,s){if(!(Math.abs(e-this._calculatedHeight)<=1e-4)){if(this._calculatedHeight=e,this.entity._dirtifyLocal(),s){const i=this.entity.getLocalPosition(),r=this._pivot;this._margin.y=i.y-this._calculatedHeight*r.y,this._margin.w=this._localAnchor.w-this._localAnchor.y-this._calculatedHeight-this._margin.y}this._flagChildrenAsDirty(),this.fire("set:calculatedHeight",this._calculatedHeight),this.fire("resize",this._calculatedWidth,this._calculatedHeight)}}_flagChildrenAsDirty(){const e=this.entity._children;for(let s=0,i=e.length;s<i;s++)e[s].element&&(e[s].element._anchorDirty=!0,e[s].element._sizeDirty=!0)}addModelToLayers(e){this._addedModels.push(e);for(let s=0;s<this.layers.length;s++){const i=this.system.app.scene.layers.getLayerById(this.layers[s]);i&&i.addMeshInstances(e.meshInstances)}}removeModelFromLayers(e){const s=this._addedModels.indexOf(e);s>=0&&this._addedModels.splice(s,1);for(let i=0;i<this.layers.length;i++){const r=this.system.app.scene.layers.getLayerById(this.layers[i]);r&&r.removeMeshInstances(e.meshInstances)}}getMaskOffset(){const e=this.system.app.frame;this._offsetReadAt!==e&&(this._maskOffset=.5,this._offsetReadAt=e);const s=this._maskOffset;return this._maskOffset-=.001,s}isVisibleForCamera(e){let s,i,r,n;if(this.maskedBy){const f=this.maskedBy.element.screenCorners;s=Math.min(Math.min(f[0].x,f[1].x),Math.min(f[2].x,f[3].x)),i=Math.max(Math.max(f[0].x,f[1].x),Math.max(f[2].x,f[3].x)),n=Math.min(Math.min(f[0].y,f[1].y),Math.min(f[2].y,f[3].y)),r=Math.max(Math.max(f[0].y,f[1].y),Math.max(f[2].y,f[3].y))}else{const f=this.system.app.graphicsDevice.width,p=this.system.app.graphicsDevice.height,m=e._rect.z*f,_=e._rect.w*p;s=e._rect.x*f,i=s+m,r=(1-e._rect.y)*p,n=r-_}const a=this.screenCorners,o=Math.min(Math.min(a[0].x,a[1].x),Math.min(a[2].x,a[3].x)),h=Math.max(Math.max(a[0].x,a[1].x),Math.max(a[2].x,a[3].x)),d=Math.min(Math.min(a[0].y,a[1].y),Math.min(a[2].y,a[3].y)),u=Math.max(Math.max(a[0].y,a[1].y),Math.max(a[2].y,a[3].y));return!(h<s||o>i||d>r||u<n)}_isScreenSpace(){return this.screen&&this.screen.screen?this.screen.screen.screenSpace:!1}_isScreenCulled(){return this.screen&&this.screen.screen?this.screen.screen.cull:!1}_dirtyBatch(){var e;this.batchGroupId!==-1&&((e=this.system.app.batcher)==null||e.markGroupDirty(this.batchGroupId))}}c(Kt,"EVENT_MOUSEDOWN","mousedown"),c(Kt,"EVENT_MOUSEUP","mouseup"),c(Kt,"EVENT_MOUSEENTER","mouseenter"),c(Kt,"EVENT_MOUSELEAVE","mouseleave"),c(Kt,"EVENT_MOUSEMOVE","mousemove"),c(Kt,"EVENT_MOUSEWHEEL","mousewheel"),c(Kt,"EVENT_CLICK","click"),c(Kt,"EVENT_TOUCHSTART","touchstart"),c(Kt,"EVENT_TOUCHEND","touchend"),c(Kt,"EVENT_TOUCHMOVE","touchmove"),c(Kt,"EVENT_TOUCHCANCEL","touchcancel");class NR{constructor(){this.enabled=!0}}const zR=["enabled"];class UR extends Qe{constructor(t){super(t),this.id="element",this.ComponentType=Kt,this.DataType=NR,this.schema=zR,this._unicodeConverter=null,this._rtlReorder=null,this._defaultTexture=new ce(t.graphicsDevice,{width:1,height:1,format:cs,name:"element-system"});const e=this._defaultTexture.lock(),s=new Uint8Array(4);s[0]=255,s[1]=255,s[2]=255,s[3]=255,e.set(s),this._defaultTexture.unlock(),this.defaultImageMaterial=null,this.defaultImage9SlicedMaterial=null,this.defaultImage9TiledMaterial=null,this.defaultImageMaskMaterial=null,this.defaultImage9SlicedMaskMaterial=null,this.defaultImage9TiledMaskMaterial=null,this.defaultScreenSpaceImageMaterial=null,this.defaultScreenSpaceImage9SlicedMaterial=null,this.defaultScreenSpaceImage9TiledMaterial=null,this.defaultScreenSpaceImageMask9SlicedMaterial=null,this.defaultScreenSpaceImageMask9TiledMaterial=null,this.defaultScreenSpaceImageMaskMaterial=null,this._defaultTextMaterials={},this.defaultImageMaterials=[],this.on("add",this.onAddComponent,this),this.on("beforeremove",this.onRemoveComponent,this)}destroy(){super.destroy(),this._defaultTexture.destroy()}initializeComponentData(t,e,s){t._beingInitialized=!0,e.anchor!==void 0&&(e.anchor instanceof ee?t.anchor.copy(e.anchor):t.anchor.set(e.anchor[0],e.anchor[1],e.anchor[2],e.anchor[3])),e.pivot!==void 0&&(e.pivot instanceof W?t.pivot.copy(e.pivot):t.pivot.set(e.pivot[0],e.pivot[1]));const i=Math.abs(t.anchor.x-t.anchor.z)>.001,r=Math.abs(t.anchor.y-t.anchor.w)>.001;let n=!1,a;e.margin!==void 0&&(e.margin instanceof ee?t.margin.copy(e.margin):t._margin.set(e.margin[0],e.margin[1],e.margin[2],e.margin[3]),n=!0),e.left!==void 0&&(t._margin.x=e.left,n=!0),e.bottom!==void 0&&(t._margin.y=e.bottom,n=!0),e.right!==void 0&&(t._margin.z=e.right,n=!0),e.top!==void 0&&(t._margin.w=e.top,n=!0),n&&(t.margin=t._margin);let o=!1;e.width!==void 0&&!i?t.width=e.width:i&&(o=!0),e.height!==void 0&&!r?t.height=e.height:r&&(o=!0),o&&(t.anchor=t.anchor),e.enabled!==void 0&&(t.enabled=e.enabled),e.useInput!==void 0&&(t.useInput=e.useInput),e.fitMode!==void 0&&(t.fitMode=e.fitMode),t.batchGroupId=e.batchGroupId===void 0||e.batchGroupId===null?-1:e.batchGroupId,e.layers&&Array.isArray(e.layers)&&(t.layers=e.layers.slice(0)),e.type!==void 0&&(t.type=e.type),t.type===lf?(e.rect!==void 0&&(t.rect=e.rect),e.color!==void 0&&(a=e.color,a instanceof Y||(a=new Y(e.color[0],e.color[1],e.color[2])),t.color=a),e.opacity!==void 0&&(t.opacity=e.opacity),e.textureAsset!==void 0&&(t.textureAsset=e.textureAsset),e.texture&&(t.texture=e.texture),e.spriteAsset!==void 0&&(t.spriteAsset=e.spriteAsset),e.sprite&&(t.sprite=e.sprite),e.spriteFrame!==void 0&&(t.spriteFrame=e.spriteFrame),e.pixelsPerUnit!==void 0&&e.pixelsPerUnit!==null&&(t.pixelsPerUnit=e.pixelsPerUnit),e.materialAsset!==void 0&&(t.materialAsset=e.materialAsset),e.material&&(t.material=e.material),e.mask!==void 0&&(t.mask=e.mask)):t.type===tx&&(e.autoWidth!==void 0&&(t.autoWidth=e.autoWidth),e.autoHeight!==void 0&&(t.autoHeight=e.autoHeight),e.rtlReorder!==void 0&&(t.rtlReorder=e.rtlReorder),e.unicodeConverter!==void 0&&(t.unicodeConverter=e.unicodeConverter),e.text!==null&&e.text!==void 0?t.text=e.text:e.key!==null&&e.key!==void 0&&(t.key=e.key),e.color!==void 0&&(a=e.color,a instanceof Y||(a=new Y(a[0],a[1],a[2])),t.color=a),e.opacity!==void 0&&(t.opacity=e.opacity),e.spacing!==void 0&&(t.spacing=e.spacing),e.fontSize!==void 0&&(t.fontSize=e.fontSize,e.lineHeight||(t.lineHeight=e.fontSize)),e.lineHeight!==void 0&&(t.lineHeight=e.lineHeight),e.maxLines!==void 0&&(t.maxLines=e.maxLines),e.wrapLines!==void 0&&(t.wrapLines=e.wrapLines),e.minFontSize!==void 0&&(t.minFontSize=e.minFontSize),e.maxFontSize!==void 0&&(t.maxFontSize=e.maxFontSize),e.autoFitWidth&&(t.autoFitWidth=e.autoFitWidth),e.autoFitHeight&&(t.autoFitHeight=e.autoFitHeight),e.fontAsset!==void 0&&(t.fontAsset=e.fontAsset),e.font!==void 0&&(t.font=e.font),e.alignment!==void 0&&(t.alignment=e.alignment),e.outlineColor!==void 0&&(t.outlineColor=e.outlineColor),e.outlineThickness!==void 0&&(t.outlineThickness=e.outlineThickness),e.shadowColor!==void 0&&(t.shadowColor=e.shadowColor),e.shadowOffset!==void 0&&(t.shadowOffset=e.shadowOffset),e.enableMarkup!==void 0&&(t.enableMarkup=e.enableMarkup));const h=t._parseUpToScreen();h.screen&&t._updateScreen(h.screen),super.initializeComponentData(t,e,s),t._beingInitialized=!1,t.type===lf&&t._image._meshDirty&&t._image._updateMesh(t._image.mesh)}onAddComponent(t,e){t.fire("element:add")}onRemoveComponent(t,e){e.onRemove()}cloneComponent(t,e){const s=t.element,i={enabled:s.enabled,width:s.width,height:s.height,anchor:s.anchor.clone(),pivot:s.pivot.clone(),margin:s.margin.clone(),alignment:s.alignment&&s.alignment.clone()||s.alignment,autoWidth:s.autoWidth,autoHeight:s.autoHeight,type:s.type,rect:s.rect&&s.rect.clone()||s.rect,rtlReorder:s.rtlReorder,unicodeConverter:s.unicodeConverter,materialAsset:s.materialAsset,material:s.material,color:s.color&&s.color.clone()||s.color,opacity:s.opacity,textureAsset:s.textureAsset,texture:s.texture,spriteAsset:s.spriteAsset,sprite:s.sprite,spriteFrame:s.spriteFrame,pixelsPerUnit:s.pixelsPerUnit,spacing:s.spacing,lineHeight:s.lineHeight,wrapLines:s.wrapLines,layers:s.layers,fontSize:s.fontSize,minFontSize:s.minFontSize,maxFontSize:s.maxFontSize,autoFitWidth:s.autoFitWidth,autoFitHeight:s.autoFitHeight,maxLines:s.maxLines,fontAsset:s.fontAsset,font:s.font,useInput:s.useInput,fitMode:s.fitMode,batchGroupId:s.batchGroupId,mask:s.mask,outlineColor:s.outlineColor&&s.outlineColor.clone()||s.outlineColor,outlineThickness:s.outlineThickness,shadowColor:s.shadowColor&&s.shadowColor.clone()||s.shadowColor,shadowOffset:s.shadowOffset&&s.shadowOffset.clone()||s.shadowOffset,enableMarkup:s.enableMarkup};return s.key!==void 0&&s.key!==null?i.key=s.key:i.text=s.text,this.addComponent(e,i)}getTextElementMaterial(t,e,s){const i=(t&&1)|(e&&2)|(s&&4);let r=this._defaultTextMaterials[i];if(r)return r;let n="TextMaterial";return r=new _s,e?(r.msdfMap=this._defaultTexture,r.msdfTextAttribute=s,r.emissive.set(1,1,1)):(n=`Bitmap${n}`,r.emissive.set(1,1,1),r.emissiveMap=this._defaultTexture,r.opacityMap=this._defaultTexture,r.opacityMapChannel="a"),t&&(n=`ScreenSpace${n}`,r.depthTest=!1),r.name=`default${n}`,r.useLighting=!1,r.useTonemap=!1,r.useFog=!1,r.useSkybox=!1,r.diffuse.set(0,0,0),r.opacity=.5,r.blendType=dn,r.depthWrite=!1,r.emissiveVertexColor=!0,r.update(),this._defaultTextMaterials[i]=r,r}_createBaseImageMaterial(){const t=new _s;return t.diffuse.set(0,0,0),t.emissive.set(1,1,1),t.emissiveMap=this._defaultTexture,t.opacityMap=this._defaultTexture,t.opacityMapChannel="a",t.useLighting=!1,t.useTonemap=!1,t.useFog=!1,t.useSkybox=!1,t.blendType=dn,t.depthWrite=!1,t}getImageElementMaterial(t,e,s,i){return t?e?s?(this.defaultScreenSpaceImageMask9SlicedMaterial||(this.defaultScreenSpaceImageMask9SlicedMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMask9SlicedMaterial.name="defaultScreenSpaceImageMask9SlicedMaterial",this.defaultScreenSpaceImageMask9SlicedMaterial.nineSlicedMode=ht,this.defaultScreenSpaceImageMask9SlicedMaterial.depthTest=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.alphaTest=1,this.defaultScreenSpaceImageMask9SlicedMaterial.redWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.greenWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.blueWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9SlicedMaterial)),this.defaultScreenSpaceImageMask9SlicedMaterial):i?(this.defaultScreenSpaceImageMask9TiledMaterial||(this.defaultScreenSpaceImageMask9TiledMaterial=this.defaultScreenSpaceImage9TiledMaterial.clone(),this.defaultScreenSpaceImageMask9TiledMaterial.name="defaultScreenSpaceImageMask9TiledMaterial",this.defaultScreenSpaceImageMask9TiledMaterial.nineSlicedMode=st,this.defaultScreenSpaceImageMask9TiledMaterial.depthTest=!1,this.defaultScreenSpaceImageMask9TiledMaterial.alphaTest=1,this.defaultScreenSpaceImageMask9TiledMaterial.redWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.greenWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.blueWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9TiledMaterial)),this.defaultScreenSpaceImageMask9TiledMaterial):(this.defaultScreenSpaceImageMaskMaterial||(this.defaultScreenSpaceImageMaskMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMaskMaterial.name="defaultScreenSpaceImageMaskMaterial",this.defaultScreenSpaceImageMaskMaterial.depthTest=!1,this.defaultScreenSpaceImageMaskMaterial.alphaTest=1,this.defaultScreenSpaceImageMaskMaterial.redWrite=!1,this.defaultScreenSpaceImageMaskMaterial.greenWrite=!1,this.defaultScreenSpaceImageMaskMaterial.blueWrite=!1,this.defaultScreenSpaceImageMaskMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMaskMaterial)),this.defaultScreenSpaceImageMaskMaterial):s?(this.defaultScreenSpaceImage9SlicedMaterial||(this.defaultScreenSpaceImage9SlicedMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImage9SlicedMaterial.name="defaultScreenSpaceImage9SlicedMaterial",this.defaultScreenSpaceImage9SlicedMaterial.nineSlicedMode=ht,this.defaultScreenSpaceImage9SlicedMaterial.depthTest=!1,this.defaultScreenSpaceImage9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImage9SlicedMaterial)),this.defaultScreenSpaceImage9SlicedMaterial):i?(this.defaultScreenSpaceImage9TiledMaterial||(this.defaultScreenSpaceImage9TiledMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImage9TiledMaterial.name="defaultScreenSpaceImage9TiledMaterial",this.defaultScreenSpaceImage9TiledMaterial.nineSlicedMode=st,this.defaultScreenSpaceImage9TiledMaterial.depthTest=!1,this.defaultScreenSpaceImage9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImage9TiledMaterial)),this.defaultScreenSpaceImage9TiledMaterial):(this.defaultScreenSpaceImageMaterial||(this.defaultScreenSpaceImageMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMaterial.name="defaultScreenSpaceImageMaterial",this.defaultScreenSpaceImageMaterial.depthTest=!1,this.defaultScreenSpaceImageMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMaterial)),this.defaultScreenSpaceImageMaterial):e?s?(this.defaultImage9SlicedMaskMaterial||(this.defaultImage9SlicedMaskMaterial=this._createBaseImageMaterial(),this.defaultImage9SlicedMaskMaterial.name="defaultImage9SlicedMaskMaterial",this.defaultImage9SlicedMaskMaterial.nineSlicedMode=ht,this.defaultImage9SlicedMaskMaterial.alphaTest=1,this.defaultImage9SlicedMaskMaterial.redWrite=!1,this.defaultImage9SlicedMaskMaterial.greenWrite=!1,this.defaultImage9SlicedMaskMaterial.blueWrite=!1,this.defaultImage9SlicedMaskMaterial.alphaWrite=!1,this.defaultImage9SlicedMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9SlicedMaskMaterial)),this.defaultImage9SlicedMaskMaterial):i?(this.defaultImage9TiledMaskMaterial||(this.defaultImage9TiledMaskMaterial=this._createBaseImageMaterial(),this.defaultImage9TiledMaskMaterial.name="defaultImage9TiledMaskMaterial",this.defaultImage9TiledMaskMaterial.nineSlicedMode=st,this.defaultImage9TiledMaskMaterial.alphaTest=1,this.defaultImage9TiledMaskMaterial.redWrite=!1,this.defaultImage9TiledMaskMaterial.greenWrite=!1,this.defaultImage9TiledMaskMaterial.blueWrite=!1,this.defaultImage9TiledMaskMaterial.alphaWrite=!1,this.defaultImage9TiledMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9TiledMaskMaterial)),this.defaultImage9TiledMaskMaterial):(this.defaultImageMaskMaterial||(this.defaultImageMaskMaterial=this._createBaseImageMaterial(),this.defaultImageMaskMaterial.name="defaultImageMaskMaterial",this.defaultImageMaskMaterial.alphaTest=1,this.defaultImageMaskMaterial.redWrite=!1,this.defaultImageMaskMaterial.greenWrite=!1,this.defaultImageMaskMaterial.blueWrite=!1,this.defaultImageMaskMaterial.alphaWrite=!1,this.defaultImageMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImageMaskMaterial)),this.defaultImageMaskMaterial):s?(this.defaultImage9SlicedMaterial||(this.defaultImage9SlicedMaterial=this._createBaseImageMaterial(),this.defaultImage9SlicedMaterial.name="defaultImage9SlicedMaterial",this.defaultImage9SlicedMaterial.nineSlicedMode=ht,this.defaultImage9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9SlicedMaterial)),this.defaultImage9SlicedMaterial):i?(this.defaultImage9TiledMaterial||(this.defaultImage9TiledMaterial=this._createBaseImageMaterial(),this.defaultImage9TiledMaterial.name="defaultImage9TiledMaterial",this.defaultImage9TiledMaterial.nineSlicedMode=st,this.defaultImage9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9TiledMaterial)),this.defaultImage9TiledMaterial):(this.defaultImageMaterial||(this.defaultImageMaterial=this._createBaseImageMaterial(),this.defaultImageMaterial.name="defaultImageMaterial",this.defaultImageMaterial.update(),this.defaultImageMaterials.push(this.defaultImageMaterial)),this.defaultImageMaterial)}registerUnicodeConverter(t){this._unicodeConverter=t}registerRtlReorder(t){this._rtlReorder=t}getUnicodeConverter(){return this._unicodeConverter}getRtlReorder(){return this._rtlReorder}}const Gn="free",Hn="limited",Wn="locked",VR=["angularDampingX","angularDampingY","angularDampingZ","angularEquilibriumX","angularEquilibriumY","angularEquilibriumZ","angularLimitsX","angularLimitsY","angularLimitsZ","angularMotionX","angularMotionY","angularMotionZ","angularSpringX","angularSpringY","angularSpringZ","angularStiffnessX","angularStiffnessY","angularStiffnessZ","breakForce","enableCollision","enabled","entityA","entityB","linearDampingX","linearDampingY","linearDampingZ","linearEquilibriumX","linearEquilibriumY","linearEquilibriumZ","linearLimitsX","linearLimitsY","linearLimitsZ","linearMotionX","linearMotionY","linearMotionZ","linearSpringX","linearSpringY","linearSpringZ","linearStiffnessX","linearStiffnessY","linearStiffnessZ"];class Wp extends pe{constructor(t,e){super(t,e),b.assert(typeof Ammo<"u","ERROR: Attempting to create a pc.JointComponent but Ammo.js is not loaded"),this._constraint=null,this._entityA=null,this._entityB=null,this._breakForce=34e37,this._enableCollision=!0,this._linearMotionX=Wn,this._linearLimitsX=new W(0,0),this._linearSpringX=!1,this._linearStiffnessX=0,this._linearDampingX=1,this._linearEquilibriumX=0,this._linearMotionY=Wn,this._linearLimitsY=new W(0,0),this._linearSpringY=!1,this._linearStiffnessY=0,this._linearDampingY=1,this._linearEquilibriumY=0,this._linearMotionZ=Wn,this._linearLimitsZ=new W(0,0),this._linearSpringZ=!1,this._linearStiffnessZ=0,this._linearDampingZ=1,this._linearEquilibriumZ=0,this._angularMotionX=Wn,this._angularLimitsX=new W(0,0),this._angularSpringX=!1,this._angularStiffnessX=0,this._angularDampingX=1,this._angularEquilibriumX=0,this._angularMotionY=Wn,this._angularLimitsY=new W(0,0),this._angularSpringY=!1,this._angularStiffnessY=0,this._angularDampingY=1,this._angularEquilibriumY=0,this._angularMotionZ=Wn,this._angularLimitsZ=new W(0,0),this._angularSpringZ=!1,this._angularEquilibriumZ=0,this._angularDampingZ=1,this._angularStiffnessZ=0,this.on("set_enabled",this._onSetEnabled,this)}set entityA(t){this._destroyConstraint(),this._entityA=t,this._createConstraint()}get entityA(){return this._entityA}set entityB(t){this._destroyConstraint(),this._entityB=t,this._createConstraint()}get entityB(){return this._entityB}set breakForce(t){this._constraint&&this._breakForce!==t&&(this._constraint.setBreakingImpulseThreshold(t),this._breakForce=t)}get breakForce(){return this._breakForce}set enableCollision(t){this._destroyConstraint(),this._enableCollision=t,this._createConstraint()}get enableCollision(){return this._enableCollision}set angularLimitsX(t){this._angularLimitsX.equals(t)||(this._angularLimitsX.copy(t),this._updateAngularLimits())}get angularLimitsX(){return this._angularLimitsX}set angularMotionX(t){this._angularMotionX!==t&&(this._angularMotionX=t,this._updateAngularLimits())}get angularMotionX(){return this._angularMotionX}set angularLimitsY(t){this._angularLimitsY.equals(t)||(this._angularLimitsY.copy(t),this._updateAngularLimits())}get angularLimitsY(){return this._angularLimitsY}set angularMotionY(t){this._angularMotionY!==t&&(this._angularMotionY=t,this._updateAngularLimits())}get angularMotionY(){return this._angularMotionY}set angularLimitsZ(t){this._angularLimitsZ.equals(t)||(this._angularLimitsZ.copy(t),this._updateAngularLimits())}get angularLimitsZ(){return this._angularLimitsZ}set angularMotionZ(t){this._angularMotionZ!==t&&(this._angularMotionZ=t,this._updateAngularLimits())}get angularMotionZ(){return this._angularMotionZ}set linearLimitsX(t){this._linearLimitsX.equals(t)||(this._linearLimitsX.copy(t),this._updateLinearLimits())}get linearLimitsX(){return this._linearLimitsX}set linearMotionX(t){this._linearMotionX!==t&&(this._linearMotionX=t,this._updateLinearLimits())}get linearMotionX(){return this._linearMotionX}set linearLimitsY(t){this._linearLimitsY.equals(t)||(this._linearLimitsY.copy(t),this._updateLinearLimits())}get linearLimitsY(){return this._linearLimitsY}set linearMotionY(t){this._linearMotionY!==t&&(this._linearMotionY=t,this._updateLinearLimits())}get linearMotionY(){return this._linearMotionY}set linearLimitsZ(t){this._linearLimitsZ.equals(t)||(this._linearLimitsZ.copy(t),this._updateLinearLimits())}get linearLimitsZ(){return this._linearLimitsZ}set linearMotionZ(t){this._linearMotionZ!==t&&(this._linearMotionZ=t,this._updateLinearLimits())}get linearMotionZ(){return this._linearMotionZ}_convertTransform(t,e){const s=t.getTranslation(),i=new ie;i.setFromMat4(t);const r=new Ammo.btVector3(s.x,s.y,s.z),n=new Ammo.btQuaternion(i.x,i.y,i.z,i.w);e.setOrigin(r),e.setRotation(n),Ammo.destroy(r),Ammo.destroy(n)}_updateAngularLimits(){const t=this._constraint;if(t){let e,s,i,r,n,a;this._angularMotionX===Hn?(e=this._angularLimitsX.x*z.DEG_TO_RAD,r=this._angularLimitsX.y*z.DEG_TO_RAD):this._angularMotionX===Gn?(e=1,r=0):e=r=0,this._angularMotionY===Hn?(s=this._angularLimitsY.x*z.DEG_TO_RAD,n=this._angularLimitsY.y*z.DEG_TO_RAD):this._angularMotionY===Gn?(s=1,n=0):s=n=0,this._angularMotionZ===Hn?(i=this._angularLimitsZ.x*z.DEG_TO_RAD,a=this._angularLimitsZ.y*z.DEG_TO_RAD):this._angularMotionZ===Gn?(i=1,a=0):i=a=0;const o=new Ammo.btVector3(e,s,i);t.setAngularLowerLimit(o),o.setValue(r,n,a),t.setAngularUpperLimit(o),Ammo.destroy(o)}}_updateLinearLimits(){const t=this._constraint;if(t){let e,s,i,r,n,a;this._linearMotionX===Hn?(e=this._linearLimitsX.x,r=this._linearLimitsX.y):this._linearMotionX===Gn?(e=1,r=0):e=r=0,this._linearMotionY===Hn?(s=this._linearLimitsY.x,n=this._linearLimitsY.y):this._linearMotionY===Gn?(s=1,n=0):s=n=0,this._linearMotionZ===Hn?(i=this._linearLimitsZ.x,a=this._linearLimitsZ.y):this._linearMotionZ===Gn?(i=1,a=0):i=a=0;const o=new Ammo.btVector3(e,s,i);t.setLinearLowerLimit(o),o.setValue(r,n,a),t.setLinearUpperLimit(o),Ammo.destroy(o)}}_createConstraint(){if(this._entityA&&this._entityA.rigidbody){this._destroyConstraint();const t=new q,e=this._entityA.rigidbody.body;e.activate();const s=this.entity.getWorldTransform(),r=this._entityA.getWorldTransform().clone().invert();t.mul2(r,s);const n=new Ammo.btTransform;if(this._convertTransform(t,n),this._entityB&&this._entityB.rigidbody){const d=this._entityB.rigidbody.body;d.activate();const f=this._entityB.getWorldTransform().clone().invert();t.mul2(f,s);const p=new Ammo.btTransform;this._convertTransform(t,p),this._constraint=new Ammo.btGeneric6DofSpringConstraint(e,d,n,p,!this._enableCollision),Ammo.destroy(p)}else this._constraint=new Ammo.btGeneric6DofSpringConstraint(e,n,!this._enableCollision);Ammo.destroy(n);const a=["X","Y","Z","X","Y","Z"];for(let d=0;d<6;d++){const u=d<3?"_linear":"_angular";this._constraint.enableSpring(d,this[`${u}Spring${a[d]}`]),this._constraint.setDamping(d,this[`${u}Damping${a[d]}`]),this._constraint.setEquilibriumPoint(d,this[`${u}Equilibrium${a[d]}`]),this._constraint.setStiffness(d,this[`${u}Stiffness${a[d]}`])}this._constraint.setBreakingImpulseThreshold(this._breakForce),this._updateLinearLimits(),this._updateAngularLimits(),this.system.app.systems.rigidbody.dynamicsWorld.addConstraint(this._constraint,!this._enableCollision)}}_destroyConstraint(){this._constraint&&(this.system.app.systems.rigidbody.dynamicsWorld.removeConstraint(this._constraint),Ammo.destroy(this._constraint),this._constraint=null)}initFromData(t){for(const e of VR)t.hasOwnProperty(e)&&(t[e]instanceof W?this[`_${e}`].copy(t[e]):this[`_${e}`]=t[e]);this._createConstraint()}onEnable(){this._createConstraint()}onDisable(){this._destroyConstraint()}_onSetEnabled(t,e,s){}_onBeforeRemove(){this.fire("remove")}}const GR={Damping:"setDamping",Equilibrium:"setEquilibriumPoint",Spring:"enableSpring",Stiffness:"setStiffness"};["linear","angular"].forEach(l=>{["Damping","Equilibrium","Spring","Stiffness"].forEach(t=>{["X","Y","Z"].forEach(e=>{const s=l+t+e,i=`_${s}`;let r=l==="linear"?0:3;e==="Y"&&(r+=1),e==="Z"&&(r+=2),Object.defineProperty(Wp.prototype,s,{get:function(){return this[i]},set:function(n){this[i]!==n&&(this[i]=n,this._constraint[GR[t]](r,n))}})})})});class HR{constructor(){this.enabled=!0}}const _f=["enabled"];class WR extends Qe{constructor(t){super(t),this.id="joint",this.app=t,this.ComponentType=Wp,this.DataType=HR,this.schema=_f}initializeComponentData(t,e,s){t.initFromData(e),super.initializeComponentData(t,e,_f)}}pe._buildAccessors(Wp.prototype,_f);class ax extends pe{constructor(){super(...arguments);c(this,"_minWidth",0);c(this,"_minHeight",0);c(this,"_maxWidth",null);c(this,"_maxHeight",null);c(this,"_fitWidthProportion",0);c(this,"_fitHeightProportion",0);c(this,"_excludeFromLayout",!1)}set minWidth(e){e!==this._minWidth&&(this._minWidth=e,this.fire("resize"))}get minWidth(){return this._minWidth}set minHeight(e){e!==this._minHeight&&(this._minHeight=e,this.fire("resize"))}get minHeight(){return this._minHeight}set maxWidth(e){e!==this._maxWidth&&(this._maxWidth=e,this.fire("resize"))}get maxWidth(){return this._maxWidth}set maxHeight(e){e!==this._maxHeight&&(this._maxHeight=e,this.fire("resize"))}get maxHeight(){return this._maxHeight}set fitWidthProportion(e){e!==this._fitWidthProportion&&(this._fitWidthProportion=e,this.fire("resize"))}get fitWidthProportion(){return this._fitWidthProportion}set fitHeightProportion(e){e!==this._fitHeightProportion&&(this._fitHeightProportion=e,this.fire("resize"))}get fitHeightProportion(){return this._fitHeightProportion}set excludeFromLayout(e){e!==this._excludeFromLayout&&(this._excludeFromLayout=e,this.fire("resize"))}get excludeFromLayout(){return this._excludeFromLayout}}class $R{constructor(){this.enabled=!0}}const ox=["enabled"];class qR extends Qe{constructor(t){super(t),this.id="layoutchild",this.ComponentType=ax,this.DataType=$R,this.schema=ox}initializeComponentData(t,e,s){e.enabled!==void 0&&(t.enabled=e.enabled),e.minWidth!==void 0&&(t.minWidth=e.minWidth),e.minHeight!==void 0&&(t.minHeight=e.minHeight),e.maxWidth!==void 0&&(t.maxWidth=e.maxWidth),e.maxHeight!==void 0&&(t.maxHeight=e.maxHeight),e.fitWidthProportion!==void 0&&(t.fitWidthProportion=e.fitWidthProportion),e.fitHeightProportion!==void 0&&(t.fitHeightProportion=e.fitHeightProportion),e.excludeFromLayout!==void 0&&(t.excludeFromLayout=e.excludeFromLayout),super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.layoutchild;return this.addComponent(e,{enabled:s.enabled,minWidth:s.minWidth,minHeight:s.minHeight,maxWidth:s.maxWidth,maxHeight:s.maxHeight,fitWidthProportion:s.fitWidthProportion,fitHeightProportion:s.fitHeightProportion,excludeFromLayout:s.excludeFromLayout})}}pe._buildAccessors(ax.prototype,ox);const gf=0,XR=1,yg=2,jR=3,sc={};sc[ye]={axis:"x",size:"width",calculatedSize:"calculatedWidth",minSize:"minWidth",maxSize:"maxWidth",fitting:"widthFitting",fittingProportion:"fitWidthProportion"};sc[Ve]={axis:"y",size:"height",calculatedSize:"calculatedHeight",minSize:"minHeight",maxSize:"maxHeight",fitting:"heightFitting",fittingProportion:"fitHeightProportion"};const $p={};$p[ye]=Ve;$p[Ve]=ye;const YR={minWidth:0,minHeight:0,maxWidth:Number.POSITIVE_INFINITY,maxHeight:Number.POSITIVE_INFINITY,width:null,height:null,fitWidthProportion:0,fitHeightProportion:0},Xt={NONE:"NONE",APPLY_STRETCHING:"APPLY_STRETCHING",APPLY_SHRINKING:"APPLY_SHRINKING"},jt=new W;function lx(l){let t;const e=sc[l],s=sc[$p[l]];function i(I,F){return-F[e.size]*I.pivot[e.axis]}function r(I,F){return-F[s.size]*I.pivot[s.axis]}function n(I,F){return F[e.size]*(1-I.pivot[e.axis])}function a(I,F){I=I.filter(o),t=F,jt.x=t.containerSize.x-t.padding.x-t.padding.z,jt.y=t.containerSize.y-t.padding.y-t.padding.w,h(I);const O=u(d(I)),B=p(O,f(O)),U=C(O,B);return x(O,B,U),M(O,B,U),S(O)}function o(I){const F=I.entity.layoutchild;return!F||!F.enabled||!F.excludeFromLayout}function h(I){for(let F=0;F<I.length;++F){const O=I[F],B=O.anchor;(B.x!==0||B.y!==0||B.z!==0||B.w!==0)&&(O.anchor=ee.ZERO)}}function d(I){if(!t.wrap)return[I];const F=[[]],O=v(I);let B=0;const U=t[e.fitting]===yg;for(let V=0;V<I.length;++V){F[F.length-1].length>0&&(B+=t.spacing[e.axis]);const X=O[V][e.size];B+=X,!U&&B>jt[e.axis]&&F[F.length-1].length!==0&&(B=X,F.push([])),F[F.length-1].push(I[V]),U&&B>jt[e.axis]&&V!==I.length-1&&(B=0,F.push([]))}return F}function u(I){const F=t.orientation===ye&&t.reverseX||t.orientation===Ve&&t.reverseY,O=t.orientation===ye&&t.reverseY||t.orientation===Ve&&t.reverseX;if(F)for(let B=0;B<I.length;++B)F&&I[B].reverse();return O&&I.reverse(),I}function f(I){const F=[];for(let O=0;O<I.length;++O){const B=I[O],U=v(B),V=_(U,e),X=m(t[e.fitting],V,jt[e.axis]);X===Xt.APPLY_STRETCHING?g(U,V,e):X===Xt.APPLY_SHRINKING&&y(U,V,e),F.push(U)}return F}function p(I,F){const O=[],B=[];for(let X=0;X<I.length;++X){const Z=I[X];Z.largestElement=null,Z.largestSize={width:Number.NEGATIVE_INFINITY,height:Number.NEGATIVE_INFINITY};for(let K=0;K<Z.length;++K){const J=F[X][K];J[s.size]>Z.largestSize[s.size]&&(Z.largestElement=Z[K],Z.largestSize=J)}O.push(Z.largestElement),B.push(Z.largestSize)}const U=_(B,s),V=m(t[s.fitting],U,jt[s.axis]);V===Xt.APPLY_STRETCHING?g(B,U,s):V===Xt.APPLY_SHRINKING&&y(B,U,s);for(let X=0;X<I.length;++X){const Z=I[X];for(let K=0;K<Z.length;++K){const J=F[X][K],se=J[s.size],_e=I.length===1?jt[s.axis]:Z.largestSize[s.size],ut=m(t[s.fitting],se,_e);ut===Xt.APPLY_STRETCHING?J[s.size]=Math.min(_e,J[s.maxSize]):ut===Xt.APPLY_SHRINKING&&(J[s.size]=Math.max(_e,J[s.minSize]))}}return F}function m(I,F,O){switch(I){case gf:return Xt.NONE;case XR:return F<O?Xt.APPLY_STRETCHING:Xt.NONE;case yg:return F>=O?Xt.APPLY_SHRINKING:Xt.NONE;case jR:return F<O?Xt.APPLY_STRETCHING:Xt.APPLY_SHRINKING;default:throw new Error(`Unrecognized fitting mode: ${I}`)}}function _(I,F){const O=R(I,F.size),B=(I.length-1)*t.spacing[F.axis];return O+B}function g(I,F,O){const B=L(I,O.maxSize),U=D(I,O.fittingProportion),V=N(U,B);let X=jt[O.axis]-F;for(let Z=0;Z<I.length;++Z){const K=B[Z],J=w(K,X,U,V),se=I[K][O.size]+J,_e=I[K][O.maxSize],ut=Math.min(se,_e);I[K][O.size]=ut;const mt=Math.max(se-ut,0),ft=J-mt;X-=ft}}function y(I,F,O){const B=L(I,O.minSize,!0),U=D(I,O.fittingProportion),V=P(U),X=N(V,B);let Z=F-jt[O.axis];for(let K=0;K<I.length;++K){const J=B[K],se=w(J,Z,V,X),_e=I[J][O.size]-se,ut=I[J][O.minSize],mt=Math.max(_e,ut);I[J][O.size]=mt;const ft=Math.max(mt-_e,0),Vi=se-ft;Z-=Vi}}function w(I,F,O,B){const U=O[I],V=B[I];return Math.abs(U)<1e-5&&Math.abs(V)<1e-5?F:F*U/V}function C(I,F){const O={};O[e.axis]=0,O[s.axis]=0,I[e.size]=Number.NEGATIVE_INFINITY;const B=[];for(let U=0;U<I.length;++U){const V=I[U];if(V.length===0){B.push([]);continue}const X=[],Z=F[U];for(let K=0;K<V.length;++K){const J=V[K],se=Z[K];O[s.axis]-=r(J,se),O[e.axis]-=i(J,se),X[K]={},X[K][e.axis]=O[e.axis],X[K][s.axis]=O[s.axis],O[s.axis]+=r(J,se),O[e.axis]+=n(J,se)+t.spacing[e.axis]}V[e.size]=O[e.axis]-t.spacing[e.axis],V[s.size]=V.largestSize[s.size],I[e.size]=Math.max(I[e.size],V[e.size]),O[e.axis]=0,O[s.axis]+=V[s.size]+t.spacing[s.axis],B.push(X)}return I[s.size]=O[s.axis]-t.spacing[s.axis],B}function x(I,F,O){const B=t.alignment[e.axis],U=t.alignment[s.axis],V=t.padding[e.axis],X=t.padding[s.axis];for(let Z=0;Z<I.length;++Z){const K=I[Z],J=F[Z],se=O[Z],_e=(jt[e.axis]-K[e.size])*B+V,ut=(jt[s.axis]-I[s.size])*U+X;for(let mt=0;mt<K.length;++mt){const ft=(K[s.size]-J[mt][s.size])*t.alignment[s.axis];se[mt][e.axis]+=_e,se[mt][s.axis]+=ut+ft}}}function M(I,F,O){for(let B=0;B<I.length;++B){const U=I[B],V=F[B],X=O[B];for(let Z=0;Z<U.length;++Z){const K=U[Z];K[e.calculatedSize]=V[Z][e.size],K[s.calculatedSize]=V[Z][s.size],t.orientation===ye?K.entity.setLocalPosition(X[Z][e.axis],X[Z][s.axis],K.entity.getLocalPosition().z):K.entity.setLocalPosition(X[Z][s.axis],X[Z][e.axis],K.entity.getLocalPosition().z)}}}function S(I){const F=I.width,O=I.height,B=(jt.x-F)*t.alignment.x+t.padding.x,U=(jt.y-O)*t.alignment.y+t.padding.y;return{bounds:new ee(B,U,F,O)}}function v(I){const F=[];for(let O=0;O<I.length;++O){const B=I[O],U=Math.max(E(B,"minWidth"),0),V=Math.max(E(B,"minHeight"),0),X=Math.max(E(B,"maxWidth"),U),Z=Math.max(E(B,"maxHeight"),V),K=T(E(B,"width"),U,X),J=T(E(B,"height"),V,Z),se=E(B,"fitWidthProportion"),_e=E(B,"fitHeightProportion");F.push({minWidth:U,minHeight:V,maxWidth:X,maxHeight:Z,width:K,height:J,fitWidthProportion:se,fitHeightProportion:_e})}return F}function E(I,F){const O=I.entity.layoutchild;return O&&O.enabled&&O[F]!==void 0&&O[F]!==null?O[F]:I[F]!==void 0?I[F]:YR[F]}function T(I,F,O){return Math.min(Math.max(I,F),O)}function R(I,F){return I.reduce((O,B)=>O+B[F],0)}function D(I,F){const O=R(I,F),B=[],U=I.length;if(O===0)for(let V=0;V<U;++V)B.push(1/U);else for(let V=0;V<U;++V)B.push(I[V][F]/O);return B}function P(I){if(I.length===1)return[1];const F=[],O=I.length;for(let B=0;B<O;++B)F.push((1-I[B])/(O-1));return F}function L(I,F,O){return I.forEach(k),I.slice().sort((B,U)=>O?U[F]-B[F]:B[F]-U[F]).map(H)}function k(I,F){I.index=F}function H(I){return I.index}function N(I,F){const O=[];O[F[I.length-1]]=I[F[I.length-1]];for(let B=I.length-2;B>=0;--B)O[F[B]]=O[F[B+1]]+I[F[B]];return O}return a}const qp={};qp[ye]=lx(ye);qp[Ve]=lx(Ve);class KR{calculateLayout(t,e){const s=qp[e.orientation];if(s)return s(t,e);throw new Error(`Unrecognized orientation value: ${e.orientation}`)}}function xg(l){return l.element}function ZR(l){return l.enabled&&l.element&&l.element.enabled}class hx extends pe{constructor(e,s){super(e,s);c(this,"_orientation",ye);c(this,"_reverseX",!1);c(this,"_reverseY",!0);c(this,"_alignment",new W(0,1));c(this,"_padding",new ee);c(this,"_spacing",new W);c(this,"_widthFitting",gf);c(this,"_heightFitting",gf);c(this,"_wrap",!1);c(this,"_layoutCalculator",new KR);this._listenForReflowEvents(this.entity,"on"),this.entity.children.forEach(i=>{this._listenForReflowEvents(i,"on")}),this.entity.on("childinsert",this._onChildInsert,this),this.entity.on("childremove",this._onChildRemove,this),b.assert(e.app.systems.element,"System 'element' doesn't exist"),e.app.systems.element.on("add",this._onElementOrLayoutComponentAdd,this),e.app.systems.element.on("beforeremove",this._onElementOrLayoutComponentRemove,this),b.assert(e.app.systems.layoutchild,"System 'layoutchild' doesn't exist"),e.app.systems.layoutchild.on("add",this._onElementOrLayoutComponentAdd,this),e.app.systems.layoutchild.on("beforeremove",this._onElementOrLayoutComponentRemove,this)}set orientation(e){e!==this._orientation&&(this._orientation=e,this._scheduleReflow())}get orientation(){return this._orientation}set reverseX(e){e!==this._reverseX&&(this._reverseX=e,this._scheduleReflow())}get reverseX(){return this._reverseX}set reverseY(e){e!==this._reverseY&&(this._reverseY=e,this._scheduleReflow())}get reverseY(){return this._reverseY}set alignment(e){e.equals(this._alignment)||(this._alignment.copy(e),this._scheduleReflow())}get alignment(){return this._alignment}set padding(e){e.equals(this._padding)||(this._padding.copy(e),this._scheduleReflow())}get padding(){return this._padding}set spacing(e){e.equals(this._spacing)||(this._spacing.copy(e),this._scheduleReflow())}get spacing(){return this._spacing}set widthFitting(e){e!==this._widthFitting&&(this._widthFitting=e,this._scheduleReflow())}get widthFitting(){return this._widthFitting}set heightFitting(e){e!==this._heightFitting&&(this._heightFitting=e,this._scheduleReflow())}get heightFitting(){return this._heightFitting}set wrap(e){e!==this._wrap&&(this._wrap=e,this._scheduleReflow())}get wrap(){return this._wrap}_isSelfOrChild(e){return e===this.entity||this.entity.children.indexOf(e)!==-1}_listenForReflowEvents(e,s){e.element&&(e.element[s]("enableelement",this._scheduleReflow,this),e.element[s]("disableelement",this._scheduleReflow,this),e.element[s]("resize",this._scheduleReflow,this),e.element[s]("set:pivot",this._scheduleReflow,this)),e.layoutchild&&(e.layoutchild[s]("set_enabled",this._scheduleReflow,this),e.layoutchild[s]("resize",this._scheduleReflow,this))}_onElementOrLayoutComponentAdd(e){this._isSelfOrChild(e)&&(this._listenForReflowEvents(e,"on"),this._scheduleReflow())}_onElementOrLayoutComponentRemove(e){this._isSelfOrChild(e)&&(this._listenForReflowEvents(e,"off"),this._scheduleReflow())}_onChildInsert(e){this._listenForReflowEvents(e,"on"),this._scheduleReflow()}_onChildRemove(e){this._listenForReflowEvents(e,"off"),this._scheduleReflow()}_scheduleReflow(){this.enabled&&this.entity&&this.entity.enabled&&!this._isPerformingReflow&&this.system.scheduleReflow(this)}reflow(){const e=xg(this.entity),s=this.entity.children.filter(ZR).map(xg);if(!e||s.length===0)return;const i=Math.max(e.calculatedWidth,0),r=Math.max(e.calculatedHeight,0),n={orientation:this._orientation,reverseX:this._reverseX,reverseY:this._reverseY,alignment:this._alignment,padding:this._padding,spacing:this._spacing,widthFitting:this._widthFitting,heightFitting:this._heightFitting,wrap:this._wrap,containerSize:new W(i,r)};this._isPerformingReflow=!0;const a=this._layoutCalculator.calculateLayout(s,n);this._isPerformingReflow=!1,this.fire("reflow",a)}onEnable(){this._scheduleReflow()}onRemove(){this.entity.off("childinsert",this._onChildInsert,this),this.entity.off("childremove",this._onChildRemove,this),this._listenForReflowEvents(this.entity,"off"),this.entity.children.forEach(e=>{this._listenForReflowEvents(e,"off")}),this.system.app.systems.element.off("add",this._onElementOrLayoutComponentAdd,this),this.system.app.systems.element.off("beforeremove",this._onElementOrLayoutComponentRemove,this),this.system.app.systems.layoutchild.off("add",this._onElementOrLayoutComponentAdd,this),this.system.app.systems.layoutchild.off("beforeremove",this._onElementOrLayoutComponentRemove,this)}}class QR{constructor(){this.enabled=!0}}const cx=["enabled"],JR=100;class eI extends Qe{constructor(t){super(t),this.id="layoutgroup",this.ComponentType=hx,this.DataType=QR,this.schema=cx,this._reflowQueue=[],this.on("beforeremove",this._onRemoveComponent,this),this.app.systems.on("postUpdate",this._onPostUpdate,this)}initializeComponentData(t,e,s){e.enabled!==void 0&&(t.enabled=e.enabled),e.orientation!==void 0&&(t.orientation=e.orientation),e.reverseX!==void 0&&(t.reverseX=e.reverseX),e.reverseY!==void 0&&(t.reverseY=e.reverseY),e.alignment!==void 0&&(t.alignment=Array.isArray(e.alignment)?new W(e.alignment):e.alignment),e.padding!==void 0&&(t.padding=Array.isArray(e.padding)?new ee(e.padding):e.padding),e.spacing!==void 0&&(t.spacing=Array.isArray(e.spacing)?new W(e.spacing):e.spacing),e.widthFitting!==void 0&&(t.widthFitting=e.widthFitting),e.heightFitting!==void 0&&(t.heightFitting=e.heightFitting),e.wrap!==void 0&&(t.wrap=e.wrap),super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.layoutgroup;return this.addComponent(e,{enabled:s.enabled,orientation:s.orientation,reverseX:s.reverseX,reverseY:s.reverseY,alignment:s.alignment,padding:s.padding,spacing:s.spacing,widthFitting:s.widthFitting,heightFitting:s.heightFitting,wrap:s.wrap})}scheduleReflow(t){this._reflowQueue.indexOf(t)===-1&&this._reflowQueue.push(t)}_onPostUpdate(){this._processReflowQueue()}_processReflowQueue(){if(this._reflowQueue.length===0)return;let t=0;for(;this._reflowQueue.length>0;){const e=this._reflowQueue.slice();this._reflowQueue.length=0,e.sort((s,i)=>s.entity.graphDepth-i.entity.graphDepth);for(let s=0;s<e.length;++s)e[s].reflow();if(++t>=JR){console.warn("Max reflow iterations limit reached, bailing.");break}}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy(),this.app.systems.off("postUpdate",this._onPostUpdate,this)}}pe._buildAccessors(hx.prototype,cx);class tI{constructor(){c(this,"map",new Map)}destroy(t){this.map.forEach(e=>e.mesh.destroy())}}const sI=new Ht,dx=(l,t)=>{const e=sI.get(l,()=>new tI);let s=e.map.get(t);if(!s){let i,r;switch(t){case"box":i=ke.fromGeometry(l,new Yu),r={x:2,y:2,z:2,uv:2/3};break;case"capsule":i=ke.fromGeometry(l,new M1({radius:.5,height:2})),r={x:Math.PI*2,y:Math.PI,z:Math.PI*2,uv:1/3+1/3/3*2};break;case"cone":i=ke.fromGeometry(l,new P1({baseRadius:.5,peakRadius:0,height:1})),r={x:2.54,y:2.54,z:2.54,uv:1/3+1/3/3};break;case"cylinder":i=ke.fromGeometry(l,new R1({radius:.5,height:1})),r={x:Math.PI,y:.79*2,z:Math.PI,uv:1/3+1/3/3*2};break;case"plane":i=ke.fromGeometry(l,new I1({halfExtents:new W(.5,.5),widthSegments:1,lengthSegments:1})),r={x:0,y:1,z:0,uv:1};break;case"sphere":i=ke.fromGeometry(l,new N0({radius:.5})),r={x:Math.PI,y:Math.PI,z:Math.PI,uv:1};break;case"torus":i=ke.fromGeometry(l,new D1({tubeRadius:.2,ringRadius:.3})),r={x:Math.PI*.5*.5-Math.PI*.1*.1,y:.4,z:.4,uv:1};break;default:throw new Error(`Invalid primitive type: ${t}`)}i.incRefCount(),s={mesh:i,area:r},e.map.set(t,s)}return s};class ux extends pe{constructor(e,s){super(e,s);c(this,"_type","asset");c(this,"_asset",null);c(this,"_model",null);c(this,"_mapping",{});c(this,"_castShadows",!0);c(this,"_receiveShadows",!0);c(this,"_materialAsset",null);c(this,"_material");c(this,"_castShadowsLightmap",!0);c(this,"_lightmapped",!1);c(this,"_lightmapSizeMultiplier",1);c(this,"isStatic",!1);c(this,"_layers",[zi]);c(this,"_batchGroupId",-1);c(this,"_customAabb",null);c(this,"_area",null);c(this,"_materialEvents",null);c(this,"_clonedModel",!1);c(this,"_batchGroup",null);c(this,"_evtLayersChanged",null);c(this,"_evtLayerAdded",null);c(this,"_evtLayerRemoved",null);this._material=e.defaultMaterial,s.on("remove",this.onRemoveChild,this),s.on("removehierarchy",this.onRemoveChild,this),s.on("insert",this.onInsertChild,this),s.on("inserthierarchy",this.onInsertChild,this)}set meshInstances(e){this._model&&(this._model.meshInstances=e)}get meshInstances(){return this._model?this._model.meshInstances:null}set customAabb(e){if(this._customAabb=e,this._model){const s=this._model.meshInstances;if(s)for(let i=0;i<s.length;i++)s[i].setCustomAabb(this._customAabb)}}get customAabb(){return this._customAabb}set type(e){if(this._type!==e)if(this._area=null,this._type=e,e==="asset")this._asset!==null?this._bindModelAsset(this._asset):this.model=null;else{const s=dx(this.system.app.graphicsDevice,e);this._area=s.area;const i=s.mesh,r=new Oe,n=new Ui;n.graph=r,n.meshInstances=[new Be(i,this._material,r)],this.model=n,this._asset=null}}get type(){return this._type}set asset(e){const s=this.system.app.assets;let i=e;if(e instanceof he&&(i=e.id),this._asset!==i){if(this._asset){s.off(`add:${this._asset}`,this._onModelAssetAdded,this);const r=s.get(this._asset);r&&this._unbindModelAsset(r)}if(this._asset=i,this._asset){const r=s.get(this._asset);r?this._bindModelAsset(r):(this.model=null,s.on(`add:${this._asset}`,this._onModelAssetAdded,this))}else this.model=null}}get asset(){return this._asset}set model(e){if(this._model!==e){if(e&&e._immutable){b.error("Invalid attempt to assign a model to multiple ModelComponents");return}if(this._model&&(this._model._immutable=!1,this.removeModelFromLayers(),this._model.getGraph().destroy(),delete this._model._entity,this._clonedModel&&(this._model.destroy(),this._clonedModel=!1)),this._model=e,this._model){this._model._immutable=!0;const s=this._model.meshInstances;for(let i=0;i<s.length;i++)s[i].castShadow=this._castShadows,s[i].receiveShadow=this._receiveShadows,s[i].setCustomAabb(this._customAabb);this.lightmapped=this._lightmapped,this.entity.addChild(this._model.graph),this.enabled&&this.entity.enabled&&this.addModelToLayers(),this._model._entity=this.entity,this.entity.animation&&this.entity.animation.setModel(this._model),this.entity.anim&&this.entity.anim.rebind(),this.type==="asset"?this.mapping=this._mapping:this._unsetMaterialEvents()}}}get model(){return this._model}set lightmapped(e){if(e!==this._lightmapped&&(this._lightmapped=e,this._model)){const s=this._model.meshInstances;for(let i=0;i<s.length;i++)s[i].setLightmapped(e)}}get lightmapped(){return this._lightmapped}set castShadows(e){if(this._castShadows===e)return;const s=this._model;if(s){const i=this.layers,r=this.system.app.scene;if(this._castShadows&&!e)for(let a=0;a<i.length;a++){const o=this.system.app.scene.layers.getLayerById(this.layers[a]);o&&o.removeShadowCasters(s.meshInstances)}const n=s.meshInstances;for(let a=0;a<n.length;a++)n[a].castShadow=e;if(!this._castShadows&&e)for(let a=0;a<i.length;a++){const o=r.layers.getLayerById(i[a]);o&&o.addShadowCasters(s.meshInstances)}}this._castShadows=e}get castShadows(){return this._castShadows}set receiveShadows(e){if(this._receiveShadows!==e&&(this._receiveShadows=e,this._model)){const s=this._model.meshInstances;for(let i=0,r=s.length;i<r;i++)s[i].receiveShadow=e}}get receiveShadows(){return this._receiveShadows}set castShadowsLightmap(e){this._castShadowsLightmap=e}get castShadowsLightmap(){return this._castShadowsLightmap}set lightmapSizeMultiplier(e){this._lightmapSizeMultiplier=e}get lightmapSizeMultiplier(){return this._lightmapSizeMultiplier}set layers(e){const s=this.system.app.scene.layers;if(this.meshInstances)for(let i=0;i<this._layers.length;i++){const r=s.getLayerById(this._layers[i]);r&&r.removeMeshInstances(this.meshInstances)}this._layers.length=0;for(let i=0;i<e.length;i++)this._layers[i]=e[i];if(!(!this.enabled||!this.entity.enabled||!this.meshInstances))for(let i=0;i<this._layers.length;i++){const r=s.getLayerById(this._layers[i]);r&&r.addMeshInstances(this.meshInstances)}}get layers(){return this._layers}set batchGroupId(e){var s,i;this._batchGroupId!==e&&(this.entity.enabled&&this._batchGroupId>=0&&((s=this.system.app.batcher)==null||s.remove(rt.MODEL,this.batchGroupId,this.entity)),this.entity.enabled&&e>=0&&((i=this.system.app.batcher)==null||i.insert(rt.MODEL,e,this.entity)),e<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&this.addModelToLayers(),this._batchGroupId=e)}get batchGroupId(){return this._batchGroupId}set materialAsset(e){let s=e;e instanceof he&&(s=e.id);const i=this.system.app.assets;if(s!==this._materialAsset){if(this._materialAsset){i.off(`add:${this._materialAsset}`,this._onMaterialAssetAdd,this);const r=i.get(this._materialAsset);r&&this._unbindMaterialAsset(r)}if(this._materialAsset=s,this._materialAsset){const r=i.get(this._materialAsset);r?this._bindMaterialAsset(r):(this._setMaterial(this.system.defaultMaterial),i.on(`add:${this._materialAsset}`,this._onMaterialAssetAdd,this))}else this._setMaterial(this.system.defaultMaterial)}}get materialAsset(){return this._materialAsset}set material(e){this._material!==e&&(this.materialAsset=null,this._setMaterial(e))}get material(){return this._material}set mapping(e){if(this._type!=="asset"||(this._unsetMaterialEvents(),e||(e={}),this._mapping=e,!this._model))return;const s=this._model.meshInstances,i=this.asset?this.system.app.assets.get(this.asset):null,r=i?i.data.mapping:null;let n=null;for(let a=0,o=s.length;a<o;a++)if(e[a]!==void 0)e[a]?(n=this.system.app.assets.get(e[a]),this._loadAndSetMeshInstanceMaterial(n,s[a],a)):s[a].material=this.system.defaultMaterial;else if(r)if(r[a]&&(r[a].material||r[a].path)){if(r[a].material!==void 0)n=this.system.app.assets.get(r[a].material);else if(r[a].path!==void 0){const h=this._getMaterialAssetUrl(r[a].path);h&&(n=this.system.app.assets.getByUrl(h))}this._loadAndSetMeshInstanceMaterial(n,s[a],a)}else s[a].material=this.system.defaultMaterial}get mapping(){return this._mapping}addModelToLayers(){const e=this.system.app.scene.layers;for(let s=0;s<this._layers.length;s++){const i=e.getLayerById(this._layers[s]);i&&i.addMeshInstances(this.meshInstances)}}removeModelFromLayers(){const e=this.system.app.scene.layers;for(let s=0;s<this._layers.length;s++){const i=e.getLayerById(this._layers[s]);i&&i.removeMeshInstances(this.meshInstances)}}onRemoveChild(){this._model&&this.removeModelFromLayers()}onInsertChild(){this._model&&this.enabled&&this.entity.enabled&&this.addModelToLayers()}onRemove(){this.asset=null,this.model=null,this.materialAsset=null,this._unsetMaterialEvents(),this.entity.off("remove",this.onRemoveChild,this),this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(e,s){this.addModelToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),s.on("add",this.onLayerAdded,this),s.on("remove",this.onLayerRemoved,this)}onLayerAdded(e){this.layers.indexOf(e.id)<0||e.addMeshInstances(this.meshInstances)}onLayerRemoved(e){this.layers.indexOf(e.id)<0||e.removeMeshInstances(this.meshInstances)}_setMaterialEvent(e,s,i,r){const n=`${s}:${i}`;this.system.app.assets.on(n,r,this),this._materialEvents||(this._materialEvents=[]),this._materialEvents[e]||(this._materialEvents[e]={}),this._materialEvents[e][n]={id:i,handler:r}}_unsetMaterialEvents(){const e=this.system.app.assets,s=this._materialEvents;if(s){for(let i=0,r=s.length;i<r;i++){if(!s[i])continue;const n=s[i];for(const a in n)e.off(a,n[a].handler,this)}this._materialEvents=null}}_getAssetByIdOrPath(e){let s=null;if(!isNaN(parseInt(e,10)))s=this.system.app.assets.get(e);else if(this.asset){const r=this._getMaterialAssetUrl(e);r&&(s=this.system.app.assets.getByUrl(r))}return s}_getMaterialAssetUrl(e){if(!this.asset)return null;const s=this.system.app.assets.get(this.asset);return s?s.getAbsoluteUrl(e):null}_loadAndSetMeshInstanceMaterial(e,s,i){const r=this.system.app.assets;e&&(e.resource?(s.material=e.resource,this._setMaterialEvent(i,"remove",e.id,function(){s.material=this.system.defaultMaterial})):(this._setMaterialEvent(i,"load",e.id,function(n){s.material=n.resource,this._setMaterialEvent(i,"remove",e.id,function(){s.material=this.system.defaultMaterial})}),this.enabled&&this.entity.enabled&&r.load(e)))}onEnable(){var a;const e=this.system.app,s=e.scene,i=s==null?void 0:s.layers;this._evtLayersChanged=s.on("set:layers",this.onLayersChanged,this),i&&(this._evtLayerAdded=i.on("add",this.onLayerAdded,this),this._evtLayerRemoved=i.on("remove",this.onLayerRemoved,this));const r=this._type==="asset";let n;if(this._model?this.addModelToLayers():r&&this._asset&&(n=e.assets.get(this._asset),n&&n.resource!==this._model&&this._bindModelAsset(n)),this._materialAsset&&(n=e.assets.get(this._materialAsset),n&&n.resource!==this._material&&this._bindMaterialAsset(n)),r&&this._mapping)for(const o in this._mapping)this._mapping[o]&&(n=this._getAssetByIdOrPath(this._mapping[o]),n&&!n.resource&&e.assets.load(n));this._batchGroupId>=0&&((a=e.batcher)==null||a.insert(rt.MODEL,this.batchGroupId,this.entity))}onDisable(){var r,n,a,o;const e=this.system.app,i=e.scene.layers;(r=this._evtLayersChanged)==null||r.off(),this._evtLayersChanged=null,i&&((n=this._evtLayerAdded)==null||n.off(),this._evtLayerAdded=null,(a=this._evtLayerRemoved)==null||a.off(),this._evtLayerRemoved=null),this._batchGroupId>=0&&((o=e.batcher)==null||o.remove(rt.MODEL,this.batchGroupId,this.entity)),this._model&&this.removeModelFromLayers()}hide(){if(this._model){const e=this._model.meshInstances;for(let s=0,i=e.length;s<i;s++)e[s].visible=!1}}show(){if(this._model){const e=this._model.meshInstances;for(let s=0,i=e.length;s<i;s++)e[s].visible=!0}}_bindMaterialAsset(e){if(e.on("load",this._onMaterialAssetLoad,this),e.on("unload",this._onMaterialAssetUnload,this),e.on("remove",this._onMaterialAssetRemove,this),e.on("change",this._onMaterialAssetChange,this),e.resource)this._onMaterialAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}}_unbindMaterialAsset(e){e.off("load",this._onMaterialAssetLoad,this),e.off("unload",this._onMaterialAssetUnload,this),e.off("remove",this._onMaterialAssetRemove,this),e.off("change",this._onMaterialAssetChange,this)}_onMaterialAssetAdd(e){this.system.app.assets.off(`add:${e.id}`,this._onMaterialAssetAdd,this),this._materialAsset===e.id&&this._bindMaterialAsset(e)}_onMaterialAssetLoad(e){this._setMaterial(e.resource)}_onMaterialAssetUnload(e){this._setMaterial(this.system.defaultMaterial)}_onMaterialAssetRemove(e){this._onMaterialAssetUnload(e)}_onMaterialAssetChange(e){}_bindModelAsset(e){if(this._unbindModelAsset(e),e.on("load",this._onModelAssetLoad,this),e.on("unload",this._onModelAssetUnload,this),e.on("change",this._onModelAssetChange,this),e.on("remove",this._onModelAssetRemove,this),e.resource)this._onModelAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}}_unbindModelAsset(e){e.off("load",this._onModelAssetLoad,this),e.off("unload",this._onModelAssetUnload,this),e.off("change",this._onModelAssetChange,this),e.off("remove",this._onModelAssetRemove,this)}_onModelAssetAdded(e){this.system.app.assets.off(`add:${e.id}`,this._onModelAssetAdded,this),e.id===this._asset&&this._bindModelAsset(e)}_onModelAssetLoad(e){this.model=e.resource.clone(),this._clonedModel=!0}_onModelAssetUnload(e){this.model=null}_onModelAssetChange(e,s,i,r){s==="data"&&(this.mapping=this._mapping)}_onModelAssetRemove(e){this.model=null}_setMaterial(e){if(this._material===e)return;this._material=e;const s=this._model;if(s&&this._type!=="asset"){const i=s.meshInstances;for(let r=0,n=i.length;r<n;r++)i[r].material=e}}}class iI{constructor(){this.enabled=!0}}const fx=["enabled"];class rI extends Qe{constructor(t){super(t),this.id="model",this.ComponentType=ux,this.DataType=iI,this.schema=fx,this.defaultMaterial=cl(t.graphicsDevice),this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){s=["material","materialAsset","asset","castShadows","receiveShadows","castShadowsLightmap","lightmapped","lightmapSizeMultiplier","type","mapping","layers","isStatic","batchGroupId"],(e.batchGroupId===null||e.batchGroupId===void 0)&&(e.batchGroupId=-1),e.layers&&e.layers.length&&(e.layers=e.layers.slice(0));for(let i=0;i<s.length;i++)e.hasOwnProperty(s[i])&&(t[s[i]]=e[s[i]]);e.aabbCenter&&e.aabbHalfExtents&&(t.customAabb=new ve(new A(e.aabbCenter),new A(e.aabbHalfExtents))),super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s={type:t.model.type,asset:t.model.asset,castShadows:t.model.castShadows,receiveShadows:t.model.receiveShadows,castShadowsLightmap:t.model.castShadowsLightmap,lightmapped:t.model.lightmapped,lightmapSizeMultiplier:t.model.lightmapSizeMultiplier,isStatic:t.model.isStatic,enabled:t.model.enabled,layers:t.model.layers,batchGroupId:t.model.batchGroupId,mapping:Eh({},t.model.mapping)};let i=t.model.materialAsset;!(i instanceof he)&&i!=null&&(i=this.app.assets.get(i));const r=t.model.material;(!r||r===this.defaultMaterial||!i||r===i.resource)&&(s.materialAsset=i);const n=this.addComponent(e,s);if(t.model.model&&t.model.type==="asset"&&!t.model.asset&&(n.model=t.model.model.clone(),n._clonedModel=!0),s.materialAsset||(n.material=r),t.model.model){const a=t.model.model.meshInstances,o=n.model.meshInstances;for(let h=0;h<a.length;h++)o[h].mask=a[h].mask,o[h].material=a[h].material,o[h].layer=a[h].layer,o[h].receiveShadow=a[h].receiveShadow}return t.model.customAabb&&(n.customAabb=t.model.customAabb.clone()),n}onRemove(t,e){e.onRemove()}}pe._buildAccessors(ux.prototype,fx);const nI=["emitterExtents","emitterRadius","emitterExtentsInner","emitterRadiusInner","loop","initialVelocity","animSpeed","normalMap","particleNormal"],aI=["numParticles","lifetime","rate","rate2","startAngle","startAngle2","lighting","halfLambert","intensity","wrap","wrapBounds","depthWrite","noFog","sort","stretch","alignToMotion","preWarm","emitterShape","animTilesX","animTilesY","animStartFrame","animNumFrames","animNumAnimations","animIndex","randomizeAnimIndex","animLoop","colorMap","localSpace","screenSpace","orientation"],oI=["scaleGraph","scaleGraph2","colorGraph","colorGraph2","alphaGraph","alphaGraph2","velocityGraph","velocityGraph2","localVelocityGraph","localVelocityGraph2","rotationSpeedGraph","rotationSpeedGraph2","radialSpeedGraph","radialSpeedGraph2"],sh=["colorMapAsset","normalMapAsset","meshAsset","renderAsset"];let $n;class lI extends pe{constructor(e,s){super(e,s);c(this,"_requestedDepth",!1);c(this,"_drawOrder",0);c(this,"_evtLayersChanged",null);c(this,"_evtLayerAdded",null);c(this,"_evtLayerRemoved",null);c(this,"_evtSetMeshes",null);this.on("set_colorMapAsset",this.onSetColorMapAsset,this),this.on("set_normalMapAsset",this.onSetNormalMapAsset,this),this.on("set_meshAsset",this.onSetMeshAsset,this),this.on("set_mesh",this.onSetMesh,this),this.on("set_renderAsset",this.onSetRenderAsset,this),this.on("set_loop",this.onSetLoop,this),this.on("set_blendType",this.onSetBlendType,this),this.on("set_depthSoftening",this.onSetDepthSoftening,this),this.on("set_layers",this.onSetLayers,this),nI.forEach(i=>{this.on(`set_${i}`,this.onSetSimpleProperty,this)}),aI.forEach(i=>{this.on(`set_${i}`,this.onSetComplexProperty,this)}),oI.forEach(i=>{this.on(`set_${i}`,this.onSetGraphProperty,this)})}get data(){const e=this.system.store[this.entity.getGuid()];return e?e.data:null}set enabled(e){this._setValue("enabled",e)}get enabled(){return this.data.enabled}set autoPlay(e){this._setValue("autoPlay",e)}get autoPlay(){return this.data.autoPlay}set numParticles(e){this._setValue("numParticles",e)}get numParticles(){return this.data.numParticles}set lifetime(e){this._setValue("lifetime",e)}get lifetime(){return this.data.lifetime}set rate(e){this._setValue("rate",e)}get rate(){return this.data.rate}set rate2(e){this._setValue("rate2",e)}get rate2(){return this.data.rate2}set startAngle(e){this._setValue("startAngle",e)}get startAngle(){return this.data.startAngle}set startAngle2(e){this._setValue("startAngle2",e)}get startAngle2(){return this.data.startAngle2}set loop(e){this._setValue("loop",e)}get loop(){return this.data.loop}set preWarm(e){this._setValue("preWarm",e)}get preWarm(){return this.data.preWarm}set lighting(e){this._setValue("lighting",e)}get lighting(){return this.data.lighting}set halfLambert(e){this._setValue("halfLambert",e)}get halfLambert(){return this.data.halfLambert}set intensity(e){this._setValue("intensity",e)}get intensity(){return this.data.intensity}set depthWrite(e){this._setValue("depthWrite",e)}get depthWrite(){return this.data.depthWrite}set noFog(e){this._setValue("noFog",e)}get noFog(){return this.data.noFog}set depthSoftening(e){this._setValue("depthSoftening",e)}get depthSoftening(){return this.data.depthSoftening}set sort(e){this._setValue("sort",e)}get sort(){return this.data.sort}set blendType(e){this._setValue("blendType",e)}get blendType(){return this.data.blendType}set stretch(e){this._setValue("stretch",e)}get stretch(){return this.data.stretch}set alignToMotion(e){this._setValue("alignToMotion",e)}get alignToMotion(){return this.data.alignToMotion}set emitterShape(e){this._setValue("emitterShape",e)}get emitterShape(){return this.data.emitterShape}set emitterExtents(e){this._setValue("emitterExtents",e)}get emitterExtents(){return this.data.emitterExtents}set emitterExtentsInner(e){this._setValue("emitterExtentsInner",e)}get emitterExtentsInner(){return this.data.emitterExtentsInner}set emitterRadius(e){this._setValue("emitterRadius",e)}get emitterRadius(){return this.data.emitterRadius}set emitterRadiusInner(e){this._setValue("emitterRadiusInner",e)}get emitterRadiusInner(){return this.data.emitterRadiusInner}set initialVelocity(e){this._setValue("initialVelocity",e)}get initialVelocity(){return this.data.initialVelocity}set wrap(e){this._setValue("wrap",e)}get wrap(){return this.data.wrap}set wrapBounds(e){this._setValue("wrapBounds",e)}get wrapBounds(){return this.data.wrapBounds}set localSpace(e){this._setValue("localSpace",e)}get localSpace(){return this.data.localSpace}set screenSpace(e){this._setValue("screenSpace",e)}get screenSpace(){return this.data.screenSpace}set colorMapAsset(e){this._setValue("colorMapAsset",e)}get colorMapAsset(){return this.data.colorMapAsset}set normalMapAsset(e){this._setValue("normalMapAsset",e)}get normalMapAsset(){return this.data.normalMapAsset}set mesh(e){this._setValue("mesh",e)}get mesh(){return this.data.mesh}set meshAsset(e){this._setValue("meshAsset",e)}get meshAsset(){return this.data.meshAsset}set renderAsset(e){this._setValue("renderAsset",e)}get renderAsset(){return this.data.renderAsset}set orientation(e){this._setValue("orientation",e)}get orientation(){return this.data.orientation}set particleNormal(e){this._setValue("particleNormal",e)}get particleNormal(){return this.data.particleNormal}set localVelocityGraph(e){this._setValue("localVelocityGraph",e)}get localVelocityGraph(){return this.data.localVelocityGraph}set localVelocityGraph2(e){this._setValue("localVelocityGraph2",e)}get localVelocityGraph2(){return this.data.localVelocityGraph2}set velocityGraph(e){this._setValue("velocityGraph",e)}get velocityGraph(){return this.data.velocityGraph}set velocityGraph2(e){this._setValue("velocityGraph2",e)}get velocityGraph2(){return this.data.velocityGraph2}set rotationSpeedGraph(e){this._setValue("rotationSpeedGraph",e)}get rotationSpeedGraph(){return this.data.rotationSpeedGraph}set rotationSpeedGraph2(e){this._setValue("rotationSpeedGraph2",e)}get rotationSpeedGraph2(){return this.data.rotationSpeedGraph2}set radialSpeedGraph(e){this._setValue("radialSpeedGraph",e)}get radialSpeedGraph(){return this.data.radialSpeedGraph}set radialSpeedGraph2(e){this._setValue("radialSpeedGraph2",e)}get radialSpeedGraph2(){return this.data.radialSpeedGraph2}set scaleGraph(e){this._setValue("scaleGraph",e)}get scaleGraph(){return this.data.scaleGraph}set scaleGraph2(e){this._setValue("scaleGraph2",e)}get scaleGraph2(){return this.data.scaleGraph2}set colorGraph(e){this._setValue("colorGraph",e)}get colorGraph(){return this.data.colorGraph}set colorGraph2(e){this._setValue("colorGraph2",e)}get colorGraph2(){return this.data.colorGraph2}set alphaGraph(e){this._setValue("alphaGraph",e)}get alphaGraph(){return this.data.alphaGraph}set alphaGraph2(e){this._setValue("alphaGraph2",e)}get alphaGraph2(){return this.data.alphaGraph2}set colorMap(e){this._setValue("colorMap",e)}get colorMap(){return this.data.colorMap}set normalMap(e){this._setValue("normalMap",e)}get normalMap(){return this.data.normalMap}set animTilesX(e){this._setValue("animTilesX",e)}get animTilesX(){return this.data.animTilesX}set animTilesY(e){this._setValue("animTilesY",e)}get animTilesY(){return this.data.animTilesY}set animStartFrame(e){this._setValue("animStartFrame",e)}get animStartFrame(){return this.data.animStartFrame}set animNumFrames(e){this._setValue("animNumFrames",e)}get animNumFrames(){return this.data.animNumFrames}set animNumAnimations(e){this._setValue("animNumAnimations",e)}get animNumAnimations(){return this.data.animNumAnimations}set animIndex(e){this._setValue("animIndex",e)}get animIndex(){return this.data.animIndex}set randomizeAnimIndex(e){this._setValue("randomizeAnimIndex",e)}get randomizeAnimIndex(){return this.data.randomizeAnimIndex}set animSpeed(e){this._setValue("animSpeed",e)}get animSpeed(){return this.data.animSpeed}set animLoop(e){this._setValue("animLoop",e)}get animLoop(){return this.data.animLoop}set layers(e){this._setValue("layers",e)}get layers(){return this.data.layers}set drawOrder(e){this._drawOrder=e,this.emitter&&(this.emitter.drawOrder=e)}get drawOrder(){return this._drawOrder}_setValue(e,s){const i=this.data,r=i[e];i[e]=s,this.fire("set",e,r,s)}addMeshInstanceToLayers(){if(this.emitter)for(let e=0;e<this.layers.length;e++){const s=this.system.app.scene.layers.getLayerById(this.layers[e]);s&&(s.addMeshInstances([this.emitter.meshInstance]),this.emitter._layer=s)}}removeMeshInstanceFromLayers(){if(this.emitter)for(let e=0;e<this.layers.length;e++){const s=this.system.app.scene.layers.getLayerById(this.layers[e]);s&&s.removeMeshInstances([this.emitter.meshInstance])}}onSetLayers(e,s,i){if(this.emitter){for(let r=0;r<s.length;r++){const n=this.system.app.scene.layers.getLayerById(s[r]);n&&n.removeMeshInstances([this.emitter.meshInstance])}if(!(!this.enabled||!this.entity.enabled))for(let r=0;r<i.length;r++){const n=this.system.app.scene.layers.getLayerById(i[r]);n&&n.addMeshInstances([this.emitter.meshInstance])}}}onLayersChanged(e,s){this.addMeshInstanceToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),s.on("add",this.onLayerAdded,this),s.on("remove",this.onLayerRemoved,this)}onLayerAdded(e){!this.emitter||this.layers.indexOf(e.id)<0||e.addMeshInstances([this.emitter.meshInstance])}onLayerRemoved(e){!this.emitter||this.layers.indexOf(e.id)<0||e.removeMeshInstances([this.emitter.meshInstance])}_bindColorMapAsset(e){if(e.on("load",this._onColorMapAssetLoad,this),e.on("unload",this._onColorMapAssetUnload,this),e.on("remove",this._onColorMapAssetRemove,this),e.on("change",this._onColorMapAssetChange,this),e.resource)this._onColorMapAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}}_unbindColorMapAsset(e){e.off("load",this._onColorMapAssetLoad,this),e.off("unload",this._onColorMapAssetUnload,this),e.off("remove",this._onColorMapAssetRemove,this),e.off("change",this._onColorMapAssetChange,this)}_onColorMapAssetLoad(e){this.colorMap=e.resource}_onColorMapAssetUnload(e){this.colorMap=null}_onColorMapAssetRemove(e){this._onColorMapAssetUnload(e)}_onColorMapAssetChange(e){}onSetColorMapAsset(e,s,i){const r=this.system.app.assets;if(s){const n=r.get(s);n&&this._unbindColorMapAsset(n)}if(i){i instanceof he&&(this.data.colorMapAsset=i.id,i=i.id);const n=r.get(i);n?this._bindColorMapAsset(n):r.once(`add:${i}`,a=>{this._bindColorMapAsset(a)})}else this.colorMap=null}_bindNormalMapAsset(e){if(e.on("load",this._onNormalMapAssetLoad,this),e.on("unload",this._onNormalMapAssetUnload,this),e.on("remove",this._onNormalMapAssetRemove,this),e.on("change",this._onNormalMapAssetChange,this),e.resource)this._onNormalMapAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}}_unbindNormalMapAsset(e){e.off("load",this._onNormalMapAssetLoad,this),e.off("unload",this._onNormalMapAssetUnload,this),e.off("remove",this._onNormalMapAssetRemove,this),e.off("change",this._onNormalMapAssetChange,this)}_onNormalMapAssetLoad(e){this.normalMap=e.resource}_onNormalMapAssetUnload(e){this.normalMap=null}_onNormalMapAssetRemove(e){this._onNormalMapAssetUnload(e)}_onNormalMapAssetChange(e){}onSetNormalMapAsset(e,s,i){const r=this.system.app.assets;if(s){const n=r.get(s);n&&this._unbindNormalMapAsset(n)}if(i){i instanceof he&&(this.data.normalMapAsset=i.id,i=i.id);const n=r.get(i);n?this._bindNormalMapAsset(n):r.once(`add:${i}`,a=>{this._bindNormalMapAsset(a)})}else this.normalMap=null}_bindMeshAsset(e){if(e.on("load",this._onMeshAssetLoad,this),e.on("unload",this._onMeshAssetUnload,this),e.on("remove",this._onMeshAssetRemove,this),e.on("change",this._onMeshAssetChange,this),e.resource)this._onMeshAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}}_unbindMeshAsset(e){e.off("load",this._onMeshAssetLoad,this),e.off("unload",this._onMeshAssetUnload,this),e.off("remove",this._onMeshAssetRemove,this),e.off("change",this._onMeshAssetChange,this)}_onMeshAssetLoad(e){this._onMeshChanged(e.resource)}_onMeshAssetUnload(e){this.mesh=null}_onMeshAssetRemove(e){this._onMeshAssetUnload(e)}_onMeshAssetChange(e){}onSetMeshAsset(e,s,i){const r=this.system.app.assets;if(s){const n=r.get(s);n&&this._unbindMeshAsset(n)}if(i){i instanceof he&&(this.data.meshAsset=i.id,i=i.id);const n=r.get(i);n&&this._bindMeshAsset(n)}else this._onMeshChanged(null)}onSetMesh(e,s,i){!i||i instanceof he||typeof i=="number"?this.meshAsset=i:this._onMeshChanged(i)}_onMeshChanged(e){e&&!(e instanceof ke)&&(e.meshInstances[0]?e=e.meshInstances[0].mesh:e=null),this.data.mesh=e,this.emitter&&(this.emitter.mesh=e,this.emitter.resetMaterial(),this.rebuild())}onSetRenderAsset(e,s,i){const r=this.system.app.assets;if(s){const n=r.get(s);n&&this._unbindRenderAsset(n)}if(i){i instanceof he&&(this.data.renderAsset=i.id,i=i.id);const n=r.get(i);n&&this._bindRenderAsset(n)}else this._onRenderChanged(null)}_bindRenderAsset(e){if(e.on("load",this._onRenderAssetLoad,this),e.on("unload",this._onRenderAssetUnload,this),e.on("remove",this._onRenderAssetRemove,this),e.resource)this._onRenderAssetLoad(e);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(e)}}_unbindRenderAsset(e){var s;e.off("load",this._onRenderAssetLoad,this),e.off("unload",this._onRenderAssetUnload,this),e.off("remove",this._onRenderAssetRemove,this),(s=this._evtSetMeshes)==null||s.off(),this._evtSetMeshes=null}_onRenderAssetLoad(e){this._onRenderChanged(e.resource)}_onRenderAssetUnload(e){this._onRenderChanged(null)}_onRenderAssetRemove(e){this._onRenderAssetUnload(e)}_onRenderChanged(e){var s;if(!e){this._onMeshChanged(null);return}(s=this._evtSetMeshes)==null||s.off(),this._evtSetMeshes=e.on("set:meshes",this._onRenderSetMeshes,this),e.meshes&&this._onRenderSetMeshes(e.meshes)}_onRenderSetMeshes(e){this._onMeshChanged(e&&e[0])}onSetLoop(e,s,i){this.emitter&&(this.emitter[e]=i,this.emitter.resetTime())}onSetBlendType(e,s,i){this.emitter&&(this.emitter[e]=i,this.emitter.material.blendType=i,this.emitter.resetMaterial(),this.rebuild())}_requestDepth(){this._requestedDepth||($n||($n=this.system.app.scene.layers.getLayerById(es)),$n&&($n.incrementCounter(),this._requestedDepth=!0))}_releaseDepth(){this._requestedDepth&&$n&&($n.decrementCounter(),this._requestedDepth=!1)}onSetDepthSoftening(e,s,i){s!==i&&(i?(this.enabled&&this.entity.enabled&&this._requestDepth(),this.emitter&&(this.emitter[e]=i)):(this.enabled&&this.entity.enabled&&this._releaseDepth(),this.emitter&&(this.emitter[e]=i)),this.emitter&&(this.reset(),this.emitter.resetMaterial(),this.rebuild()))}onSetSimpleProperty(e,s,i){this.emitter&&(this.emitter[e]=i,this.emitter.resetMaterial())}onSetComplexProperty(e,s,i){this.emitter&&(this.emitter[e]=i,this.emitter.resetMaterial(),this.rebuild(),this.reset())}onSetGraphProperty(e,s,i){this.emitter&&(this.emitter[e]=i,this.emitter.rebuildGraphs(),this.emitter.resetMaterial())}onEnable(){const e=this.system.app.scene,s=e.layers,i=this.data;for(let r=0,n=sh.length;r<n;r++){let a=i[sh[r]];if(a){if(!(a instanceof he))if(parseInt(a,10)>=0)a=this.system.app.assets.get(a);else continue;a&&!a.resource&&this.system.app.assets.load(a)}}if(!this.system.app.graphicsDevice.disableParticleSystem){if(!this.emitter){let r=i.mesh;r instanceof ke||(r=null),this.emitter=new u1(this.system.app.graphicsDevice,{numParticles:i.numParticles,emitterExtents:i.emitterExtents,emitterExtentsInner:i.emitterExtentsInner,emitterRadius:i.emitterRadius,emitterRadiusInner:i.emitterRadiusInner,emitterShape:i.emitterShape,initialVelocity:i.initialVelocity,wrap:i.wrap,localSpace:i.localSpace,screenSpace:i.screenSpace,wrapBounds:i.wrapBounds,lifetime:i.lifetime,rate:i.rate,rate2:i.rate2,orientation:i.orientation,particleNormal:i.particleNormal,animTilesX:i.animTilesX,animTilesY:i.animTilesY,animStartFrame:i.animStartFrame,animNumFrames:i.animNumFrames,animNumAnimations:i.animNumAnimations,animIndex:i.animIndex,randomizeAnimIndex:i.randomizeAnimIndex,animSpeed:i.animSpeed,animLoop:i.animLoop,startAngle:i.startAngle,startAngle2:i.startAngle2,scaleGraph:i.scaleGraph,scaleGraph2:i.scaleGraph2,colorGraph:i.colorGraph,colorGraph2:i.colorGraph2,alphaGraph:i.alphaGraph,alphaGraph2:i.alphaGraph2,localVelocityGraph:i.localVelocityGraph,localVelocityGraph2:i.localVelocityGraph2,velocityGraph:i.velocityGraph,velocityGraph2:i.velocityGraph2,rotationSpeedGraph:i.rotationSpeedGraph,rotationSpeedGraph2:i.rotationSpeedGraph2,radialSpeedGraph:i.radialSpeedGraph,radialSpeedGraph2:i.radialSpeedGraph2,colorMap:i.colorMap,normalMap:i.normalMap,loop:i.loop,preWarm:i.preWarm,sort:i.sort,stretch:i.stretch,alignToMotion:i.alignToMotion,lighting:i.lighting,halfLambert:i.halfLambert,intensity:i.intensity,depthSoftening:i.depthSoftening,scene:this.system.app.scene,mesh:r,depthWrite:i.depthWrite,noFog:i.noFog,node:this.entity,blendType:i.blendType}),this.emitter.meshInstance.node=this.entity,this.emitter.drawOrder=this.drawOrder,i.autoPlay||(this.pause(),this.emitter.meshInstance.visible=!1)}this.emitter.colorMap&&this.addMeshInstanceToLayers(),this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this),s&&(this._evtLayerAdded=s.on("add",this.onLayerAdded,this),this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&i.depthSoftening&&this._requestDepth()}}onDisable(){var i,r,n;const s=this.system.app.scene.layers;(i=this._evtLayersChanged)==null||i.off(),this._evtLayersChanged=null,s&&((r=this._evtLayerAdded)==null||r.off(),this._evtLayerAdded=null,(n=this._evtLayerRemoved)==null||n.off(),this._evtLayerRemoved=null),this.emitter&&(this.removeMeshInstanceFromLayers(),this.data.depthSoftening&&this._releaseDepth(),this.emitter.camera=null)}onBeforeRemove(){this.enabled&&(this.enabled=!1),this.emitter&&(this.emitter.destroy(),this.emitter=null);for(let e=0;e<sh.length;e++){const s=sh[e];this.data[s]&&(this[s]=null)}this.off()}reset(){this.emitter&&this.emitter.reset()}stop(){this.emitter&&(this.emitter.loop=!1,this.emitter.resetTime(),this.emitter.addTime(0,!0))}pause(){this.data.paused=!0}unpause(){this.data.paused=!1}play(){this.data.paused=!1,this.emitter&&(this.emitter.meshInstance.visible=!0,this.emitter.loop=this.data.loop,this.emitter.resetTime())}isPlaying(){return this.data.paused?!1:this.emitter&&this.emitter.loop?!0:Date.now()<=this.emitter.endTime}setInTools(){const{emitter:e}=this;e&&!e.inTools&&(e.inTools=!0,this.rebuild())}rebuild(){const e=this.enabled;this.enabled=!1,this.emitter&&this.emitter.rebuild(),this.enabled=e}}class hI{constructor(){this.numParticles=1,this.rate=1,this.rate2=null,this.startAngle=0,this.startAngle2=null,this.lifetime=50,this.emitterExtents=new A,this.emitterExtentsInner=new A,this.emitterRadius=0,this.emitterRadiusInner=0,this.emitterShape=qs,this.initialVelocity=0,this.wrap=!1,this.wrapBounds=new A,this.localSpace=!1,this.screenSpace=!1,this.colorMap=null,this.colorMapAsset=null,this.normalMap=null,this.normalMapAsset=null,this.loop=!0,this.preWarm=!1,this.sort=0,this.mode=u0,this.scene=null,this.lighting=!1,this.halfLambert=!1,this.intensity=1,this.stretch=0,this.alignToMotion=!1,this.depthSoftening=0,this.renderAsset=null,this.meshAsset=null,this.mesh=null,this.depthWrite=!1,this.noFog=!1,this.orientation=$h,this.particleNormal=new A(0,1,0),this.animTilesX=1,this.animTilesY=1,this.animStartFrame=0,this.animNumFrames=1,this.animNumAnimations=1,this.animIndex=0,this.randomizeAnimIndex=!1,this.animSpeed=1,this.animLoop=!0,this.scaleGraph=null,this.scaleGraph2=null,this.colorGraph=null,this.colorGraph2=null,this.alphaGraph=null,this.alphaGraph2=null,this.localVelocityGraph=null,this.localVelocityGraph2=null,this.velocityGraph=null,this.velocityGraph2=null,this.rotationSpeedGraph=null,this.rotationSpeedGraph2=null,this.radialSpeedGraph=null,this.radialSpeedGraph2=null,this.blendType=Gt,this.enabled=!0,this.paused=!1,this.autoPlay=!0,this.layers=[zi]}}const cI=["enabled","autoPlay","numParticles","lifetime","rate","rate2","startAngle","startAngle2","loop","preWarm","lighting","halfLambert","intensity","depthWrite","noFog","depthSoftening","sort","blendType","stretch","alignToMotion","emitterShape","emitterExtents","emitterExtentsInner","emitterRadius","emitterRadiusInner","initialVelocity","wrap","wrapBounds","localSpace","screenSpace","colorMapAsset","normalMapAsset","mesh","meshAsset","renderAsset","orientation","particleNormal","localVelocityGraph","localVelocityGraph2","velocityGraph","velocityGraph2","rotationSpeedGraph","rotationSpeedGraph2","radialSpeedGraph","radialSpeedGraph2","scaleGraph","scaleGraph2","colorGraph","colorGraph2","alphaGraph","alphaGraph2","colorMap","normalMap","animTilesX","animTilesY","animStartFrame","animNumFrames","animNumAnimations","animIndex","randomizeAnimIndex","animSpeed","animLoop","layers"];class dI extends Qe{constructor(t){super(t),this.id="particlesystem",this.ComponentType=lI,this.DataType=hI,this.schema=cI,this.propertyTypes={emitterExtents:"vec3",emitterExtentsInner:"vec3",particleNormal:"vec3",wrapBounds:"vec3",localVelocityGraph:"curveset",localVelocityGraph2:"curveset",velocityGraph:"curveset",velocityGraph2:"curveset",colorGraph:"curveset",colorGraph2:"curveset",alphaGraph:"curve",alphaGraph2:"curve",rotationSpeedGraph:"curve",rotationSpeedGraph2:"curve",radialSpeedGraph:"curve",radialSpeedGraph2:"curve",scaleGraph:"curve",scaleGraph2:"curve"},this.on("beforeremove",this.onBeforeRemove,this),this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){const i={};s=[];const r=this.propertyTypes;(e.mesh instanceof he||typeof e.mesh=="number")&&(e.meshAsset=e.mesh,delete e.mesh);for(const n in e){if(e.hasOwnProperty(n)&&(s.push(n),i[n]=e[n]),r[n]==="vec3")Array.isArray(i[n])&&(i[n]=new A(i[n][0],i[n][1],i[n][2]));else if(r[n]==="curve"){if(!(i[n]instanceof Ls)){const a=i[n].type;i[n]=new Ls(i[n].keys),i[n].type=a}}else if(r[n]==="curveset"&&!(i[n]instanceof Yr)){const a=i[n].type;i[n]=new Yr(i[n].keys),i[n].type=a}i.layers&&Array.isArray(i.layers)&&(i.layers=i.layers.slice(0))}super.initializeComponentData(t,i,s)}cloneComponent(t,e){const s=t.particlesystem.data,i=this.schema,r={};for(let n=0,a=i.length;n<a;n++){const o=i[n];let h=s[o];h instanceof A||h instanceof Ls||h instanceof Yr?(h=h.clone(),r[o]=h):o==="layers"?r.layers=s.layers.slice(0):h!=null&&(r[o]=h)}return this.addComponent(e,r)}onUpdate(t){const e=this.store;let s;const i=this.app.stats.particles,r=this.app.scene.layers;for(let n=0;n<r.layerList.length;n++)r.layerList[n].requiresLightCube=!1;for(const n in e)if(e.hasOwnProperty(n)){const a=e[n],o=a.entity,h=a.data;if(h.enabled&&o.enabled){const d=o.particlesystem.emitter;if(!(d!=null&&d.meshInstance.visible))continue;if(d.lighting){const u=h.layers;for(let f=0;f<u.length;f++){const p=r.getLayerById(u[f]);p&&(p.requiresLightCube=!0)}}if(!h.paused){if(d.simTime+=t,d.simTime>d.fixedTimeStep&&(s=Math.floor(d.simTime/d.fixedTimeStep),d.simTime-=s*d.fixedTimeStep),s){s=Math.min(s,d.maxSubSteps);for(let u=0;u<s;u++)d.addTime(d.fixedTimeStep,!1);i._updatesPerFrame+=s,i._frameTime+=d._addTimeTime,d._addTimeTime=0}d.finishFrame()}}}}onBeforeRemove(t,e){e.onBeforeRemove()}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}class uI extends qc{constructor(t,e){super(),this.skin=t,this.skinInstance=e}}const Ms=class Ms{static logCachedSkinInstances(){console.log("CachedSkinInstances"),Ms._skinInstanceCache.forEach((t,e)=>{console.log(`${e.name}: Array(${t.length})`);for(let s=0;s<t.length;s++)console.log(`  ${s}: RefCount ${t[s].refCount}`)})}static createCachedSkinInstance(t,e,s){let i=Ms.getCachedSkinInstance(t,e);return i||(i=new hl(t),i.resolve(e,s),Ms.addCachedSkinInstance(t,e,i)),i}static getCachedSkinInstance(t,e){let s=null;const i=Ms._skinInstanceCache.get(e);if(i){const r=i.find(n=>n.skin===t);r&&(r.incRefCount(),s=r.skinInstance)}return s}static addCachedSkinInstance(t,e,s){let i=Ms._skinInstanceCache.get(e);i||(i=[],Ms._skinInstanceCache.set(e,i));let r=i.find(n=>n.skin===t);r||(r=new uI(t,s),i.push(r)),r.incRefCount()}static removeCachedSkinInstance(t){if(t){const e=t.rootBone;if(e){const s=Ms._skinInstanceCache.get(e);if(s){const i=s.findIndex(r=>r.skinInstance===t);if(i>=0){const r=s[i];r.decRefCount(),r.refCount===0&&(s.splice(i,1),s.length||Ms._skinInstanceCache.delete(e),t&&(t.destroy(),r.skinInstance=null))}}}}}};c(Ms,"_skinInstanceCache",new Map);let $o=Ms;class qo{constructor(t,e,s,i,r){c(this,"_evtLoadById",null);c(this,"_evtUnloadById",null);c(this,"_evtAddById",null);c(this,"_evtRemoveById",null);c(this,"_evtLoadByUrl",null);c(this,"_evtAddByUrl",null);c(this,"_evtRemoveByUrl",null);this.propertyName=t,this.parent=e,this._scope=r,this._registry=s,this.id=null,this.url=null,this.asset=null,this._onAssetLoad=i.load,this._onAssetAdd=i.add,this._onAssetRemove=i.remove,this._onAssetUnload=i.unload}set id(t){if(this.url)throw Error("Can't set id and url");this._unbind(),this._id=t,this.asset=this._registry.get(this._id),this._bind()}get id(){return this._id}set url(t){if(this.id)throw Error("Can't set id and url");this._unbind(),this._url=t,this.asset=this._registry.getByUrl(this._url),this._bind()}get url(){return this._url}_bind(){this.id&&(this._onAssetLoad&&(this._evtLoadById=this._registry.on(`load:${this.id}`,this._onLoad,this)),this._onAssetAdd&&(this._evtAddById=this._registry.once(`add:${this.id}`,this._onAdd,this)),this._onAssetRemove&&(this._evtRemoveById=this._registry.on(`remove:${this.id}`,this._onRemove,this)),this._onAssetUnload&&(this._evtUnloadById=this._registry.on(`unload:${this.id}`,this._onUnload,this))),this.url&&(this._onAssetLoad&&(this._evtLoadByUrl=this._registry.on(`load:url:${this.url}`,this._onLoad,this)),this._onAssetAdd&&(this._evtAddByUrl=this._registry.once(`add:url:${this.url}`,this._onAdd,this)),this._onAssetRemove&&(this._evtRemoveByUrl=this._registry.on(`remove:url:${this.url}`,this._onRemove,this)))}_unbind(){var t,e,s,i,r,n,a;this.id&&((t=this._evtLoadById)==null||t.off(),this._evtLoadById=null,(e=this._evtAddById)==null||e.off(),this._evtAddById=null,(s=this._evtRemoveById)==null||s.off(),this._evtRemoveById=null,(i=this._evtUnloadById)==null||i.off(),this._evtUnloadById=null),this.url&&((r=this._evtLoadByUrl)==null||r.off(),this._evtLoadByUrl=null,(n=this._evtAddByUrl)==null||n.off(),this._evtAddByUrl=null,(a=this._evtRemoveByUrl)==null||a.off(),this._evtRemoveByUrl=null)}_onLoad(t){this._onAssetLoad.call(this._scope,this.propertyName,this.parent,t)}_onAdd(t){this.asset=t,this._onAssetAdd.call(this._scope,this.propertyName,this.parent,t)}_onRemove(t){this._onAssetRemove.call(this._scope,this.propertyName,this.parent,t),this.asset=null}_onUnload(t){this._onAssetUnload.call(this._scope,this.propertyName,this.parent,t)}}class px extends pe{constructor(e,s){super(e,s);c(this,"_type","asset");c(this,"_castShadows",!0);c(this,"_receiveShadows",!0);c(this,"_castShadowsLightmap",!0);c(this,"_lightmapped",!1);c(this,"_lightmapSizeMultiplier",1);c(this,"isStatic",!1);c(this,"_batchGroupId",-1);c(this,"_layers",[zi]);c(this,"_renderStyle",bo);c(this,"_meshInstances",[]);c(this,"_customAabb",null);c(this,"_area",null);c(this,"_assetReference");c(this,"_materialReferences",[]);c(this,"_material");c(this,"_rootBone",null);c(this,"_evtLayersChanged",null);c(this,"_evtLayerAdded",null);c(this,"_evtLayerRemoved",null);c(this,"_evtSetMeshes",null);this._assetReference=new qo("asset",this,e.app.assets,{add:this._onRenderAssetAdded,load:this._onRenderAssetLoad,remove:this._onRenderAssetRemove,unload:this._onRenderAssetUnload},this),this._material=e.defaultMaterial,s.on("remove",this.onRemoveChild,this),s.on("removehierarchy",this.onRemoveChild,this),s.on("insert",this.onInsertChild,this),s.on("inserthierarchy",this.onInsertChild,this)}set renderStyle(e){this._renderStyle!==e&&(this._renderStyle=e,Be._prepareRenderStyleForArray(this._meshInstances,e))}get renderStyle(){return this._renderStyle}set customAabb(e){this._customAabb=e;const s=this._meshInstances;if(s)for(let i=0;i<s.length;i++)s[i].setCustomAabb(this._customAabb)}get customAabb(){return this._customAabb}set type(e){if(this._type!==e&&(this._area=null,this._type=e,this.destroyMeshInstances(),e!=="asset")){let s=this._material;(!s||s===this.system.defaultMaterial)&&(s=this._materialReferences[0]&&this._materialReferences[0].asset&&this._materialReferences[0].asset.resource);const i=dx(this.system.app.graphicsDevice,e);this._area=i.area,this.meshInstances=[new Be(i.mesh,s||this.system.defaultMaterial,this.entity)]}}get type(){return this._type}set meshInstances(e){if(b.assert(Array.isArray(e),"MeshInstances set to a Render component must be an array."),this.destroyMeshInstances(),this._meshInstances=e,this._meshInstances){const s=this._meshInstances;for(let i=0;i<s.length;i++)s[i].node||(s[i].node=this.entity),s[i].castShadow=this._castShadows,s[i].receiveShadow=this._receiveShadows,s[i].renderStyle=this._renderStyle,s[i].setLightmapped(this._lightmapped),s[i].setCustomAabb(this._customAabb);this.enabled&&this.entity.enabled&&this.addToLayers()}}get meshInstances(){return this._meshInstances}set lightmapped(e){if(e!==this._lightmapped){this._lightmapped=e;const s=this._meshInstances;if(s)for(let i=0;i<s.length;i++)s[i].setLightmapped(e)}}get lightmapped(){return this._lightmapped}set castShadows(e){if(this._castShadows!==e){const s=this._meshInstances;if(s){const i=this.layers,r=this.system.app.scene;if(this._castShadows&&!e)for(let n=0;n<i.length;n++){const a=r.layers.getLayerById(this.layers[n]);a&&a.removeShadowCasters(s)}for(let n=0;n<s.length;n++)s[n].castShadow=e;if(!this._castShadows&&e)for(let n=0;n<i.length;n++){const a=r.layers.getLayerById(i[n]);a&&a.addShadowCasters(s)}}this._castShadows=e}}get castShadows(){return this._castShadows}set receiveShadows(e){if(this._receiveShadows!==e){this._receiveShadows=e;const s=this._meshInstances;if(s)for(let i=0;i<s.length;i++)s[i].receiveShadow=e}}get receiveShadows(){return this._receiveShadows}set castShadowsLightmap(e){this._castShadowsLightmap=e}get castShadowsLightmap(){return this._castShadowsLightmap}set lightmapSizeMultiplier(e){this._lightmapSizeMultiplier=e}get lightmapSizeMultiplier(){return this._lightmapSizeMultiplier}set layers(e){const s=this.system.app.scene.layers;let i;if(this._meshInstances)for(let r=0;r<this._layers.length;r++)i=s.getLayerById(this._layers[r]),i&&i.removeMeshInstances(this._meshInstances);this._layers.length=0;for(let r=0;r<e.length;r++)this._layers[r]=e[r];if(!(!this.enabled||!this.entity.enabled||!this._meshInstances))for(let r=0;r<this._layers.length;r++)i=s.getLayerById(this._layers[r]),i&&i.addMeshInstances(this._meshInstances)}get layers(){return this._layers}set batchGroupId(e){var s,i;this._batchGroupId!==e&&(this.entity.enabled&&this._batchGroupId>=0&&((s=this.system.app.batcher)==null||s.remove(rt.RENDER,this.batchGroupId,this.entity)),this.entity.enabled&&e>=0&&((i=this.system.app.batcher)==null||i.insert(rt.RENDER,e,this.entity)),e<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&this.addToLayers(),this._batchGroupId=e)}get batchGroupId(){return this._batchGroupId}set material(e){if(this._material!==e&&(this._material=e,this._meshInstances&&this._type!=="asset"))for(let s=0;s<this._meshInstances.length;s++)this._meshInstances[s].material=e}get material(){return this._material}set materialAssets(e=[]){if(this._materialReferences.length>e.length){for(let s=e.length;s<this._materialReferences.length;s++)this._materialReferences[s].id=null;this._materialReferences.length=e.length}for(let s=0;s<e.length;s++)if(this._materialReferences[s]||this._materialReferences.push(new qo(s,this,this.system.app.assets,{add:this._onMaterialAdded,load:this._onMaterialLoad,remove:this._onMaterialRemove,unload:this._onMaterialUnload},this)),e[s]){const i=e[s]instanceof he?e[s].id:e[s];this._materialReferences[s].id!==i&&(this._materialReferences[s].id=i),this._materialReferences[s].asset&&this._onMaterialAdded(s,this,this._materialReferences[s].asset)}else this._materialReferences[s].id=null,this._meshInstances[s]&&(this._meshInstances[s].material=this.system.defaultMaterial)}get materialAssets(){return this._materialReferences.map(e=>e.id)}set asset(e){const s=e instanceof he?e.id:e;this._assetReference.id!==s&&(this._assetReference.asset&&this._assetReference.asset.resource&&this._onRenderAssetRemove(),this._assetReference.id=s,this._assetReference.asset&&this._onRenderAssetAdded())}get asset(){return this._assetReference.id}assignAsset(e){const s=e instanceof he?e.id:e;this._assetReference.id=s}set rootBone(e){if(this._rootBone!==e){const s=typeof e=="string";if(this._rootBone&&s&&this._rootBone.getGuid()===e)return;this._rootBone&&this._clearSkinInstances(),e instanceof Oe?this._rootBone=e:s?(this._rootBone=this.system.app.getEntityFromIndex(e)||null,this._rootBone||b.warn("Failed to find rootBone Entity by GUID")):this._rootBone=null,this._rootBone&&this._cloneSkinInstances()}}get rootBone(){return this._rootBone}destroyMeshInstances(){const e=this._meshInstances;if(e){this.removeFromLayers(),this._clearSkinInstances();for(let s=0;s<e.length;s++)e[s].destroy();this._meshInstances.length=0}}addToLayers(){const e=this.system.app.scene.layers;for(let s=0;s<this._layers.length;s++){const i=e.getLayerById(this._layers[s]);i&&i.addMeshInstances(this._meshInstances)}}removeFromLayers(){if(this._meshInstances&&this._meshInstances.length){const e=this.system.app.scene.layers;for(let s=0;s<this._layers.length;s++){const i=e.getLayerById(this._layers[s]);i&&i.removeMeshInstances(this._meshInstances)}}}onRemoveChild(){this.removeFromLayers()}onInsertChild(){this._meshInstances&&this.enabled&&this.entity.enabled&&this.addToLayers()}onRemove(){this.destroyMeshInstances(),this.asset=null,this.materialAsset=null,this._assetReference.id=null;for(let e=0;e<this._materialReferences.length;e++)this._materialReferences[e].id=null;this.entity.off("remove",this.onRemoveChild,this),this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(e,s){this.addToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),s.on("add",this.onLayerAdded,this),s.on("remove",this.onLayerRemoved,this)}onLayerAdded(e){this.layers.indexOf(e.id)<0||e.addMeshInstances(this._meshInstances)}onLayerRemoved(e){this.layers.indexOf(e.id)<0||e.removeMeshInstances(this._meshInstances)}onEnable(){var n;const e=this.system.app,s=e.scene,i=s.layers;this._rootBone&&this._cloneSkinInstances(),this._evtLayersChanged=s.on("set:layers",this.onLayersChanged,this),i&&(this._evtLayerAdded=i.on("add",this.onLayerAdded,this),this._evtLayerRemoved=i.on("remove",this.onLayerRemoved,this));const r=this._type==="asset";this._meshInstances&&this._meshInstances.length?this.addToLayers():r&&this.asset&&this._onRenderAssetAdded();for(let a=0;a<this._materialReferences.length;a++)this._materialReferences[a].asset&&this.system.app.assets.load(this._materialReferences[a].asset);this._batchGroupId>=0&&((n=e.batcher)==null||n.insert(rt.RENDER,this.batchGroupId,this.entity))}onDisable(){var r,n,a,o;const e=this.system.app,i=e.scene.layers;(r=this._evtLayersChanged)==null||r.off(),this._evtLayersChanged=null,this._rootBone&&this._clearSkinInstances(),i&&((n=this._evtLayerAdded)==null||n.off(),this._evtLayerAdded=null,(a=this._evtLayerRemoved)==null||a.off(),this._evtLayerRemoved=null),this._batchGroupId>=0&&((o=e.batcher)==null||o.remove(rt.RENDER,this.batchGroupId,this.entity)),this.removeFromLayers()}hide(){if(this._meshInstances)for(let e=0;e<this._meshInstances.length;e++)this._meshInstances[e].visible=!1}show(){if(this._meshInstances)for(let e=0;e<this._meshInstances.length;e++)this._meshInstances[e].visible=!0}_onRenderAssetAdded(){this._assetReference.asset&&(this._assetReference.asset.resource?this._onRenderAssetLoad():this.enabled&&this.entity.enabled&&this.system.app.assets.load(this._assetReference.asset))}_onRenderAssetLoad(){var e;if(this.destroyMeshInstances(),this._assetReference.asset){const s=this._assetReference.asset.resource;(e=this._evtSetMeshes)==null||e.off(),this._evtSetMeshes=s.on("set:meshes",this._onSetMeshes,this),s.meshes&&this._onSetMeshes(s.meshes)}}_onSetMeshes(e){this._cloneMeshes(e)}_clearSkinInstances(){for(let e=0;e<this._meshInstances.length;e++){const s=this._meshInstances[e];$o.removeCachedSkinInstance(s.skinInstance),s.skinInstance=null}}_cloneSkinInstances(){if(this._meshInstances.length&&this._rootBone instanceof Oe)for(let e=0;e<this._meshInstances.length;e++){const s=this._meshInstances[e],i=s.mesh;i.skin&&!s.skinInstance&&(s.skinInstance=$o.createCachedSkinInstance(i.skin,this._rootBone,this.entity))}}_cloneMeshes(e){if(e&&e.length){const s=[];for(let i=0;i<e.length;i++){const r=e[i],n=this._materialReferences[i]&&this._materialReferences[i].asset&&this._materialReferences[i].asset.resource,a=new Be(r,n||this.system.defaultMaterial,this.entity);s.push(a),r.morph&&(a.morphInstance=new mn(r.morph))}this.meshInstances=s,this._cloneSkinInstances()}}_onRenderAssetUnload(){this._type==="asset"&&this.destroyMeshInstances()}_onRenderAssetRemove(){var e;(e=this._evtSetMeshes)==null||e.off(),this._evtSetMeshes=null,this._onRenderAssetUnload()}_onMaterialAdded(e,s,i){i.resource?this._onMaterialLoad(e,s,i):this.enabled&&this.entity.enabled&&this.system.app.assets.load(i)}_updateMainMaterial(e,s){e===0&&(this.material=s)}_onMaterialLoad(e,s,i){this._meshInstances[e]&&(this._meshInstances[e].material=i.resource),this._updateMainMaterial(e,i.resource)}_onMaterialRemove(e,s,i){this._meshInstances[e]&&(this._meshInstances[e].material=this.system.defaultMaterial),this._updateMainMaterial(e,this.system.defaultMaterial)}_onMaterialUnload(e,s,i){this._meshInstances[e]&&(this._meshInstances[e].material=this.system.defaultMaterial),this._updateMainMaterial(e,this.system.defaultMaterial)}resolveDuplicatedEntityReferenceProperties(e,s){e.rootBone&&(this.rootBone=s[e.rootBone.getGuid()])}}class fI{constructor(){this.enabled=!0}}const yf=["enabled"],Pr=["material","meshInstances","asset","materialAssets","castShadows","receiveShadows","castShadowsLightmap","lightmapped","lightmapSizeMultiplier","renderStyle","type","layers","isStatic","batchGroupId","rootBone"];class pI extends Qe{constructor(t){super(t),this.id="render",this.ComponentType=px,this.DataType=fI,this.schema=yf,this.defaultMaterial=cl(t.graphicsDevice),this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){(e.batchGroupId===null||e.batchGroupId===void 0)&&(e.batchGroupId=-1),e.layers&&e.layers.length&&(e.layers=e.layers.slice(0));for(let i=0;i<Pr.length;i++)e.hasOwnProperty(Pr[i])&&(t[Pr[i]]=e[Pr[i]]);e.aabbCenter&&e.aabbHalfExtents&&(t.customAabb=new ve(new A(e.aabbCenter),new A(e.aabbHalfExtents))),super.initializeComponentData(t,e,yf)}cloneComponent(t,e){const s={};for(let a=0;a<Pr.length;a++)s[Pr[a]]=t.render[Pr[a]];s.enabled=t.render.enabled,delete s.meshInstances;const i=this.addComponent(e,s),r=t.render.meshInstances,n=r.map(a=>a.mesh);i._onSetMeshes(n);for(let a=0;a<r.length;a++)i.meshInstances[a].material=r[a].material;return t.render.customAabb&&(i.customAabb=t.render.customAabb.clone()),i}onRemove(t,e){e.onRemove()}}pe._buildAccessors(px.prototype,yf);class tu{constructor(t,e){c(this,"_constructor");c(this,"_pool",[]);c(this,"_count",0);this._constructor=t,this._resize(e)}_resize(t){if(t>this._pool.length)for(let e=this._pool.length;e<t;e++)this._pool[e]=new this._constructor}allocate(){return this._count>=this._pool.length&&this._resize(this._pool.length*2),this._pool[this._count++]}freeAll(){this._count=0}}let Yt,we,ws,qn;const mI=new ie,_I=new ie,ih=new A;class Ys extends pe{constructor(){super(...arguments);c(this,"_angularDamping",0);c(this,"_angularFactor",new A(1,1,1));c(this,"_angularVelocity",new A);c(this,"_body",null);c(this,"_friction",.5);c(this,"_group",lg);c(this,"_linearDamping",0);c(this,"_linearFactor",new A(1,1,1));c(this,"_linearVelocity",new A);c(this,"_mask",cf);c(this,"_mass",1);c(this,"_restitution",0);c(this,"_rollingFriction",0);c(this,"_simulationEnabled",!1);c(this,"_type",ao)}static onLibraryLoaded(){typeof Ammo<"u"&&(Yt=new Ammo.btTransform,we=new Ammo.btVector3,ws=new Ammo.btVector3,qn=new Ammo.btQuaternion)}static onAppDestroy(){Ammo.destroy(Yt),Ammo.destroy(we),Ammo.destroy(ws),Ammo.destroy(qn),Yt=null,we=null,ws=null,qn=null}set angularDamping(e){this._angularDamping!==e&&(this._angularDamping=e,this._body&&this._body.setDamping(this._linearDamping,e))}get angularDamping(){return this._angularDamping}set angularFactor(e){this._angularFactor.equals(e)||(this._angularFactor.copy(e),this._body&&this._type===vs&&(we.setValue(e.x,e.y,e.z),this._body.setAngularFactor(we)))}get angularFactor(){return this._angularFactor}set angularVelocity(e){this._body&&this._type===vs&&(this._body.activate(),we.setValue(e.x,e.y,e.z),this._body.setAngularVelocity(we),this._angularVelocity.copy(e))}get angularVelocity(){if(this._body&&this._type===vs){const e=this._body.getAngularVelocity();this._angularVelocity.set(e.x(),e.y(),e.z())}return this._angularVelocity}set body(e){this._body!==e&&(this._body=e,e&&this._simulationEnabled&&e.activate())}get body(){return this._body}set friction(e){this._friction!==e&&(this._friction=e,this._body&&this._body.setFriction(e))}get friction(){return this._friction}set group(e){this._group!==e&&(this._group=e,this.enabled&&this.entity.enabled&&(this.disableSimulation(),this.enableSimulation()))}get group(){return this._group}set linearDamping(e){this._linearDamping!==e&&(this._linearDamping=e,this._body&&this._body.setDamping(e,this._angularDamping))}get linearDamping(){return this._linearDamping}set linearFactor(e){this._linearFactor.equals(e)||(this._linearFactor.copy(e),this._body&&this._type===vs&&(we.setValue(e.x,e.y,e.z),this._body.setLinearFactor(we)))}get linearFactor(){return this._linearFactor}set linearVelocity(e){this._body&&this._type===vs&&(this._body.activate(),we.setValue(e.x,e.y,e.z),this._body.setLinearVelocity(we),this._linearVelocity.copy(e))}get linearVelocity(){if(this._body&&this._type===vs){const e=this._body.getLinearVelocity();this._linearVelocity.set(e.x(),e.y(),e.z())}return this._linearVelocity}set mask(e){this._mask!==e&&(this._mask=e,this.enabled&&this.entity.enabled&&(this.disableSimulation(),this.enableSimulation()))}get mask(){return this._mask}set mass(e){if(this._mass!==e&&(this._mass=e,this._body&&this._type===vs)){const s=this.enabled&&this.entity.enabled;s&&this.disableSimulation(),this._body.getCollisionShape().calculateLocalInertia(e,we),this._body.setMassProps(e,we),this._body.updateInertiaTensor(),s&&this.enableSimulation()}}get mass(){return this._mass}set restitution(e){this._restitution!==e&&(this._restitution=e,this._body&&this._body.setRestitution(e))}get restitution(){return this._restitution}set rollingFriction(e){this._rollingFriction!==e&&(this._rollingFriction=e,this._body&&this._body.setRollingFriction(e))}get rollingFriction(){return this._rollingFriction}set type(e){if(this._type!==e){switch(this._type=e,this.disableSimulation(),e){case vs:this._group=sR,this._mask=cg;break;case zn:this._group=iR,this._mask=cg;break;case ao:default:this._group=lg,this._mask=cf;break}this.createBody()}}get type(){return this._type}createBody(){const e=this.entity;let s;if(e.collision&&(s=e.collision.shape,e.trigger&&(e.trigger.destroy(),delete e.trigger)),s){this._body&&(this.system.removeBody(this._body),this.system.destroyBody(this._body),this._body=null);const i=this._type===vs?this._mass:0;this._getEntityTransform(Yt);const r=this.system.createBody(i,s,Yt);if(r.setRestitution(this._restitution),r.setFriction(this._friction),r.setRollingFriction(this._rollingFriction),r.setDamping(this._linearDamping,this._angularDamping),this._type===vs){const n=this._linearFactor;we.setValue(n.x,n.y,n.z),r.setLinearFactor(we);const a=this._angularFactor;we.setValue(a.x,a.y,a.z),r.setAngularFactor(we)}else this._type===zn&&(r.setCollisionFlags(r.getCollisionFlags()|tR),r.setActivationState(og));r.entity=e,this.body=r,this.enabled&&e.enabled&&this.enableSimulation()}}isActive(){return this._body?this._body.isActive():!1}activate(){this._body&&this._body.activate()}enableSimulation(){const e=this.entity;if(e.collision&&e.collision.enabled&&!this._simulationEnabled){const s=this._body;if(s){switch(this.system.addBody(s,this._group,this._mask),this._type){case vs:this.system._dynamic.push(this),s.forceActivationState(hf),this.syncEntityToBody();break;case zn:this.system._kinematic.push(this),s.forceActivationState(og);break;case ao:s.forceActivationState(hf),this.syncEntityToBody();break}e.collision.type==="compound"&&this.system._compounds.push(e.collision),s.activate(),this._simulationEnabled=!0}}}disableSimulation(){const e=this._body;if(e&&this._simulationEnabled){const s=this.system;let i=s._compounds.indexOf(this.entity.collision);i>-1&&s._compounds.splice(i,1),i=s._dynamic.indexOf(this),i>-1&&s._dynamic.splice(i,1),i=s._kinematic.indexOf(this),i>-1&&s._kinematic.splice(i,1),s.removeBody(e),e.forceActivationState(sx),this._simulationEnabled=!1}}applyForce(e,s,i,r,n,a){const o=this._body;o&&(o.activate(),e instanceof A?we.setValue(e.x,e.y,e.z):we.setValue(e,s,i),s instanceof A?ws.setValue(s.x,s.y,s.z):r!==void 0?ws.setValue(r,n,a):ws.setValue(0,0,0),o.applyForce(we,ws))}applyTorque(e,s,i){const r=this._body;r&&(r.activate(),e instanceof A?we.setValue(e.x,e.y,e.z):we.setValue(e,s,i),r.applyTorque(we))}applyImpulse(e,s,i,r,n,a){const o=this._body;o&&(o.activate(),e instanceof A?we.setValue(e.x,e.y,e.z):we.setValue(e,s,i),s instanceof A?ws.setValue(s.x,s.y,s.z):r!==void 0?ws.setValue(r,n,a):ws.setValue(0,0,0),o.applyImpulse(we,ws))}applyTorqueImpulse(e,s,i){const r=this._body;r&&(r.activate(),e instanceof A?we.setValue(e.x,e.y,e.z):we.setValue(e,s,i),r.applyTorqueImpulse(we))}isStatic(){return this._type===ao}isStaticOrKinematic(){return this._type===ao||this._type===zn}isKinematic(){return this._type===zn}_getEntityTransform(e){const s=this.entity,i=s.collision;if(i){const r=i.getShapePosition(),n=i.getShapeRotation();we.setValue(r.x,r.y,r.z),qn.setValue(n.x,n.y,n.z,n.w)}else{const r=s.getPosition(),n=s.getRotation();we.setValue(r.x,r.y,r.z),qn.setValue(n.x,n.y,n.z,n.w)}e.setOrigin(we),e.setRotation(qn)}syncEntityToBody(){const e=this._body;if(e){if(this._getEntityTransform(Yt),e.setWorldTransform(Yt),this._type===zn){const s=e.getMotionState();s&&s.setWorldTransform(Yt)}e.activate()}}_updateDynamic(){const e=this._body;if(e.isActive()){const s=e.getMotionState();if(s){const i=this.entity;s.getWorldTransform(Yt);const r=Yt.getOrigin(),n=Yt.getRotation(),a=i.collision;if(a&&a._hasOffset){const o=a.data.linearOffset,h=a.data.angularOffset,d=_I.copy(h).invert(),u=mI.set(n.x(),n.y(),n.z(),n.w()).mul(d);u.transformVector(o,ih),i.setPosition(r.x()-ih.x,r.y()-ih.y,r.z()-ih.z),i.setRotation(u)}else i.setPosition(r.x(),r.y(),r.z()),i.setRotation(n.x(),n.y(),n.z(),n.w())}}}_updateKinematic(){const e=this._body.getMotionState();e&&(this._getEntityTransform(Yt),e.setWorldTransform(Yt))}teleport(e,s,i,r,n,a){e instanceof A?this.entity.setPosition(e):this.entity.setPosition(e,s,i),s instanceof ie?this.entity.setRotation(s):s instanceof A?this.entity.setEulerAngles(s):r!==void 0&&this.entity.setEulerAngles(r,n,a),this.syncEntityToBody()}onEnable(){this._body||this.createBody(),this.enableSimulation()}onDisable(){this.disableSimulation()}}c(Ys,"EVENT_CONTACT","contact"),c(Ys,"EVENT_COLLISIONSTART","collisionstart"),c(Ys,"EVENT_COLLISIONEND","collisionend"),c(Ys,"EVENT_TRIGGERENTER","triggerenter"),c(Ys,"EVENT_TRIGGERLEAVE","triggerleave"),c(Ys,"order",-1);class gI{constructor(){this.enabled=!0}}let di,ui;class Sg{constructor(t,e,s,i){c(this,"entity");c(this,"point");c(this,"normal");c(this,"hitFraction");this.entity=t,this.point=e,this.normal=s,this.hitFraction=i}}class yI{constructor(t,e,s){c(this,"a");c(this,"b");c(this,"impulse");c(this,"localPointA");c(this,"localPointB");c(this,"pointA");c(this,"pointB");c(this,"normal");arguments.length!==0?(this.a=t,this.b=e,this.impulse=s.impulse,this.localPointA=s.localPoint,this.localPointB=s.localPointOther,this.pointA=s.point,this.pointB=s.pointOther,this.normal=s.normal):(this.a=null,this.b=null,this.impulse=0,this.localPointA=new A,this.localPointB=new A,this.pointA=new A,this.pointB=new A,this.normal=new A)}}class xI{constructor(t=new A,e=new A,s=new A,i=new A,r=new A,n=0){c(this,"localPoint");c(this,"localPointOther");c(this,"point");c(this,"pointOther");c(this,"normal");c(this,"impulse");this.localPoint=t,this.localPointOther=e,this.point=s,this.pointOther=i,this.normal=r,this.impulse=n}}class SI{constructor(t,e){c(this,"other");c(this,"contacts");this.other=t,this.contacts=e}}const mx=["enabled"];class _x extends Qe{constructor(e){super(e);c(this,"maxSubSteps",10);c(this,"fixedTimeStep",1/60);c(this,"gravity",new A(0,-9.81,0));c(this,"_gravityFloat32",new Float32Array(3));c(this,"_dynamic",[]);c(this,"_kinematic",[]);c(this,"_triggers",[]);c(this,"_compounds",[]);this.id="rigidbody",this._stats=e.stats.frame,this.ComponentType=Ys,this.DataType=gI,this.contactPointPool=null,this.contactResultPool=null,this.singleContactResultPool=null,this.schema=mx,this.collisions={},this.frameCollisions={},this.on("beforeremove",this.onBeforeRemove,this)}onLibraryLoaded(){if(typeof Ammo<"u"){if(this.collisionConfiguration=new Ammo.btDefaultCollisionConfiguration,this.dispatcher=new Ammo.btCollisionDispatcher(this.collisionConfiguration),this.overlappingPairCache=new Ammo.btDbvtBroadphase,this.solver=new Ammo.btSequentialImpulseConstraintSolver,this.dynamicsWorld=new Ammo.btDiscreteDynamicsWorld(this.dispatcher,this.overlappingPairCache,this.solver,this.collisionConfiguration),this.dynamicsWorld.setInternalTickCallback){const e=Ammo.addFunction(this._checkForCollisions.bind(this),"vif");this.dynamicsWorld.setInternalTickCallback(e)}else b.warn("WARNING: This version of ammo.js can potentially fail to report contacts. Please update it to the latest version.");di=new Ammo.btVector3,ui=new Ammo.btVector3,Ys.onLibraryLoaded(),this.contactPointPool=new tu(xI,1),this.contactResultPool=new tu(SI,1),this.singleContactResultPool=new tu(yI,1),this.app.systems.on("update",this.onUpdate,this)}else this.app.systems.off("update",this.onUpdate,this)}initializeComponentData(e,s,i){const r=["mass","linearDamping","angularDamping","linearFactor","angularFactor","friction","rollingFriction","restitution","type","group","mask"];for(const n of r)if(s.hasOwnProperty(n)){const a=s[n];Array.isArray(a)?e[n]=new A(a[0],a[1],a[2]):e[n]=a}super.initializeComponentData(e,s,["enabled"])}cloneComponent(e,s){const i=e.rigidbody,r={enabled:i.enabled,mass:i.mass,linearDamping:i.linearDamping,angularDamping:i.angularDamping,linearFactor:[i.linearFactor.x,i.linearFactor.y,i.linearFactor.z],angularFactor:[i.angularFactor.x,i.angularFactor.y,i.angularFactor.z],friction:i.friction,rollingFriction:i.rollingFriction,restitution:i.restitution,type:i.type,group:i.group,mask:i.mask};return this.addComponent(s,r)}onBeforeRemove(e,s){s.enabled&&(s.enabled=!1),s.body&&(this.destroyBody(s.body),s.body=null)}addBody(e,s,i){s!==void 0&&i!==void 0?this.dynamicsWorld.addRigidBody(e,s,i):this.dynamicsWorld.addRigidBody(e)}removeBody(e){this.dynamicsWorld.removeRigidBody(e)}createBody(e,s,i){const r=new Ammo.btVector3(0,0,0);e!==0&&s.calculateLocalInertia(e,r);const n=new Ammo.btDefaultMotionState(i),a=new Ammo.btRigidBodyConstructionInfo(e,n,s,r),o=new Ammo.btRigidBody(a);return Ammo.destroy(a),Ammo.destroy(r),o}destroyBody(e){const s=e.getMotionState();s&&Ammo.destroy(s),Ammo.destroy(e)}raycastFirst(e,s,i={}){if(i.filterTags||i.filterCallback)return i.sort=!0,this.raycastAll(e,s,i)[0]||null;let r=null;di.setValue(e.x,e.y,e.z),ui.setValue(s.x,s.y,s.z);const n=new Ammo.ClosestRayResultCallback(di,ui);if(typeof i.filterCollisionGroup=="number"&&n.set_m_collisionFilterGroup(i.filterCollisionGroup),typeof i.filterCollisionMask=="number"&&n.set_m_collisionFilterMask(i.filterCollisionMask),this.dynamicsWorld.rayTest(di,ui,n),n.hasHit()){const a=n.get_m_collisionObject(),o=Ammo.castObject(a,Ammo.btRigidBody);if(o){const h=n.get_m_hitPointWorld(),d=n.get_m_hitNormalWorld();r=new Sg(o.entity,new A(h.x(),h.y(),h.z()),new A(d.x(),d.y(),d.z()),n.get_m_closestHitFraction())}}return Ammo.destroy(n),r}raycastAll(e,s,i={}){b.assert(Ammo.AllHitsRayResultCallback,"pc.RigidBodyComponentSystem#raycastAll: Your version of ammo.js does not expose Ammo.AllHitsRayResultCallback. Update it to latest.");const r=[];di.setValue(e.x,e.y,e.z),ui.setValue(s.x,s.y,s.z);const n=new Ammo.AllHitsRayResultCallback(di,ui);if(typeof i.filterCollisionGroup=="number"&&n.set_m_collisionFilterGroup(i.filterCollisionGroup),typeof i.filterCollisionMask=="number"&&n.set_m_collisionFilterMask(i.filterCollisionMask),this.dynamicsWorld.rayTest(di,ui,n),n.hasHit()){const a=n.get_m_collisionObjects(),o=n.get_m_hitPointWorld(),h=n.get_m_hitNormalWorld(),d=n.get_m_hitFractions(),u=a.size();for(let f=0;f<u;f++){const p=Ammo.castObject(a.at(f),Ammo.btRigidBody);if(p&&p.entity){if(i.filterTags&&!p.entity.tags.has(...i.filterTags)||i.filterCallback&&!i.filterCallback(p.entity))continue;const m=o.at(f),_=h.at(f),g=new Sg(p.entity,new A(m.x(),m.y(),m.z()),new A(_.x(),_.y(),_.z()),d.at(f));r.push(g)}}i.sort&&r.sort((f,p)=>f.hitFraction-p.hitFraction)}return Ammo.destroy(n),r}_storeCollision(e,s){let i=!1;const r=e.getGuid();return this.collisions[r]=this.collisions[r]||{others:[],entity:e},this.collisions[r].others.indexOf(s)<0&&(this.collisions[r].others.push(s),i=!0),this.frameCollisions[r]=this.frameCollisions[r]||{others:[],entity:e},this.frameCollisions[r].others.push(s),i}_createContactPointFromAmmo(e){const s=e.get_m_localPointA(),i=e.get_m_localPointB(),r=e.getPositionWorldOnA(),n=e.getPositionWorldOnB(),a=e.get_m_normalWorldOnB(),o=this.contactPointPool.allocate();return o.localPoint.set(s.x(),s.y(),s.z()),o.localPointOther.set(i.x(),i.y(),i.z()),o.point.set(r.x(),r.y(),r.z()),o.pointOther.set(n.x(),n.y(),n.z()),o.normal.set(a.x(),a.y(),a.z()),o.impulse=e.getAppliedImpulse(),o}_createReverseContactPointFromAmmo(e){const s=e.get_m_localPointA(),i=e.get_m_localPointB(),r=e.getPositionWorldOnA(),n=e.getPositionWorldOnB(),a=e.get_m_normalWorldOnB(),o=this.contactPointPool.allocate();return o.localPointOther.set(s.x(),s.y(),s.z()),o.localPoint.set(i.x(),i.y(),i.z()),o.pointOther.set(r.x(),r.y(),r.z()),o.point.set(n.x(),n.y(),n.z()),o.normal.set(a.x(),a.y(),a.z()),o.impulse=e.getAppliedImpulse(),o}_createSingleContactResult(e,s,i){const r=this.singleContactResultPool.allocate();return r.a=e,r.b=s,r.localPointA=i.localPoint,r.localPointB=i.localPointOther,r.pointA=i.point,r.pointB=i.pointOther,r.normal=i.normal,r.impulse=i.impulse,r}_createContactResult(e,s){const i=this.contactResultPool.allocate();return i.other=e,i.contacts=s,i}_cleanOldCollisions(){for(const e in this.collisions)if(this.collisions.hasOwnProperty(e)){const s=this.frameCollisions[e],i=this.collisions[e],r=i.entity,n=r.collision,a=r.rigidbody,o=i.others;let d=o.length;for(;d--;){const u=o[d];(!s||s.others.indexOf(u)<0)&&(o.splice(d,1),r.trigger?(n&&n.fire("triggerleave",u),u.rigidbody&&u.rigidbody.fire("triggerleave",r)):u.trigger||(a&&a.fire("collisionend",u),n&&n.fire("collisionend",u)))}o.length===0&&delete this.collisions[e]}}_hasContactEvent(e){const s=e.collision;if(s&&(s.hasEvent("collisionstart")||s.hasEvent("collisionend")||s.hasEvent("contact")))return!0;const i=e.rigidbody;return i&&(i.hasEvent("collisionstart")||i.hasEvent("collisionend")||i.hasEvent("contact"))}_checkForCollisions(e,s){const r=Ammo.wrapPointer(e,Ammo.btDynamicsWorld).getDispatcher(),n=r.getNumManifolds();this.frameCollisions={};for(let a=0;a<n;a++){const o=r.getManifoldByIndexInternal(a),h=o.getBody0(),d=o.getBody1(),u=Ammo.castObject(h,Ammo.btRigidBody),f=Ammo.castObject(d,Ammo.btRigidBody),p=u.entity,m=f.entity;if(!p||!m)continue;const _=u.getCollisionFlags(),g=f.getCollisionFlags(),y=o.getNumContacts(),w=[],C=[];let x;if(y>0)if(_&fo||g&fo){const M=p.collision&&(p.collision.hasEvent("triggerenter")||p.collision.hasEvent("triggerleave")),S=m.collision&&(m.collision.hasEvent("triggerenter")||m.collision.hasEvent("triggerleave")),v=p.rigidbody&&(p.rigidbody.hasEvent("triggerenter")||p.rigidbody.hasEvent("triggerleave")),E=m.rigidbody&&(m.rigidbody.hasEvent("triggerenter")||m.rigidbody.hasEvent("triggerleave"));M&&(x=this._storeCollision(p,m),x&&!(g&fo)&&p.collision.fire("triggerenter",m)),S&&(x=this._storeCollision(m,p),x&&!(_&fo)&&m.collision.fire("triggerenter",p)),v&&(x||(x=this._storeCollision(m,p)),x&&p.rigidbody.fire("triggerenter",m)),E&&(x||(x=this._storeCollision(p,m)),x&&m.rigidbody.fire("triggerenter",p))}else{const M=this._hasContactEvent(p),S=this._hasContactEvent(m),v=this.hasEvent("contact");if(v||M||S){for(let E=0;E<y;E++){const T=o.getContactPoint(E),R=this._createContactPointFromAmmo(T);if(M||S){w.push(R);const D=this._createReverseContactPointFromAmmo(T);C.push(D)}if(v){const D=this._createSingleContactResult(p,m,R);this.fire("contact",D)}}if(M){const E=this._createContactResult(m,w);x=this._storeCollision(p,m),p.collision&&(p.collision.fire("contact",E),x&&p.collision.fire("collisionstart",E)),p.rigidbody&&(p.rigidbody.fire("contact",E),x&&p.rigidbody.fire("collisionstart",E))}if(S){const E=this._createContactResult(p,C);x=this._storeCollision(m,p),m.collision&&(m.collision.fire("contact",E),x&&m.collision.fire("collisionstart",E)),m.rigidbody&&(m.rigidbody.fire("contact",E),x&&m.rigidbody.fire("collisionstart",E))}}}}this._cleanOldCollisions(),this.contactPointPool.freeAll(),this.contactResultPool.freeAll(),this.singleContactResultPool.freeAll()}onUpdate(e){let s,i;this._stats.physicsStart=ae(),this._gravityFloat32[0]=this.gravity.x,this._gravityFloat32[1]=this.gravity.y,this._gravityFloat32[2]=this.gravity.z;const r=this.dynamicsWorld.getGravity();(r.x()!==this._gravityFloat32[0]||r.y()!==this._gravityFloat32[1]||r.z()!==this._gravityFloat32[2])&&(r.setValue(this.gravity.x,this.gravity.y,this.gravity.z),this.dynamicsWorld.setGravity(r));const n=this._triggers;for(s=0,i=n.length;s<i;s++)n[s].updateTransform();const a=this._compounds;for(s=0,i=a.length;s<i;s++)a[s]._updateCompound();const o=this._kinematic;for(s=0,i=o.length;s<i;s++)o[s]._updateKinematic();this.dynamicsWorld.stepSimulation(e,this.maxSubSteps,this.fixedTimeStep);const h=this._dynamic;for(s=0,i=h.length;s<i;s++)h[s]._updateDynamic();this.dynamicsWorld.setInternalTickCallback||this._checkForCollisions(Ammo.getPointer(this.dynamicsWorld),e),this._stats.physicsTime=ae()-this._stats.physicsStart}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this),typeof Ammo<"u"&&(Ammo.destroy(this.dynamicsWorld),Ammo.destroy(this.solver),Ammo.destroy(this.overlappingPairCache),Ammo.destroy(this.dispatcher),Ammo.destroy(this.collisionConfiguration),Ammo.destroy(di),Ammo.destroy(ui),this.dynamicsWorld=null,this.solver=null,this.overlappingPairCache=null,this.dispatcher=null,this.collisionConfiguration=null,di=null,ui=null,Ys.onAppDestroy())}}c(_x,"EVENT_CONTACT","contact");pe._buildAccessors(Ys.prototype,mx);const Xn="none",vI="blend",vg=new q;class gx extends pe{constructor(t,e){super(t,e),this._resolution=new W(640,320),this._referenceResolution=new W(640,320),this._scaleMode=Xn,this.scale=1,this._scaleBlend=.5,this._priority=0,this._screenSpace=!1,this.cull=this._screenSpace,this._screenMatrix=new q,this._elements=new Set,t.app.graphicsDevice.on("resizecanvas",this._onResize,this)}syncDrawOrder(){this.system.queueDrawOrderSync(this.entity.getGuid(),this._processDrawOrderSync,this)}_recurseDrawOrderSync(t,e){var i;if(!(t instanceof je))return e;if(t.element){const r=t.element.drawOrder;t.element.drawOrder=e++,t.element._batchGroupId>=0&&r!==t.element.drawOrder&&((i=this.system.app.batcher)==null||i.markGroupDirty(t.element._batchGroupId))}t.particlesystem&&(t.particlesystem.drawOrder=e++);const s=t.children;for(let r=0;r<s.length;r++)e=this._recurseDrawOrderSync(s[r],e);return e}_processDrawOrderSync(){this._recurseDrawOrderSync(this.entity,1),this.fire("syncdraworder")}_calcProjectionMatrix(){const t=this._resolution.x/this.scale,e=this._resolution.y/this.scale,s=0,i=t,r=-e;this._screenMatrix.setOrtho(s,i,r,0,1,-1),this._screenSpace||(vg.setScale(.5*t,.5*e,1),this._screenMatrix.mul2(vg,this._screenMatrix))}_updateScale(){this.scale=this._calcScale(this._resolution,this.referenceResolution)}_calcScale(t,e){const s=Math.log2((t.x||1)/e.x),i=Math.log2((t.y||1)/e.y);return Math.pow(2,s*(1-this._scaleBlend)+i*this._scaleBlend)}_onResize(t,e){this._screenSpace&&(this._resolution.set(t,e),this.resolution=this._resolution)}_bindElement(t){this._elements.add(t)}_unbindElement(t){this._elements.delete(t)}onRemove(){this.system.app.graphicsDevice.off("resizecanvas",this._onResize,this),this.fire("remove"),this._elements.forEach(t=>t._onScreenRemove()),this._elements.clear(),this.off()}set resolution(t){this._screenSpace?this._resolution.set(this.system.app.graphicsDevice.width,this.system.app.graphicsDevice.height):this._resolution.set(t.x,t.y),this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:resolution",this._resolution),this._elements.forEach(e=>e._onScreenResize(this._resolution))}get resolution(){return this._resolution}set referenceResolution(t){this._referenceResolution.set(t.x,t.y),this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:referenceresolution",this._resolution),this._elements.forEach(e=>e._onScreenResize(this._resolution))}get referenceResolution(){return this._scaleMode===Xn?this._resolution:this._referenceResolution}set screenSpace(t){this._screenSpace=t,this._screenSpace&&this._resolution.set(this.system.app.graphicsDevice.width,this.system.app.graphicsDevice.height),this.resolution=this._resolution,this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:screenspace",this._screenSpace),this._elements.forEach(e=>e._onScreenSpaceChange())}get screenSpace(){return this._screenSpace}set scaleMode(t){t!==Xn&&t!==vI&&(t=Xn),!this._screenSpace&&t!==Xn&&(t=Xn),this._scaleMode=t,this.resolution=this._resolution,this.fire("set:scalemode",this._scaleMode)}get scaleMode(){return this._scaleMode}set scaleBlend(t){this._scaleBlend=t,this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:scaleblend",this._scaleBlend),this._elements.forEach(e=>e._onScreenResize(this._resolution))}get scaleBlend(){return this._scaleBlend}set priority(t){t>255&&(b.warn(`Clamping screen priority from ${t} to 255`),t=255),this._priority!==t&&(this._priority=t,this.syncDrawOrder())}get priority(){return this._priority}}class bI{constructor(){this.enabled=!0}}const xf=["enabled"];class wI extends Qe{constructor(t){super(t),this.id="screen",this.ComponentType=gx,this.DataType=bI,this.schema=xf,this.windowResolution=new W,this._drawOrderSyncQueue=new _S,this.app.graphicsDevice.on("resizecanvas",this._onResize,this),this.app.systems.on("update",this._onUpdate,this),this.on("beforeremove",this.onRemoveComponent,this)}initializeComponentData(t,e,s){e.priority!==void 0&&(t.priority=e.priority),e.screenSpace!==void 0&&(t.screenSpace=e.screenSpace),t.cull=t.screenSpace,e.scaleMode!==void 0&&(t.scaleMode=e.scaleMode),e.scaleBlend!==void 0&&(t.scaleBlend=e.scaleBlend),e.resolution!==void 0&&(e.resolution instanceof W?t._resolution.copy(e.resolution):t._resolution.set(e.resolution[0],e.resolution[1]),t.resolution=t._resolution),e.referenceResolution!==void 0&&(e.referenceResolution instanceof W?t._referenceResolution.copy(e.referenceResolution):t._referenceResolution.set(e.referenceResolution[0],e.referenceResolution[1]),t.referenceResolution=t._referenceResolution),t.syncDrawOrder(),super.initializeComponentData(t,e,xf)}destroy(){super.destroy(),this.app.graphicsDevice.off("resizecanvas",this._onResize,this),this.app.systems.off("update",this._onUpdate,this)}_onUpdate(t){const e=this.store;for(const s in e)e[s].entity.screen.update&&e[s].entity.screen.update(t)}_onResize(t,e){this.windowResolution.x=t,this.windowResolution.y=e}cloneComponent(t,e){const s=t.screen;return this.addComponent(e,{enabled:s.enabled,screenSpace:s.screenSpace,scaleMode:s.scaleMode,resolution:s.resolution.clone(),referenceResolution:s.referenceResolution.clone()})}onRemoveComponent(t,e){e.onRemove()}processDrawOrderSyncQueue(){const t=this._drawOrderSyncQueue.list();for(let e=0;e<t.length;e++){const s=t[e];s.callback.call(s.scope)}this._drawOrderSyncQueue.clear()}queueDrawOrderSync(t,e,s){this._drawOrderSyncQueue.list().length||this.app.once("prerender",this.processDrawOrderSyncQueue,this),this._drawOrderSyncQueue.has(t)||this._drawOrderSyncQueue.push(t,{callback:e,scope:s})}}pe._buildAccessors(gx.prototype,xf);const ji=new W,bg=new A,Rr=new _u,wg=new cy,Tg=new A,oo=new A,TI=new ie,AI={x:"y",y:"x"};class Co extends de{constructor(t,e){if(super(),!t||!(t instanceof Kt))throw new Error("Element was null or not an ElementComponent");if(e&&e!=="x"&&e!=="y")throw new Error(`Unrecognized axis: ${e}`);this._element=t,this._app=t.system.app,this._axis=e||null,this._enabled=!0,this._dragScale=new A,this._dragStartMousePosition=new A,this._dragStartHandlePosition=new A,this._deltaMousePosition=new A,this._deltaHandlePosition=new A,this._isDragging=!1,this._toggleLifecycleListeners("on")}_toggleLifecycleListeners(t){this._element[t]("mousedown",this._onMouseDownOrTouchStart,this),this._element[t]("touchstart",this._onMouseDownOrTouchStart,this),this._element[t]("selectstart",this._onMouseDownOrTouchStart,this)}_toggleDragListeners(t){const e=t==="on";this._hasDragListeners&&e||(this._app.mouse&&(this._element[t]("mousemove",this._onMove,this),this._element[t]("mouseup",this._onMouseUpOrTouchEnd,this)),be.touch&&(this._element[t]("touchmove",this._onMove,this),this._element[t]("touchend",this._onMouseUpOrTouchEnd,this),this._element[t]("touchcancel",this._onMouseUpOrTouchEnd,this)),this._element[t]("selectmove",this._onMove,this),this._element[t]("selectend",this._onMouseUpOrTouchEnd,this),this._hasDragListeners=e)}_onMouseDownOrTouchStart(t){if(this._element&&!this._isDragging&&this.enabled){this._dragCamera=t.camera,this._calculateDragScale();const e=this._screenToLocal(t);e&&(this._toggleDragListeners("on"),this._isDragging=!0,this._dragStartMousePosition.copy(e),this._dragStartHandlePosition.copy(this._element.entity.getLocalPosition()),this.fire("drag:start"))}}_onMouseUpOrTouchEnd(){this._isDragging&&(this._isDragging=!1,this._toggleDragListeners("off"),this.fire("drag:end"))}_screenToLocal(t){return t.inputSource?Rr.set(t.inputSource.getOrigin(),t.inputSource.getDirection()):(this._determineInputPosition(t),this._chooseRayOriginAndDirection()),Tg.copy(this._element.entity.forward).mulScalar(-1),wg.setFromPointNormal(this._element.entity.getPosition(),Tg),wg.intersectsRay(Rr,oo)?(TI.copy(this._element.entity.getRotation()).invert().transformVector(oo,oo),oo.mul(this._dragScale),oo):null}_determineInputPosition(t){const e=this._app.graphicsDevice.maxPixelRatio;typeof t.x<"u"&&typeof t.y<"u"?(ji.x=t.x*e,ji.y=t.y*e):t.changedTouches?(ji.x=t.changedTouches[0].x*e,ji.y=t.changedTouches[0].y*e):console.warn("Could not determine position from input event")}_chooseRayOriginAndDirection(){this._element.screen&&this._element.screen.screen.screenSpace?(Rr.origin.set(ji.x,-ji.y,0),Rr.direction.copy(A.FORWARD)):(bg.copy(this._dragCamera.screenToWorld(ji.x,ji.y,1)),Rr.origin.copy(this._dragCamera.entity.getPosition()),Rr.direction.copy(bg).sub(Rr.origin).normalize())}_calculateDragScale(){let t=this._element.entity.parent;const e=this._element.screen&&this._element.screen.screen,s=e&&e.screenSpace,i=s?e.scale:1,r=this._dragScale;for(r.set(i,i,i);t&&(r.mul(t.getLocalScale()),t=t.parent,!(s&&t.screen)););r.x=1/r.x,r.y=1/r.y,r.z=0}_onMove(t){const{_element:e,_deltaMousePosition:s,_deltaHandlePosition:i,_axis:r}=this;if(e&&this._isDragging&&this.enabled&&e.enabled&&e.entity.enabled){const n=this._screenToLocal(t);if(n){if(s.sub2(n,this._dragStartMousePosition),i.add2(this._dragStartHandlePosition,s),r){const a=e.entity.getLocalPosition(),o=AI[r];i[o]=a[o]}e.entity.setLocalPosition(i),this.fire("drag:move",i)}}}destroy(){this._toggleLifecycleListeners("off"),this._toggleDragListeners("off")}set enabled(t){this._enabled=t}get enabled(){return this._enabled}get isDragging(){return this._isDragging}}c(Co,"EVENT_DRAGSTART","drag:start"),c(Co,"EVENT_DRAGEND","drag:end"),c(Co,"EVENT_DRAGMOVE","drag:move");const EI=0,Ag=1,CI=2,MI=0,PI=1,lo=new W;class yx extends pe{constructor(e,s){super(e,s);c(this,"_viewportEntity",null);c(this,"_contentEntity",null);c(this,"_horizontalScrollbarEntity",null);c(this,"_verticalScrollbarEntity",null);c(this,"_evtElementRemove",null);c(this,"_evtViewportElementRemove",null);c(this,"_evtViewportResize",null);c(this,"_evtContentEntityElementAdd",null);c(this,"_evtContentElementRemove",null);c(this,"_evtContentResize",null);c(this,"_evtHorizontalScrollbarAdd",null);c(this,"_evtHorizontalScrollbarRemove",null);c(this,"_evtHorizontalScrollbarValue",null);c(this,"_evtVerticalScrollbarAdd",null);c(this,"_evtVerticalScrollbarRemove",null);c(this,"_evtVerticalScrollbarValue",null);this._scrollbarUpdateFlags={},this._scrollbarEntities={},this._prevContentSizes={},this._prevContentSizes[ye]=null,this._prevContentSizes[Ve]=null,this._scroll=new W,this._velocity=new A,this._dragStartPosition=new A,this._disabledContentInput=!1,this._disabledContentInputEntities=[],this._toggleLifecycleListeners("on"),this._toggleElementListeners("on")}get data(){const e=this.system.store[this.entity.getGuid()];return e?e.data:null}set enabled(e){this._setValue("enabled",e)}get enabled(){return this.data.enabled}set horizontal(e){this._setValue("horizontal",e)}get horizontal(){return this.data.horizontal}set vertical(e){this._setValue("vertical",e)}get vertical(){return this.data.vertical}set scrollMode(e){this._setValue("scrollMode",e)}get scrollMode(){return this.data.scrollMode}set bounceAmount(e){this._setValue("bounceAmount",e)}get bounceAmount(){return this.data.bounceAmount}set friction(e){this._setValue("friction",e)}get friction(){return this.data.friction}set dragThreshold(e){this._setValue("dragThreshold",e)}get dragThreshold(){return this.data.dragThreshold}set useMouseWheel(e){this._setValue("useMouseWheel",e)}get useMouseWheel(){return this.data.useMouseWheel}set mouseWheelSensitivity(e){this._setValue("mouseWheelSensitivity",e)}get mouseWheelSensitivity(){return this.data.mouseWheelSensitivity}set horizontalScrollbarVisibility(e){this._setValue("horizontalScrollbarVisibility",e)}get horizontalScrollbarVisibility(){return this.data.horizontalScrollbarVisibility}set verticalScrollbarVisibility(e){this._setValue("verticalScrollbarVisibility",e)}get verticalScrollbarVisibility(){return this.data.verticalScrollbarVisibility}set viewportEntity(e){if(this._viewportEntity===e)return;const s=typeof e=="string";this._viewportEntity&&s&&this._viewportEntity.getGuid()===e||(this._viewportEntity&&this._viewportEntityUnsubscribe(),e instanceof Oe?this._viewportEntity=e:s?this._viewportEntity=this.system.app.getEntityFromIndex(e)||null:this._viewportEntity=null,this._viewportEntity&&this._viewportEntitySubscribe(),this._viewportEntity?this.data.viewportEntity=this._viewportEntity.getGuid():s&&e&&(this.data.viewportEntity=e))}get viewportEntity(){return this._viewportEntity}set contentEntity(e){if(this._contentEntity===e)return;const s=typeof e=="string";this._contentEntity&&s&&this._contentEntity.getGuid()===e||(this._contentEntity&&this._contentEntityUnsubscribe(),e instanceof Oe?this._contentEntity=e:s?this._contentEntity=this.system.app.getEntityFromIndex(e)||null:this._contentEntity=null,this._contentEntity&&this._contentEntitySubscribe(),this._contentEntity?this.data.contentEntity=this._contentEntity.getGuid():s&&e&&(this.data.contentEntity=e))}get contentEntity(){return this._contentEntity}set horizontalScrollbarEntity(e){if(this._horizontalScrollbarEntity===e)return;const s=typeof e=="string";this._horizontalScrollbarEntity&&s&&this._horizontalScrollbarEntity.getGuid()===e||(this._horizontalScrollbarEntity&&this._horizontalScrollbarEntityUnsubscribe(),e instanceof Oe?this._horizontalScrollbarEntity=e:s?this._horizontalScrollbarEntity=this.system.app.getEntityFromIndex(e)||null:this._horizontalScrollbarEntity=null,this._scrollbarEntities[ye]=this._horizontalScrollbarEntity,this._horizontalScrollbarEntity&&this._horizontalScrollbarEntitySubscribe(),this._horizontalScrollbarEntity?this.data.horizontalScrollbarEntity=this._horizontalScrollbarEntity.getGuid():s&&e&&(this.data.horizontalScrollbarEntity=e))}get horizontalScrollbarEntity(){return this._horizontalScrollbarEntity}set verticalScrollbarEntity(e){if(this._verticalScrollbarEntity===e)return;const s=typeof e=="string";this._verticalScrollbarEntity&&s&&this._verticalScrollbarEntity.getGuid()===e||(this._verticalScrollbarEntity&&this._verticalScrollbarEntityUnsubscribe(),e instanceof Oe?this._verticalScrollbarEntity=e:s?this._verticalScrollbarEntity=this.system.app.getEntityFromIndex(e)||null:this._verticalScrollbarEntity=null,this._scrollbarEntities[Ve]=this._verticalScrollbarEntity,this._verticalScrollbarEntity&&this._verticalScrollbarEntitySubscribe(),this._verticalScrollbarEntity?this.data.verticalScrollbarEntity=this._verticalScrollbarEntity.getGuid():s&&e&&(this.data.verticalScrollbarEntity=e))}get verticalScrollbarEntity(){return this._verticalScrollbarEntity}set scroll(e){this._onSetScroll(e.x,e.y)}get scroll(){return this._scroll}_setValue(e,s){const i=this.data,r=i[e];i[e]=s,this.fire("set",e,r,s)}_toggleLifecycleListeners(e){this[e]("set_horizontal",this._onSetHorizontalScrollingEnabled,this),this[e]("set_vertical",this._onSetVerticalScrollingEnabled,this),this.entity[e]("element:add",this._onElementComponentAdd,this)}_toggleElementListeners(e){if(this.entity.element){if(e==="on"&&this._hasElementListeners)return;this.entity.element[e]("resize",this._syncAll,this),this.entity.element[e](Du,this._onMouseWheel,this),this._hasElementListeners=e==="on"}}_onElementComponentAdd(e){this._evtElementRemove=this.entity.element.once("beforeremove",this._onElementComponentRemove,this),this._toggleElementListeners("on")}_onElementComponentRemove(e){var s;(s=this._evtElementRemove)==null||s.off(),this._evtElementRemove=null,this._toggleElementListeners("off")}_viewportEntitySubscribe(){this._evtViewportEntityElementAdd=this._viewportEntity.on("element:add",this._onViewportElementGain,this),this._viewportEntity.element&&this._onViewportElementGain()}_viewportEntityUnsubscribe(){var e,s;(e=this._evtViewportEntityElementAdd)==null||e.off(),this._evtViewportEntityElementAdd=null,(s=this._viewportEntity)!=null&&s.element&&this._onViewportElementLose()}_viewportEntityElementSubscribe(){const e=this._viewportEntity.element;this._evtViewportElementRemove=e.once("beforeremove",this._onViewportElementLose,this),this._evtViewportResize=e.on("resize",this._syncAll,this)}_viewportEntityElementUnsubscribe(){var e,s;(e=this._evtViewportElementRemove)==null||e.off(),this._evtViewportElementRemove=null,(s=this._evtViewportResize)==null||s.off(),this._evtViewportResize=null}_onViewportElementGain(){this._viewportEntityElementSubscribe(),this._syncAll()}_onViewportElementLose(){this._viewportEntityElementUnsubscribe()}_contentEntitySubscribe(){this._evtContentEntityElementAdd=this._contentEntity.on("element:add",this._onContentElementGain,this),this._contentEntity.element&&this._onContentElementGain()}_contentEntityUnsubscribe(){var e,s;(e=this._evtContentEntityElementAdd)==null||e.off(),this._evtContentEntityElementAdd=null,(s=this._contentEntity)!=null&&s.element&&this._onContentElementLose()}_contentEntityElementSubscribe(){const e=this._contentEntity.element;this._evtContentElementRemove=e.once("beforeremove",this._onContentElementLose,this),this._evtContentResize=e.on("resize",this._syncAll,this)}_contentEntityElementUnsubscribe(){var e,s;(e=this._evtContentElementRemove)==null||e.off(),this._evtContentElementRemove=null,(s=this._evtContentResize)==null||s.off(),this._evtContentResize=null}_onContentElementGain(){this._contentEntityElementSubscribe(),this._destroyDragHelper(),this._contentDragHelper=new Co(this._contentEntity.element),this._contentDragHelper.on("drag:start",this._onContentDragStart,this),this._contentDragHelper.on("drag:end",this._onContentDragEnd,this),this._contentDragHelper.on("drag:move",this._onContentDragMove,this),this._prevContentSizes[ye]=null,this._prevContentSizes[Ve]=null,this._syncAll()}_onContentElementLose(){this._contentEntityElementUnsubscribe(),this._destroyDragHelper()}_onContentDragStart(){this._contentEntity&&this.enabled&&this.entity.enabled&&this._dragStartPosition.copy(this._contentEntity.getLocalPosition())}_onContentDragEnd(){this._prevContentDragPosition=null,this._enableContentInput()}_onContentDragMove(e){if(this._contentEntity&&this.enabled&&this.entity.enabled&&(this._wasDragged=!0,this._setScrollFromContentPosition(e),this._setVelocityFromContentPositionDelta(e),!this._disabledContentInput)){const s=e.x-this._dragStartPosition.x,i=e.y-this._dragStartPosition.y;(Math.abs(s)>this.dragThreshold||Math.abs(i)>this.dragThreshold)&&this._disableContentInput()}}_horizontalScrollbarEntitySubscribe(){this._evtHorizontalScrollbarAdd=this._horizontalScrollbarEntity.on("scrollbar:add",this._onHorizontalScrollbarGain,this),this._horizontalScrollbarEntity.scrollbar&&this._onHorizontalScrollbarGain()}_verticalScrollbarEntitySubscribe(){this._evtVerticalScrollbarAdd=this._verticalScrollbarEntity.on("scrollbar:add",this._onVerticalScrollbarGain,this),this._verticalScrollbarEntity.scrollbar&&this._onVerticalScrollbarGain()}_horizontalScrollbarEntityUnsubscribe(){var e;(e=this._evtHorizontalScrollbarAdd)==null||e.off(),this._evtHorizontalScrollbarAdd=null,this._horizontalScrollbarEntity.scrollbar&&this._onHorizontalScrollbarLose()}_verticalScrollbarEntityUnsubscribe(){var e;(e=this._evtVerticalScrollbarAdd)==null||e.off(),this._evtVerticalScrollbarAdd=null,this._verticalScrollbarEntity.scrollbar&&this._onVerticalScrollbarLose()}_onSetHorizontalScrollbarValue(e){!this._scrollbarUpdateFlags[ye]&&this.enabled&&this.entity.enabled&&this._onSetScroll(e,null)}_onSetVerticalScrollbarValue(e){!this._scrollbarUpdateFlags[Ve]&&this.enabled&&this.entity.enabled&&this._onSetScroll(null,e)}_onHorizontalScrollbarGain(){var s;const e=(s=this._horizontalScrollbarEntity)==null?void 0:s.scrollbar;this._evtHorizontalScrollbarRemove=e.on("beforeremove",this._onHorizontalScrollbarLose,this),this._evtHorizontalScrollbarValue=e.on("set:value",this._onSetHorizontalScrollbarValue,this),this._syncScrollbarEnabledState(ye),this._syncScrollbarPosition(ye)}_onVerticalScrollbarGain(){var s;const e=(s=this._verticalScrollbarEntity)==null?void 0:s.scrollbar;this._evtVerticalScrollbarRemove=e.on("beforeremove",this._onVerticalScrollbarLose,this),this._evtVerticalScrollbarValue=e.on("set:value",this._onSetVerticalScrollbarValue,this),this._syncScrollbarEnabledState(Ve),this._syncScrollbarPosition(Ve)}_onHorizontalScrollbarLose(){var e,s;(e=this._evtHorizontalScrollbarRemove)==null||e.off(),this._evtHorizontalScrollbarRemove=null,(s=this._evtHorizontalScrollbarValue)==null||s.off(),this._evtHorizontalScrollbarValue=null}_onVerticalScrollbarLose(){var e,s;(e=this._evtVerticalScrollbarRemove)==null||e.off(),this._evtVerticalScrollbarRemove=null,(s=this._evtVerticalScrollbarValue)==null||s.off(),this._evtVerticalScrollbarValue=null}_onSetHorizontalScrollingEnabled(){this._syncScrollbarEnabledState(ye)}_onSetVerticalScrollingEnabled(){this._syncScrollbarEnabledState(Ve)}_onSetScroll(e,s,i){i!==!1&&this._velocity.set(0,0,0);const r=this._updateAxis(e,"x",ye),n=this._updateAxis(s,"y",Ve);(r||n)&&this.fire("set:scroll",this._scroll)}_updateAxis(e,s,i){const r=e!==null&&Math.abs(e-this._scroll[s])>1e-5;return(r||this._isDragging()||e===0)&&(this._scroll[s]=this._determineNewScrollValue(e,s,i),this._syncContentPosition(i),this._syncScrollbarPosition(i)),r}_determineNewScrollValue(e,s,i){if(!this._getScrollingEnabled(i))return this._scroll[s];switch(this.scrollMode){case EI:return z.clamp(e,0,this._getMaxScrollValue(i));case Ag:return this._setVelocityFromOvershoot(e,s,i),e;case CI:return e;default:return console.warn(`Unhandled scroll mode:${this.scrollMode}`),e}}_syncAll(){this._syncContentPosition(ye),this._syncContentPosition(Ve),this._syncScrollbarPosition(ye),this._syncScrollbarPosition(Ve),this._syncScrollbarEnabledState(ye),this._syncScrollbarEnabledState(Ve)}_syncContentPosition(e){if(!this._contentEntity)return;const s=this._getAxis(e),i=this._getSign(e),r=this._prevContentSizes[e],n=this._getContentSize(e);if(r!==null&&Math.abs(r-n)>1e-4){const h=this._getMaxOffset(e,r),d=this._getMaxOffset(e,n);d===0?this._scroll[s]=1:this._scroll[s]=z.clamp(this._scroll[s]*h/d,0,1)}const a=this._scroll[s]*this._getMaxOffset(e),o=this._contentEntity.getLocalPosition();o[s]=a*i,this._contentEntity.setLocalPosition(o),this._prevContentSizes[e]=n}_syncScrollbarPosition(e){const s=this._scrollbarEntities[e];if(!(s!=null&&s.scrollbar))return;const i=this._getAxis(e);this._scrollbarUpdateFlags[e]=!0,s.scrollbar.value=this._scroll[i],s.scrollbar.handleSize=this._getScrollbarHandleSize(i,e),this._scrollbarUpdateFlags[e]=!1}_syncScrollbarEnabledState(e){const s=this._scrollbarEntities[e];if(!s)return;const i=this._getScrollingEnabled(e),r=this._getScrollbarVisibility(e);switch(r){case MI:s.enabled=i;return;case PI:s.enabled=i&&this._contentIsLargerThanViewport(e);return;default:console.warn(`Unhandled scrollbar visibility:${r}`),s.enabled=i}}_contentIsLargerThanViewport(e){return this._getContentSize(e)>this._getViewportSize(e)}_contentPositionToScrollValue(e){const s=this._getMaxOffset(ye),i=this._getMaxOffset(Ve);return s===0?lo.x=0:lo.x=e.x/s,i===0?lo.y=0:lo.y=e.y/-i,lo}_getMaxOffset(e,s){s=s===void 0?this._getContentSize(e):s;const i=this._getViewportSize(e);return s<i?-this._getViewportSize(e):i-s}_getMaxScrollValue(e){return this._contentIsLargerThanViewport(e)?1:0}_getScrollbarHandleSize(e,s){const i=this._getViewportSize(s),r=this._getContentSize(s);if(Math.abs(r)<.001)return 1;const n=Math.min(i/r,1),a=this._toOvershoot(this._scroll[e],s);return a===0?n:n/(1+Math.abs(a))}_getViewportSize(e){return this._getSize(e,this._viewportEntity)}_getContentSize(e){return this._getSize(e,this._contentEntity)}_getSize(e,s){return s!=null&&s.element?s.element[this._getCalculatedDimension(e)]:0}_getScrollingEnabled(e){if(e===ye)return this.horizontal;if(e===Ve)return this.vertical;b.warn(`Unrecognized orientation: ${e}`)}_getScrollbarVisibility(e){if(e===ye)return this.horizontalScrollbarVisibility;if(e===Ve)return this.verticalScrollbarVisibility;b.warn(`Unrecognized orientation: ${e}`)}_getSign(e){return e===ye?1:-1}_getAxis(e){return e===ye?"x":"y"}_getCalculatedDimension(e){return e===ye?"calculatedWidth":"calculatedHeight"}_destroyDragHelper(){this._contentDragHelper&&this._contentDragHelper.destroy()}onUpdate(){this._contentEntity&&(this._updateVelocity(),this._syncScrollbarEnabledState(ye),this._syncScrollbarEnabledState(Ve))}_updateVelocity(){if(!this._isDragging()){if(this.scrollMode===Ag&&(this._hasOvershoot("x",ye)&&this._setVelocityFromOvershoot(this.scroll.x,"x",ye),this._hasOvershoot("y",Ve)&&this._setVelocityFromOvershoot(this.scroll.y,"y",Ve)),Math.abs(this._velocity.x)>1e-4||Math.abs(this._velocity.y)>1e-4){const e=this._contentEntity.getLocalPosition();e.x+=this._velocity.x,e.y+=this._velocity.y,this._contentEntity.setLocalPosition(e),this._setScrollFromContentPosition(e)}this._velocity.x*=1-this.friction,this._velocity.y*=1-this.friction}}_hasOvershoot(e,s){return Math.abs(this._toOvershoot(this.scroll[e],s))>.001}_toOvershoot(e,s){const i=this._getMaxScrollValue(s);return e<0?e:e>i?e-i:0}_setVelocityFromOvershoot(e,s,i){const n=this._toOvershoot(e,i)*this._getMaxOffset(i)*this._getSign(i);Math.abs(n)>0&&(this._velocity[s]=-n/(this.bounceAmount*50+1))}_setVelocityFromContentPositionDelta(e){this._prevContentDragPosition?(this._velocity.sub2(e,this._prevContentDragPosition),this._prevContentDragPosition.copy(e)):(this._velocity.set(0,0,0),this._prevContentDragPosition=e.clone())}_setScrollFromContentPosition(e){let s=this._contentPositionToScrollValue(e);this._isDragging()&&(s=this._applyScrollValueTension(s)),this._onSetScroll(s.x,s.y,!1)}_applyScrollValueTension(e){let i=this._getMaxScrollValue(ye),r=this._toOvershoot(e.x,ye);return r>0?e.x=i+1*Math.log10(1+r):r<0&&(e.x=-1*Math.log10(1-r)),i=this._getMaxScrollValue(Ve),r=this._toOvershoot(e.y,Ve),r>0?e.y=i+1*Math.log10(1+r):r<0&&(e.y=-1*Math.log10(1-r)),e}_isDragging(){return this._contentDragHelper&&this._contentDragHelper.isDragging}_setScrollbarComponentsEnabled(e){var s,i;(s=this._horizontalScrollbarEntity)!=null&&s.scrollbar&&(this._horizontalScrollbarEntity.scrollbar.enabled=e),(i=this._verticalScrollbarEntity)!=null&&i.scrollbar&&(this._verticalScrollbarEntity.scrollbar.enabled=e)}_setContentDraggingEnabled(e){this._contentDragHelper&&(this._contentDragHelper.enabled=e)}_onMouseWheel(e){var o;if(!this.useMouseWheel||!((o=this._contentEntity)!=null&&o.element))return;const s=e.event,i=s.deltaX/this._contentEntity.element.calculatedWidth*this.mouseWheelSensitivity.x,r=s.deltaY/this._contentEntity.element.calculatedHeight*this.mouseWheelSensitivity.y,n=z.clamp(this._scroll.x+i,0,this._getMaxScrollValue(ye)),a=z.clamp(this._scroll.y+r,0,this._getMaxScrollValue(Ve));this.scroll=new W(n,a)}_enableContentInput(){for(;this._disabledContentInputEntities.length;){const e=this._disabledContentInputEntities.pop();e.element&&(e.element.useInput=!0)}this._disabledContentInput=!1}_disableContentInput(){const e=s=>{s.element&&s.element.useInput&&(this._disabledContentInputEntities.push(s),s.element.useInput=!1);const i=s.children;for(let r=0,n=i.length;r<n;r++)e(i[r])};if(this._contentEntity){const s=this._contentEntity.children;for(let i=0,r=s.length;i<r;i++)e(s[i])}this._disabledContentInput=!0}onEnable(){this._setScrollbarComponentsEnabled(!0),this._setContentDraggingEnabled(!0),this._syncAll()}onDisable(){this._setScrollbarComponentsEnabled(!1),this._setContentDraggingEnabled(!1)}onRemove(){this._toggleLifecycleListeners("off"),this._toggleElementListeners("off"),this._destroyDragHelper()}resolveDuplicatedEntityReferenceProperties(e,s){e.viewportEntity&&(this.viewportEntity=s[e.viewportEntity.getGuid()]),e.contentEntity&&(this.contentEntity=s[e.contentEntity.getGuid()]),e.horizontalScrollbarEntity&&(this.horizontalScrollbarEntity=s[e.horizontalScrollbarEntity.getGuid()]),e.verticalScrollbarEntity&&(this.verticalScrollbarEntity=s[e.verticalScrollbarEntity.getGuid()])}}c(yx,"EVENT_SETSCROLL","set:scroll");const RI=10;class II{constructor(){c(this,"enabled",!0);c(this,"horizontal");c(this,"vertical");c(this,"scrollMode");c(this,"bounceAmount");c(this,"friction");c(this,"dragThreshold",RI);c(this,"useMouseWheel",!0);c(this,"mouseWheelSensitivity",new W(1,1));c(this,"horizontalScrollbarVisibility",0);c(this,"verticalScrollbarVisibility",0);c(this,"viewportEntity",null);c(this,"contentEntity",null);c(this,"horizontalScrollbarEntity",null);c(this,"verticalScrollbarEntity",null)}}const Eg=[{name:"enabled",type:"boolean"},{name:"horizontal",type:"boolean"},{name:"vertical",type:"boolean"},{name:"scrollMode",type:"number"},{name:"bounceAmount",type:"number"},{name:"friction",type:"number"},{name:"dragThreshold",type:"number"},{name:"useMouseWheel",type:"boolean"},{name:"mouseWheelSensitivity",type:"vec2"},{name:"horizontalScrollbarVisibility",type:"number"},{name:"verticalScrollbarVisibility",type:"number"}],DI=10;class LI extends Qe{constructor(t){super(t),this.id="scrollview",this.ComponentType=yx,this.DataType=II,this.schema=Eg,this.on("beforeremove",this._onRemoveComponent,this),this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){e.dragThreshold===void 0&&(e.dragThreshold=DI),e.useMouseWheel===void 0&&(e.useMouseWheel=!0),e.mouseWheelSensitivity===void 0&&(e.mouseWheelSensitivity=new W(1,1)),super.initializeComponentData(t,e,Eg),t.viewportEntity=e.viewportEntity,t.contentEntity=e.contentEntity,t.horizontalScrollbarEntity=e.horizontalScrollbarEntity,t.verticalScrollbarEntity=e.verticalScrollbarEntity}onUpdate(t){const e=this.store;for(const s in e){const i=e[s].entity,r=i.scrollview;r.enabled&&i.enabled&&r.onUpdate()}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}class xx extends pe{constructor(e,s){super(e,s);c(this,"_handleEntity",null);c(this,"_evtHandleEntityElementAdd",null);c(this,"_evtHandleEntityChanges",[]);this._toggleLifecycleListeners("on")}get data(){const e=this.system.store[this.entity.getGuid()];return e?e.data:null}set enabled(e){this._setValue("enabled",e)}get enabled(){return this.data.enabled}set orientation(e){this._setValue("orientation",e)}get orientation(){return this.data.orientation}set value(e){this._setValue("value",e)}get value(){return this.data.value}set handleSize(e){this._setValue("handleSize",e)}get handleSize(){return this.data.handleSize}set handleEntity(e){if(this._handleEntity===e)return;const s=typeof e=="string";this._handleEntity&&s&&this._handleEntity.getGuid()===e||(this._handleEntity&&this._handleEntityUnsubscribe(),e instanceof Oe?this._handleEntity=e:s?this._handleEntity=this.system.app.getEntityFromIndex(e)||null:this._handleEntity=null,this._handleEntity&&this._handleEntitySubscribe(),this._handleEntity?this.data.handleEntity=this._handleEntity.getGuid():s&&e&&(this.data.handleEntity=e))}get handleEntity(){return this._handleEntity}_setValue(e,s){const i=this.data,r=i[e];i[e]=s,this.fire("set",e,r,s)}_toggleLifecycleListeners(e){this[e]("set_value",this._onSetValue,this),this[e]("set_handleSize",this._onSetHandleSize,this),this[e]("set_orientation",this._onSetOrientation,this)}_handleEntitySubscribe(){this._evtHandleEntityElementAdd=this._handleEntity.on("element:add",this._onHandleElementGain,this),this._handleEntity.element&&this._onHandleElementGain()}_handleEntityUnsubscribe(){var e,s;(e=this._evtHandleEntityElementAdd)==null||e.off(),this._evtHandleEntityElementAdd=null,(s=this._handleEntity)!=null&&s.element&&this._onHandleElementLose()}_handleEntityElementSubscribe(){const e=this._handleEntity.element,s=this._evtHandleEntityChanges;s.push(e.once("beforeremove",this._onHandleElementLose,this)),s.push(e.on("set:anchor",this._onSetHandleAlignment,this)),s.push(e.on("set:margin",this._onSetHandleAlignment,this)),s.push(e.on("set:pivot",this._onSetHandleAlignment,this))}_handleEntityElementUnsubscribe(){for(let e=0;e<this._evtHandleEntityChanges.length;e++)this._evtHandleEntityChanges[e].off();this._evtHandleEntityChanges.length=0}_onHandleElementGain(){this._handleEntityElementSubscribe(),this._destroyDragHelper(),this._handleDragHelper=new Co(this._handleEntity.element,this._getAxis()),this._handleDragHelper.on("drag:move",this._onHandleDrag,this),this._updateHandlePositionAndSize()}_onHandleElementLose(){this._handleEntityElementUnsubscribe(),this._destroyDragHelper()}_onHandleDrag(e){this._handleEntity&&this.enabled&&this.entity.enabled&&(this.value=this._handlePositionToScrollValue(e[this._getAxis()]))}_onSetValue(e,s,i){Math.abs(i-s)>1e-5&&(this.data.value=z.clamp(i,0,1),this._updateHandlePositionAndSize(),this.fire("set:value",this.data.value))}_onSetHandleSize(e,s,i){Math.abs(i-s)>1e-5&&(this.data.handleSize=z.clamp(i,0,1),this._updateHandlePositionAndSize())}_onSetHandleAlignment(){this._updateHandlePositionAndSize()}_onSetOrientation(e,s,i){var r;i!==s&&((r=this._handleEntity)!=null&&r.element)&&(this._handleEntity.element[this._getOppositeDimension()]=0)}_updateHandlePositionAndSize(){const e=this._handleEntity,s=e==null?void 0:e.element;if(e){const i=e.getLocalPosition();i[this._getAxis()]=this._getHandlePosition(),e.setLocalPosition(i)}s&&(s[this._getDimension()]=this._getHandleLength())}_handlePositionToScrollValue(e){return e*this._getSign()/this._getUsableTrackLength()}_scrollValueToHandlePosition(e){return e*this._getSign()*this._getUsableTrackLength()}_getUsableTrackLength(){return Math.max(this._getTrackLength()-this._getHandleLength(),.001)}_getTrackLength(){return this.entity.element?this.orientation===ye?this.entity.element.calculatedWidth:this.entity.element.calculatedHeight:0}_getHandleLength(){return this._getTrackLength()*this.handleSize}_getHandlePosition(){return this._scrollValueToHandlePosition(this.value)}_getSign(){return this.orientation===ye?1:-1}_getAxis(){return this.orientation===ye?"x":"y"}_getDimension(){return this.orientation===ye?"width":"height"}_getOppositeDimension(){return this.orientation===ye?"height":"width"}_destroyDragHelper(){this._handleDragHelper&&this._handleDragHelper.destroy()}_setHandleDraggingEnabled(e){this._handleDragHelper&&(this._handleDragHelper.enabled=e)}onEnable(){this._setHandleDraggingEnabled(!0)}onDisable(){this._setHandleDraggingEnabled(!1)}onRemove(){this._destroyDragHelper(),this._toggleLifecycleListeners("off")}resolveDuplicatedEntityReferenceProperties(e,s){e.handleEntity&&(this.handleEntity=s[e.handleEntity.getGuid()])}}c(xx,"EVENT_SETVALUE","set:value");class FI{constructor(){c(this,"enabled",!0);c(this,"orientation",ye);c(this,"value",0);c(this,"handleSize",0);c(this,"handleEntity",null)}}const Cg=[{name:"enabled",type:"boolean"},{name:"orientation",type:"number"},{name:"value",type:"number"},{name:"handleSize",type:"number"}];class kI extends Qe{constructor(t){super(t),this.id="scrollbar",this.ComponentType=xx,this.DataType=FI,this.schema=Cg,this.on("add",this._onAddComponent,this),this.on("beforeremove",this._onRemoveComponent,this)}initializeComponentData(t,e,s){super.initializeComponentData(t,e,Cg),t.handleEntity=e.handleEntity}_onAddComponent(t){t.fire("scrollbar:add")}_onRemoveComponent(t,e){e.onRemove()}}const OI={volume:0,pitch:0,loop:!1,startTime:0,duration:0,position:new A,maxDistance:0,refDistance:0,rollOffFactor:0,distanceModel:0,onPlay:null,onPause:null,onResume:null,onStop:null,onEnd:null};class sr extends de{constructor(e,s="Untitled",i={}){super();c(this,"name");c(this,"instances",[]);this._component=e,this._assets=e.system.app.assets,this._manager=e.system.manager,this.name=s,this._volume=i.volume!==void 0?z.clamp(Number(i.volume)||0,0,1):1,this._pitch=i.pitch!==void 0?Math.max(.01,Number(i.pitch)||0):1,this._loop=!!(i.loop!==void 0&&i.loop),this._duration=i.duration>0?i.duration:null,this._startTime=Math.max(0,Number(i.startTime)||0),this._overlap=!!i.overlap,this._autoPlay=!!i.autoPlay,this._firstNode=null,this._lastNode=null,this._asset=i.asset,this._asset instanceof he&&(this._asset=this._asset.id),this._onInstancePlayHandler=this._onInstancePlay.bind(this),this._onInstancePauseHandler=this._onInstancePause.bind(this),this._onInstanceResumeHandler=this._onInstanceResume.bind(this),this._onInstanceStopHandler=this._onInstanceStop.bind(this),this._onInstanceEndHandler=this._onInstanceEnd.bind(this)}play(e){if(this.overlap||this.stop(),!this.isLoaded&&!this._hasAsset()){b.warn(`Trying to play SoundSlot ${this.name} but it is not loaded and doesn't have an asset.`);return}let s=e;if(s||(s=this._createInstance(),this.instances.push(s)),this.isLoaded)s.play();else{const i=function(r){const n=s._playWhenLoaded;s.sound=r,n&&s.play()};this.off("load",i),this.once("load",i),this.load()}return s}pause(){let e=!1;const s=this.instances;for(let i=0,r=s.length;i<r;i++)s[i].pause()&&(e=!0);return e}resume(){let e=!1;const s=this.instances;for(let i=0,r=s.length;i<r;i++)s[i].resume()&&(e=!0);return e}stop(){let e=!1;const s=this.instances;let i=s.length;for(;i--;)s[i].stop(),e=!0;return s.length=0,e}load(){if(!this._hasAsset())return;const e=this._assets.get(this._asset);if(!e){this._assets.off(`add:${this._asset}`,this._onAssetAdd,this),this._assets.once(`add:${this._asset}`,this._onAssetAdd,this);return}if(e.off("remove",this._onAssetRemoved,this),e.on("remove",this._onAssetRemoved,this),!e.resource){e.off("load",this._onAssetLoad,this),e.once("load",this._onAssetLoad,this),this._assets.load(e);return}this.fire("load",e.resource)}setExternalNodes(e,s){if(!e){console.error("The firstNode must have a valid AudioNode");return}if(s||(s=e),this._firstNode=e,this._lastNode=s,!this._overlap){const i=this.instances;for(let r=0,n=i.length;r<n;r++)i[r].setExternalNodes(e,s)}}clearExternalNodes(){if(this._firstNode=null,this._lastNode=null,!this._overlap){const e=this.instances;for(let s=0,i=e.length;s<i;s++)e[s].clearExternalNodes()}}getExternalNodes(){return[this._firstNode,this._lastNode]}_hasAsset(){return this._asset!=null}_createInstance(){let e=null;const s=this._component;let i=null;if(this._hasAsset()){const n=this._assets.get(this._asset);n&&(i=n.resource)}const r=OI;return r.volume=this._volume*s.volume,r.pitch=this._pitch*s.pitch,r.loop=this._loop,r.startTime=this._startTime,r.duration=this._duration,r.onPlay=this._onInstancePlayHandler,r.onPause=this._onInstancePauseHandler,r.onResume=this._onInstanceResumeHandler,r.onStop=this._onInstanceStopHandler,r.onEnd=this._onInstanceEndHandler,s.positional?(r.position.copy(s.entity.getPosition()),r.maxDistance=s.maxDistance,r.refDistance=s.refDistance,r.rollOffFactor=s.rollOffFactor,r.distanceModel=s.distanceModel,e=new Kn(this._manager,i,r)):e=new ls(this._manager,i,r),this._firstNode&&e.setExternalNodes(this._firstNode,this._lastNode),e}_onInstancePlay(e){this.fire("play",e),this._component.fire("play",this,e)}_onInstancePause(e){this.fire("pause",e),this._component.fire("pause",this,e)}_onInstanceResume(e){this.fire("resume",e),this._component.fire("resume",this,e)}_onInstanceStop(e){const s=this.instances.indexOf(e);s!==-1&&this.instances.splice(s,1),this.fire("stop",e),this._component.fire("stop",this,e)}_onInstanceEnd(e){const s=this.instances.indexOf(e);s!==-1&&this.instances.splice(s,1),this.fire("end",e),this._component.fire("end",this,e)}_onAssetAdd(e){this.load()}_onAssetLoad(e){this.load()}_onAssetRemoved(e){e.off("remove",this._onAssetRemoved,this),this._assets.off(`add:${e.id}`,this._onAssetAdd,this),this.stop()}updatePosition(e){const s=this.instances;for(let i=0,r=s.length;i<r;i++)s[i].position=e}set asset(e){const s=this._asset;if(s){this._assets.off(`add:${s}`,this._onAssetAdd,this);const i=this._assets.get(s);i&&i.off("remove",this._onAssetRemoved,this)}this._asset=e,this._asset instanceof he&&(this._asset=this._asset.id),this._hasAsset()&&this._component.enabled&&this._component.entity.enabled&&this.load()}get asset(){return this._asset}set autoPlay(e){this._autoPlay=!!e}get autoPlay(){return this._autoPlay}set duration(e){if(this._duration=Math.max(0,Number(e)||0)||null,!this._overlap){const s=this.instances;for(let i=0,r=s.length;i<r;i++)s[i].duration=this._duration}}get duration(){let e=0;if(this._hasAsset()){const s=this._assets.get(this._asset);e=s!=null&&s.resource?s.resource.duration:0}return this._duration!=null?this._duration%(e||1):e}get isLoaded(){if(this._hasAsset()){const e=this._assets.get(this._asset);if(e)return!!e.resource}return!1}get isPaused(){const e=this.instances,s=e.length;if(s===0)return!1;for(let i=0;i<s;i++)if(!e[i].isPaused)return!1;return!0}get isPlaying(){const e=this.instances;for(let s=0,i=e.length;s<i;s++)if(e[s].isPlaying)return!0;return!1}get isStopped(){const e=this.instances;for(let s=0,i=e.length;s<i;s++)if(!e[s].isStopped)return!1;return!0}set loop(e){this._loop=!!e;const s=this.instances;for(let i=0,r=s.length;i<r;i++)s[i].loop=this._loop}get loop(){return this._loop}set overlap(e){this._overlap=!!e}get overlap(){return this._overlap}set pitch(e){if(this._pitch=Math.max(Number(e)||0,.01),!this._overlap){const s=this.instances;for(let i=0,r=s.length;i<r;i++)s[i].pitch=this.pitch*this._component.pitch}}get pitch(){return this._pitch}set startTime(e){if(this._startTime=Math.max(0,Number(e)||0),!this._overlap){const s=this.instances;for(let i=0,r=s.length;i<r;i++)s[i].startTime=this._startTime}}get startTime(){return this._startTime}set volume(e){if(this._volume=z.clamp(Number(e)||0,0,1),!this._overlap){const s=this.instances;for(let i=0,r=s.length;i<r;i++)s[i].volume=this._volume*this._component.volume}}get volume(){return this._volume}}c(sr,"EVENT_PLAY","play"),c(sr,"EVENT_PAUSE","pause"),c(sr,"EVENT_RESUME","resume"),c(sr,"EVENT_STOP","stop"),c(sr,"EVENT_LOAD","load");class zr extends pe{constructor(){super(...arguments);c(this,"_volume",1);c(this,"_pitch",1);c(this,"_positional",!0);c(this,"_refDistance",1);c(this,"_maxDistance",1e4);c(this,"_rollOffFactor",1);c(this,"_distanceModel",mc);c(this,"_slots",{});c(this,"_playingBeforeDisable",{})}_updateSoundInstances(e,s,i){const r=this._slots;for(const n in r){const a=r[n];if(!a.overlap){const o=a.instances;for(let h=0,d=o.length;h<d;h++)o[h][e]=i?a[e]*s:s}}}set distanceModel(e){this._distanceModel=e,this._updateSoundInstances("distanceModel",e,!1)}get distanceModel(){return this._distanceModel}set maxDistance(e){this._maxDistance=e,this._updateSoundInstances("maxDistance",e,!1)}get maxDistance(){return this._maxDistance}set refDistance(e){this._refDistance=e,this._updateSoundInstances("refDistance",e,!1)}get refDistance(){return this._refDistance}set rollOffFactor(e){this._rollOffFactor=e,this._updateSoundInstances("rollOffFactor",e,!1)}get rollOffFactor(){return this._rollOffFactor}set pitch(e){this._pitch=e,this._updateSoundInstances("pitch",e,!0)}get pitch(){return this._pitch}set volume(e){this._volume=e,this._updateSoundInstances("volume",e,!0)}get volume(){return this._volume}set positional(e){this._positional=e;const s=this._slots;for(const i in s){const r=s[i];if(!r.overlap){const n=r.instances,a=n.length;for(let o=a-1;o>=0;o--){const h=n[o].isPlaying||n[o].isSuspended,d=n[o].currentTime;h&&n[o].stop();const u=r._createInstance();h&&(u.play(),u.currentTime=d),n.push(u)}}}}get positional(){return this._positional}set slots(e){const s=this._slots;if(s)for(const r in s)s[r].stop();const i={};for(const r in e)e[r]instanceof sr?i[e[r].name]=e[r]:e[r].name&&(i[e[r].name]=new sr(this,e[r].name,e[r]));this._slots=i,this.enabled&&this.entity.enabled&&this.onEnable()}get slots(){return this._slots}onEnable(){if(this.system._inTools)return;const e=this._slots,s=this._playingBeforeDisable;for(const i in e){const r=e[i];r.autoPlay&&r.isStopped?r.play():s[i]?r.resume():r.isLoaded||r.load()}}onDisable(){const e=this._slots,s={};for(const i in e)e[i].overlap||e[i].isPlaying&&(e[i].pause(),s[i]=!0);this._playingBeforeDisable=s}onRemove(){this.off()}addSlot(e,s){const i=this._slots;if(i[e])return b.warn(`A sound slot with name ${e} already exists on Entity ${this.entity.path}`),null;const r=new sr(this,e,s);return i[e]=r,r.autoPlay&&this.enabled&&this.entity.enabled&&r.play(),r}removeSlot(e){const s=this._slots;s[e]&&(s[e].stop(),delete s[e])}slot(e){return this._slots[e]}_getSlotProperty(e,s){if(!this.enabled||!this.entity.enabled)return;const i=this._slots[e];if(!i){b.warn(`Trying to get ${s} from sound slot with name ${e} which does not exist`);return}return i[s]}isPlaying(e){return this._getSlotProperty(e,"isPlaying")||!1}isLoaded(e){return this._getSlotProperty(e,"isLoaded")||!1}isPaused(e){return this._getSlotProperty(e,"isPaused")||!1}isStopped(e){return this._getSlotProperty(e,"isStopped")||!1}play(e){if(!this.enabled||!this.entity.enabled)return null;const s=this._slots[e];return s?s.play():(b.warn(`Trying to play sound slot with name ${e} which does not exist`),null)}pause(e){const s=this._slots;if(e){const i=s[e];if(!i){b.warn(`Trying to pause sound slot with name ${e} which does not exist`);return}i.pause()}else for(const i in s)s[i].pause()}resume(e){const s=this._slots;if(e){const i=s[e];if(!i){b.warn(`Trying to resume sound slot with name ${e} which does not exist`);return}i.isPaused&&i.resume()}else for(const i in s)s[i].resume()}stop(e){const s=this._slots;if(e){const i=s[e];if(!i){b.warn(`Trying to stop sound slot with name ${e} which does not exist`);return}i.stop()}else for(const i in s)s[i].stop()}}c(zr,"EVENT_PLAY","play"),c(zr,"EVENT_PAUSE","pause"),c(zr,"EVENT_RESUME","resume"),c(zr,"EVENT_STOP","stop"),c(zr,"EVENT_END","end");class BI{constructor(){this.enabled=!0}}const Sx=["enabled"];class NI extends Qe{constructor(t){super(t),this.id="sound",this.ComponentType=zr,this.DataType=BI,this.schema=Sx,this.manager=t.soundManager,b.assert(this.manager,"SoundComponentSystem cannot be created without sound manager"),this.app.systems.on("update",this.onUpdate,this),this.on("beforeremove",this.onBeforeRemove,this)}set volume(t){this.manager.volume=t}get volume(){return this.manager.volume}get context(){return Ni()?this.manager.context:(b.warn("WARNING: Audio context is not supported on this browser"),null)}initializeComponentData(t,e,s){s=["volume","pitch","positional","refDistance","maxDistance","rollOffFactor","distanceModel","slots"];for(let i=0;i<s.length;i++)e.hasOwnProperty(s[i])&&(t[s[i]]=e[s[i]]);super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s=t.sound,i=s.slots,r={};for(const a in i){const o=i[a];r[a]={name:o.name,volume:o.volume,pitch:o.pitch,loop:o.loop,duration:o.duration,startTime:o.startTime,overlap:o.overlap,autoPlay:o.autoPlay,asset:o.asset}}const n={distanceModel:s.distanceModel,enabled:s.enabled,maxDistance:s.maxDistance,pitch:s.pitch,positional:s.positional,refDistance:s.refDistance,rollOffFactor:s.rollOffFactor,slots:r,volume:s.volume};return this.addComponent(e,n)}onUpdate(t){const e=this.store;for(const s in e)if(e.hasOwnProperty(s)){const r=e[s].entity;if(r.enabled){const n=r.sound;if(n.enabled&&n.positional){const a=r.getPosition(),o=n.slots;for(const h in o)o[h].updatePosition(a)}}}}onBeforeRemove(t,e){const s=e.slots;for(const i in s)s[i].overlap||s[i].stop();e.onRemove()}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}pe._buildAccessors(zr.prototype,Sx);const Mg="simple",Pg="animated";class Ci extends de{constructor(e,s){super();c(this,"_evtSetMeshes",null);this._component=e,this._frame=0,this._sprite=null,this._spriteAsset=null,this.spriteAsset=s.spriteAsset,this.name=s.name,this.fps=s.fps||0,this.loop=s.loop||!1,this._playing=!1,this._paused=!1,this._time=0}get duration(){if(this._sprite){const e=this.fps||Number.MIN_VALUE;return this._sprite.frameKeys.length/Math.abs(e)}return 0}set frame(e){this._setFrame(e);const s=this.fps||Number.MIN_VALUE;this._setTime(this._frame/s)}get frame(){return this._frame}get isPaused(){return this._paused}get isPlaying(){return this._playing}set sprite(e){var s;if(this._sprite&&((s=this._evtSetMeshes)==null||s.off(),this._evtSetMeshes=null,this._sprite.off("set:pixelsPerUnit",this._onSpritePpuChanged,this),this._sprite.off("set:atlas",this._onSpriteMeshesChange,this),this._sprite.atlas&&this._sprite.atlas.off("set:texture",this._onSpriteMeshesChange,this)),this._sprite=e,this._sprite&&(this._evtSetMeshes=this._sprite.on("set:meshes",this._onSpriteMeshesChange,this),this._sprite.on("set:pixelsPerUnit",this._onSpritePpuChanged,this),this._sprite.on("set:atlas",this._onSpriteMeshesChange,this),this._sprite.atlas&&this._sprite.atlas.on("set:texture",this._onSpriteMeshesChange,this)),this._component.currentClip===this){let i;!e||!e.atlas?(i=this._component._meshInstance,i&&(i.deleteParameter("texture_emissiveMap"),i.deleteParameter("texture_opacityMap")),this._component._hideModel()):(e.atlas.texture&&(i=this._component._meshInstance,i&&(i.setParameter("texture_emissiveMap",e.atlas.texture),i.setParameter("texture_opacityMap",e.atlas.texture)),this._component.enabled&&this._component.entity.enabled&&this._component._showModel()),this.time&&this.fps?this.time=this.time:this.frame=this.frame)}}get sprite(){return this._sprite}set spriteAsset(e){const s=this._component.system.app.assets;let i=e;if(e instanceof he&&(i=e.id),this._spriteAsset!==i){if(this._spriteAsset){const r=s.get(this._spriteAsset);r&&this._unbindSpriteAsset(r)}if(this._spriteAsset=i,this._spriteAsset){const r=s.get(this._spriteAsset);r?this._bindSpriteAsset(r):(this.sprite=null,s.on(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this))}else this.sprite=null}}get spriteAsset(){return this._spriteAsset}set time(e){this._setTime(e),this._sprite?this.frame=Math.min(this._sprite.frameKeys.length-1,Math.floor(this._time*Math.abs(this.fps))):this.frame=0}get time(){return this._time}_onSpriteAssetAdded(e){this._component.system.app.assets.off(`add:${e.id}`,this._onSpriteAssetAdded,this),this._spriteAsset===e.id&&this._bindSpriteAsset(e)}_bindSpriteAsset(e){e.on("load",this._onSpriteAssetLoad,this),e.on("remove",this._onSpriteAssetRemove,this),e.resource?this._onSpriteAssetLoad(e):this._component.system.app.assets.load(e)}_unbindSpriteAsset(e){e&&(e.off("load",this._onSpriteAssetLoad,this),e.off("remove",this._onSpriteAssetRemove,this),e.resource&&!e.resource.atlas&&this._component.system.app.assets.off(`load:${e.data.textureAtlasAsset}`,this._onTextureAtlasLoad,this))}_onSpriteAssetLoad(e){if(!e.resource)this.sprite=null;else if(e.resource.atlas)this.sprite=e.resource;else{const s=e.data.textureAtlasAsset,i=this._component.system.app.assets;i.off(`load:${s}`,this._onTextureAtlasLoad,this),i.once(`load:${s}`,this._onTextureAtlasLoad,this)}}_onTextureAtlasLoad(e){const s=this._spriteAsset;s instanceof he?this._onSpriteAssetLoad(s):this._onSpriteAssetLoad(this._component.system.app.assets.get(s))}_onSpriteAssetRemove(e){this.sprite=null}_onSpriteMeshesChange(){this._component.currentClip===this&&this._component._showFrame(this.frame)}_onSpritePpuChanged(){this._component.currentClip===this&&this.sprite.renderMode!==Pi&&this._component._showFrame(this.frame)}_update(e){if(this.fps===0||!this._playing||this._paused||!this._sprite)return;const s=this.fps<0?-1:1,i=this._time+e*this._component.speed*s,r=this.duration,n=i>r||i<0;this._setTime(i);let a=this.frame;this._sprite?a=Math.floor(this._sprite.frameKeys.length*this._time/r):a=0,a!==this._frame&&this._setFrame(a),n&&(this.loop?(this.fire("loop"),this._component.fire("loop",this)):(this._playing=!1,this._paused=!1,this.fire("end"),this._component.fire("end",this)))}_setTime(e){this._time=e;const s=this.duration;this._time<0?this.loop?this._time=this._time%s+s:this._time=0:this._time>s&&(this.loop?this._time%=s:this._time=s)}_setFrame(e){this._sprite?this._frame=z.clamp(e,0,this._sprite.frameKeys.length-1):this._frame=e,this._component.currentClip===this&&this._component._showFrame(this._frame)}_destroy(){if(this._spriteAsset){const e=this._component.system.app.assets;this._unbindSpriteAsset(e.get(this._spriteAsset))}this._sprite&&(this.sprite=null),this._spriteAsset&&(this.spriteAsset=null)}play(){this._playing||(this._playing=!0,this._paused=!1,this.frame=0,this.fire("play"),this._component.fire("play",this))}pause(){!this._playing||this._paused||(this._paused=!0,this.fire("pause"),this._component.fire("pause",this))}resume(){this._paused&&(this._paused=!1,this.fire("resume"),this._component.fire("resume",this))}stop(){this._playing&&(this._playing=!1,this._paused=!1,this._time=0,this.frame=0,this.fire("stop"),this._component.fire("stop",this))}}c(Ci,"EVENT_PLAY","play"),c(Ci,"EVENT_PAUSE","pause"),c(Ci,"EVENT_RESUME","resume"),c(Ci,"EVENT_STOP","stop"),c(Ci,"EVENT_END","end"),c(Ci,"EVENT_LOOP","loop");const Rg="texture_emissiveMap",Ig="texture_opacityMap",Dg="material_emissive",Lg="material_opacity",zI="innerOffset",UI="outerScale",VI="atlasRect";class Ki extends pe{constructor(e,s){super(e,s);c(this,"_evtLayersChanged",null);c(this,"_evtLayerAdded",null);c(this,"_evtLayerRemoved",null);this._type=Mg,this._material=e.defaultMaterial,this._color=new Y(1,1,1,1),this._colorUniform=new Float32Array(3),this._speed=1,this._flipX=!1,this._flipY=!1,this._width=1,this._height=1,this._drawOrder=0,this._layers=[zi],this._outerScale=new W(1,1),this._outerScaleUniform=new Float32Array(2),this._innerOffset=new ee,this._innerOffsetUniform=new Float32Array(4),this._atlasRect=new ee,this._atlasRectUniform=new Float32Array(4),this._batchGroupId=-1,this._batchGroup=null,this._node=new Oe,this._model=new Ui,this._model.graph=this._node,this._meshInstance=null,s.addChild(this._model.graph),this._model._entity=s,this._updateAabbFunc=this._updateAabb.bind(this),this._addedModel=!1,this._autoPlayClip=null,this._clips={},this._defaultClip=new Ci(this,{name:this.entity.name,fps:0,loop:!1,spriteAsset:null}),this._currentClip=this._defaultClip}set type(e){this._type!==e&&(this._type=e,this._type===Mg?(this.stop(),this._currentClip=this._defaultClip,this.enabled&&this.entity.enabled&&(this._currentClip.frame=this.frame,this._currentClip.sprite?this._showModel():this._hideModel())):this._type===Pg&&(this.stop(),this._autoPlayClip&&this._tryAutoPlay(),this._currentClip&&this._currentClip.isPlaying&&this.enabled&&this.entity.enabled?this._showModel():this._hideModel()))}get type(){return this._type}set frame(e){this._currentClip.frame=e}get frame(){return this._currentClip.frame}set spriteAsset(e){this._defaultClip.spriteAsset=e}get spriteAsset(){return this._defaultClip._spriteAsset}set sprite(e){this._currentClip.sprite=e}get sprite(){return this._currentClip.sprite}set material(e){this._material=e,this._meshInstance&&(this._meshInstance.material=e)}get material(){return this._material}set color(e){this._color.r=e.r,this._color.g=e.g,this._color.b=e.b,this._meshInstance&&(this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b,this._meshInstance.setParameter(Dg,this._colorUniform))}get color(){return this._color}set opacity(e){this._color.a=e,this._meshInstance&&this._meshInstance.setParameter(Lg,e)}get opacity(){return this._color.a}set clips(e){if(!e){for(const s in this._clips)this.removeClip(s);return}for(const s in this._clips){let i=!1;for(const r in e)if(e[r].name===s){i=!0,this._clips[s].fps=e[r].fps,this._clips[s].loop=e[r].loop,e[r].hasOwnProperty("sprite")?this._clips[s].sprite=e[r].sprite:e[r].hasOwnProperty("spriteAsset")&&(this._clips[s].spriteAsset=e[r].spriteAsset);break}i||this.removeClip(s)}for(const s in e)this._clips[e[s].name]||this.addClip(e[s]);this._autoPlayClip&&this._tryAutoPlay(),(!this._currentClip||!this._currentClip.sprite)&&this._hideModel()}get clips(){return this._clips}get currentClip(){return this._currentClip}set speed(e){this._speed=e}get speed(){return this._speed}set flipX(e){this._flipX!==e&&(this._flipX=e,this._updateTransform())}get flipX(){return this._flipX}set flipY(e){this._flipY!==e&&(this._flipY=e,this._updateTransform())}get flipY(){return this._flipY}set width(e){e!==this._width&&(this._width=e,this._outerScale.x=this._width,this.sprite&&(this.sprite.renderMode===st||this.sprite.renderMode===ht)&&this._updateTransform())}get width(){return this._width}set height(e){e!==this._height&&(this._height=e,this._outerScale.y=this.height,this.sprite&&(this.sprite.renderMode===st||this.sprite.renderMode===ht)&&this._updateTransform())}get height(){return this._height}set batchGroupId(e){var i,r;if(this._batchGroupId===e)return;const s=this._batchGroupId;this._batchGroupId=e,this.entity.enabled&&s>=0&&((i=this.system.app.batcher)==null||i.remove(rt.SPRITE,s,this.entity)),this.entity.enabled&&e>=0?(r=this.system.app.batcher)==null||r.insert(rt.SPRITE,e,this.entity):s>=0&&this._currentClip&&this._currentClip.sprite&&this.enabled&&this.entity.enabled&&this._showModel()}get batchGroupId(){return this._batchGroupId}set autoPlayClip(e){this._autoPlayClip=e instanceof Ci?e.name:e,this._tryAutoPlay()}get autoPlayClip(){return this._autoPlayClip}set drawOrder(e){this._drawOrder=e,this._meshInstance&&(this._meshInstance.drawOrder=e)}get drawOrder(){return this._drawOrder}set layers(e){this._addedModel&&this._hideModel(),this._layers=e,this._meshInstance&&this.enabled&&this.entity.enabled&&this._showModel()}get layers(){return this._layers}get aabb(){return this._meshInstance?this._meshInstance.aabb:null}onEnable(){var r;const e=this.system.app,s=e.scene,i=s.layers;this._evtLayersChanged=s.on("set:layers",this._onLayersChanged,this),i&&(this._evtLayerAdded=i.on("add",this._onLayerAdded,this),this._evtLayerRemoved=i.on("remove",this._onLayerRemoved,this)),this._showModel(),this._autoPlayClip&&this._tryAutoPlay(),this._batchGroupId>=0&&((r=e.batcher)==null||r.insert(rt.SPRITE,this._batchGroupId,this.entity))}onDisable(){var r,n,a,o;const e=this.system.app,i=e.scene.layers;(r=this._evtLayersChanged)==null||r.off(),this._evtLayersChanged=null,i&&((n=this._evtLayerAdded)==null||n.off(),this._evtLayerAdded=null,(a=this._evtLayerRemoved)==null||a.off(),this._evtLayerRemoved=null),this.stop(),this._hideModel(),this._batchGroupId>=0&&((o=e.batcher)==null||o.remove(rt.SPRITE,this._batchGroupId,this.entity))}onDestroy(){var e;this._currentClip=null,this._defaultClip&&(this._defaultClip._destroy(),this._defaultClip=null);for(const s in this._clips)this._clips[s]._destroy();this._clips=null,this._hideModel(),this._model=null,(e=this._node)==null||e.remove(),this._node=null,this._meshInstance&&(this._meshInstance.material=null,this._meshInstance.mesh=null,this._meshInstance=null)}_showModel(){if(this._addedModel||!this._meshInstance)return;const e=[this._meshInstance];for(let s=0,i=this._layers.length;s<i;s++){const r=this.system.app.scene.layers.getLayerById(this._layers[s]);r&&r.addMeshInstances(e)}this._addedModel=!0}_hideModel(){if(!this._addedModel||!this._meshInstance)return;const e=[this._meshInstance];for(let s=0,i=this._layers.length;s<i;s++){const r=this.system.app.scene.layers.getLayerById(this._layers[s]);r&&r.removeMeshInstances(e)}this._addedModel=!1}_showFrame(e){if(!this.sprite)return;const s=this.sprite.meshes[e];if(!s){this._meshInstance&&(this._meshInstance.mesh=null,this._meshInstance.visible=!1);return}let i;if(this.sprite.renderMode===ht?i=this.system.default9SlicedMaterialSlicedMode:this.sprite.renderMode===st?i=this.system.default9SlicedMaterialTiledMode:i=this.system.defaultMaterial,this._meshInstance||(this._meshInstance=new Be(s,this._material,this._node),this._meshInstance.castShadow=!1,this._meshInstance.receiveShadow=!1,this._meshInstance.drawOrder=this._drawOrder,this._model.meshInstances.push(this._meshInstance),this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b,this._meshInstance.setParameter(Dg,this._colorUniform),this._meshInstance.setParameter(Lg,this._color.a),this.enabled&&this.entity.enabled&&this._showModel()),this._meshInstance.material!==i&&(this._meshInstance.material=i),this._meshInstance.mesh!==s&&(this._meshInstance.mesh=s,this._meshInstance.visible=!0,this._meshInstance._aabbVer=-1),this.sprite.atlas&&this.sprite.atlas.texture?(this._meshInstance.setParameter(Rg,this.sprite.atlas.texture),this._meshInstance.setParameter(Ig,this.sprite.atlas.texture)):(this._meshInstance.deleteParameter(Rg),this._meshInstance.deleteParameter(Ig)),this.sprite.atlas&&(this.sprite.renderMode===ht||this.sprite.renderMode===st)){this._meshInstance._updateAabbFunc=this._updateAabbFunc;const r=this.sprite.atlas.frames[this.sprite.frameKeys[e]];if(r){const n=2/r.rect.z,a=2/r.rect.w;this._innerOffset.set(r.border.x*n,r.border.y*a,r.border.z*n,r.border.w*a);const o=this.sprite.atlas.texture;this._atlasRect.set(r.rect.x/o.width,r.rect.y/o.height,r.rect.z/o.width,r.rect.w/o.height)}else this._innerOffset.set(0,0,0,0);this._innerOffsetUniform[0]=this._innerOffset.x,this._innerOffsetUniform[1]=this._innerOffset.y,this._innerOffsetUniform[2]=this._innerOffset.z,this._innerOffsetUniform[3]=this._innerOffset.w,this._meshInstance.setParameter(zI,this._innerOffsetUniform),this._atlasRectUniform[0]=this._atlasRect.x,this._atlasRectUniform[1]=this._atlasRect.y,this._atlasRectUniform[2]=this._atlasRect.z,this._atlasRectUniform[3]=this._atlasRect.w,this._meshInstance.setParameter(VI,this._atlasRectUniform)}else this._meshInstance._updateAabbFunc=null;this._updateTransform()}_updateTransform(){let e=this.flipX?-1:1,s=this.flipY?-1:1,i=0,r=0;if(this.sprite&&(this.sprite.renderMode===ht||this.sprite.renderMode===st)){let n=1,a=1;if(this.sprite.atlas){const d=this.sprite.atlas.frames[this.sprite.frameKeys[this.frame]];d&&(n=d.rect.z,a=d.rect.w,i=(.5-d.pivot.x)*this._width,r=(.5-d.pivot.y)*this._height)}const o=n/this.sprite.pixelsPerUnit,h=a/this.sprite.pixelsPerUnit;this._outerScale.set(Math.max(this._width,this._innerOffset.x*o),Math.max(this._height,this._innerOffset.y*h)),e*=o,s*=h,this._outerScale.x/=o,this._outerScale.y/=h,e*=z.clamp(this._width/(this._innerOffset.x*o),1e-4,1),s*=z.clamp(this._height/(this._innerOffset.y*h),1e-4,1),this._meshInstance&&(this._outerScaleUniform[0]=this._outerScale.x,this._outerScaleUniform[1]=this._outerScale.y,this._meshInstance.setParameter(UI,this._outerScaleUniform))}this._node.setLocalScale(e,s,1),this._node.setLocalPosition(i,r,0)}_updateAabb(e){return e.center.set(0,0,0),e.halfExtents.set(this._outerScale.x*.5,this._outerScale.y*.5,.001),e.setFromTransformedAabb(e,this._node.getWorldTransform()),e}_tryAutoPlay(){if(!this._autoPlayClip||this.type!==Pg)return;const e=this._clips[this._autoPlayClip];e&&!e.isPlaying&&(!this._currentClip||!this._currentClip.isPlaying)&&this.enabled&&this.entity.enabled&&this.play(e.name)}_onLayersChanged(e,s){e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),s.on("add",this.onLayerAdded,this),s.on("remove",this.onLayerRemoved,this),this.enabled&&this.entity.enabled&&this._showModel()}_onLayerAdded(e){this.layers.indexOf(e.id)<0||this._addedModel&&this.enabled&&this.entity.enabled&&this._meshInstance&&e.addMeshInstances([this._meshInstance])}_onLayerRemoved(e){!this._meshInstance||this.layers.indexOf(e.id)<0||e.removeMeshInstances([this._meshInstance])}removeModelFromLayers(){for(let e=0;e<this.layers.length;e++){const s=this.system.app.scene.layers.getLayerById(this.layers[e]);s&&s.removeMeshInstances([this._meshInstance])}}addClip(e){const s=new Ci(this,{name:e.name,fps:e.fps,loop:e.loop,spriteAsset:e.spriteAsset});return this._clips[e.name]=s,s.name&&s.name===this._autoPlayClip&&this._tryAutoPlay(),s}removeClip(e){delete this._clips[e]}clip(e){return this._clips[e]}play(e){const s=this._clips[e],i=this._currentClip;return i&&i!==s&&(i._playing=!1),this._currentClip=s,this._currentClip?(this._currentClip=s,this._currentClip.play()):b.warn(`Trying to play sprite animation ${e} which does not exist.`),s}pause(){this._currentClip!==this._defaultClip&&this._currentClip.isPlaying&&this._currentClip.pause()}resume(){this._currentClip!==this._defaultClip&&this._currentClip.isPaused&&this._currentClip.resume()}stop(){this._currentClip!==this._defaultClip&&this._currentClip.stop()}}c(Ki,"EVENT_PLAY","play"),c(Ki,"EVENT_PAUSE","pause"),c(Ki,"EVENT_RESUME","resume"),c(Ki,"EVENT_STOP","stop"),c(Ki,"EVENT_END","end"),c(Ki,"EVENT_LOOP","loop");class GI{constructor(){this.enabled=!0}}const vx=["enabled"];class HI extends Qe{constructor(t){super(t),this.id="sprite",this.ComponentType=Ki,this.DataType=GI,this.schema=vx,this._defaultTexture=null,this._defaultMaterial=null,this._default9SlicedMaterialSlicedMode=null,this._default9SlicedMaterialTiledMode=null,this.app.systems.on("update",this.onUpdate,this),this.on("beforeremove",this.onBeforeRemove,this)}set defaultMaterial(t){this._defaultMaterial=t}get defaultMaterial(){if(!this._defaultMaterial){const t=new ce(this.app.graphicsDevice,{width:1,height:1,format:Te,name:"sprite"}),e=new Uint8Array(t.lock());e[0]=e[1]=e[2]=e[3]=255,t.unlock();const s=new _s;s.diffuse.set(0,0,0),s.emissive.set(1,1,1),s.emissiveMap=t,s.opacityMap=t,s.opacityMapChannel="a",s.useLighting=!1,s.useTonemap=!1,s.useFog=!1,s.useSkybox=!1,s.blendType=dn,s.depthWrite=!1,s.pixelSnap=!1,s.cull=vt,s.update(),this._defaultTexture=t,this._defaultMaterial=s}return this._defaultMaterial}set default9SlicedMaterialSlicedMode(t){this._default9SlicedMaterialSlicedMode=t}get default9SlicedMaterialSlicedMode(){if(!this._default9SlicedMaterialSlicedMode){const t=this.defaultMaterial.clone();t.nineSlicedMode=ht,t.update(),this._default9SlicedMaterialSlicedMode=t}return this._default9SlicedMaterialSlicedMode}set default9SlicedMaterialTiledMode(t){this._default9SlicedMaterialTiledMode=t}get default9SlicedMaterialTiledMode(){if(!this._default9SlicedMaterialTiledMode){const t=this.defaultMaterial.clone();t.nineSlicedMode=st,t.update(),this._default9SlicedMaterialTiledMode=t}return this._default9SlicedMaterialTiledMode}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this),this._defaultTexture&&(this._defaultTexture.destroy(),this._defaultTexture=null)}initializeComponentData(t,e,s){if(e.enabled!==void 0&&(t.enabled=e.enabled),t.type=e.type,e.layers&&Array.isArray(e.layers)&&(t.layers=e.layers.slice(0)),e.drawOrder!==void 0&&(t.drawOrder=e.drawOrder),e.color!==void 0&&(e.color instanceof Y?t.color.set(e.color.r,e.color.g,e.color.b,e.opacity??1):t.color.set(e.color[0],e.color[1],e.color[2],e.opacity??1),t.color=t.color),e.opacity!==void 0&&(t.opacity=e.opacity),e.flipX!==void 0&&(t.flipX=e.flipX),e.flipY!==void 0&&(t.flipY=e.flipY),e.width!==void 0&&(t.width=e.width),e.height!==void 0&&(t.height=e.height),e.spriteAsset!==void 0&&(t.spriteAsset=e.spriteAsset),e.sprite&&(t.sprite=e.sprite),e.frame!==void 0&&(t.frame=e.frame),e.clips)for(const i in e.clips)t.addClip(e.clips[i]);e.speed!==void 0&&(t.speed=e.speed),e.autoPlayClip&&(t.autoPlayClip=e.autoPlayClip),t.batchGroupId=e.batchGroupId===void 0||e.batchGroupId===null?-1:e.batchGroupId,super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.sprite;return this.addComponent(e,{enabled:s.enabled,type:s.type,spriteAsset:s.spriteAsset,sprite:s.sprite,width:s.width,height:s.height,frame:s.frame,color:s.color.clone(),opacity:s.opacity,flipX:s.flipX,flipY:s.flipY,speed:s.speed,clips:s.clips,autoPlayClip:s.autoPlayClip,batchGroupId:s.batchGroupId,drawOrder:s.drawOrder,layers:s.layers.slice(0)})}onUpdate(t){const e=this.store;for(const s in e)if(e.hasOwnProperty(s)){const i=e[s];if(i.data.enabled&&i.entity.enabled){const r=i.entity.sprite;r._currentClip&&r._currentClip._update(t)}}}onBeforeRemove(t,e){e.onDestroy()}}pe._buildAccessors(Ki.prototype,vx);class aa extends pe{constructor(t,e){super(t,e),this._oldState=!0,this._size=new A,this.on("set_enabled",this._onSetEnabled,this)}set size(t){t instanceof A?this._size.copy(t):t instanceof Array&&t.length>=3&&this.size.set(t[0],t[1],t[2])}get size(){return this._size}onEnable(){this._checkState()}onDisable(){this._checkState()}_onSetEnabled(t,e,s){this._checkState()}_checkState(){const t=this.enabled&&this.entity.enabled;t!==this._oldState&&(this._oldState=t,this.fire("enable"),this.fire("state",this.enabled))}_onBeforeRemove(){this.fire("remove")}}c(aa,"EVENT_ENABLE","enable"),c(aa,"EVENT_DISABLE","disable"),c(aa,"EVENT_STATE","state"),c(aa,"EVENT_REMOVE","remove");class WI{constructor(){this.enabled=!0}}const bx=["enabled"];class $I extends Qe{constructor(t){super(t),this.id="zone",this.ComponentType=aa,this.DataType=WI,this.schema=bx,this.on("beforeremove",this._onBeforeRemove,this)}initializeComponentData(t,e,s){t.enabled=e.hasOwnProperty("enabled")?!!e.enabled:!0,e.size&&(e.size instanceof A?t.size.copy(e.size):e.size instanceof Array&&e.size.length>=3&&t.size.set(e.size[0],e.size[1],e.size[2]))}cloneComponent(t,e){const s={enabled:t.zone.enabled,size:t.zone.size};return this.addComponent(e,s)}_onBeforeRemove(t,e){e._onBeforeRemove()}}pe._buildAccessors(aa.prototype,bx);class qI{constructor(t,e){this.effect=t,this.inputTarget=e,this.outputTarget=null,this.name=t.constructor.name}}class XI{constructor(t,e){this.app=t,this.camera=e,this.destinationRenderTarget=null,this.effects=[],this.enabled=!1,this.depthTarget=null,e.on("set:rect",this.onCameraRectChanged,this)}_allocateColorBuffer(t,e){const s=this.camera.rect,i=this.destinationRenderTarget,r=this.app.graphicsDevice,n=Math.floor(s.z*((i==null?void 0:i.width)??r.width)),a=Math.floor(s.w*((i==null?void 0:i.height)??r.height));return new ce(r,{name:e,format:t,width:n,height:a,mipmaps:!1,minFilter:fe,magFilter:fe,addressU:oe,addressV:oe})}_createOffscreenTarget(t,e){const s=this.app.graphicsDevice,r=(this.destinationRenderTarget??s.backBuffer).isColorBufferSrgb(0),n=(e&&s.getRenderableHdrFormat([it,et],!0))??(r?cs:Te),a=`${this.camera.entity.name}-posteffect-${this.effects.length}`,o=this._allocateColorBuffer(n,a);return new St({colorBuffer:o,depth:t,stencil:t&&this.app.graphicsDevice.supportsStencil,samples:t?s.samples:1})}_resizeOffscreenTarget(t){const e=t.colorBuffer.format,s=t.colorBuffer.name;t.destroyFrameBuffers(),t.destroyTextureBuffers(),t._colorBuffer=this._allocateColorBuffer(e,s),t._colorBuffers=[t._colorBuffer]}_destroyOffscreenTarget(t){t.destroyTextureBuffers(),t.destroy()}addEffect(t){const e=this.effects,s=e.length===0,i=this._createOffscreenTarget(s,t.hdr),r=new qI(t,i);e.push(r),this._sourceTarget=r.inputTarget,e.length>1&&(e[e.length-2].outputTarget=r.inputTarget),this._newPostEffect=t,t.needsDepthBuffer&&this._requestDepthMap(),this.enable(),this._newPostEffect=void 0}removeEffect(t){let e=-1;for(let s=0,i=this.effects.length;s<i;s++)if(this.effects[s].effect===t){e=s;break}e>=0&&(e>0?this.effects[e-1].outputTarget=e+1<this.effects.length?this.effects[e+1].inputTarget:null:this.effects.length>1&&(this.effects[1].inputTarget._depth||(this._destroyOffscreenTarget(this.effects[1].inputTarget),this.effects[1].inputTarget=this._createOffscreenTarget(!0,this.effects[1].hdr),this._sourceTarget=this.effects[1].inputTarget),this.camera.renderTarget=this.effects[1].inputTarget),this._destroyOffscreenTarget(this.effects[e].inputTarget),this.effects.splice(e,1)),this.enabled&&t.needsDepthBuffer&&this._releaseDepthMap(),this.effects.length===0&&this.disable()}_requestDepthMaps(){for(let t=0,e=this.effects.length;t<e;t++){const s=this.effects[t].effect;this._newPostEffect!==s&&s.needsDepthBuffer&&this._requestDepthMap()}}_releaseDepthMaps(){for(let t=0,e=this.effects.length;t<e;t++)this.effects[t].effect.needsDepthBuffer&&this._releaseDepthMap()}_requestDepthMap(){const t=this.app.scene.layers.getLayerById(es);t&&(t.incrementCounter(),this.camera.requestSceneDepthMap(!0))}_releaseDepthMap(){const t=this.app.scene.layers.getLayerById(es);t&&(t.decrementCounter(),this.camera.requestSceneDepthMap(!1))}destroy(){for(let t=0,e=this.effects.length;t<e;t++)this.effects[t].inputTarget.destroy();this.effects.length=0,this.disable()}enable(){!this.enabled&&this.effects.length&&(this.enabled=!0,this._requestDepthMaps(),this.app.graphicsDevice.on("resizecanvas",this._onCanvasResized,this),this.destinationRenderTarget=this.camera.renderTarget,this.camera.renderTarget=this.effects[0].inputTarget,this.camera.onPostprocessing=()=>{if(this.enabled){let t=null;const e=this.effects.length;if(e)for(let s=0;s<e;s++){const i=this.effects[s];let r=i.outputTarget;s===e-1&&(t=this.camera.rect,this.destinationRenderTarget&&(r=this.destinationRenderTarget)),G.pushGpuMarker(this.app.graphicsDevice,i.name),i.effect.render(i.inputTarget,r,t),G.popGpuMarker(this.app.graphicsDevice)}}})}disable(){this.enabled&&(this.enabled=!1,this.app.graphicsDevice.off("resizecanvas",this._onCanvasResized,this),this._releaseDepthMaps(),this._destroyOffscreenTarget(this._sourceTarget),this.camera.renderTarget=this.destinationRenderTarget,this.camera.onPostprocessing=null)}_onCanvasResized(t,e){const s=this.camera.rect,i=this.destinationRenderTarget;t=(i==null?void 0:i.width)??t,e=(i==null?void 0:i.height)??e,this.camera.camera.aspectRatio=t*s.z/(e*s.w),this.resizeRenderTargets()}resizeRenderTargets(){const t=this.app.graphicsDevice,e=this.destinationRenderTarget,s=(e==null?void 0:e.width)??t.width,i=(e==null?void 0:e.height)??t.height,r=this.camera.rect,n=Math.floor(r.z*s),a=Math.floor(r.w*i),o=this.effects;for(let h=0,d=o.length;h<d;h++){const u=o[h];(u.inputTarget.width!==n||u.inputTarget.height!==a)&&this._resizeOffscreenTarget(u.inputTarget)}}onCameraRectChanged(t,e,s){this.enabled&&this.resizeRenderTargets()}}class wx extends pe{constructor(e,s){super(e,s);c(this,"onPostprocessing",null);c(this,"_renderSceneDepthMap",0);c(this,"_renderSceneColorMap",0);c(this,"_sceneDepthMapRequested",!1);c(this,"_sceneColorMapRequested",!1);c(this,"_priority",0);c(this,"_disablePostEffectsLayer",nl);c(this,"_camera",new dl);c(this,"_evtLayersChanged",null);c(this,"_evtLayerAdded",null);c(this,"_evtLayerRemoved",null);this._camera.node=s,this._postEffects=new XI(e.app,this)}setShaderPass(e){const s=ti.get(this.system.app.graphicsDevice),i=e?s.allocate(e,{isForward:!0}):null;return this._camera.shaderPassInfo=i,i.index}getShaderPass(){var e;return(e=this._camera.shaderPassInfo)==null?void 0:e.name}set renderPasses(e){this._camera.renderPasses=e||[],this.dirtyLayerCompositionCameras(),this.system.app.scene.updateShaders=!0}get renderPasses(){return this._camera.renderPasses}get shaderParams(){return this._camera.shaderParams}set gammaCorrection(e){this.camera.shaderParams.gammaCorrection=e}get gammaCorrection(){return this.camera.shaderParams.gammaCorrection}set toneMapping(e){this.camera.shaderParams.toneMapping=e}get toneMapping(){return this.camera.shaderParams.toneMapping}set fog(e){this._camera.fogParams=e}get fog(){return this._camera.fogParams}set aperture(e){this._camera.aperture=e}get aperture(){return this._camera.aperture}set aspectRatio(e){this._camera.aspectRatio=e}get aspectRatio(){return this._camera.aspectRatio}set aspectRatioMode(e){this._camera.aspectRatioMode=e}get aspectRatioMode(){return this._camera.aspectRatioMode}set calculateProjection(e){this._camera.calculateProjection=e}get calculateProjection(){return this._camera.calculateProjection}set calculateTransform(e){this._camera.calculateTransform=e}get calculateTransform(){return this._camera.calculateTransform}get camera(){return this._camera}set clearColor(e){this._camera.clearColor=e}get clearColor(){return this._camera.clearColor}set clearColorBuffer(e){this._camera.clearColorBuffer=e,this.dirtyLayerCompositionCameras()}get clearColorBuffer(){return this._camera.clearColorBuffer}set clearDepthBuffer(e){this._camera.clearDepthBuffer=e,this.dirtyLayerCompositionCameras()}get clearDepthBuffer(){return this._camera.clearDepthBuffer}set clearStencilBuffer(e){this._camera.clearStencilBuffer=e,this.dirtyLayerCompositionCameras()}get clearStencilBuffer(){return this._camera.clearStencilBuffer}set cullFaces(e){this._camera.cullFaces=e}get cullFaces(){return this._camera.cullFaces}set disablePostEffectsLayer(e){this._disablePostEffectsLayer=e,this.dirtyLayerCompositionCameras()}get disablePostEffectsLayer(){return this._disablePostEffectsLayer}set farClip(e){this._camera.farClip=e}get farClip(){return this._camera.farClip}set flipFaces(e){this._camera.flipFaces=e}get flipFaces(){return this._camera.flipFaces}set fov(e){this._camera.fov=e}get fov(){return this._camera.fov}get frustum(){return this._camera.frustum}set frustumCulling(e){this._camera.frustumCulling=e}get frustumCulling(){return this._camera.frustumCulling}set horizontalFov(e){this._camera.horizontalFov=e}get horizontalFov(){return this._camera.horizontalFov}set layers(e){const s=this._camera.layers,i=this.system.app.scene;s.forEach(r=>{const n=i.layers.getLayerById(r);n==null||n.removeCamera(this)}),this._camera.layers=e,this.enabled&&this.entity.enabled&&e.forEach(r=>{const n=i.layers.getLayerById(r);n==null||n.addCamera(this)})}get layers(){return this._camera.layers}get layersSet(){return this._camera.layersSet}set jitter(e){this._camera.jitter=e}get jitter(){return this._camera.jitter}set nearClip(e){this._camera.nearClip=e}get nearClip(){return this._camera.nearClip}set orthoHeight(e){this._camera.orthoHeight=e}get orthoHeight(){return this._camera.orthoHeight}get postEffects(){return this._postEffects}get postEffectsEnabled(){return this._postEffects.enabled}set priority(e){this._priority=e,this.dirtyLayerCompositionCameras()}get priority(){return this._priority}set projection(e){this._camera.projection=e}get projection(){return this._camera.projection}get projectionMatrix(){return this._camera.projectionMatrix}set rect(e){this._camera.rect=e,this.fire("set:rect",this._camera.rect)}get rect(){return this._camera.rect}set renderSceneColorMap(e){e&&!this._sceneColorMapRequested?(this.requestSceneColorMap(!0),this._sceneColorMapRequested=!0):this._sceneColorMapRequested&&(this.requestSceneColorMap(!1),this._sceneColorMapRequested=!1)}get renderSceneColorMap(){return this._renderSceneColorMap>0}set renderSceneDepthMap(e){e&&!this._sceneDepthMapRequested?(this.requestSceneDepthMap(!0),this._sceneDepthMapRequested=!0):this._sceneDepthMapRequested&&(this.requestSceneDepthMap(!1),this._sceneDepthMapRequested=!1)}get renderSceneDepthMap(){return this._renderSceneDepthMap>0}set renderTarget(e){b.call(()=>{this._camera.renderPasses.length>0&&b.warn(`Setting a render target on the camera ${this.entity.name} after the render passes is not supported, set it up first.`)}),this._camera.renderTarget=e,this.dirtyLayerCompositionCameras()}get renderTarget(){return this._camera.renderTarget}set scissorRect(e){this._camera.scissorRect=e}get scissorRect(){return this._camera.scissorRect}set sensitivity(e){this._camera.sensitivity=e}get sensitivity(){return this._camera.sensitivity}set shutter(e){this._camera.shutter=e}get shutter(){return this._camera.shutter}get viewMatrix(){return this._camera.viewMatrix}_enableDepthLayer(e){if(this.layers.find(i=>i===es)){const i=this.system.app.scene.layers.getLayerById(es);e?i==null||i.incrementCounter():i==null||i.decrementCounter()}else if(e)return!1;return!0}requestSceneColorMap(e){this._renderSceneColorMap+=e?1:-1,b.assert(this._renderSceneColorMap>=0),this._enableDepthLayer(e)||b.warnOnce("CameraComponent.requestSceneColorMap was called, but the camera does not have a Depth layer, ignoring."),this.camera._enableRenderPassColorGrab(this.system.app.graphicsDevice,this.renderSceneColorMap)}requestSceneDepthMap(e){this._renderSceneDepthMap+=e?1:-1,b.assert(this._renderSceneDepthMap>=0),this._enableDepthLayer(e)||b.warnOnce("CameraComponent.requestSceneDepthMap was called, but the camera does not have a Depth layer, ignoring."),this.camera._enableRenderPassDepthGrab(this.system.app.graphicsDevice,this.system.app.renderer,this.renderSceneDepthMap)}dirtyLayerCompositionCameras(){const e=this.system.app.scene.layers;e._dirty=!0}screenToWorld(e,s,i,r){const n=this.system.app.graphicsDevice,{width:a,height:o}=n.clientRect;return this._camera.screenToWorld(e,s,i,a,o,r)}worldToScreen(e,s){const i=this.system.app.graphicsDevice,{width:r,height:n}=i.clientRect;return this._camera.worldToScreen(e,r,n,s)}onAppPrerender(){this._camera._viewMatDirty=!0,this._camera._viewProjMatDirty=!0}addCameraToLayers(){const e=this.layers;for(let s=0;s<e.length;s++){const i=this.system.app.scene.layers.getLayerById(e[s]);i&&i.addCamera(this)}}removeCameraFromLayers(){const e=this.layers;for(let s=0;s<e.length;s++){const i=this.system.app.scene.layers.getLayerById(e[s]);i&&i.removeCamera(this)}}onLayersChanged(e,s){this.addCameraToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),s.on("add",this.onLayerAdded,this),s.on("remove",this.onLayerRemoved,this)}onLayerAdded(e){this.layers.indexOf(e.id)<0||e.addCamera(this)}onLayerRemoved(e){this.layers.indexOf(e.id)<0||e.removeCamera(this)}onEnable(){var i,r,n;const e=this.system.app.scene,s=e.layers;this.system.addCamera(this),(i=this._evtLayersChanged)==null||i.off(),this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this),s&&((r=this._evtLayerAdded)==null||r.off(),this._evtLayerAdded=s.on("add",this.onLayerAdded,this),(n=this._evtLayerRemoved)==null||n.off(),this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&this.addCameraToLayers(),this.postEffects.enable()}onDisable(){var i,r,n;const s=this.system.app.scene.layers;this.postEffects.disable(),this.removeCameraFromLayers(),(i=this._evtLayersChanged)==null||i.off(),this._evtLayersChanged=null,s&&((r=this._evtLayerAdded)==null||r.off(),this._evtLayerAdded=null,(n=this._evtLayerRemoved)==null||n.off(),this._evtLayerRemoved=null),this.system.removeCamera(this)}onRemove(){this.onDisable(),this.off(),this.camera.destroy()}calculateAspectRatio(e){const s=this.system.app.graphicsDevice,i=e?e.width:s.width,r=e?e.height:s.height;return i*this.rect.z/(r*this.rect.w)}frameUpdate(e){this.aspectRatioMode===kp&&(this.aspectRatio=this.calculateAspectRatio(e))}startXr(e,s,i){this.system.app.xr.start(this,e,s,i)}endXr(e){if(!this._camera.xr){e&&e(new Error("Camera is not in XR"));return}this._camera.xr.end(e)}copy(e){this.aperture=e.aperture,this.aspectRatio=e.aspectRatio,this.aspectRatioMode=e.aspectRatioMode,this.calculateProjection=e.calculateProjection,this.calculateTransform=e.calculateTransform,this.clearColor=e.clearColor,this.clearColorBuffer=e.clearColorBuffer,this.clearDepthBuffer=e.clearDepthBuffer,this.clearStencilBuffer=e.clearStencilBuffer,this.cullFaces=e.cullFaces,this.disablePostEffectsLayer=e.disablePostEffectsLayer,this.farClip=e.farClip,this.flipFaces=e.flipFaces,this.fov=e.fov,this.frustumCulling=e.frustumCulling,this.horizontalFov=e.horizontalFov,this.layers=e.layers,this.nearClip=e.nearClip,this.orthoHeight=e.orthoHeight,this.priority=e.priority,this.projection=e.projection,this.rect=e.rect,this.renderTarget=e.renderTarget,this.scissorRect=e.scissorRect,this.sensitivity=e.sensitivity,this.shutter=e.shutter}}class jI{constructor(){this.enabled=!0}}const Tx=["enabled"];class YI extends Qe{constructor(e){super(e);c(this,"cameras",[]);this.id="camera",this.ComponentType=wx,this.DataType=jI,this.schema=Tx,this.on("beforeremove",this.onBeforeRemove,this),this.app.on("prerender",this.onAppPrerender,this)}initializeComponentData(e,s,i){i=["aspectRatio","aspectRatioMode","calculateProjection","calculateTransform","clearColor","clearColorBuffer","clearDepthBuffer","clearStencilBuffer","renderSceneColorMap","renderSceneDepthMap","cullFaces","farClip","flipFaces","fov","frustumCulling","horizontalFov","layers","renderTarget","nearClip","orthoHeight","projection","priority","rect","scissorRect","aperture","shutter","sensitivity","gammaCorrection","toneMapping"];for(let r=0;r<i.length;r++){const n=i[r];if(s.hasOwnProperty(n)){const a=s[n];switch(n){case"rect":case"scissorRect":Array.isArray(a)?e[n]=new ee(a[0],a[1],a[2],a[3]):e[n]=a;break;case"clearColor":Array.isArray(a)?e[n]=new Y(a[0],a[1],a[2],a[3]):e[n]=a;break;default:e[n]=a;break}}}super.initializeComponentData(e,s,["enabled"])}cloneComponent(e,s){const i=e.camera;return this.addComponent(s,{aspectRatio:i.aspectRatio,aspectRatioMode:i.aspectRatioMode,calculateProjection:i.calculateProjection,calculateTransform:i.calculateTransform,clearColor:i.clearColor,clearColorBuffer:i.clearColorBuffer,clearDepthBuffer:i.clearDepthBuffer,clearStencilBuffer:i.clearStencilBuffer,renderSceneDepthMap:i.renderSceneDepthMap,renderSceneColorMap:i.renderSceneColorMap,cullFaces:i.cullFaces,enabled:i.enabled,farClip:i.farClip,flipFaces:i.flipFaces,fov:i.fov,frustumCulling:i.frustumCulling,horizontalFov:i.horizontalFov,layers:i.layers,renderTarget:i.renderTarget,nearClip:i.nearClip,orthoHeight:i.orthoHeight,projection:i.projection,priority:i.priority,rect:i.rect,scissorRect:i.scissorRect,aperture:i.aperture,sensitivity:i.sensitivity,shutter:i.shutter,gammaCorrection:i.gammaCorrection,toneMapping:i.toneMapping})}onBeforeRemove(e,s){this.removeCamera(s),s.onRemove()}onAppPrerender(){for(let e=0,s=this.cameras.length;e<s;e++)this.cameras[e].onAppPrerender()}addCamera(e){this.cameras.push(e),Go(this.cameras)}removeCamera(e){const s=this.cameras.indexOf(e);s>=0&&(this.cameras.splice(s,1),Go(this.cameras))}destroy(){this.app.off("prerender",this.onAppPrerender,this),super.destroy()}}pe._buildAccessors(wx.prototype,Tx);class Ax{constructor(){c(this,"enabled",!0);c(this,"light");c(this,"type","directional");c(this,"color",new Y(1,1,1));c(this,"intensity",1);c(this,"luminance",0);c(this,"shape",Tt);c(this,"affectSpecularity",!0);c(this,"castShadows",!1);c(this,"shadowDistance",40);c(this,"shadowIntensity",1);c(this,"shadowResolution",1024);c(this,"shadowBias",.05);c(this,"numCascades",1);c(this,"cascadeBlend",0);c(this,"bakeNumSamples",1);c(this,"bakeArea",0);c(this,"cascadeDistribution",.5);c(this,"normalOffsetBias",0);c(this,"range",10);c(this,"innerConeAngle",40);c(this,"outerConeAngle",45);c(this,"falloffMode",Cp);c(this,"shadowType",zt);c(this,"vsmBlurSize",11);c(this,"vsmBlurMode",Mp);c(this,"vsmBias",.01*.25);c(this,"cookieAsset",null);c(this,"cookie",null);c(this,"cookieIntensity",1);c(this,"cookieFalloff",!0);c(this,"cookieChannel","rgb");c(this,"cookieAngle",0);c(this,"cookieScale",null);c(this,"cookieOffset",null);c(this,"shadowUpdateMode",Lp);c(this,"mask",1);c(this,"affectDynamic",!0);c(this,"affectLightmapped",!1);c(this,"bake",!1);c(this,"bakeDir",!0);c(this,"isStatic",!1);c(this,"layers",[zi]);c(this,"penumbraSize",1);c(this,"penumbraFalloff",1);c(this,"shadowSamples",16);c(this,"shadowBlockerSamples",16)}}const Mo=Object.keys(new Ax);class KI extends pe{constructor(){super(...arguments);c(this,"_evtLayersChanged",null);c(this,"_evtLayerAdded",null);c(this,"_evtLayerRemoved",null);c(this,"_cookieAsset",null);c(this,"_cookieAssetId",null);c(this,"_cookieAssetAdd",!1);c(this,"_cookieMatrix",null)}get data(){const e=this.system.store[this.entity.getGuid()];return e?e.data:null}set enabled(e){this._setValue("enabled",e,function(s,i){this.onSetEnabled(null,i,s)})}get enabled(){return this.data.enabled}set light(e){this._setValue("light",e)}get light(){return this.data.light}set type(e){this._setValue("type",e,function(s,i){this.system.changeType(this,i,s),this.refreshProperties()})}get type(){return this.data.type}set color(e){this._setValue("color",e,function(s,i){this.light.setColor(s)},!0)}get color(){return this.data.color}set intensity(e){this._setValue("intensity",e,function(s,i){this.light.intensity=s})}get intensity(){return this.data.intensity}set luminance(e){this._setValue("luminance",e,function(s,i){this.light.luminance=s})}get luminance(){return this.data.luminance}set shape(e){this._setValue("shape",e,function(s,i){this.light.shape=s})}get shape(){return this.data.shape}set affectSpecularity(e){this._setValue("affectSpecularity",e,function(s,i){this.light.affectSpecularity=s})}get affectSpecularity(){return this.data.affectSpecularity}set castShadows(e){this._setValue("castShadows",e,function(s,i){this.light.castShadows=s})}get castShadows(){return this.data.castShadows}set shadowDistance(e){this._setValue("shadowDistance",e,function(s,i){this.light.shadowDistance=s})}get shadowDistance(){return this.data.shadowDistance}set shadowIntensity(e){this._setValue("shadowIntensity",e,function(s,i){this.light.shadowIntensity=s})}get shadowIntensity(){return this.data.shadowIntensity}set shadowResolution(e){this._setValue("shadowResolution",e,function(s,i){this.light.shadowResolution=s})}get shadowResolution(){return this.data.shadowResolution}set shadowBias(e){this._setValue("shadowBias",e,function(s,i){this.light.shadowBias=-.01*z.clamp(s,0,1)})}get shadowBias(){return this.data.shadowBias}set numCascades(e){this._setValue("numCascades",e,function(s,i){this.light.numCascades=z.clamp(Math.floor(s),1,4)})}get numCascades(){return this.data.numCascades}set cascadeBlend(e){this._setValue("cascadeBlend",e,function(s,i){this.light.cascadeBlend=z.clamp(s,0,1)})}get cascadeBlend(){return this.data.cascadeBlend}set bakeNumSamples(e){this._setValue("bakeNumSamples",e,function(s,i){this.light.bakeNumSamples=z.clamp(Math.floor(s),1,255)})}get bakeNumSamples(){return this.data.bakeNumSamples}set bakeArea(e){this._setValue("bakeArea",e,function(s,i){this.light.bakeArea=z.clamp(s,0,180)})}get bakeArea(){return this.data.bakeArea}set cascadeDistribution(e){this._setValue("cascadeDistribution",e,function(s,i){this.light.cascadeDistribution=z.clamp(s,0,1)})}get cascadeDistribution(){return this.data.cascadeDistribution}set normalOffsetBias(e){this._setValue("normalOffsetBias",e,function(s,i){this.light.normalOffsetBias=z.clamp(s,0,1)})}get normalOffsetBias(){return this.data.normalOffsetBias}set range(e){this._setValue("range",e,function(s,i){this.light.attenuationEnd=s})}get range(){return this.data.range}set innerConeAngle(e){this._setValue("innerConeAngle",e,function(s,i){this.light.innerConeAngle=s})}get innerConeAngle(){return this.data.innerConeAngle}set outerConeAngle(e){this._setValue("outerConeAngle",e,function(s,i){this.light.outerConeAngle=s})}get outerConeAngle(){return this.data.outerConeAngle}set falloffMode(e){this._setValue("falloffMode",e,function(s,i){this.light.falloffMode=s})}get falloffMode(){return this.data.falloffMode}set shadowType(e){this._setValue("shadowType",e,function(s,i){this.light.shadowType=s})}get shadowType(){return this.data.shadowType}set vsmBlurSize(e){this._setValue("vsmBlurSize",e,function(s,i){this.light.vsmBlurSize=s})}get vsmBlurSize(){return this.data.vsmBlurSize}set vsmBlurMode(e){this._setValue("vsmBlurMode",e,function(s,i){this.light.vsmBlurMode=s})}get vsmBlurMode(){return this.data.vsmBlurMode}set vsmBias(e){this._setValue("vsmBias",e,function(s,i){this.light.vsmBias=z.clamp(s,0,1)})}get vsmBias(){return this.data.vsmBias}set cookieAsset(e){this._setValue("cookieAsset",e,function(s,i){if(!(this._cookieAssetId&&(s instanceof he&&s.id===this._cookieAssetId||s===this._cookieAssetId))){if(this.onCookieAssetRemove(),this._cookieAssetId=null,s instanceof he)this.data.cookieAsset=s.id,this._cookieAssetId=s.id,this.onCookieAssetAdd(s);else if(typeof s=="number"){this._cookieAssetId=s;const r=this.system.app.assets.get(s);r?this.onCookieAssetAdd(r):(this._cookieAssetAdd=!0,this.system.app.assets.on(`add:${this._cookieAssetId}`,this.onCookieAssetAdd,this))}}})}get cookieAsset(){return this.data.cookieAsset}set cookie(e){this._setValue("cookie",e,function(s,i){this.light.cookie=s})}get cookie(){return this.data.cookie}set cookieIntensity(e){this._setValue("cookieIntensity",e,function(s,i){this.light.cookieIntensity=z.clamp(s,0,1)})}get cookieIntensity(){return this.data.cookieIntensity}set cookieFalloff(e){this._setValue("cookieFalloff",e,function(s,i){this.light.cookieFalloff=s})}get cookieFalloff(){return this.data.cookieFalloff}set cookieChannel(e){this._setValue("cookieChannel",e,function(s,i){this.light.cookieChannel=s})}get cookieChannel(){return this.data.cookieChannel}set cookieAngle(e){this._setValue("cookieAngle",e,function(s,i){if(s!==0||this.cookieScale!==null){this._cookieMatrix||(this._cookieMatrix=new ee);let r=1,n=1;this.cookieScale&&(r=this.cookieScale.x,n=this.cookieScale.y);const a=Math.cos(s*z.DEG_TO_RAD),o=Math.sin(s*z.DEG_TO_RAD);this._cookieMatrix.set(a/r,-o/r,o/n,a/n),this.light.cookieTransform=this._cookieMatrix}else this.light.cookieTransform=null})}get cookieAngle(){return this.data.cookieAngle}set cookieScale(e){this._setValue("cookieScale",e,function(s,i){if(s!==null||this.cookieAngle!==0){this._cookieMatrix||(this._cookieMatrix=new ee);const r=s.x,n=s.y,a=Math.cos(this.cookieAngle*z.DEG_TO_RAD),o=Math.sin(this.cookieAngle*z.DEG_TO_RAD);this._cookieMatrix.set(a/r,-o/r,o/n,a/n),this.light.cookieTransform=this._cookieMatrix}else this.light.cookieTransform=null},!0)}get cookieScale(){return this.data.cookieScale}set cookieOffset(e){this._setValue("cookieOffset",e,function(s,i){this.light.cookieOffset=s},!0)}get cookieOffset(){return this.data.cookieOffset}set shadowUpdateMode(e){this._setValue("shadowUpdateMode",e,function(s,i){this.light.shadowUpdateMode=s},!0)}get shadowUpdateMode(){return this.data.shadowUpdateMode}set mask(e){this._setValue("mask",e,function(s,i){this.light.mask=s})}get mask(){return this.data.mask}set affectDynamic(e){this._setValue("affectDynamic",e,function(s,i){s?this.light.mask|=ms:this.light.mask&=-2,this.light.layersDirty()})}get affectDynamic(){return this.data.affectDynamic}set affectLightmapped(e){this._setValue("affectLightmapped",e,function(s,i){s?(this.light.mask|=dr,this.bake&&(this.light.mask&=-5)):(this.light.mask&=-3,this.bake&&(this.light.mask|=ar))})}get affectLightmapped(){return this.data.affectLightmapped}set bake(e){this._setValue("bake",e,function(s,i){s?(this.light.mask|=ar,this.affectLightmapped&&(this.light.mask&=-3)):(this.light.mask&=-5,this.affectLightmapped&&(this.light.mask|=dr)),this.light.layersDirty()})}get bake(){return this.data.bake}set bakeDir(e){this._setValue("bakeDir",e,function(s,i){this.light.bakeDir=s})}get bakeDir(){return this.data.bakeDir}set isStatic(e){this._setValue("isStatic",e,function(s,i){this.light.isStatic=s})}get isStatic(){return this.data.isStatic}set layers(e){this._setValue("layers",e,function(s,i){for(let r=0;r<i.length;r++){const n=this.system.app.scene.layers.getLayerById(i[r]);n&&(n.removeLight(this),this.light.removeLayer(n))}for(let r=0;r<s.length;r++){const n=this.system.app.scene.layers.getLayerById(s[r]);n&&this.enabled&&this.entity.enabled&&(n.addLight(this),this.light.addLayer(n))}})}get layers(){return this.data.layers}set shadowUpdateOverrides(e){this.light.shadowUpdateOverrides=e}get shadowUpdateOverrides(){return this.light.shadowUpdateOverrides}set shadowSamples(e){this.light.shadowSamples=e}get shadowSamples(){return this.light.shadowSamples}set shadowBlockerSamples(e){this.light.shadowBlockerSamples=e}get shadowBlockerSamples(){return this.light.shadowBlockerSamples}set penumbraSize(e){this.light.penumbraSize=e}get penumbraSize(){return this.light.penumbraSize}set penumbraFalloff(e){this.light.penumbraFalloff=e}get penumbraFalloff(){return this.light.penumbraFalloff}_setValue(e,s,i,r){const n=this.data,a=n[e];!r&&a===s||(n[e]=s,i&&i.call(this,s,a))}addLightToLayers(){for(let e=0;e<this.layers.length;e++){const s=this.system.app.scene.layers.getLayerById(this.layers[e]);s&&(s.addLight(this),this.light.addLayer(s))}}removeLightFromLayers(){for(let e=0;e<this.layers.length;e++){const s=this.system.app.scene.layers.getLayerById(this.layers[e]);s&&(s.removeLight(this),this.light.removeLayer(s))}}onLayersChanged(e,s){this.enabled&&this.entity.enabled&&this.addLightToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),s.on("add",this.onLayerAdded,this),s.on("remove",this.onLayerRemoved,this)}onLayerAdded(e){this.layers.indexOf(e.id)>=0&&this.enabled&&this.entity.enabled&&(e.addLight(this),this.light.addLayer(e))}onLayerRemoved(e){this.layers.indexOf(e.id)>=0&&(e.removeLight(this),this.light.removeLayer(e))}refreshProperties(){for(let e=0;e<Mo.length;e++){const s=Mo[e];this[s]=this[s]}this.enabled&&this.entity.enabled&&this.onEnable()}onCookieAssetSet(){let e=!1;this._cookieAsset.type==="cubemap"&&!this._cookieAsset.loadFaces&&(this._cookieAsset.loadFaces=!0,e=!0),(!this._cookieAsset.resource||e)&&this.system.app.assets.load(this._cookieAsset),this._cookieAsset.resource&&this.onCookieAssetLoad()}onCookieAssetAdd(e){this._cookieAssetId===e.id&&(this._cookieAsset=e,this.light.enabled&&this.onCookieAssetSet(),this._cookieAsset.on("load",this.onCookieAssetLoad,this),this._cookieAsset.on("remove",this.onCookieAssetRemove,this))}onCookieAssetLoad(){!this._cookieAsset||!this._cookieAsset.resource||(this.cookie=this._cookieAsset.resource)}onCookieAssetRemove(){this._cookieAssetId&&(this._cookieAssetAdd&&(this.system.app.assets.off(`add:${this._cookieAssetId}`,this.onCookieAssetAdd,this),this._cookieAssetAdd=!1),this._cookieAsset&&(this._cookieAsset.off("load",this.onCookieAssetLoad,this),this._cookieAsset.off("remove",this.onCookieAssetRemove,this),this._cookieAsset=null),this.cookie=null)}onEnable(){const e=this.system.app.scene,s=e.layers;this.light.enabled=!0,this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this),s&&(this._evtLayerAdded=s.on("add",this.onLayerAdded,this),this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&this.addLightToLayers(),this._cookieAsset&&!this.cookie&&this.onCookieAssetSet()}onDisable(){var i,r,n;const s=this.system.app.scene.layers;this.light.enabled=!1,(i=this._evtLayersChanged)==null||i.off(),this._evtLayersChanged=null,s&&((r=this._evtLayerAdded)==null||r.off(),this._evtLayerAdded=null,(n=this._evtLayerRemoved)==null||n.off(),this._evtLayerRemoved=null),this.removeLightFromLayers()}onRemove(){this.onDisable(),this.light.destroy(),this.cookieAsset=null}}class ZI extends Qe{constructor(t){super(t),this.id="light",this.ComponentType=KI,this.DataType=Ax,this.on("beforeremove",this._onRemoveComponent,this)}initializeComponentData(t,e){const s={...e};s.type||(s.type=t.data.type),t.data.type=s.type,s.layers&&Array.isArray(s.layers)&&(s.layers=s.layers.slice(0)),s.color&&Array.isArray(s.color)&&(s.color=new Y(s.color[0],s.color[1],s.color[2])),s.cookieOffset&&s.cookieOffset instanceof Array&&(s.cookieOffset=new W(s.cookieOffset[0],s.cookieOffset[1])),s.cookieScale&&s.cookieScale instanceof Array&&(s.cookieScale=new W(s.cookieScale[0],s.cookieScale[1])),s.enable&&(console.warn("WARNING: enable: Property is deprecated. Set enabled property instead."),s.enabled=s.enable),s.shape||(s.shape=Tt);const i=new Ho(this.app.graphicsDevice,this.app.scene.clusteredLightingEnabled);i.type=qu[s.type],i._node=t.entity,t.data.light=i,super.initializeComponentData(t,s,Mo)}_onRemoveComponent(t,e){e.onRemove()}cloneComponent(t,e){const s=t.light,i=[];let r;for(let n=0;n<Mo.length;n++)r=Mo[n],r!=="light"&&(s[r]&&s[r].clone?i[r]=s[r].clone():i[r]=s[r]);return this.addComponent(e,i)}changeType(t,e,s){e!==s&&(t.light.type=qu[s])}}const QI=["x","y","z","w"],JI=[void 0,void 0,W,A,ee];function Oa(l,t,e,s){switch(t.type){case"boolean":return!!e;case"number":if(typeof e=="number")return e;if(typeof e=="string"){const i=parseInt(e,10);return isNaN(i)?null:i}else if(typeof e=="boolean")return 0+e;return null;case"json":{const i={};if(Array.isArray(t.schema)){(!e||typeof e!="object")&&(e={});for(let r=0;r<t.schema.length;r++){const n=t.schema[r];if(n.name)if(n.array){i[n.name]=[];const a=Array.isArray(e[n.name])?e[n.name]:[];for(let o=0;o<a.length;o++)i[n.name].push(Oa(l,n,a[o]))}else{const a=e.hasOwnProperty(n.name)?e[n.name]:n.default;i[n.name]=Oa(l,n,a)}}}return i}case"asset":return e instanceof he?e:typeof e=="number"?l.assets.get(e)||null:typeof e=="string"&&l.assets.get(parseInt(e,10))||null;case"entity":return e instanceof Oe?e:typeof e=="string"?l.getEntityFromIndex(e):null;case"rgb":case"rgba":if(e instanceof Y)return s instanceof Y?(s.copy(e),s):e.clone();if(e instanceof Array&&e.length>=3&&e.length<=4){for(let i=0;i<e.length;i++)if(typeof e[i]!="number")return null;return s||(s=new Y),s.r=e[0],s.g=e[1],s.b=e[2],s.a=e.length===3?1:e[3],s}else if(typeof e=="string"&&/#(?:[0-9a-f]{2}){3,4}/i.test(e))return s||(s=new Y),s.fromString(e),s;return null;case"vec2":case"vec3":case"vec4":{const i=parseInt(t.type.slice(3),10),r=JI[i];if(e instanceof r)return s instanceof r?(s.copy(e),s):e.clone();if(e instanceof Array&&e.length===i){for(let n=0;n<e.length;n++)if(typeof e[n]!="number")return null;s||(s=new r);for(let n=0;n<i;n++)s[QI[n]]=e[n];return s}return null}case"curve":if(e){let i;if(e instanceof Ls||e instanceof Yr)i=e.clone();else{const r=e.keys[0]instanceof Array?Yr:Ls;i=new r(e.keys),i.type=e.type}return i}break}return e}function Ex(l,t,e,s){return t.array?e.map((i,r)=>Oa(l,t,i,s?s[r]:null)):Oa(l,t,e,s)}function Cx(l,t,e,s){if(e)for(const i in t){const r=t[i],n=e[i];n!==void 0&&(s[i]=Ex(l,r,n,s[i]))}}const ha=class ha{constructor(t){this.scriptType=t,this.index={}}add(t,e){if(this.index[t]){b.warn(`attribute '${t}' is already defined for script type '${this.scriptType.name}'`);return}else if(ha.reservedNames.has(t)){b.warn(`attribute '${t}' is a reserved attribute name`);return}this.index[t]=e,Object.defineProperty(this.scriptType.prototype,t,{get:function(){return this.__attributes[t]},set:function(s){const i="attr",r=`attr:${t}`,n=this.__attributes[t];let a=n;if(n&&e.type!=="json"&&e.type!=="entity"&&n.clone&&(this.hasEvent(i)||this.hasEvent(r))&&(a=n.clone()),e.array){if(this.__attributes[t]=[],s)for(let o=0,h=s.length;o<h;o++)this.__attributes[t].push(Oa(this.app,e,s[o],n?n[o]:null))}else this.__attributes[t]=Oa(this.app,e,s,n);this.fire(i,t,this.__attributes[t],a),this.fire(r,this.__attributes[t],a)}})}remove(t){return this.index[t]?(delete this.index[t],delete this.scriptType.prototype[t],!0):!1}has(t){return!!this.index[t]}get(t){return this.index[t]||null}};c(ha,"assignAttributesToScript",Cx),c(ha,"attributeToValue",Ex),c(ha,"reservedNames",new Set(["app","entity","enabled","_enabled","_enabledOld","_destroyed","__attributes","__attributesRaw","__scriptType","__executionOrder","_callbacks","_callbackActive","has","get","on","off","fire","once","hasEvent"]));let Xo=ha;const Sf="initialize",vf="postInitialize",eD="update",tD="postUpdate",sD="swap";class Zt extends de{constructor(e){super();c(this,"app");c(this,"entity");c(this,"_enabled");c(this,"_enabledOld");c(this,"_initialized");c(this,"_postInitialized");c(this,"__destroyed");c(this,"__scriptType");c(this,"__executionOrder");this.initScript(e)}set enabled(e){this._enabled=!!e,this.enabled!==this._enabledOld&&(this._enabledOld=this.enabled,this.fire(this.enabled?"enable":"disable"),this.fire("state",this.enabled),!this._initialized&&this.enabled&&(this._initialized=!0,this.fire("preInitialize"),this.initialize&&this.entity.script._scriptMethod(this,Sf)),this._initialized&&!this._postInitialized&&this.enabled&&!this.entity.script._beingEnabled&&(this._postInitialized=!0,this.postInitialize&&this.entity.script._scriptMethod(this,vf)))}get enabled(){return this._enabled&&!this._destroyed&&this.entity.script.enabled&&this.entity.enabled}initScript(e){const s=this.constructor;b.assert(e&&e.app&&e.entity,`script [${s.__name}] has missing arguments in constructor`),this.app=e.app,this.entity=e.entity,this._enabled=typeof e.enabled=="boolean"?e.enabled:!0,this._enabledOld=this.enabled,this.__destroyed=!1,this.__scriptType=s,this.__executionOrder=-1}static get scriptName(){return this.__name}}c(Zt,"EVENT_ENABLE","enable"),c(Zt,"EVENT_DISABLE","disable"),c(Zt,"EVENT_STATE","state"),c(Zt,"EVENT_DESTROY","destroy"),c(Zt,"EVENT_ATTR","attr"),c(Zt,"EVENT_ERROR","error"),c(Zt,"__name",null),c(Zt,"__getScriptName",Mx);const iD=/^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s\/]*)\s*/;function Mx(l){if(typeof l!="function")return;if("name"in Function.prototype)return l.name;if(l===Function||l===Function.prototype.constructor)return"Function";const t=`${l}`.match(iD);return t?t[1]:void 0}class ic extends Zt{constructor(e){super(e);c(this,"__attributes");c(this,"__attributesRaw");this.initScriptType(e)}static get attributes(){return this.hasOwnProperty("__attributes")||(this.__attributes=new Xo(this)),this.__attributes}initScript(e){Zt.prototype.initScript.call(this,e),this.__attributes={},this.__attributesRaw=e.attributes||{}}initScriptType(e){this.initScript(e)}__initializeAttributes(e){if(!(!e&&!this.__attributesRaw)){for(const s in this.__scriptType.attributes.index)this.__attributesRaw&&this.__attributesRaw.hasOwnProperty(s)?this[s]=this.__attributesRaw[s]:this.__attributes.hasOwnProperty(s)||(this.__scriptType.attributes.index[s].hasOwnProperty("default")?this[s]=this.__scriptType.attributes.index[s].default:this[s]=null);this.__attributesRaw=null}}static extend(e){for(const s in e)e.hasOwnProperty(s)&&(this.prototype[s]=e[s])}}const rD=l=>l[0].toLowerCase()+l.substring(1);class _i extends pe{constructor(e,s){super(e,s);c(this,"_attributeDataMap",new Map);this._scripts=[],this._updateList=new Mh({sortBy:"__executionOrder"}),this._postUpdateList=new Mh({sortBy:"__executionOrder"}),this._scriptsIndex={},this._destroyedScripts=[],this._destroyed=!1,this._scriptsData=null,this._oldState=!0,this._enabled=!0,this._beingEnabled=!1,this._isLoopingThroughScripts=!1,this._executionOrder=-1,this.on("set_enabled",this._onSetEnabled,this)}set scripts(e){this._scriptsData=e;for(const s in e){if(!e.hasOwnProperty(s))continue;const i=this._scriptsIndex[s];if(i){if(typeof e[s].enabled=="boolean"&&(i.once("preInitialize",()=>{this.initializeAttributes(i)}),i.enabled=!!e[s].enabled),typeof e[s].attributes=="object"){for(const r in e[s].attributes)if(!Xo.reservedNames.has(r)){if(!i.__attributes.hasOwnProperty(r)){const n=this.system.app.scripts.get(s);n&&n.attributes.add(r,{})}i[r]=e[s].attributes[r]}}}else console.log(this.order)}}get scripts(){return this._scripts}set enabled(e){const s=this._enabled;this._enabled=e,this.fire("set","enabled",s,e)}get enabled(){return this._enabled}onEnable(){this._beingEnabled=!0,this._checkState(),this.entity._beingEnabled||this.onPostStateChange(),this._beingEnabled=!1}onDisable(){this._checkState()}onPostStateChange(){const e=this._beginLooping();for(let s=0,i=this.scripts.length;s<i;s++){const r=this.scripts[s];r._initialized&&!r._postInitialized&&r.enabled&&(r._postInitialized=!0,r.postInitialize&&this._scriptMethod(r,vf))}this._endLooping(e)}_beginLooping(){const e=this._isLoopingThroughScripts;return this._isLoopingThroughScripts=!0,e}_endLooping(e){this._isLoopingThroughScripts=e,this._isLoopingThroughScripts||this._removeDestroyedScripts()}_onSetEnabled(e,s,i){this._beingEnabled=!0,this._checkState(),this._beingEnabled=!1}_checkState(){const e=this.enabled&&this.entity.enabled;if(e===this._oldState)return;this._oldState=e,this.fire(e?"enable":"disable"),this.fire("state",e),e?this.system._addComponentToEnabled(this):this.system._removeComponentFromEnabled(this);const s=this._beginLooping();for(let i=0,r=this.scripts.length;i<r;i++){const n=this.scripts[i];n.once("preInitialize",()=>{this.initializeAttributes(n)}),n.enabled=n._enabled}this._endLooping(s)}_onBeforeRemove(){this.fire("remove");const e=this._beginLooping();for(let s=0;s<this.scripts.length;s++){const i=this.scripts[s];i&&this.destroy(i.__scriptType.__name)}this._endLooping(e)}_removeDestroyedScripts(){const e=this._destroyedScripts.length;if(e){for(let s=0;s<e;s++){const i=this._destroyedScripts[s];this._removeScriptInstance(i)}this._destroyedScripts.length=0,this._resetExecutionOrder(0,this._scripts.length)}}_onInitializeAttributes(){for(let e=0,s=this.scripts.length;e<s;e++){const i=this.scripts[e];this.initializeAttributes(i)}}initializeAttributes(e){var s;if(e instanceof ic)e.__initializeAttributes();else{const i=e.__scriptType.__name,r=this._attributeDataMap.get(i);if(!r)return;const n=(s=this.system.app.scripts)==null?void 0:s.getSchema(i);n||b.warnOnce(`No schema exists for the script '${i}'. A schema must exist for data to be instantiated on the script.`),Cx(this.system.app,n.attributes,r,e)}}_scriptMethod(e,s,i){try{e[s](i)}catch(r){e.enabled=!1,e.hasEvent("error")||(console.warn(`unhandled exception while calling "${s}" for "${e.__scriptType.__name}" script: `,r),console.error(r)),e.fire("error",r,s),this.fire("error",e,r,s)}}_onInitialize(){const e=this._scripts,s=this._beginLooping();for(let i=0,r=e.length;i<r;i++){const n=e[i];!n._initialized&&n.enabled&&(n._initialized=!0,n.initialize&&this._scriptMethod(n,Sf))}this._endLooping(s)}_onPostInitialize(){this.onPostStateChange()}_onUpdate(e){const s=this._updateList;if(!s.length)return;const i=this._beginLooping();for(s.loopIndex=0;s.loopIndex<s.length;s.loopIndex++){const r=s.items[s.loopIndex];r.enabled&&this._scriptMethod(r,eD,e)}this._endLooping(i)}_onPostUpdate(e){const s=this._postUpdateList;if(!s.length)return;const i=this._beginLooping();for(s.loopIndex=0;s.loopIndex<s.length;s.loopIndex++){const r=s.items[s.loopIndex];r.enabled&&this._scriptMethod(r,tD,e)}this._endLooping(i)}_insertScriptInstance(e,s,i){s===-1?(this._scripts.push(e),e.__executionOrder=i,e.update&&this._updateList.append(e),e.postUpdate&&this._postUpdateList.append(e)):(this._scripts.splice(s,0,e),e.__executionOrder=s,this._resetExecutionOrder(s+1,i+1),e.update&&this._updateList.insert(e),e.postUpdate&&this._postUpdateList.insert(e))}_removeScriptInstance(e){const s=this._scripts.indexOf(e);return s===-1||(this._scripts.splice(s,1),e.update&&this._updateList.remove(e),e.postUpdate&&this._postUpdateList.remove(e)),s}_resetExecutionOrder(e,s){for(let i=e;i<s;i++)this._scripts[i].__executionOrder=i}_resolveEntityScriptAttribute(e,s,i,r,n,a){if(e.array){const o=i.length;if(!o)return;const h=i.slice();for(let d=0;d<o;d++){const u=h[d]instanceof je?h[d].getGuid():h[d];a[u]&&(h[d]=r?a[u].getGuid():a[u])}n[s]=h}else{if(i instanceof je)i=i.getGuid();else if(typeof i!="string")return;a[i]&&(n[s]=a[i])}}has(e){if(typeof e=="string")return!!this._scriptsIndex[e];if(!e)return!1;const s=e,i=s.__name,r=this._scriptsIndex[i];return(r&&r.instance)instanceof s}get(e){if(typeof e=="string"){const a=this._scriptsIndex[e];return a?a.instance:null}if(!e)return null;const s=e,i=s.__name,r=this._scriptsIndex[i],n=r&&r.instance;return n instanceof s?n:null}create(e,s={}){const i=this;let r=e,n=e;if(typeof r=="string"?r=this.system.app.scripts.get(r):r&&(n=r.__name??(r.__name=rD(Mx(r)))),r){if(!this._scriptsIndex[n]||!this._scriptsIndex[n].instance){const a=new r({app:this.system.app,entity:this.entity,enabled:s.hasOwnProperty("enabled")?s.enabled:!0,attributes:s.attributes||{}});s.properties&&typeof s.properties=="object"&&Object.assign(a,s.properties),a instanceof ic||this._attributeDataMap.set(n,s.attributes);const o=this._scripts.length;let h=-1;return typeof s.ind=="number"&&s.ind!==-1&&o>s.ind&&(h=s.ind),this._insertScriptInstance(a,h,o),this._scriptsIndex[n]={instance:a,onSwap:function(){i.swap(n)}},this[n]=a,s.preloading||this.initializeAttributes(a),this.fire("create",n,a),this.fire(`create:${n}`,a),this.system.app.scripts.on(`swap:${n}`,this._scriptsIndex[n].onSwap),s.preloading||(a.enabled&&!a._initialized&&(a._initialized=!0,a.initialize&&this._scriptMethod(a,Sf)),a.enabled&&!a._postInitialized&&(a._postInitialized=!0,a.postInitialize&&this._scriptMethod(a,vf))),a}b.warn(`script '${n}' is already added to entity '${this.entity.name}'`)}else this._scriptsIndex[n]={awaiting:!0,ind:this._scripts.length},b.warn(`script '${n}' is not found, awaiting it to be added to registry`);return null}destroy(e){let s=e,i=e;typeof i=="string"?i=this.system.app.scripts.get(i):i&&(s=i.__name);const r=this._scriptsIndex[s];if(delete this._scriptsIndex[s],!r)return!1;this._attributeDataMap.delete(s);const n=r.instance;if(n&&!n._destroyed)if(n.enabled=!1,n._destroyed=!0,this._isLoopingThroughScripts)this._destroyedScripts.push(n);else{const a=this._removeScriptInstance(n);a>=0&&this._resetExecutionOrder(a,this._scripts.length)}return this.system.app.scripts.off(`swap:${s}`,r.onSwap),delete this[s],this.fire("destroy",s,n||null),this.fire(`destroy:${s}`,n||null),n&&n.fire("destroy"),!0}swap(e){let s=e,i=e;typeof i=="string"?i=this.system.app.scripts.get(i):i&&(s=i.__name);const r=this._scriptsIndex[s];if(!r||!r.instance)return!1;const n=r.instance,a=this._scripts.indexOf(n),o=new i({app:this.system.app,entity:this.entity,enabled:n.enabled,attributes:n.__attributes});return o.swap?(this.initializeAttributes(o),this._scripts[a]=o,this._scriptsIndex[s].instance=o,this[s]=o,o.__executionOrder=a,n.update&&this._updateList.remove(n),n.postUpdate&&this._postUpdateList.remove(n),o.update&&this._updateList.insert(o),o.postUpdate&&this._postUpdateList.insert(o),this._scriptMethod(o,sD,n),this.fire("swap",s,o),this.fire(`swap:${s}`,o),!0):!1}resolveDuplicatedEntityReferenceProperties(e,s){const i=this.entity.script;for(const r in e._scriptsIndex){const n=this.system.app.scripts.get(r);if(!n)continue;const a=e._scriptsIndex[r];if(!a||!a.instance)continue;const o=i[r].__attributesRaw,h=i[r].__attributes;if(!o&&!h)continue;const d=!!o,u=a.instance.__attributes;for(const f in u){if(!u[f])continue;const p=n.attributes.get(f);if(p){if(p.type==="entity")this._resolveEntityScriptAttribute(p,f,u[f],d,o||h,s);else if(p.type==="json"&&Array.isArray(p.schema)){const m=u[f],_=o?o[f]:h[f];for(let g=0;g<p.schema.length;g++){const y=p.schema[g];if(y.type==="entity")if(p.array)for(let w=0;w<m.length;w++)this._resolveEntityScriptAttribute(y,y.name,m[w][y.name],d,_[w],s);else this._resolveEntityScriptAttribute(y,y.name,m[y.name],d,_,s)}}}}}}move(e,s){const i=this._scripts.length;if(s>=i||s<0)return!1;let r=e,n=e;typeof n!="string"?n=e.__name:r=null;const a=this._scriptsIndex[n];if(!a||!a.instance)return!1;const o=a.instance;if(r&&!(o instanceof r))return!1;const h=this._scripts.indexOf(o);return h===-1||h===s?!1:(this._scripts.splice(s,0,this._scripts.splice(h,1)[0]),this._resetExecutionOrder(0,i),this._updateList.sort(),this._postUpdateList.sort(),this.fire("move",n,o,s,h),this.fire(`move:${n}`,o,s,h),!0)}}c(_i,"EVENT_CREATE","create"),c(_i,"EVENT_DESTROY","destroy"),c(_i,"EVENT_ENABLE","enable"),c(_i,"EVENT_DISABLE","disable"),c(_i,"EVENT_REMOVE","remove"),c(_i,"EVENT_STATE","state"),c(_i,"EVENT_MOVE","move"),c(_i,"EVENT_ERROR","error");class nD{constructor(){this.enabled=!0}}const aD="_onInitializeAttributes",oD="_onInitialize",lD="_onPostInitialize",hD="_onUpdate",cD="_onPostUpdate";let rh=0;class dD extends Qe{constructor(t){super(t),this.id="script",this.ComponentType=_i,this.DataType=nD,this._components=new Mh({sortBy:"_executionOrder"}),this._enabledComponents=new Mh({sortBy:"_executionOrder"}),this.preloading=!0,this.on("beforeremove",this._onBeforeRemove,this),this.app.systems.on("initialize",this._onInitialize,this),this.app.systems.on("postInitialize",this._onPostInitialize,this),this.app.systems.on("update",this._onUpdate,this),this.app.systems.on("postUpdate",this._onPostUpdate,this)}initializeComponentData(t,e){if(t._executionOrder=rh++,this._components.append(t),rh>Number.MAX_SAFE_INTEGER&&this._resetExecutionOrder(),t.enabled=e.hasOwnProperty("enabled")?!!e.enabled:!0,t.enabled&&t.entity.enabled&&this._enabledComponents.append(t),e.hasOwnProperty("order")&&e.hasOwnProperty("scripts")){t._scriptsData=e.scripts;for(let s=0;s<e.order.length;s++)t.create(e.order[s],{enabled:e.scripts[e.order[s]].enabled,attributes:e.scripts[e.order[s]].attributes,preloading:this.preloading})}}cloneComponent(t,e){var n;const s=[],i={};for(let a=0;a<t.script._scripts.length;a++){const o=t.script._scripts[a],h=o.__scriptType.__name;s.push(h);const d=((n=t.script._attributeDataMap)==null?void 0:n.get(h))||{};for(const u in o.__attributes)d[u]=o.__attributes[u];i[h]={enabled:o._enabled,attributes:d}}for(const a in t.script._scriptsIndex)a.awaiting&&s.splice(a.ind,0,a);const r={enabled:t.script.enabled,order:s,scripts:i};return this.addComponent(e,r)}_resetExecutionOrder(){rh=0;for(let t=0,e=this._components.length;t<e;t++)this._components.items[t]._executionOrder=rh++}_callComponentMethod(t,e,s){for(t.loopIndex=0;t.loopIndex<t.length;t.loopIndex++)t.items[t.loopIndex][e](s)}_onInitialize(){this.preloading=!1,this._callComponentMethod(this._components,aD),this._callComponentMethod(this._enabledComponents,oD)}_onPostInitialize(){this._callComponentMethod(this._enabledComponents,lD)}_onUpdate(t){this._callComponentMethod(this._enabledComponents,hD,t)}_onPostUpdate(t){this._callComponentMethod(this._enabledComponents,cD,t)}_addComponentToEnabled(t){this._enabledComponents.insert(t)}_removeComponentFromEnabled(t){this._enabledComponents.remove(t)}_onBeforeRemove(t,e){this._components.items.indexOf(e)>=0&&e._onBeforeRemove(),this._removeComponentFromEnabled(e),this._components.remove(e)}destroy(){super.destroy(),this.app.systems.off("initialize",this._onInitialize,this),this.app.systems.off("postInitialize",this._onPostInitialize,this),this.app.systems.off("update",this._onUpdate,this),this.app.systems.off("postUpdate",this._onPostUpdate,this)}}class Px extends pe{constructor(e,s){super(e,s);c(this,"_layers",[zi]);c(this,"_instance",null);c(this,"_customAabb",null);c(this,"_assetReference");c(this,"_materialOptions",null);c(this,"_evtLayersChanged",null);c(this,"_evtLayerAdded",null);c(this,"_evtLayerRemoved",null);this._assetReference=new qo("asset",this,e.app.assets,{add:this._onGSplatAssetAdded,load:this._onGSplatAssetLoad,remove:this._onGSplatAssetRemove,unload:this._onGSplatAssetUnload},this),s.on("remove",this.onRemoveChild,this),s.on("removehierarchy",this.onRemoveChild,this),s.on("insert",this.onInsertChild,this),s.on("inserthierarchy",this.onInsertChild,this)}set customAabb(e){var s,i;this._customAabb=e,(i=(s=this._instance)==null?void 0:s.meshInstance)==null||i.setCustomAabb(this._customAabb)}get customAabb(){return this._customAabb}set instance(e){var s;if(this.destroyInstance(),this._instance=e,(s=this._instance)!=null&&s.meshInstance){const i=this._instance.meshInstance;i.node||(i.node=this.entity),i.setCustomAabb(this._customAabb),this._materialOptions&&this._instance.createMaterial(this._materialOptions),this.enabled&&this.entity.enabled&&this.addToLayers()}}get instance(){return this._instance}set materialOptions(e){this._materialOptions=Object.assign({},e),this._instance&&this._instance.createMaterial(this._materialOptions)}get materialOptions(){return this._materialOptions}get material(){var e;return(e=this._instance)==null?void 0:e.material}set layers(e){this.removeFromLayers(),this._layers.length=0;for(let s=0;s<e.length;s++)this._layers[s]=e[s];!this.enabled||!this.entity.enabled||this.addToLayers()}get layers(){return this._layers}set asset(e){const s=e instanceof he?e.id:e;this._assetReference.id!==s&&(this._assetReference.asset&&this._assetReference.asset.resource&&this._onGSplatAssetRemove(),this._assetReference.id=s,this._assetReference.asset&&this._onGSplatAssetAdded())}get asset(){return this._assetReference.id}assignAsset(e){const s=e instanceof he?e.id:e;this._assetReference.id=s}destroyInstance(){var e;this._instance&&(this.removeFromLayers(),(e=this._instance)==null||e.destroy(),this._instance=null)}addToLayers(){var s,i;const e=(s=this.instance)==null?void 0:s.meshInstance;if(e){const r=this.system.app.scene.layers;for(let n=0;n<this._layers.length;n++)(i=r.getLayerById(this._layers[n]))==null||i.addMeshInstances([e])}}removeFromLayers(){var s,i;const e=(s=this.instance)==null?void 0:s.meshInstance;if(e){const r=this.system.app.scene.layers;for(let n=0;n<this._layers.length;n++)(i=r.getLayerById(this._layers[n]))==null||i.removeMeshInstances([e])}}onRemoveChild(){this.removeFromLayers()}onInsertChild(){this._instance&&this.enabled&&this.entity.enabled&&this.addToLayers()}onRemove(){this.destroyInstance(),this.asset=null,this._assetReference.id=null,this.entity.off("remove",this.onRemoveChild,this),this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(e,s){this.addToLayers(),e.off("add",this.onLayerAdded,this),e.off("remove",this.onLayerRemoved,this),s.on("add",this.onLayerAdded,this),s.on("remove",this.onLayerRemoved,this)}onLayerAdded(e){this.layers.indexOf(e.id)<0||this._instance&&e.addMeshInstances(this._instance.meshInstance)}onLayerRemoved(e){this.layers.indexOf(e.id)<0||this._instance&&e.removeMeshInstances(this._instance.meshInstance)}onEnable(){const e=this.system.app.scene,s=e.layers;this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this),s&&(this._evtLayerAdded=s.on("add",this.onLayerAdded,this),this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this)),this._instance?this.addToLayers():this.asset&&this._onGSplatAssetAdded()}onDisable(){var i,r,n;const s=this.system.app.scene.layers;(i=this._evtLayersChanged)==null||i.off(),this._evtLayersChanged=null,s&&((r=this._evtLayerAdded)==null||r.off(),this._evtLayerAdded=null,(n=this._evtLayerRemoved)==null||n.off(),this._evtLayerRemoved=null),this.removeFromLayers()}hide(){this._instance&&(this._instance.meshInstance.visible=!1)}show(){this._instance&&(this._instance.meshInstance.visible=!0)}_onGSplatAssetAdded(){this._assetReference.asset&&(this._assetReference.asset.resource?this._onGSplatAssetLoad():this.enabled&&this.entity.enabled&&this.system.app.assets.load(this._assetReference.asset))}_onGSplatAssetLoad(){this.destroyInstance();const e=this._assetReference.asset;e&&(this.instance=e.resource.createInstance())}_onGSplatAssetUnload(){this.destroyInstance()}_onGSplatAssetRemove(){this._onGSplatAssetUnload()}}class uD{constructor(){this.enabled=!0}}const bf=["enabled"],Ir=["instance","asset","layers"];class fD extends Qe{constructor(t){super(t),this.id="gsplat",this.ComponentType=Px,this.DataType=uD,this.schema=bf,this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){e.layers&&e.layers.length&&(e.layers=e.layers.slice(0));for(let i=0;i<Ir.length;i++)e.hasOwnProperty(Ir[i])&&(t[Ir[i]]=e[Ir[i]]);e.aabbCenter&&e.aabbHalfExtents&&(t.customAabb=new ve(new A(e.aabbCenter),new A(e.aabbHalfExtents))),super.initializeComponentData(t,e,bf)}cloneComponent(t,e){const s=t.gsplat,i={};for(let n=0;n<Ir.length;n++)i[Ir[n]]=s[Ir[n]];i.enabled=s.enabled,delete i.instance;const r=this.addComponent(e,i);return r.instance=s.instance.clone(),s.customAabb&&(r.customAabb=s.customAabb.clone()),r}onRemove(t,e){e.onRemove()}}pe._buildAccessors(Px.prototype,bf);class Xp extends de{constructor(){super(...arguments);c(this,"_meshes",null)}set meshes(e){this.decRefMeshes(),this._meshes=e,this.incRefMeshes(),this.fire("set:meshes",e)}get meshes(){return this._meshes}destroy(){this.meshes=null}decRefMeshes(){var e;(e=this._meshes)==null||e.forEach((s,i)=>{s&&(s.decRefCount(),s.refCount<1&&(s.destroy(),this._meshes[i]=null))})}incRefMeshes(){var e;(e=this._meshes)==null||e.forEach(s=>{s==null||s.incRefCount()})}}c(Xp,"EVENT_SETMESHES","set:meshes");function wh(l){const t=this;if(!t.resource)return;const e=l.resource,s=e.renders&&e.renders[t.data.renderIndex];s&&(t.resource.meshes=s.resource.meshes)}function Fg(l){const t=this;t.registry.off(`load:${l.id}`,wh,t),t.registry.on(`load:${l.id}`,wh,t),t.registry.off(`remove:${l.id}`,kg,t),t.registry.once(`remove:${l.id}`,kg,t),l.resource?wh.call(t,l):t.registry.load(l)}function kg(l){const t=this;t.registry.off(`load:${l.id}`,wh,t),t.resource&&t.resource.destroy()}class pD extends Ge{constructor(t){super(t,"render"),this._registry=t.assets}open(t,e){return new Xp}patch(t,e){if(!t.data.containerAsset)return;const s=e.get(t.data.containerAsset);if(!s){e.once(`add:${t.data.containerAsset}`,Fg,t);return}Fg.call(t,s)}}class Rx{constructor(t,e,s,i){this._paths=t,this._input=e,this._output=s,this._interpolation=i}get paths(){return this._paths}get input(){return this._input}get output(){return this._output}get interpolation(){return this._interpolation}}class rc{constructor(t,e){this._components=t,this._data=e}get components(){return this._components}get data(){return this._data}}function mD(l,t){let e;const r=(p,m)=>{switch(m){case e.DT_INT8:return new Int8Array(p.buffer,p.byteOffset,p.byteLength);case e.DT_INT16:return new Int16Array(p.buffer,p.byteOffset,p.byteLength/2);case e.DT_INT32:return new Int32Array(p.buffer,p.byteOffset,p.byteLength/4);case e.DT_UINT8:return new Uint8Array(p.buffer,p.byteOffset,p.byteLength);case e.DT_UINT16:return new Uint16Array(p.buffer,p.byteOffset,p.byteLength/2);case e.DT_UINT32:return new Uint32Array(p.buffer,p.byteOffset,p.byteLength/4);case e.DT_FLOAT32:return new Float32Array(p.buffer,p.byteOffset,p.byteLength/4)}return null},n=p=>{switch(p){case e.DT_INT8:return 1;case e.DT_INT16:return 2;case e.DT_INT32:return 4;case e.DT_UINT8:return 1;case e.DT_UINT16:return 2;case e.DT_UINT32:return 4;case e.DT_FLOAT32:return 4}return 1},a=p=>p.num_components()*n(p.data_type()),o={0:0,1:1,5:2,2:3,7:4,8:5,4:6,3:7},h=(p,m)=>{const _=(P,L,k)=>{P[0]=L[0]-k[0],P[1]=L[1]-k[1],P[2]=L[2]-k[2]},g=(P,L,k)=>{P[0]=L[1]*k[2]-k[1]*L[2],P[1]=L[2]*k[0]-k[2]*L[0],P[2]=L[0]*k[1]-k[0]*L[1]},y=(P,L)=>{const k=P[L+0],H=P[L+1],N=P[L+2],I=1/Math.sqrt(k*k+H*H+N*N);P[L+0]*=I,P[L+1]*=I,P[L+2]*=I},w=(P,L,k)=>{for(let H=0;H<3;++H)P[H]=L[k+H]},C=m.length/3,x=p.length/3,M=new Float32Array(p.length),S=[0,0,0],v=[0,0,0],E=[0,0,0],T=[0,0,0],R=[0,0,0],D=[0,0,0];for(let P=0;P<C;++P){const L=m[P*3+0]*3,k=m[P*3+1]*3,H=m[P*3+2]*3;w(S,p,L),w(v,p,k),w(E,p,H),_(T,v,S),_(R,E,S),g(D,T,R),y(D,0);for(let N=0;N<3;++N)M[L+N]+=D[N],M[k+N]+=D[N],M[H+N]+=D[N]}for(let P=0;P<x;++P)y(M,P*3);return new Uint8Array(M.buffer)},d=p=>{const m={},_=new e.DecoderBuffer;_.Init(p,p.length);const g=new e.Decoder;if(g.GetEncodedGeometryType(_)!==e.TRIANGULAR_MESH)return m.error="Failed to decode draco mesh: not a mesh",m;const y=new e.Mesh,w=g.DecodeBufferToMesh(_,y);if(!w||!w.ok()||e.getPointer(y)===0)return m.error="Failed to decode draco asset",m;const C=y.num_faces()*3,x=y.num_points()<=65535,M=C*(x?2:4),S=e._malloc(M);x?(g.GetTrianglesUInt16Array(y,M,S),m.indices=new Uint16Array(e.HEAPU16.buffer,S,C).slice().buffer):(g.GetTrianglesUInt32Array(y,M,S),m.indices=new Uint32Array(e.HEAPU32.buffer,S,C).slice().buffer),e._free(S);const v=[];for(let L=0;L<y.num_attributes();++L)v.push(g.GetAttribute(y,L));v.sort((L,k)=>(o[L.attribute_type()]??o.length)-(o[k.attribute_type()]??o.length)),m.attributes=v.map(L=>L.unique_id());let E=0;const T=v.map(L=>{const k=E;return E+=Math.ceil(a(L)/4)*4,k}),R=v.some(L=>L.attribute_type()===1),D=T[1];if(!R){for(let L=1;L<T.length;++L)T[L]+=12;E+=12}m.vertices=new ArrayBuffer(y.num_points()*E);const P=new Uint8Array(m.vertices);for(let L=0;L<y.num_attributes();++L){const k=v[L],H=a(k),N=y.num_points()*H,I=e._malloc(N);g.GetAttributeDataArrayForAllPoints(y,k,k.data_type(),N,I);const F=new Uint8Array(e.HEAPU8.buffer,I,N);for(let O=0;O<y.num_points();++O)for(let B=0;B<H;++B)P[O*E+T[L]+B]=F[O*H+B];if(!R&&k.attribute_type()===0){const O=h(r(F,k.data_type()),x?new Uint16Array(m.indices):new Uint32Array(m.indices));for(let B=0;B<y.num_points();++B)for(let U=0;U<12;++U)P[B*E+D+U]=O[B*12+U]}e._free(I)}return e.destroy(y),e.destroy(g),e.destroy(_),m},u=p=>{const m=d(new Uint8Array(p.buffer));self.postMessage({jobId:p.jobId,error:m.error,indices:m.indices,vertices:m.vertices,attributes:m.attributes},[m.indices,m.vertices].filter(_=>_!=null))},f=[];self.onmessage=p=>{const m=p.data;switch(m.type){case"init":self.DracoDecoderModule({instantiateWasm:(_,g)=>(WebAssembly.instantiate(m.module,_).then(y=>g(y)).catch(y=>console.error(`instantiate failed + ${y}`)),{})}).then(_=>{e=_,f.forEach(g=>u(g))});break;case"decodeMesh":e?u(m):f.push(m);break}}}const Og=3;class _D{constructor(){this.workers=[[],[],[]],this.jobId=0,this.jobQueue=[],this.jobCallbacks=new Map,this.run=(t,e)=>{t.postMessage({type:"decodeMesh",jobId:e.jobId,buffer:e.buffer},[e.buffer])}}init(t){for(t.forEach(e=>{e.addEventListener("message",s=>{const i=s.data,r=this.jobCallbacks.get(i.jobId);if(r&&r(i.error,{indices:i.indices,vertices:i.vertices,attributes:i.attributes}),this.jobCallbacks.delete(i.jobId),this.jobQueue.length>0){const n=this.jobQueue.shift();this.run(e,n)}else{const n=this.workers[2].indexOf(e);if(n!==-1)this.workers[2].splice(n,1),this.workers[1].push(e);else{const a=this.workers[1].indexOf(e);a!==-1?(this.workers[1].splice(a,1),this.workers[0].push(e)):b.error("logical error")}}})}),this.workers[0]=t;this.jobQueue.length&&(this.workers[0].length||this.workers[1].length);){const e=this.jobQueue.shift();if(this.workers[0].length>0){const s=this.workers[0].shift();this.workers[1].push(s),this.run(s,e)}else{const s=this.workers[1].shift();this.workers[2].push(s),this.run(s,e)}}}enqueueJob(t,e){const s={jobId:this.jobId++,buffer:t};if(this.jobCallbacks.set(s.jobId,e),this.workers[0].length>0){const i=this.workers[0].shift();this.workers[1].push(i),this.run(i,s)}else if(this.workers[1].length>0){const i=this.workers[1].shift();this.workers[2].push(i),this.run(i,s)}else this.jobQueue.push(s)}}const gD=l=>new Promise((t,e)=>{const s={cache:!0,responseType:"text",retry:Og>0,maxRetries:Og};Ye.get(l,s,(i,r)=>{i?e(i):t(r)})}),yD=l=>{const t=()=>fetch(l).then(s=>s.arrayBuffer()).then(s=>WebAssembly.compile(s)),e=()=>WebAssembly.compileStreaming(fetch(l)).catch(s=>(b.warn(`compileStreaming() failed for ${l} (${s}), falling back to arraybuffer download.`),t()));return WebAssembly.compileStreaming?e():t()},Bg=1;let Th;const xD=l=>{if(Th)return!0;if(!l){const t=oy.getConfig("DracoDecoderModule");t?l={jsUrl:t.glueUrl,wasmUrl:t.wasmUrl,numWorkers:t.numWorkers}:l={jsUrl:"draco.wasm.js",wasmUrl:"draco.wasm.wasm",numWorkers:Bg}}return!l.jsUrl||!l.wasmUrl?!1:(Th=new _D,Promise.all([gD(l.jsUrl),yD(l.wasmUrl)]).then(([t,e])=>{const s=["/* draco */",t,"/* worker */",`(
${mD.toString()}
)()

`].join(`
`),i=new Blob([s],{type:"application/javascript"}),r=URL.createObjectURL(i),n=Math.max(1,Math.min(16,l.numWorkers||Bg)),a=[];for(let o=0;o<n;++o){const h=new Worker(r);h.postMessage({type:"init",module:e}),a.push(h)}Th.init(a)}),!0)},SD=(l,t)=>xD()?(Th.enqueueJob(l,t),!0):!1;class vD{constructor(){c(this,"gltf");c(this,"nodes");c(this,"scenes");c(this,"animations");c(this,"textures");c(this,"materials");c(this,"variants");c(this,"meshVariants");c(this,"meshDefaultMaterials");c(this,"renders");c(this,"skins");c(this,"lights");c(this,"cameras");c(this,"nodeInstancingMap")}destroy(){this.renders&&this.renders.forEach(t=>{t.meshes=null})}}const Ix=l=>/^data:[^\n\r,\u2028\u2029]*,.*$/i.test(l),bD=l=>l.substring(l.indexOf(":")+1,l.indexOf(";")),jo=l=>{switch(l){case"SCALAR":return 1;case"VEC2":return 2;case"VEC3":return 3;case"VEC4":return 4;case"MAT2":return 4;case"MAT3":return 9;case"MAT4":return 16;default:return 3}},id=l=>{switch(l){case 5120:return Fc;case 5121:return Zr;case 5122:return kc;case 5123:return rl;case 5124:return Ny;case 5125:return Oo;case 5126:return Re;default:return 0}},wD=l=>{switch(l){case 5120:return 1;case 5121:return 1;case 5122:return 2;case 5123:return 2;case 5124:return 4;case 5125:return 4;case 5126:return 4;default:return 0}},TD=l=>{switch(l){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:return null}},nc={POSITION:Xe,NORMAL:ss,TANGENT:si,COLOR_0:It,JOINTS_0:Jt,WEIGHTS_0:ei,TEXCOORD_0:ds,TEXCOORD_1:yn,TEXCOORD_2:Qo,TEXCOORD_3:Jo,TEXCOORD_4:el,TEXCOORD_5:tl,TEXCOORD_6:sl,TEXCOORD_7:il},Ng={[Xe]:0,[ss]:1,[si]:2,[It]:3,[Jt]:4,[ei]:5,[ds]:6,[yn]:7,[Qo]:8,[Jo]:9,[el]:10,[tl]:11,[sl]:12,[il]:13},AD=l=>{switch(l){case Fc:return t=>Math.max(t/127,-1);case Zr:return t=>t/255;case kc:return t=>Math.max(t/32767,-1);case rl:return t=>t/65535;default:return t=>t}},wf=(l,t,e)=>{const s=AD(e),i=t.length;for(let r=0;r<i;++r)l[r]=s(t[r]);return l},rn=(l,t,e=!1)=>{const s=jo(l.type),i=TD(l.componentType);if(!i)return null;let r;if(l.sparse){const n=l.sparse,a={count:n.count,type:"SCALAR"},o=rn(Object.assign(a,n.indices),t,!0),h={count:n.count,type:l.type,componentType:l.componentType},d=rn(Object.assign(h,n.values),t,!0);if(l.hasOwnProperty("bufferView")){const u={bufferView:l.bufferView,byteOffset:l.byteOffset,componentType:l.componentType,count:l.count,type:l.type};r=rn(u,t,!0).slice()}else r=new i(l.count*s);for(let u=0;u<n.count;++u){const f=o[u];for(let p=0;p<s;++p)r[f*s+p]=d[u*s+p]}}else if(l.hasOwnProperty("bufferView")){const n=t[l.bufferView];if(e&&n.hasOwnProperty("byteStride")){const a=s*i.BYTES_PER_ELEMENT,o=new ArrayBuffer(l.count*a),h=new Uint8Array(o);let d=0;for(let u=0;u<l.count;++u){let f=(l.byteOffset||0)+u*n.byteStride;for(let p=0;p<a;++p)h[d++]=n[f++]}r=new i(o)}else r=new i(n.buffer,n.byteOffset+(l.byteOffset||0),l.count*s)}else r=new i(l.count*s);return r},ga=(l,t)=>{const e=rn(l,t,!0);if(e instanceof Float32Array||!l.normalized)return e;const s=new Float32Array(e.length);return wf(s,e,id(l.componentType)),s},Tf=l=>{let t=l.min,e=l.max;if(!t||!e)return null;if(l.normalized){const s=id(l.componentType);t=wf([],t,s),e=wf([],e,s)}return new ve(new A((e[0]+t[0])*.5,(e[1]+t[1])*.5,(e[2]+t[2])*.5),new A((e[0]-t[0])*.5,(e[1]-t[1])*.5,(e[2]-t[2])*.5))},Dx=l=>{if(!l.hasOwnProperty("mode"))return Fs;switch(l.mode){case 0:return Dc;case 1:return Lc;case 2:return Py;case 3:return Ry;case 4:return Fs;case 5:return lr;case 6:return Kr;default:return Fs}},ED=l=>{const t=new Uint16Array(l);for(let e=0;e<l;e++)t[e]=e;return t},CD=(l,t)=>{const e=l[Xe];if(!e||e.components!==3)return;let s;if(e.size!==e.stride){const a=e.stride/So[e.type],o=new fa[e.type](e.buffer,e.offset,e.count*a);s=new fa[e.type](e.count*3);for(let h=0;h<e.count;++h)s[h*3+0]=o[h*a+0],s[h*3+1]=o[h*a+1],s[h*3+2]=o[h*a+2]}else s=new fa[e.type](e.buffer,e.offset,e.count*3);const i=e.count;t||(t=ED(i));const r=B0(s,t),n=new Float32Array(r.length);n.set(r),l[ss]={buffer:n.buffer,size:12,offset:0,stride:12,count:i,components:3,type:Re}},MD=l=>{const t=s=>{const i=[];for(let r=0;r<s._levels.length;++r){let n=[];if(s.cubemap)for(let a=0;a<6;++a)n.push(s._levels[r][a]);else n=s._levels[r];i.push(n)}return i},e=new ce(l.device,l);return e._levels=t(l),e},PD=l=>{const t=new he(`${l.name}_clone`,l.type,l.file,l.data,l.options);return t.loaded=!0,t.resource=MD(l.resource),l.registry.add(t),t},RD=(l,t)=>{const e=t[Xe];if(!e)return null;const s=e.count,i=[];for(const y in t)if(t.hasOwnProperty(y)){const w={semantic:y,components:t[y].components,type:t[y].type,normalize:!!t[y].normalize};Dt.isElementValid(l,w)||w.components++,i.push(w)}i.sort((y,w)=>Ng[y.semantic]-Ng[w.semantic]);let r,n,a,o,h,d;const u=new Dt(l,i);let f=!0;for(r=0;r<u.elements.length;++r)if(h=u.elements[r],o=t[h.name],d=o.offset-e.offset,o.buffer!==e.buffer||o.stride!==h.stride||o.size!==h.size||d!==h.offset){f=!1;break}const p=new fs(l,u,s),m=p.lock(),_=new Uint32Array(m);let g;if(f)g=new Uint32Array(e.buffer,e.offset,s*p.format.size/4),_.set(g);else{let y,w;for(r=0;r<p.format.elements.length;++r){h=p.format.elements[r],y=h.stride/4,o=t[h.name],w=o.stride/4,g=new Uint32Array(o.buffer,o.offset,(o.count-1)*w+(o.size+3)/4);let C=0,x=h.offset/4;const M=Math.floor((o.size+3)/4);for(n=0;n<s;++n){for(a=0;a<M;++a)_[x+a]=g[C+a];C+=w,x+=y}}}return p.unlock(),p},ID=(l,t,e,s,i,r)=>{const n={},a=[];for(const d in t)t.hasOwnProperty(d)&&nc.hasOwnProperty(d)&&(n[d]=t[d],a.push(`${d}:${t[d]}`));a.sort();const o=a.join();let h=r[o];if(!h){const d={};for(const u in n){const f=s[t[u]],p=rn(f,i),m=i[f.bufferView],_=nc[u],g=jo(f.type)*wD(f.componentType),y=m&&m.hasOwnProperty("byteStride")?m.byteStride:g;d[_]={buffer:p.buffer,size:g,offset:p.byteOffset,stride:y,count:f.count,components:jo(f.type),type:id(f.componentType),normalize:f.normalized}}d.hasOwnProperty(ss)||CD(d,e),h=RD(l,d),r[o]=h}return h},DD=(l,t,e,s,i,r)=>{let n,a,o;const h=t.joints,d=h.length,u=[];if(t.hasOwnProperty("inverseBindMatrices")){const _=t.inverseBindMatrices,g=rn(e[_],s,!0),y=[];for(n=0;n<d;n++){for(a=0;a<16;a++)y[a]=g[n*16+a];o=new q,o.set(y),u.push(o)}}else for(n=0;n<d;n++)o=new q,u.push(o);const f=[];for(n=0;n<d;n++)f[n]=i[h[n]].name;const p=f.join("#");let m=r.get(p);return m||(m=new z0(l,u,f),r.set(p,m)),m},LD=(l,t,e,s,i,r,n)=>{var h;const a=new ke(l);a.aabb=Tf(e[t.attributes.POSITION]);const o=[];for(const[d,u]of Object.entries(t.attributes)){const f=e[u],p=nc[d],m=id(f.componentType);o.push({semantic:p,components:jo(f.type),type:m,normalize:f.normalized??(p===It&&(m===Zr||m===rl))})}if(n.push(new Promise((d,u)=>{const f=t.extensions.KHR_draco_mesh_compression;SD(s[f.bufferView].slice().buffer,(p,m)=>{var _;if(p)console.log(p),u(p);else{const g={};for(const[v,E]of Object.entries(f.attributes))g[nc[v]]=m.attributes.indexOf(E);o.sort((v,E)=>g[v.semantic]-g[E.semantic]),(_=t.attributes)!=null&&_.NORMAL||o.splice(1,0,{semantic:"NORMAL",components:3,type:Re});const y=new Dt(l,o),w=m.vertices.byteLength/y.size,C=w<=65535?Fi:or,x=m.indices.byteLength/(w<=65535?2:4);b.call(()=>{w!==e[t.attributes.POSITION].count&&b.warn("mesh has invalid vertex count"),x!==e[t.indices].count&&b.warn("mesh has invalid index count")});const M=new fs(l,y,w,{data:m.vertices}),S=new cr(l,C,x,ts,m.indices);a.vertexBuffer=M,a.indexBuffer[0]=S,a.primitive[0].type=Dx(t),a.primitive[0].base=0,a.primitive[0].count=S?x:w,a.primitive[0].indexed=!!S,d()}})})),(h=t==null?void 0:t.extensions)!=null&&h.KHR_materials_variants){const d=t.extensions.KHR_materials_variants,u={};d.mappings.forEach(f=>{f.variants.forEach(p=>{u[p]=f.material})}),i[a.id]=u}return r[a.id]=t.material,a},FD=(l,t,e,s,i,r,n,a,o)=>{const h=[];return t.primitives.forEach(d=>{var u;if((u=d.extensions)!=null&&u.KHR_draco_mesh_compression)h.push(LD(l,d,e,s,r,n,o));else{let f=d.hasOwnProperty("indices")?rn(e[d.indices],s,!0):null;const p=ID(l,d.attributes,f,e,s,i),m=Dx(d),_=new ke(l);if(_.vertexBuffer=p,_.primitive[0].type=m,_.primitive[0].base=0,_.primitive[0].indexed=f!==null,f!==null){let y;f instanceof Uint8Array?y=yu:f instanceof Uint16Array?y=Fi:y=or,y===yu&&l.isWebGPU&&(y=Fi,f=new Uint16Array(f));const w=new cr(l,y,f.length,ts,f);_.indexBuffer[0]=w,_.primitive[0].count=f.length}else _.primitive[0].count=p.numVertices;if(d.hasOwnProperty("extensions")&&d.extensions.hasOwnProperty("KHR_materials_variants")){const y=d.extensions.KHR_materials_variants,w={};y.mappings.forEach(C=>{C.variants.forEach(x=>{w[x]=C.material})}),r[_.id]=w}n[_.id]=d.material;let g=e[d.attributes.POSITION];if(_.aabb=Tf(g),d.hasOwnProperty("targets")){const y=[];d.targets.forEach((w,C)=>{const x={};w.hasOwnProperty("POSITION")&&(g=e[w.POSITION],x.deltaPositions=ga(g,s),x.aabb=Tf(g)),w.hasOwnProperty("NORMAL")&&(g=e[w.NORMAL],x.deltaNormals=ga(g,s)),t.hasOwnProperty("extras")&&t.extras.hasOwnProperty("targetNames")?x.name=t.extras.targetNames[C]:x.name=C.toString(10),t.hasOwnProperty("weights")&&(x.defaultWeight=t.weights[C]),x.preserveData=a.morphPreserveData,y.push(new sd(x))}),_.morph=new k0(y,l,{preferHighPrecision:a.morphPreferHighPrecision})}h.push(_)}}),h},xt=(l,t,e)=>{var o;let s;const i=l.texCoord;if(i)for(s=0;s<e.length;++s)t[`${e[s]}MapUv`]=i;const r=[0,0],n=[1,1],a=(o=l.extensions)==null?void 0:o.KHR_texture_transform;if(a){const h=a.offset||r,d=a.scale||n,u=a.rotation?-a.rotation*z.RAD_TO_DEG:0,f=new W(d[0],d[1]),p=new W(h[0],1-d[1]-h[1]);for(s=0;s<e.length;++s)t[`${e[s]}MapTiling`]=f,t[`${e[s]}MapOffset`]=p,t[`${e[s]}MapRotation`]=u}},kD=(l,t,e)=>{let s,i;if(l.hasOwnProperty("diffuseFactor")?(s=l.diffuseFactor,t.diffuse.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2)),t.opacity=s[3]):(t.diffuse.set(1,1,1),t.opacity=1),l.hasOwnProperty("diffuseTexture")){const r=l.diffuseTexture;i=e[r.index],t.diffuseMap=i,t.diffuseMapChannel="rgb",t.opacityMap=i,t.opacityMapChannel="a",xt(r,t,["diffuse","opacity"])}if(t.useMetalness=!1,l.hasOwnProperty("specularFactor")?(s=l.specularFactor,t.specular.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))):t.specular.set(1,1,1),l.hasOwnProperty("glossinessFactor")?t.gloss=l.glossinessFactor:t.gloss=1,l.hasOwnProperty("specularGlossinessTexture")){const r=l.specularGlossinessTexture;t.specularEncoding="srgb",t.specularMap=t.glossMap=e[r.index],t.specularMapChannel="rgb",t.glossMapChannel="a",xt(r,t,["gloss","metalness"])}},OD=(l,t,e)=>{if(l.hasOwnProperty("clearcoatFactor")?t.clearCoat=l.clearcoatFactor*.25:t.clearCoat=0,l.hasOwnProperty("clearcoatTexture")){const s=l.clearcoatTexture;t.clearCoatMap=e[s.index],t.clearCoatMapChannel="r",xt(s,t,["clearCoat"])}if(l.hasOwnProperty("clearcoatRoughnessFactor")?t.clearCoatGloss=l.clearcoatRoughnessFactor:t.clearCoatGloss=0,l.hasOwnProperty("clearcoatRoughnessTexture")){const s=l.clearcoatRoughnessTexture;t.clearCoatGlossMap=e[s.index],t.clearCoatGlossMapChannel="g",xt(s,t,["clearCoatGloss"])}if(l.hasOwnProperty("clearcoatNormalTexture")){const s=l.clearcoatNormalTexture;t.clearCoatNormalMap=e[s.index],xt(s,t,["clearCoatNormal"]),s.hasOwnProperty("scale")&&(t.clearCoatBumpiness=s.scale)}t.clearCoatGlossInvert=!0},BD=(l,t,e)=>{t.useLighting=!1,t.emissive.copy(t.diffuse),t.emissiveMap=t.diffuseMap,t.emissiveMapUv=t.diffuseMapUv,t.emissiveMapTiling.copy(t.diffuseMapTiling),t.emissiveMapOffset.copy(t.diffuseMapOffset),t.emissiveMapRotation=t.diffuseMapRotation,t.emissiveMapChannel=t.diffuseMapChannel,t.emissiveVertexColor=t.diffuseVertexColor,t.emissiveVertexColorChannel=t.diffuseVertexColorChannel,t.useLighting=!1,t.useSkybox=!1,t.diffuse.set(1,1,1),t.diffuseMap=null,t.diffuseVertexColor=!1},ND=(l,t,e)=>{if(t.useMetalnessSpecularColor=!0,l.hasOwnProperty("specularColorTexture")&&(t.specularEncoding="srgb",t.specularMap=e[l.specularColorTexture.index],t.specularMapChannel="rgb",xt(l.specularColorTexture,t,["specular"])),l.hasOwnProperty("specularColorFactor")){const s=l.specularColorFactor;t.specular.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}else t.specular.set(1,1,1);l.hasOwnProperty("specularFactor")?t.specularityFactor=l.specularFactor:t.specularityFactor=1,l.hasOwnProperty("specularTexture")&&(t.specularityFactorMapChannel="a",t.specularityFactorMap=e[l.specularTexture.index],xt(l.specularTexture,t,["specularityFactor"]))},zD=(l,t,e)=>{l.hasOwnProperty("ior")&&(t.refractionIndex=1/l.ior)},UD=(l,t,e)=>{l.hasOwnProperty("dispersion")&&(t.dispersion=l.dispersion)},VD=(l,t,e)=>{t.blendType=Gt,t.useDynamicRefraction=!0,l.hasOwnProperty("transmissionFactor")&&(t.refraction=l.transmissionFactor),l.hasOwnProperty("transmissionTexture")&&(t.refractionMapChannel="r",t.refractionMap=e[l.transmissionTexture.index],xt(l.transmissionTexture,t,["refraction"]))},GD=(l,t,e)=>{if(t.useSheen=!0,l.hasOwnProperty("sheenColorFactor")){const s=l.sheenColorFactor;t.sheen.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}else t.sheen.set(1,1,1);l.hasOwnProperty("sheenColorTexture")&&(t.sheenMap=e[l.sheenColorTexture.index],t.sheenEncoding="srgb",xt(l.sheenColorTexture,t,["sheen"])),t.sheenGloss=l.hasOwnProperty("sheenRoughnessFactor")?l.sheenRoughnessFactor:0,l.hasOwnProperty("sheenRoughnessTexture")&&(t.sheenGlossMap=e[l.sheenRoughnessTexture.index],t.sheenGlossMapChannel="a",xt(l.sheenRoughnessTexture,t,["sheenGloss"])),t.sheenGlossInvert=!0},HD=(l,t,e)=>{if(t.blendType=Gt,t.useDynamicRefraction=!0,l.hasOwnProperty("thicknessFactor")&&(t.thickness=l.thicknessFactor),l.hasOwnProperty("thicknessTexture")&&(t.thicknessMap=e[l.thicknessTexture.index],t.thicknessMapChannel="g",xt(l.thicknessTexture,t,["thickness"])),l.hasOwnProperty("attenuationDistance")&&(t.attenuationDistance=l.attenuationDistance),l.hasOwnProperty("attenuationColor")){const s=l.attenuationColor;t.attenuation.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}},WD=(l,t,e)=>{l.hasOwnProperty("emissiveStrength")&&(t.emissiveIntensity=l.emissiveStrength)},$D=(l,t,e)=>{t.useIridescence=!0,l.hasOwnProperty("iridescenceFactor")&&(t.iridescence=l.iridescenceFactor),l.hasOwnProperty("iridescenceTexture")&&(t.iridescenceMapChannel="r",t.iridescenceMap=e[l.iridescenceTexture.index],xt(l.iridescenceTexture,t,["iridescence"])),l.hasOwnProperty("iridescenceIor")&&(t.iridescenceRefractionIndex=l.iridescenceIor),l.hasOwnProperty("iridescenceThicknessMinimum")&&(t.iridescenceThicknessMin=l.iridescenceThicknessMinimum),l.hasOwnProperty("iridescenceThicknessMaximum")&&(t.iridescenceThicknessMax=l.iridescenceThicknessMaximum),l.hasOwnProperty("iridescenceThicknessTexture")&&(t.iridescenceThicknessMapChannel="g",t.iridescenceThicknessMap=e[l.iridescenceThicknessTexture.index],xt(l.iridescenceThicknessTexture,t,["iridescenceThickness"]))},Lx=(l,t)=>{const e=new _s;l.hasOwnProperty("name")&&(e.name=l.name),e.occludeSpecular=Vo,e.diffuseVertexColor=!0,e.specularTint=!0,e.specularVertexColor=!0,e.specular.set(1,1,1),e.gloss=1,e.glossInvert=!0,e.useMetalness=!0;let s,i;if(l.hasOwnProperty("pbrMetallicRoughness")){const n=l.pbrMetallicRoughness;if(n.hasOwnProperty("baseColorFactor")&&(s=n.baseColorFactor,e.diffuse.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2)),e.opacity=s[3]),n.hasOwnProperty("baseColorTexture")){const a=n.baseColorTexture;i=t[a.index],e.diffuseMap=i,e.diffuseMapChannel="rgb",e.opacityMap=i,e.opacityMapChannel="a",xt(a,e,["diffuse","opacity"])}if(n.hasOwnProperty("metallicFactor")&&(e.metalness=n.metallicFactor),n.hasOwnProperty("roughnessFactor")&&(e.gloss=n.roughnessFactor),n.hasOwnProperty("metallicRoughnessTexture")){const a=n.metallicRoughnessTexture;e.metalnessMap=e.glossMap=t[a.index],e.metalnessMapChannel="b",e.glossMapChannel="g",xt(a,e,["gloss","metalness"])}}if(l.hasOwnProperty("normalTexture")){const n=l.normalTexture;e.normalMap=t[n.index],xt(n,e,["normal"]),n.hasOwnProperty("scale")&&(e.bumpiness=n.scale)}if(l.hasOwnProperty("occlusionTexture")){const n=l.occlusionTexture;e.aoMap=t[n.index],e.aoMapChannel="r",xt(n,e,["ao"])}if(l.hasOwnProperty("emissiveFactor")&&(s=l.emissiveFactor,e.emissive.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))),l.hasOwnProperty("emissiveTexture")){const n=l.emissiveTexture;e.emissiveMap=t[n.index],xt(n,e,["emissive"])}if(l.hasOwnProperty("alphaMode"))switch(l.alphaMode){case"MASK":e.blendType=hs,l.hasOwnProperty("alphaCutoff")?e.alphaTest=l.alphaCutoff:e.alphaTest=.5;break;case"BLEND":e.blendType=Gt,e.depthWrite=!1;break;default:case"OPAQUE":e.blendType=hs;break}else e.blendType=hs;l.hasOwnProperty("doubleSided")?(e.twoSidedLighting=l.doubleSided,e.cull=l.doubleSided?vt:nn):(e.twoSidedLighting=!1,e.cull=nn);const r={KHR_materials_clearcoat:OD,KHR_materials_emissive_strength:WD,KHR_materials_ior:zD,KHR_materials_dispersion:UD,KHR_materials_iridescence:$D,KHR_materials_pbrSpecularGlossiness:kD,KHR_materials_sheen:GD,KHR_materials_specular:ND,KHR_materials_transmission:VD,KHR_materials_unlit:BD,KHR_materials_volume:HD};if(l.hasOwnProperty("extensions"))for(const n in l.extensions){const a=r[n];a!==void 0&&a(l.extensions[n],e,t)}return e.update(),e},qD=(l,t,e,s,i,r,n)=>{const a=E=>new rc(jo(E.type),ga(E,s)),o={STEP:q0,LINEAR:Qu,CUBICSPLINE:Ju},h={},d={},u={};let f=1,p;for(p=0;p<l.samplers.length;++p){const E=l.samplers[p];h.hasOwnProperty(E.input)||(h[E.input]=a(e[E.input])),d.hasOwnProperty(E.output)||(d[E.output]=a(e[E.output]));const T=E.hasOwnProperty("interpolation")&&o.hasOwnProperty(E.interpolation)?o[E.interpolation]:Qu,R={paths:[],input:E.input,output:E.output,interpolation:T};u[p]=R}const m=[],_={translation:"localPosition",rotation:"localRotation",scale:"localScale"},g=E=>{const T=[];for(;E;)T.unshift(E.name),E=E.parent;return T},y=(E,T,R)=>{const D=d[E.output];if(!D){b.warn(`glb-parser: No output data is available for the morph target curve (${R}/graph/weights). Skipping.`);return}let P;if(r&&r[T.mesh]){const F=r[T.mesh];F.hasOwnProperty("extras")&&F.extras.hasOwnProperty("targetNames")&&(P=F.extras.targetNames)}const L=D.data,k=L.length/h[E.input].data.length,H=L.length/k,N=H*4,I=new ArrayBuffer(N*k);for(let F=0;F<k;F++){const O=new Float32Array(I,N*F,H);for(let X=0;X<H;X++)O[X]=L[X*k+F];const B=new rc(1,O),U=P!=null&&P[F]?`name.${P[F]}`:F;d[-f]=B;const V={paths:[{entityPath:R,component:"graph",propertyPath:[`weight.${U}`]}],input:E.input,output:-f,interpolation:E.interpolation};f++,u[`morphCurve-${p}-${F}`]=V}};for(p=0;p<l.channels.length;++p){const E=l.channels[p],T=E.target,R=u[E.sampler],D=i[T.node],P=n[T.node],L=g(D);T.path.startsWith("weights")?(y(R,P,L),u[E.sampler].morphCurve=!0):R.paths.push({entityPath:L,component:"graph",propertyPath:[_[T.path]]})}const w=[],C=[],x=[];for(const E in h)w.push(h[E]),h[E]=w.length-1;for(const E in d)C.push(d[E]),d[E]=C.length-1;for(const E in u){const T=u[E];T.morphCurve||(x.push(new Rx(T.paths,h[T.input],d[T.output],T.interpolation)),T.paths.length>0&&T.paths[0].propertyPath[0]==="localRotation"&&T.interpolation!==Ju&&m.push(x[x.length-1].output))}m.sort();let M=null,S;for(p=0;p<m.length;++p){const E=m[p];if(p===0||E!==M){if(S=C[E],S.components===4){const T=S.data,R=T.length-4;for(let D=0;D<R;D+=4)T[D+0]*T[D+4]+T[D+1]*T[D+5]+T[D+2]*T[D+6]+T[D+3]*T[D+7]<0&&(T[D+4]*=-1,T[D+5]*=-1,T[D+6]*=-1,T[D+7]*=-1)}M=E}}let v=0;for(p=0;p<w.length;p++)S=w[p]._data,v=Math.max(v,S.length===0?0:S[S.length-1]);return new ki(l.hasOwnProperty("name")?l.name:`animation_${t}`,v,w,C,x)},nh=new q,jn=new A,XD=(l,t,e)=>{const s=new Oe;if(l.hasOwnProperty("name")&&l.name.length>0?s.name=l.name:s.name=`node_${t}`,l.hasOwnProperty("matrix")&&(nh.data.set(l.matrix),nh.getTranslation(jn),s.setLocalPosition(jn),nh.getEulerAngles(jn),s.setLocalEulerAngles(jn),nh.getScale(jn),s.setLocalScale(jn)),l.hasOwnProperty("rotation")){const i=l.rotation;s.setLocalRotation(i[0],i[1],i[2],i[3])}if(l.hasOwnProperty("translation")){const i=l.translation;s.setLocalPosition(i[0],i[1],i[2])}if(l.hasOwnProperty("scale")){const i=l.scale;s.setLocalScale(i[0],i[1],i[2])}return l.hasOwnProperty("extensions")&&l.extensions.EXT_mesh_gpu_instancing&&e.set(l,{ext:l.extensions.EXT_mesh_gpu_instancing}),s},jD=(l,t)=>{const e=l.type==="orthographic"?pa:Xs,s=e===pa?l.orthographic:l.perspective,i={enabled:!1,projection:e,nearClip:s.znear,aspectRatioMode:kp};s.zfar&&(i.farClip=s.zfar),e===pa?(i.orthoHeight=.5*s.ymag,s.ymag&&(i.aspectRatioMode=Vu,i.aspectRatio=s.xmag/s.ymag)):(i.fov=s.yfov*z.RAD_TO_DEG,s.aspectRatio&&(i.aspectRatioMode=Vu,i.aspectRatio=s.aspectRatio));const r=new je(l.name);return r.addComponent("camera",i),r},YD=(l,t)=>{const e={enabled:!1,type:l.type==="point"?"omni":l.type,color:l.hasOwnProperty("color")?new Y(l.color):Y.WHITE,range:l.hasOwnProperty("range")?l.range:9999,falloffMode:$b,intensity:l.hasOwnProperty("intensity")?z.clamp(l.intensity,0,2):1};l.hasOwnProperty("spot")&&(e.innerConeAngle=l.spot.hasOwnProperty("innerConeAngle")?l.spot.innerConeAngle*z.RAD_TO_DEG:0,e.outerConeAngle=l.spot.hasOwnProperty("outerConeAngle")?l.spot.outerConeAngle*z.RAD_TO_DEG:Math.PI/4),l.hasOwnProperty("intensity")&&(e.luminance=l.intensity*Ho.getLightUnitConversion(qu[e.type],e.outerConeAngle,e.innerConeAngle));const s=new je(t.name);return s.rotateLocal(90,0,0),s.addComponent("light",e),s},KD=(l,t,e,s)=>{if(!t.hasOwnProperty("skins")||t.skins.length===0)return[];const i=new Map;return t.skins.map(r=>DD(l,r,t.accessors,s,e,i))},ZD=(l,t,e,s)=>{var d,u,f;const i={},r={},n={},a=[];return{meshes:!s.skipMeshes&&((d=t==null?void 0:t.meshes)==null?void 0:d.length)&&((u=t==null?void 0:t.accessors)==null?void 0:u.length)&&((f=t==null?void 0:t.bufferViews)==null?void 0:f.length)?t.meshes.map(p=>FD(l,p,t.accessors,e,i,r,n,s,a)):[],meshVariants:r,meshDefaultMaterials:n,promises:a}},QD=(l,t,e)=>{var n,a,o;if(!l.hasOwnProperty("materials")||l.materials.length===0)return[];const s=(n=e==null?void 0:e.material)==null?void 0:n.preprocess,i=((a=e==null?void 0:e.material)==null?void 0:a.process)??Lx,r=(o=e==null?void 0:e.material)==null?void 0:o.postprocess;return l.materials.map(h=>{s&&s(h);const d=i(h,t);return r&&r(h,d),d})},JD=l=>{if(!l.hasOwnProperty("extensions")||!l.extensions.hasOwnProperty("KHR_materials_variants"))return null;const t=l.extensions.KHR_materials_variants.variants,e={};for(let s=0;s<t.length;s++)e[t[s].name]=s;return e},e2=(l,t,e,s)=>{var n,a;if(!l.hasOwnProperty("animations")||l.animations.length===0)return[];const i=(n=s==null?void 0:s.animation)==null?void 0:n.preprocess,r=(a=s==null?void 0:s.animation)==null?void 0:a.postprocess;return l.animations.map((o,h)=>{i&&i(o);const d=qD(o,h,l.accessors,e,t,l.meshes,l.nodes);return r&&r(o,d),d})},t2=(l,t,e,s)=>{const i=t.accessors;e.forEach((r,n)=>{const a=r.ext.attributes;let o;if(a.hasOwnProperty("TRANSLATION")){const f=i[a.TRANSLATION];o=ga(f,s)}let h;if(a.hasOwnProperty("ROTATION")){const f=i[a.ROTATION];h=ga(f,s)}let d;if(a.hasOwnProperty("SCALE")){const f=i[a.SCALE];d=ga(f,s)}const u=(o?o.length/3:0)||(h?h.length/4:0)||(d?d.length/3:0);if(u){const f=new Float32Array(u*16),p=new A,m=new ie,_=new A(1,1,1),g=new q;let y=0;for(let w=0;w<u;w++){const C=w*3;if(o&&p.set(o[C],o[C+1],o[C+2]),h){const x=w*4;m.set(h[x],h[x+1],h[x+2],h[x+3])}d&&_.set(d[C],d[C+1],d[C+2]),g.setTRS(p,m,_);for(let x=0;x<16;x++)f[y++]=g.data[x]}r.matrices=f}})},s2=(l,t,e)=>{var a,o,h;if(!l.hasOwnProperty("nodes")||l.nodes.length===0)return[];const s=(a=t==null?void 0:t.node)==null?void 0:a.preprocess,i=((o=t==null?void 0:t.node)==null?void 0:o.process)??XD,r=(h=t==null?void 0:t.node)==null?void 0:h.postprocess,n=l.nodes.map((d,u)=>{s&&s(d);const f=i(d,u,e);return r&&r(d,f),f});for(let d=0;d<l.nodes.length;++d){const u=l.nodes[d];if(u.hasOwnProperty("children")){const f=n[d],p={};for(let m=0;m<u.children.length;++m){const _=n[u.children[m]];_.parent||(p.hasOwnProperty(_.name)?_.name+=p[_.name]++:p[_.name]=1,f.addChild(_))}}}return n},i2=(l,t)=>{var i;const e=[],s=l.scenes.length;if(s===1&&((i=l.scenes[0].nodes)==null?void 0:i.length)===1){const r=l.scenes[0].nodes[0];e.push(t[r])}else for(let r=0;r<s;r++){const n=l.scenes[r];if(n.nodes){const a=new Oe(n.name);for(let o=0;o<n.nodes.length;o++){const h=t[n.nodes[o]];a.addChild(h)}e.push(a)}}return e},r2=(l,t,e)=>{var i,r,n;let s=null;if(l.hasOwnProperty("nodes")&&l.hasOwnProperty("cameras")&&l.cameras.length>0){const a=(i=e==null?void 0:e.camera)==null?void 0:i.preprocess,o=((r=e==null?void 0:e.camera)==null?void 0:r.process)??jD,h=(n=e==null?void 0:e.camera)==null?void 0:n.postprocess;l.nodes.forEach((d,u)=>{if(d.hasOwnProperty("camera")){const f=l.cameras[d.camera];if(f){a&&a(f);const p=o(f,t[u]);h&&h(f,p),p&&(s||(s=new Map),s.set(d,p))}}})}return s},n2=(l,t,e)=>{var i,r,n;let s=null;if(l.hasOwnProperty("nodes")&&l.hasOwnProperty("extensions")&&l.extensions.hasOwnProperty("KHR_lights_punctual")&&l.extensions.KHR_lights_punctual.hasOwnProperty("lights")){const a=l.extensions.KHR_lights_punctual.lights;if(a.length){const o=(i=e==null?void 0:e.light)==null?void 0:i.preprocess,h=((r=e==null?void 0:e.light)==null?void 0:r.process)??YD,d=(n=e==null?void 0:e.light)==null?void 0:n.postprocess;l.nodes.forEach((u,f)=>{if(u.hasOwnProperty("extensions")&&u.extensions.hasOwnProperty("KHR_lights_punctual")&&u.extensions.KHR_lights_punctual.hasOwnProperty("light")){const p=u.extensions.KHR_lights_punctual.light,m=a[p];if(m){o&&o(m);const _=h(m,t[f]);d&&d(m,_),_&&(s||(s=new Map),s.set(u,_))}}})}}return s},a2=(l,t,e)=>{l.nodes.forEach(s=>{s.hasOwnProperty("mesh")&&s.hasOwnProperty("skin")&&t[s.mesh].meshes.forEach(r=>{r.skin=e[s.skin]})})},o2=async(l,t,e,s,i)=>{var T,R;const r=(T=i==null?void 0:i.global)==null?void 0:T.preprocess,n=(R=i==null?void 0:i.global)==null?void 0:R.postprocess;r&&r(t),t.asset&&t.asset.generator==="PlayCanvas"&&b.warn("glTF model may have been generated with flipped UVs. Please reconvert.");const a=new Map,o=s2(t,i,a),h=i2(t,o),d=n2(t,o,i),u=r2(t,o,i),f=JD(t),p=await Promise.all(e),{meshes:m,meshVariants:_,meshDefaultMaterials:g,promises:y}=ZD(l,t,p,i),w=e2(t,o,p,i);t2(l,t,a,p);const C=await Promise.all(s),x=C.map(D=>D.resource),M=QD(t,x,i),S=KD(l,t,o,p),v=[];for(let D=0;D<m.length;D++)v[D]=new Xp,v[D].meshes=m[D];a2(t,v,S);const E=new vD;return E.gltf=t,E.nodes=o,E.scenes=h,E.animations=w,E.textures=C,E.materials=M,E.variants=f,E.meshVariants=_,E.meshDefaultMaterials=g,E.renders=v,E.skins=S,E.lights=d,E.cameras=u,E.nodeInstancingMap=a,n&&n(t,E),await Promise.all(y),E},l2=(l,t)=>{const e=(i,r)=>{switch(i){case 9728:return fe;case 9729:return at;case 9984:return yc;case 9985:return Sc;case 9986:return xc;case 9987:return an;default:return r}},s=(i,r)=>{switch(i){case 33071:return oe;case 33648:return zf;case 10497:return nt;default:return r}};l&&(t=t??{},l.minFilter=e(t.minFilter,an),l.magFilter=e(t.magFilter,at),l.addressU=s(t.wrapS,nt),l.addressV=s(t.wrapT,nt))};let h2=0;const Af=l=>{var t,e,s,i;return((e=(t=l.extensions)==null?void 0:t.KHR_texture_basisu)==null?void 0:e.source)??((i=(s=l.extensions)==null?void 0:s.EXT_texture_webp)==null?void 0:i.source)??l.source},c2=(l,t,e,s,i)=>{var f,p,m;if(!l.images||l.images.length===0)return[];const r=(f=i==null?void 0:i.image)==null?void 0:f.preprocess,n=(p=i==null?void 0:i.image)==null?void 0:p.processAsync,a=(m=i==null?void 0:i.image)==null?void 0:m.postprocess,o={"image/png":"png","image/jpeg":"jpg","image/basis":"basis","image/ktx":"ktx","image/ktx2":"ktx2","image/vnd-ms.dds":"dds"},h=_=>{const g=new Set;return _.hasOwnProperty("materials")&&_.materials.forEach(y=>{if(y.hasOwnProperty("pbrMetallicRoughness")){const w=y.pbrMetallicRoughness;if(w.hasOwnProperty("baseColorTexture")){const C=_.textures[w.baseColorTexture.index];g.add(Af(C))}}if(y.hasOwnProperty("emissiveTexture")){const w=_.textures[y.emissiveTexture.index];g.add(Af(w))}}),g},d=(_,g,y,w,C,x)=>new Promise((M,S)=>{const v=E=>{const T=`${_.name||"gltf-texture"}-${h2++}`,R={url:g||T};if(E&&(R.contents=E.slice(0).buffer),w){const L=o[w];L&&(R.filename=`${R.url}.${L}`)}const D={srgb:x},P=new he(T,"texture",R,D,C);P.on("load",L=>M(L)),P.on("error",L=>S(L)),s.add(P),s.load(P)};y?y.then(E=>v(E)):v(null)}),u=h(l);return l.images.map((_,g)=>{r&&r(_);let y;return n?y=new Promise((w,C)=>{n(_,(x,M)=>{x?C(x):w(M)})}):y=new Promise(w=>{w(null)}),y=y.then(w=>{const C=u.has(g);return w||(_.hasOwnProperty("uri")?Ix(_.uri)?d(_,_.uri,null,bD(_.uri),null,C):d(_,ka.test(_.uri)?_.uri:me.join(e,_.uri),null,null,{crossOrigin:"anonymous"},C):_.hasOwnProperty("bufferView")&&_.hasOwnProperty("mimeType")?d(_,null,t[_.bufferView],_.mimeType,null,C):Promise.reject(new Error(`Invalid image found in gltf (neither uri or bufferView found). index=${g}`)))}),a&&(y=y.then(w=>(a(_,w),w))),y})},d2=(l,t,e)=>{var a,o,h,d,u;if(!((a=l==null?void 0:l.images)!=null&&a.length)||!((o=l==null?void 0:l.textures)!=null&&o.length))return[];const s=(h=e==null?void 0:e.texture)==null?void 0:h.preprocess,i=(d=e==null?void 0:e.texture)==null?void 0:d.processAsync,r=(u=e==null?void 0:e.texture)==null?void 0:u.postprocess,n=new Set;return l.textures.map(f=>{s&&s(f);let p;return i?p=new Promise((m,_)=>{i(f,l.images,(g,y)=>{g?_(g):m(y)})}):p=new Promise(m=>{m(null)}),p=p.then(m=>{m=m??Af(f);const _=n.has(m);return n.add(m),t[m].then(g=>{const y=_?PD(g):g;return l2(y.resource,(l.samplers??[])[f.sampler]),y})}),r&&(p=p.then(m=>(r(f,m),m))),p})},u2=(l,t,e,s)=>{var a,o,h;if(!l.buffers||l.buffers.length===0)return[];const i=(a=s==null?void 0:s.buffer)==null?void 0:a.preprocess,r=(o=s==null?void 0:s.buffer)==null?void 0:o.processAsync,n=(h=s==null?void 0:s.buffer)==null?void 0:h.postprocess;return l.buffers.map((d,u)=>{i&&i(d);let f;return r?f=new Promise((p,m)=>{r(d,(_,g)=>{_?m(_):p(g)})}):f=new Promise(p=>{p(null)}),f=f.then(p=>{if(p)return p;if(d.hasOwnProperty("uri")){if(Ix(d.uri)){const m=atob(d.uri.split(",")[1]),_=new Uint8Array(m.length);for(let g=0;g<m.length;g++)_[g]=m.charCodeAt(g);return _}return new Promise((m,_)=>{Ye.get(ka.test(d.uri)?d.uri:me.join(e,d.uri),{cache:!0,responseType:"arraybuffer",retry:!1},(g,y)=>{g?_(g):m(new Uint8Array(y))})})}return t}),n&&(f=f.then(p=>(n(l.buffers[u],p),p))),f})},f2=(l,t)=>{const s=JSON.parse((i=>{if(typeof TextDecoder<"u")return new TextDecoder().decode(i);let r="";for(let n=0;n<i.length;n++)r+=String.fromCharCode(i[n]);return decodeURIComponent(escape(r))})(l));if(s.asset&&s.asset.version&&parseFloat(s.asset.version)<2){t(`Invalid gltf version. Expected version 2.0 or above but found version '${s.asset.version}'.`);return}t(null,s)},p2=(l,t)=>{const e=l instanceof ArrayBuffer?new DataView(l):new DataView(l.buffer,l.byteOffset,l.byteLength),s=e.getUint32(0,!0),i=e.getUint32(4,!0),r=e.getUint32(8,!0);if(s!==1179937895){t(`Invalid magic number found in glb header. Expected 0x46546C67, found 0x${s.toString(16)}`);return}if(i!==2){t(`Invalid version number found in glb header. Expected 2, found ${i}`);return}if(r<=0||r>e.byteLength){t(`Invalid length found in glb header. Found ${r}`);return}const n=[];let a=12;for(;a<r;){const o=e.getUint32(a,!0);a+o+8>e.byteLength&&t(`Invalid chunk length found in glb. Found ${o}`);const h=e.getUint32(a+4,!0),d=new Uint8Array(e.buffer,e.byteOffset+a+8,o);n.push({length:o,type:h,data:d}),a+=o+8}if(n.length!==1&&n.length!==2){t("Invalid number of chunks found in glb file.");return}if(n[0].type!==1313821514){t(`Invalid chunk type found in glb file. Expected 0x4E4F534A, found 0x${n[0].type.toString(16)}`);return}if(n.length>1&&n[1].type!==5130562){t(`Invalid chunk type found in glb file. Expected 0x004E4942, found 0x${n[1].type.toString(16)}`);return}t(null,{gltfChunk:n[0].data,binaryChunk:n.length===2?n[1].data:null})},m2=(l,t,e)=>{const s=()=>{const i=new Uint8Array(t);return i[0]===103&&i[1]===108&&i[2]===84&&i[3]===70};l&&l.toLowerCase().endsWith(".glb")||s()?p2(t,e):e(null,{gltfChunk:t,binaryChunk:null})},_2=(l,t,e)=>{var a,o,h,d;const s=[],i=(a=e==null?void 0:e.bufferView)==null?void 0:a.preprocess,r=(o=e==null?void 0:e.bufferView)==null?void 0:o.processAsync,n=(h=e==null?void 0:e.bufferView)==null?void 0:h.postprocess;if(!((d=l.bufferViews)!=null&&d.length))return s;for(let u=0;u<l.bufferViews.length;++u){const f=l.bufferViews[u];i&&i(f);let p;r?p=new Promise((m,_)=>{r(f,t,(g,y)=>{g?_(g):m(y)})}):p=new Promise(m=>{m(null)}),p=p.then(m=>m||t[f.buffer].then(_=>new Uint8Array(_.buffer,_.byteOffset+(f.byteOffset||0),f.byteLength))),f.hasOwnProperty("byteStride")&&(p=p.then(m=>(m.byteStride=f.byteStride,m))),n&&(p=p.then(m=>(n(f,m),m))),s.push(p)}return s};class ac{static parse(t,e,s,i,r,n,a){m2(t,s,(o,h)=>{if(o){a(o);return}f2(h.gltfChunk,(d,u)=>{if(d){a(d);return}const f=u2(u,h.binaryChunk,e,n),p=_2(u,f,n),m=c2(u,p,e,r,n),_=d2(u,m,n);o2(i,u,p,_,n).then(g=>a(null,g)).catch(g=>a(g))})})}static createDefaultMaterial(){return Lx({name:"defaultGlbMaterial"},[])}}class g2 extends Ge{constructor(t){super(t,"animation"),this.device=t.graphicsDevice,this.assets=t.assets}load(t,e,s){typeof t=="string"&&(t={load:t,original:t});const i={retry:this.maxRetries>0,maxRetries:this.maxRetries};(t.load.startsWith("blob:")||t.load.startsWith("data:"))&&(me.getExtension(t.original).toLowerCase()===".glb"?i.responseType=ps.ResponseType.ARRAY_BUFFER:i.responseType=ps.ResponseType.JSON),Ye.get(t.load,i,(r,n)=>{r?e(`Error loading animation resource: ${t.original} [${r}]`):me.getExtension(t.original).toLowerCase()===".glb"?ac.parse("filename.glb","",n,this.device,this.assets,(s==null?void 0:s.options)??{},(a,o)=>{var h;if(a)e(a);else{const d=o.animations;if((h=s==null?void 0:s.data)!=null&&h.events)for(let u=0;u<d.length;u++)d[u].events=new K0(Object.values(s.data.events));o.destroy(),e(null,d)}}):e(null,this[`_parseAnimationV${n.animation.version}`](n))})}open(t,e,s){return e}_parseAnimationV3(t){const e=t.animation,s=new B_;s.name=e.name,s.duration=e.duration;for(let i=0;i<e.nodes.length;i++){const r=new O_,n=e.nodes[i];r._name=n.name;for(let a=0;a<n.keys.length;a++){const o=n.keys[a],h=o.time,d=o.pos,u=o.rot,f=o.scale,p=new A(d[0],d[1],d[2]),m=new ie().setFromEulerAngles(u[0],u[1],u[2]),_=new A(f[0],f[1],f[2]),g=new k_(h,p,m,_);r._keys.push(g)}s.addNode(r)}return s}_parseAnimationV4(t){const e=t.animation,s=new B_;s.name=e.name,s.duration=e.duration;for(let i=0;i<e.nodes.length;i++){const r=new O_,n=e.nodes[i];r._name=n.name;const a=n.defaults.p,o=n.defaults.r,h=n.defaults.s;for(let d=0;d<n.keys.length;d++){const u=n.keys[d],f=u.t,p=a||u.p,m=o||u.r,_=h||u.s,g=new A(p[0],p[1],p[2]),y=new ie().setFromEulerAngles(m[0],m[1],m[2]),w=new A(_[0],_[1],_[2]),C=new k_(f,g,y,w);r._keys.push(C)}s.addNode(r)}return s}}class y2 extends Ge{constructor(t){super(t,"animclip")}load(t,e){typeof t=="string"&&(t={load:t,original:t});const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};t.load.startsWith("blob:")&&(s.responseType=ps.ResponseType.JSON),Ye.get(t.load,s,(i,r)=>{i?e(`Error loading animation clip resource: ${t.original} [${i}]`):e(null,r)})}open(t,e){const s=e.name,i=e.duration,r=e.inputs.map(o=>new rc(1,o)),n=e.outputs.map(o=>new rc(o.components,o.data)),a=e.curves.map(o=>new Rx([o.path],o.inputIndex,o.outputIndex,o.interpolation));return new ki(s,i,r,n,a)}}class x2 extends Ge{constructor(t){super(t,"animstategraph")}load(t,e){typeof t=="string"&&(t={load:t,original:t});const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};t.load.startsWith("blob:")&&(s.responseType=ps.ResponseType.JSON),Ye.get(t.load,s,(i,r)=>{i?e(`Error loading animation state graph resource: ${t.original} [${i}]`):e(null,r)})}open(t,e){return new Sh(e)}}const su=function(){if(typeof window>"u")return!1;const l=window.navigator.userAgent,t=l.indexOf("MSIE ");if(t>0)return parseInt(l.substring(t+5,l.indexOf(".",t)),10);if(l.indexOf("Trident/")>0){const s=l.indexOf("rv:");return parseInt(l.substring(s+3,l.indexOf(".",s)),10)}return!1}(),S2=[".ogg",".mp3",".wav",".mp4a",".m4a",".mp4",".aac",".opus"];class v2 extends Ge{constructor(t){super(t,"audio"),this.manager=t.soundManager,b.assert(this.manager,"AudioHandler cannot be created without sound manager")}_isSupported(t){const e=me.getExtension(t);return S2.indexOf(e)>-1||t.startsWith("blob:")}load(t,e){typeof t=="string"&&(t={load:t,original:t});const s=function(r){e(null,new Bb(r))},i=function(r){let n=`Error loading audio url: ${t.original}`;r&&(n+=`: ${r.message||r}`),console.warn(n),e(n)};if(this._createSound){if(!this._isSupported(t.original)){i(`Audio format for ${t.original} not supported`);return}this._createSound(t.load,s,i)}else i(null)}_createSound(t,e,s){if(Ni()){const i=this.manager;if(!i.context){s("Audio manager has no audio context");return}const r={retry:this.maxRetries>0,maxRetries:this.maxRetries};(t.startsWith("blob:")||t.startsWith("data:"))&&(r.responseType=ps.ResponseType.ARRAY_BUFFER),Ye.get(t,r,(n,a)=>{if(n){s(n);return}i.context.decodeAudioData(a,e,s)})}else{let i=null;try{i=new Audio}catch{s("No support for Audio element");return}su&&document.body.appendChild(i);const r=function(){i.removeEventListener("canplaythrough",r),su&&document.body.removeChild(i),e(i)};i.onerror=function(){i.onerror=null,su&&document.body.removeChild(i),s()},i.addEventListener("canplaythrough",r),i.src=t}}}class b2 extends Ge{constructor(t){super(t,"binary")}load(t,e){typeof t=="string"&&(t={load:t,original:t}),Ye.get(t.load,{responseType:ps.ResponseType.ARRAY_BUFFER,retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e(`Error loading binary resource: ${t.original} [${s}]`):e(null,i)})}openBinary(t){return t.buffer}}class ir{constructor(t,e,s,i){const r=function(h,d,u){const f=ir.createAsset(e.name,h,d,u);return s.add(f),f},n=[];for(let h=0;h<t.renders.length;++h)n.push(r("render",t.renders[h],h));const a=[];for(let h=0;h<t.materials.length;++h)a.push(r("material",t.materials[h],h));const o=[];for(let h=0;h<t.animations.length;++h)o.push(r("animation",t.animations[h],h));this.data=t,this._model=null,this._assetName=e.name,this._assets=s,this._defaultMaterial=i,this.renders=n,this.materials=a,this.textures=t.textures,this.animations=o}get model(){if(!this._model){const t=ir.createModel(this.data,this._defaultMaterial),e=ir.createAsset(this._assetName,"model",t,0);this._assets.add(e),this._model=e}return this._model}static createAsset(t,e,s,i){const r=new he(`${t}/${e}/${i}`,e,{url:""});return r.resource=s,r.loaded=!0,r}instantiateModelEntity(t){const e=new je;return e.addComponent("model",Object.assign({type:"asset",asset:this.model},t)),e}instantiateRenderEntity(t){const e=this._defaultMaterial,s=[],i=function(a,o,h,d,u,f,p,m){const _=u[h.id],g=_===void 0?e:d[_],y=new Be(h,g);h.morph&&(y.morphInstance=new mn(h.morph)),p.hasOwnProperty("skin")&&s.push({meshInstance:y,rootBone:a,entity:o});const w=m.get(p);if(w){const C=w.matrices,x=Dt.getDefaultInstancingFormat(h.device),M=new fs(h.device,x,C.length/16,{data:C});y.setInstancing(M),y.instancingData._destroyVertexBuffer=!0}return y},r=(a,o,h)=>{const d=new je;o._cloneInternal(d),a||(a=d);let u=null,f=null;for(let m=0;m<h.nodes.length;m++)if(h.nodes[m]===o){const g=h.gltf.nodes[m];if(g.hasOwnProperty("mesh")){const y=h.renders[g.mesh].meshes;f=this.renders[g.mesh];for(let w=0;w<y.length;w++){const C=y[w];if(C){const x=i(a,d,C,h.materials,h.meshDefaultMaterials,h.skins,g,h.nodeInstancingMap);u||(u=[]),u.push(x)}}}if(h.lights){const y=h.lights.get(g);y&&d.addChild(y.clone())}if(h.cameras){const y=h.cameras.get(g);y&&y.camera.system.cloneComponent(y,d)}}u&&(d.addComponent("render",Object.assign({type:"asset",meshInstances:u},t)),d.render.assignAsset(f));const p=o.children;for(let m=0;m<p.length;m++){const _=r(a,p[m],h);d.addChild(_)}return d},n=[];for(const a of this.data.scenes)n.push(r(null,a,this.data));return s.forEach(a=>{a.meshInstance.skinInstance=$o.createCachedSkinInstance(a.meshInstance.mesh.skin,a.rootBone,a.entity),a.meshInstance.node.render.rootBone=a.rootBone}),ir.createSceneHierarchy(n,je)}getMaterialVariants(){return this.data.variants?Object.keys(this.data.variants):[]}applyMaterialVariant(t,e){const s=e?this.data.variants[e]:null;if(s===void 0){b.warn(`No variant named ${e} exists in resource`);return}const i=t.findComponents("render");for(let r=0;r<i.length;r++){const n=i[r];this._applyMaterialVariant(s,n.meshInstances)}}applyMaterialVariantInstances(t,e){const s=e?this.data.variants[e]:null;if(s===void 0){b.warn(`No variant named ${e} exists in resource`);return}this._applyMaterialVariant(s,t)}_applyMaterialVariant(t,e){e.forEach(s=>{if(t===null)s.material=this._defaultMaterial;else{const i=this.data.meshVariants[s.mesh.id];i&&(s.material=this.data.materials[i[t]])}b.assert(s.material)})}static createSceneHierarchy(t,e){let s=null;if(t.length===1)s=t[0];else{s=new e("SceneGroup");for(const i of t)s.addChild(i)}return s}static createModel(t,e){const s=function(n,a,o,h,d,u,f){const p=t.meshDefaultMaterials[a.id],m=p===void 0?e:d[p],_=new Be(a,m,u);if(a.morph){const g=new mn(a.morph);_.morphInstance=g,n.morphInstances.push(g)}if(f.hasOwnProperty("skin")){const g=f.skin,y=o[g];a.skin=y;const w=h[g];_.skinInstance=w,n.skinInstances.push(w)}n.meshInstances.push(_)},i=new Ui,r=[];for(const n of t.skins){const a=new hl(n);a.bones=n.bones,r.push(a)}i.graph=ir.createSceneHierarchy(t.scenes,Oe);for(let n=0;n<t.nodes.length;n++){const a=t.nodes[n];if(a.root===i.graph){const o=t.gltf.nodes[n];if(o.hasOwnProperty("mesh")){const h=t.renders[o.mesh].meshes;for(let d=0;d<h.length;d++){const u=h[d];u&&s(i,u,t.skins,r,t.materials,a,o)}}}}return i}destroy(){const t=this._assets,e=function(i){t.remove(i),i.unload()},s=function(i){i.forEach(r=>{e(r)})};this.animations&&(s(this.animations),this.animations=null),this.textures&&(s(this.textures),this.textures=null),this.materials&&(s(this.materials),this.materials=null),this.renders&&(s(this.renders),this.renders=null),this._model&&(e(this._model),this._model=null),this.data=null,this.assets=null}}class w2{constructor(t,e,s){this._device=t,this._assets=e,this._defaultMaterial=ac.createDefaultMaterial(),this.maxRetries=s}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}load(t,e,s){he.fetchArrayBuffer(t.load,(i,r)=>{i?e(i):ac.parse(this._getUrlWithoutParams(t.original),me.extractPath(t.load),r,this._device,s.registry,s.options,(n,a)=>{n?e(n):e(null,new ir(a,s,this._assets,this._defaultMaterial))})},s,this.maxRetries)}open(t,e,s){return e}patch(t,e){}}class T2 extends Ge{constructor(t){super(t,"container"),this.glbContainerParser=new w2(t.graphicsDevice,t.assets,0),this.parsers={}}set maxRetries(t){this.glbContainerParser.maxRetries=t;for(const e in this.parsers)this.parsers.hasOwnProperty(e)&&(this.parsers[e].maxRetries=t)}get maxRetries(){return this.glbContainerParser.maxRetries}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}_getParser(t){const e=t?me.getExtension(this._getUrlWithoutParams(t)).toLowerCase().replace(".",""):null;return this.parsers[e]||this.glbContainerParser}load(t,e,s){typeof t=="string"&&(t={load:t,original:t}),this._getParser(t.original).load(t,e,s)}open(t,e,s){return this._getParser(t).open(t,e,s)}}class A2 extends Ge{constructor(e){super(e,"css");c(this,"decoder",null)}load(e,s){typeof e=="string"&&(e={load:e,original:e}),Ye.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(i,r)=>{i?s(`Error loading css resource: ${e.original} [${i}]`):s(null,r)})}openBinary(e){return this.decoder??(this.decoder=new TextDecoder("utf-8")),this.decoder.decode(e)}}class E2 extends Ge{constructor(t){super(t,"cubemap"),this._device=t.graphicsDevice,this._registry=t.assets,this._loader=t.loader}load(t,e,s){this.loadAssets(s,e)}open(t,e,s){return s?s.resource:null}patch(t,e){this.loadAssets(t,(s,i)=>{s&&(e.fire("error",t),e.fire(`error:${t.id}`,s,t),t.fire("error",t))})}getAssetIds(t){const e=[];if(e[0]=t.file,(t.loadFaces||!t.file)&&t.data&&t.data.textures)for(let s=0;s<6;++s)e[s+1]=t.data.textures[s];else e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=null;return e}compareAssetIds(t,e){return t&&e?parseInt(t,10)===t||typeof t=="string"?t===e:t.url===e.url:t!==null==(e!==null)}update(t,e,s){const i=t.data||{},r=t._handlerState.assets,n=t._resources;let a,o,h;const d=[null,null,null,null,null,null,null],u=function(){return i.hasOwnProperty("type")?i.type:i.hasOwnProperty("rgbm")?i.rgbm?ln:Bi:null};if(!t.loaded||s[0]!==r[0]){if(s[0])if(a=s[0].resource,a.cubemap)for(h=0;h<6;++h)d[h+1]=new ce(this._device,{name:`${t.name}_prelitCubemap${a.width>>h}`,cubemap:!0,type:u()||a.type,width:a.width>>h,height:a.height>>h,format:a.format,levels:[a._levels[h]],addressU:oe,addressV:oe,mipmaps:h===0});else d[1]=a}else d[1]=n[1]||null,d[2]=n[2]||null,d[3]=n[3]||null,d[4]=n[4]||null,d[5]=n[5]||null,d[6]=n[6]||null;const f=s.slice(1);if(!t.loaded||!this.cmpArrays(f,r.slice(1))){if(f.indexOf(null)===-1){const p=f.map(y=>y.resource),m=[];for(o=0;o<p[0]._levels.length;++o)m.push(p.map(y=>y._levels[o]));const _=p[0].format,g=new ce(this._device,{name:`${t.name}_faces`,cubemap:!0,type:u()||p[0].type,width:p[0].width,height:p[0].height,format:_===ur?Te:_,mipmaps:i.mipmaps??!0,levels:m,minFilter:i.hasOwnProperty("minFilter")?i.minFilter:p[0].minFilter,magFilter:i.hasOwnProperty("magFilter")?i.magFilter:p[0].magFilter,anisotropy:i.hasOwnProperty("anisotropy")?i.anisotropy:1,addressU:oe,addressV:oe});d[0]=g}}else d[0]=n[0]||null;if(!this.cmpArrays(d,n))for(t.resources=d,t._handlerState.assetIds=e,t._handlerState.assets=s,h=0;h<n.length;++h)n[h]!==null&&d.indexOf(n[h])===-1&&n[h].destroy();for(h=0;h<r.length;++h)r[h]!==null&&s.indexOf(r[h])===-1&&r[h].unload()}cmpArrays(t,e){if(t.length!==e.length)return!1;for(let s=0;s<t.length;++s)if(t[s]!==e[s])return!1;return!0}resolveId(t){const e=parseInt(t,10);return e===t||e.toString()===t?e:t}loadAssets(t,e){t.hasOwnProperty("_handlerState")||(t._handlerState={assetIds:[null,null,null,null,null,null,null],assets:[null,null,null,null,null,null,null]});const s=this,i=s.getAssetIds(t),r=[null,null,null,null,null,null,null],n=t._handlerState.assetIds,a=t._handlerState.assets,o=s._registry;let h=7;const d=function(m,_){r[m]=_,h--,h===0&&(s.update(t,i,r),e(null,t.resources))},u=function(m,_,g){e(_)},f=function(m,_){_.loaded?d(m,_):(o.once(`load:${_.id}`,d.bind(s,m)),o.once(`error:${_.id}`,u.bind(s,m)),_.loading||o.load(_))};let p;for(let m=0;m<7;++m){const _=this.resolveId(i[m]);if(!_)d(m,null);else if(s.compareAssetIds(_,n[m]))f(m,a[m]);else if(parseInt(_,10)===_)p=o.get(_),p?f(m,p):setTimeout(((g,y)=>{const w=o.get(y);w?f(g,w):u(g,`failed to find dependent cubemap asset=${y}`)}).bind(null,m,_));else{const g=typeof _=="string"?{url:_,filename:_}:_,y=g.url.search(".dds")===-1?{type:"rgbp",addressu:"clamp",addressv:"clamp",mipmaps:!1}:null;p=new he(`${t.name}_part_${m}`,"texture",g,y),o.add(p),f(m,p)}}}}class C2 extends Ge{constructor(t){super(t,"folder")}load(t,e){e(null,null)}}class zg{constructor(t,e){this.type=e&&e.type||tc,this.em=1,this.textures=t,this.intensity=0,this._data=null,this.data=e}set data(t){if(this._data=t,!!t&&(this._data.intensity!==void 0&&(this.intensity=this._data.intensity),this._data.info||(this._data.info={}),(!this._data.version||this._data.version<2)&&(this._data.info.maps=[{width:this._data.info.width,height:this._data.info.height}],this._data.chars)))for(const e in this._data.chars)this._data.chars[e].map=0}get data(){return this._data}}function iu(l){return l.version<3&&(l.version<2&&(l.info.maps=l.info.maps||[{width:l.info.width,height:l.info.height}]),l.chars=Object.keys(l.chars||{}).reduce((t,e)=>{const s=l.chars[e],i=s.letter!==void 0?s.letter:dh.fromCodePoint(e);return l.version<2&&(s.map=s.map||0),t[i]=s,t},{}),l.version=3),l}class M2 extends Ge{constructor(t){super(t,"font"),this._loader=t.loader,this.maxRetries=0}load(t,e,s){typeof t=="string"&&(t={load:t,original:t});const i=this;me.getExtension(t.original)===".json"?Ye.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(r,n)=>{if(r)e(`Error loading font resource: ${t.original} [${r}]`);else{const a=iu(n);i._loadTextures(t.load.replace(".json",".png"),a,(o,h)=>{o?e(o):e(null,{data:a,textures:h})})}}):(s&&s.data&&(s.data=iu(s.data)),this._loadTextures(t.load,s&&s.data,e))}_loadTextures(t,e,s){const i=e.info.maps.length;let r=0,n=null;const a=new Array(i),o=this._loader,h=function(d){const u=function(f,p){if(!n){if(f){n=f,s(f);return}p.upload(),a[d]=p,r++,r===i&&s(null,a)}};d===0?o.load(t,"texture",u):o.load(t.replace(".png",`${d}.png`),"texture",u)};for(let d=0;d<i;d++)h(d)}open(t,e,s){let i;return e.textures?i=new zg(e.textures,e.data):i=new zg(e,null),i}patch(t,e){const s=t.resource;!s.data&&t.data?s.data=t.data:!t.data&&s.data&&(t.data=s.data),t.data&&(t.data=iu(t.data))}}async function P2(){const l=.28209479177387814;class t{constructor(a,o,h){this.x=a,this.y=o,this.z=h}}class e{constructor(a,o,h,d){this.x=a,this.y=o,this.z=h,this.w=d}}class s{constructor(a,o,h,d){this.x=a,this.y=o,this.z=h,this.w=d}set(a,o,h,d){this.x=a,this.y=o,this.z=h,this.w=d}}class i{constructor(a,o,h,d,u,f,p,m,_,g,y,w){const C=(R,D)=>{const P=(1<<D)-1;return(R&P)/P},x=(R,D)=>{R.x=C(D>>>21,11),R.y=C(D>>>11,10),R.z=C(D,11)},M=(R,D)=>{R.x=C(D>>>24,8),R.y=C(D>>>16,8),R.z=C(D>>>8,8),R.w=C(D,8)},S=(R,D)=>{const P=1/(Math.sqrt(2)*.5),L=(C(D>>>20,10)-.5)*P,k=(C(D>>>10,10)-.5)*P,H=(C(D,10)-.5)*P,N=Math.sqrt(1-(L*L+k*k+H*H));switch(D>>>30){case 0:R.set(L,k,H,N);break;case 1:R.set(N,k,H,L);break;case 2:R.set(k,N,H,L);break;case 3:R.set(k,H,N,L);break}},v=(R,D,P)=>R*(1-P)+D*P,E=[3,8,15][u-1],T=6;this.read=R=>{const D=Math.floor(R/256)*o;if(f&&(x(f,h[R*T+0]),f.x=v(a[D+0],a[D+3],f.x),f.y=v(a[D+1],a[D+4],f.y),f.z=v(a[D+2],a[D+5],f.z)),p&&S(p,h[R*T+1]),m&&(x(m,h[R*T+2]),m.x=v(a[D+6],a[D+9],m.x),m.y=v(a[D+7],a[D+10],m.y),m.z=v(a[D+8],a[D+11],m.z)),_&&(M(_,h[R*T+3]),o>12&&(_.x=v(a[D+12],a[D+15],_.x),_.y=v(a[D+13],a[D+16],_.y),_.z=v(a[D+14],a[D+17],_.z))),g&&(x(g,h[R*T+4]),g.x=v(a[D+18],a[D+21],g.x),g.y=v(a[D+19],a[D+22],g.y),g.z=v(a[D+20],a[D+23],g.z)),y&&(x(y,h[R*T+5]),y.x=v(a[D+24],a[D+25],y.x),y.y=v(a[D+26],a[D+27],y.y)),w&&u>0)for(let P=0;P<3;++P)for(let L=0;L<15;++L)w[P*15+L]=L<E?d[(R*3+P)*E+L]*(8/255)-4:0}}}self.onmessage=async n=>{const{data:a}=n;switch(a.type){case"initWorker":break;case"decompress":r(a.numSplats,a.chunkData,a.chunkSize,a.vertexData,a.shData,a.shBands);break}};const r=(n,a,o,h,d,u)=>{const f=["x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","t","t_scale","motion_0","motion_1","motion_2"];if(u>0){const S=[];for(let v=0;v<45;++v)S.push(`f_rest_${v}`);f.splice(f.indexOf("f_dc_0")+1,0,...S)}const p={};f.forEach(S=>{p[S]=new Float32Array(n)}),console.log("decompress");const m=new t,_=new s,g=new t,y=new e,w=new t,C=new t,x=u>0?new Float32Array(45):null,M=new i(a,o,h,d,u,m,_,g,y,w,C,x);for(let S=0;S<n;++S)if(M.read(S),p.x[S]=m.x,p.y[S]=m.y,p.z[S]=m.z,p.rot_1[S]=_.x,p.rot_2[S]=_.y,p.rot_3[S]=_.z,p.rot_0[S]=_.w,p.scale_0[S]=g.x,p.scale_1[S]=g.y,p.scale_2[S]=g.z,p.motion_0[S]=w.x,p.motion_1[S]=w.y,p.motion_2[S]=w.z,p.t_scale[S]=C.x,p.t[S]=C.y,p.f_dc_0[S]=(y.x-.5)/l,p.f_dc_1[S]=(y.y-.5)/l,p.f_dc_2[S]=(y.z-.5)/l,p.opacity[S]=y.w<=0?-40:y.w>=1?40:-Math.log(1/y.w-1),x)for(let v=0;v<45;++v)p[`f_rest_${v}`][S]=x[v];self.postMessage({type:"decompressed",data:p})}}class R2 extends de{constructor(){super();c(this,"worker");this._initWorker()}async _initWorker(){this.worker=new Worker(URL.createObjectURL(new Blob([`(${P2.toString()})()`],{type:"application/javascript"}))),this.worker.onmessage=e=>{if(!this.worker)return;const{data:s}=e;switch(s.type){case"decompressed":console.log("decompressed"),this.fire("decompressed",s.data);break}}}decompress(e,s,i,r,n,a,o){this.chunkData=new Float32Array(s).slice(),this.vertexData=new Uint32Array(r).slice(),this.shData=new Uint8Array(n).slice(),this.worker.postMessage({type:"decompress",numSplats:e,chunkData:this.chunkData,chunkSize:i,vertexData:this.vertexData,shData:this.shData,shBands:a})}destroy(){this.worker&&(this.worker.terminate(),this.worker=null)}}class I2{constructor(t,e,s,i,r,n,a,o){const h=(M,S)=>{const v=(1<<S)-1;return(M&v)/v},d=(M,S)=>{M.x=h(S>>>21,11),M.y=h(S>>>11,10),M.z=h(S,11)},u=(M,S)=>{M.x=h(S>>>24,8),M.y=h(S>>>16,8),M.z=h(S>>>8,8),M.w=h(S,8)},f=(M,S)=>{const v=1/(Math.sqrt(2)*.5),E=(h(S>>>20,10)-.5)*v,T=(h(S>>>10,10)-.5)*v,R=(h(S,10)-.5)*v,D=Math.sqrt(1-(E*E+T*T+R*R));switch(S>>>30){case 0:M.set(E,T,R,D);break;case 1:M.set(D,T,R,E);break;case 2:M.set(T,D,R,E);break;case 3:M.set(T,R,D,E);break}},p=(M,S,v)=>M*(1-v)+S*v,{chunkData:m,chunkSize:_,vertexData:g,shData:y,shBands:w}=t,C=[3,8,15][w-1],x=6;this.read=M=>{const S=Math.floor(M/256)*_;if(e&&(d(e,g[M*x+0]),e.x=p(m[S+0],m[S+3],e.x),e.y=p(m[S+1],m[S+4],e.y),e.z=p(m[S+2],m[S+5],e.z)),s&&f(s,g[M*x+1]),i&&(d(i,g[M*x+2]),i.x=p(m[S+6],m[S+9],i.x),i.y=p(m[S+7],m[S+10],i.y),i.z=p(m[S+8],m[S+11],i.z)),r&&(u(r,g[M*x+3]),_>12&&(r.x=p(m[S+12],m[S+15],r.x),r.y=p(m[S+13],m[S+16],r.y),r.z=p(m[S+14],m[S+17],r.z))),n&&(d(n,g[M*x+4]),n.x=p(m[S+18],m[S+21],n.x),n.y=p(m[S+19],m[S+22],n.y),n.z=p(m[S+20],m[S+23],n.z)),a&&(d(a,g[M*x+5]),a.x=p(m[S+24],m[S+25],a.x),a.y=p(m[S+26],m[S+27],a.y)),o&&w>0)for(let v=0;v<3;++v)for(let E=0;E<15;++E)o[v*15+E]=E<C?y[(M*3+v)*C+E]*(8/255)-4:0}}}class D2{constructor(){c(this,"numSplats");c(this,"chunkData");c(this,"vertexData");c(this,"is4D");c(this,"shData")}createIter(t,e,s,i,r,n,a){return new I2(this,t,e,s,i,r,n,a)}calcAabb(t){const{chunkData:e,numChunks:s,chunkSize:i}=this;let r=Math.exp(Math.max(e[9],e[10],e[11])),n=e[0]-r,a=e[1]-r,o=e[2]-r,h=e[3]+r,d=e[4]+r,u=e[5]+r;for(let f=1;f<s;++f){const p=f*i;r=Math.exp(Math.max(e[p+9],e[p+10],e[p+11])),n=Math.min(n,e[p+0]-r),a=Math.min(a,e[p+1]-r),o=Math.min(o,e[p+2]-r),h=Math.max(h,e[p+3]+r),d=Math.max(d,e[p+4]+r),u=Math.max(u,e[p+5]+r)}return t.center.set((n+h)*.5,(a+d)*.5,(o+u)*.5),t.halfExtents.set((h-n)*.5,(d-a)*.5,(u-o)*.5),!0}getCenters(t){const{vertexData:e,chunkData:s,numChunks:i,chunkSize:r}=this;let n,a,o,h,d,u;for(let f=0;f<i;++f){const p=f*r;n=s[p+0],a=s[p+1],o=s[p+2],h=s[p+3],d=s[p+4],u=s[p+5];const m=Math.min(this.numSplats,(f+1)*256);for(let _=f*256;_<m;++_){const g=e[_*4],y=(g>>>21)/2047,w=(g>>>11&1023)/1023,C=(g&2047)/2047;t[_*3+0]=(1-y)*n+y*h,t[_*3+1]=(1-w)*a+w*d,t[_*3+2]=(1-C)*o+C*u}}}calcFocalPoint(t){const{chunkData:e,numChunks:s,chunkSize:i}=this;t.x=0,t.y=0,t.z=0;for(let r=0;r<s;++r){const n=r*i;t.x+=e[n+0]+e[n+3],t.y+=e[n+1]+e[n+4],t.z+=e[n+2]+e[n+5]}t.mulScalar(.5/s)}get isCompressed(){return!0}get numChunks(){return Math.ceil(this.numSplats/256)}get chunkSize(){return this.chunkData.length/this.numChunks}get shBands(){var e;return{3:1,8:2,15:3}[((e=this.shData)==null?void 0:e.length)/this.numSplats/3]??0}async decompress(){const t=["x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","t","t_scale","motion_0","motion_1","motion_2"],{shBands:e}=this;if(e>0){const r=[];for(let n=0;n<45;++n)r.push(`f_rest_${n}`);t.splice(t.indexOf("f_dc_0")+1,0,...r)}const s={};t.forEach(r=>{s[r]=new Float32Array(this.numSplats)});const i=new R2;return i.decompress(this.numSplats,this.chunkData,this.chunkSize,this.vertexData,this.shData,this.shBands,s),new Promise((r,n)=>{i.on("decompressed",a=>{i.destroy(),r(new Fa([{name:"vertex",count:this.numSplats,properties:t.map(o=>({name:o,type:"float",byteSize:4,storage:a[o]}))}]))})})}}const L2=(l,t,e,s,i)=>{for(let r=0;r<i;++r)for(let n=0;n<s;++n)l[r*t+n]=e[r*s+n]},Ug=(l,t,e,s,i,r)=>{for(let n=0;n<i;++n)for(let a=0;a<s;++a)l[n*t+a]=e[n*s+a+r]};class F2{constructor(t,e){c(this,"device");c(this,"numSplats");c(this,"numSplatsVisible");c(this,"aabb");c(this,"is4D");c(this,"centers");c(this,"packedTexture");c(this,"packedTimeTexture");c(this,"chunkTexture");c(this,"shTexture0");c(this,"shTexture1");c(this,"shTexture2");const{chunkData:s,chunkSize:i,numChunks:r,numSplats:n,vertexData:a,shBands:o,is4D:h}=e;this.device=t,this.numSplats=n,this.numVisibleSplats=n,this.is4D=h,this.aabb=new ve,e.calcAabb(this.aabb),this.centers=new Float32Array(n*3),e.getCenters(this.centers),this.packedTexture=this.createTexture("packedTexture",yt,this.evalTextureSize(n));const d=this.packedTexture.lock();Ug(d,4,a,6,n,0),this.packedTimeTexture=this.createTexture("packedTimeTexture",yt,this.evalTextureSize(n));const u=this.packedTimeTexture.lock();Ug(u,2,a,6,n,4);const f=this.evalTextureSize(r);f.x*=7,this.chunkTexture=this.createTexture("chunkData",et,f);const p=this.chunkTexture.lock();if(L2(p,4*7,s,i,r),i===12)for(let m=0;m<r;++m)p[m*20+15]=1,p[m*20+16]=1,p[m*20+17]=1;if(this.chunkTexture.unlock(),o>0){const{shData:m}=e,_=this.evalTextureSize(n),g=this.createTexture("shTexture0",yt,_),y=this.createTexture("shTexture1",yt,_),w=this.createTexture("shTexture2",yt,_),C=g.lock(),x=y.lock(),M=w.lock(),S=new Uint8Array(C.buffer),v=new Uint8Array(x.buffer),E=new Uint8Array(M.buffer),T=[3,8,15][o-1];for(let R=0;R<n;++R)for(let D=0;D<15;++D)S[R*16+D]=D<T?m[(R*3+0)*T+D]:127,v[R*16+D]=D<T?m[(R*3+1)*T+D]:127,E[R*16+D]=D<T?m[(R*3+2)*T+D]:127;g.unlock(),y.unlock(),w.unlock(),this.shTexture0=g,this.shTexture1=y,this.shTexture2=w}else this.shTexture0=null,this.shTexture1=null,this.shTexture2=null}destroy(){var t,e,s,i,r,n;(t=this.packedTexture)==null||t.destroy(),(e=this.packedTimeTexture)==null||e.destroy(),(s=this.chunkTexture)==null||s.destroy(),(i=this.shTexture0)==null||i.destroy(),(r=this.shTexture1)==null||r.destroy(),(n=this.shTexture2)==null||n.destroy()}createMaterial(t){const e=U0(t);return e.setDefine("GSPLAT_COMPRESSED_DATA",!0),e.setParameter("packedTexture",this.packedTexture),e.setParameter("packedTimeTexture",this.packedTimeTexture),e.setParameter("chunkTexture",this.chunkTexture),e.setParameter("numSplats",this.numSplatsVisible),e.setParameter("IS_4D",this.is4D),this.shTexture0?(e.setDefine("SH_BANDS",3),e.setParameter("shTexture0",this.shTexture0),e.setParameter("shTexture1",this.shTexture1),e.setParameter("shTexture2",this.shTexture2)):e.setDefine("SH_BANDS",0),e}evalTextureSize(t){const e=Math.ceil(Math.sqrt(t)),s=Math.ceil(t/e);return new W(e,s)}createTexture(t,e,s,i){return new ce(this.device,{name:t,width:s.x,height:s.y,format:e,cubemap:!1,mipmaps:!1,minFilter:fe,magFilter:fe,addressU:oe,addressV:oe,...i?{levels:[i]}:{}})}}class k2{constructor(t,e,s){c(this,"device");c(this,"splatData");c(this,"splat",null);c(this,"comments",null);c(this,"splatInstance",null);console.log("____ ENGINE IVAN","new GSplatResource"),this.device=t,this.splatData=e,this.comments=s}destroy(){var t;this.device=null,this.splatData=null,(t=this.splat)==null||t.destroy(),this.splat=null,this.splatInstance=null}createSplat(){return console.log("____ ENGINE IVAN","GSplatResource.createSplat"),this.splat||(this.splat=this.splatData.isCompressed?new F2(this.device,this.splatData):new G1(this.device,this.splatData)),this.splat}appendGSplatData(t,e,s){console.log("____ ENGINE IVAN","GSplatResource.appendGSplatData"),this.splat.timeOption=e,this.splatData.appendGSplatData(t,s,e),this.splat.updateData(this.splatData),this.splatInstance.updateData(this.splat)}instantiate(t={}){console.log("____ ENGINE IVAN","GSplatResource.instantiate"),this.splatInstance=this.createInstance(t);const e=new je,s=e.addComponent("gsplat",{instance:this.splatInstance});return e.setLocalEulerAngles(0,0,0),s.customAabb=this.splatInstance.splat.aabb.clone(),e}createInstance(t={}){console.log("____ ENGINE IVAN","GSplatResource.createInstance");const e=this.createSplat();return new Gp(e,t)}}const O2="super4d-cache-v1",B2={maxAge:30*24*60*60*1e3,maxSize:10*1024*1024*1024};class N2{constructor(t={}){this.options={...B2,...t},this.cache=null,this.init()}async init(){try{this.cache=await caches.open(O2)}catch(t){console.error("Failed to initialize cache:",t)}}async get(t){if(!this.cache)return null;try{const e=await this.cache.match(t);if(!e)return null;const s=e.headers.get("x-cache-time");return s&&Date.now()-parseInt(s)>this.options.maxAge?(await this.delete(t),null):(console.log("____ ENGINE IVAN","cache hit",t),e)}catch(e){return console.error("Cache get error:",e),null}}async set(t,e){if(!(!this.cache||t.startsWith("blob:")))try{const s=e.clone(),i=new Headers(s.headers);i.set("x-cache-time",Date.now().toString());const r=new Response(await s.blob(),{status:s.status,statusText:s.statusText,headers:i});await this.cache.put(t,r)}catch(s){console.error("Cache set error:",s)}}async delete(t){if(this.cache)try{await this.cache.delete(t)}catch(e){console.error("Cache delete error:",e)}}async clear(){if(this.cache)try{await this.cache.keys().then(t=>Promise.all(t.map(e=>this.cache.delete(e))))}catch(t){console.error("Cache clear error:",t)}}}class z2{constructor(t={}){this.cacheManager=new N2(t.cache),this.retryCount=t.retryCount||3,this.retryDelay=t.retryDelay||1e3}async fetch(t,e={}){const{useCache:s=!0,forceRefresh:i=!1,...r}=e;if(i&&await this.cacheManager.delete(t),s){const a=await this.cacheManager.get(t);if(a)return a}let n;for(let a=0;a<this.retryCount;a++)try{const o=await fetch(t,r);if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return s&&await this.cacheManager.set(t,o.clone()),o}catch(o){n=o,a<this.retryCount-1&&await new Promise(h=>setTimeout(h,this.retryDelay*(a+1)))}throw n}async clearCache(){await this.cacheManager.clear()}}const U2=new z2,Vg=new Uint8Array([112,108,121,10]),Gg=new Uint8Array([10,101,110,100,95,104,101,97,100,101,114,10]),Ef=new Map([["char",Int8Array],["uchar",Uint8Array],["short",Int16Array],["ushort",Uint16Array],["int",Int32Array],["uint",Uint32Array],["float",Float32Array],["double",Float64Array]]);class V2{constructor(t,e){c(this,"reader");c(this,"progressFunc");c(this,"data");c(this,"view");c(this,"head",0);c(this,"tail",0);this.reader=t,this.progressFunc=e}async read(){var s;const{value:t,done:e}=await this.reader.read();if(e)throw new Error("Stream finished before end of header");this.push(t),(s=this.progressFunc)==null||s.call(this,t.byteLength)}push(t){if(!this.data)this.data=t,this.view=new DataView(this.data.buffer),this.tail=t.length;else{const e=this.tail-this.head,s=e+t.length;if(this.data.length>=s)this.head>0?(this.data.copyWithin(0,this.head,this.tail),this.data.set(t,e),this.head=0,this.tail=s):(this.data.set(t,this.tail),this.tail+=t.length);else{const i=new Uint8Array(s);this.head>0||this.tail<this.data.length?i.set(this.data.subarray(this.head,this.tail),0):i.set(this.data,0),i.set(t,e),this.data=i,this.view=new DataView(this.data.buffer),this.head=0,this.tail=s}}}compact(){this.head>0&&(this.data.copyWithin(0,this.head,this.tail),this.tail-=this.head,this.head=0)}get remaining(){return this.tail-this.head}getInt8(){const t=this.view.getInt8(this.head);return this.head++,t}getUint8(){const t=this.view.getUint8(this.head);return this.head++,t}getInt16(){const t=this.view.getInt16(this.head,!0);return this.head+=2,t}getUint16(){const t=this.view.getUint16(this.head,!0);return this.head+=2,t}getInt32(){const t=this.view.getInt32(this.head,!0);return this.head+=4,t}getUint32(){const t=this.view.getUint32(this.head,!0);return this.head+=4,t}getFloat32(){const t=this.view.getFloat32(this.head,!0);return this.head+=4,t}getFloat64(){const t=this.view.getFloat64(this.head,!0);return this.head+=8,t}}const G2=l=>{console.log("____ ENGINE IVAN","parse ply Header");const t=[],e=[];let s;for(let i=1;i<l.length;++i){const r=l[i].split(" ");switch(r[0]){case"comment":e.push(r.slice(1).join(" "));break;case"format":s=r[1];break;case"element":t.push({name:r[1],count:parseInt(r[2],10),properties:[]});break;case"property":{if(!Ef.has(r[1]))throw new Error(`Unrecognized property data type '${r[1]}' in ply header`);t[t.length-1].properties.push({type:r[1],name:r[2],storage:null,byteSize:Ef.get(r[1]).BYTES_PER_ELEMENT});break}default:throw new Error(`Unrecognized header value '${r[0]}' in ply header`)}}return{elements:t,format:s,comments:e}},H2=l=>{const t=["min_x","min_y","min_z","max_x","max_y","max_z","min_scale_x","min_scale_y","min_scale_z","max_scale_x","max_scale_y","max_scale_z","min_r","min_g","min_b","max_r","max_g","max_b","min_motion_x","min_motion_y","min_motion_z","max_motion_x","max_motion_y","max_motion_z","min_time_scale","max_time_scale","min_time","max_time"],e=["packed_position","packed_rotation","packed_scale","packed_color","packed_motion","packed_time"],s=new Array(45).fill("").map((n,a)=>`f_rest_${a}`),i=()=>l[0].name==="chunk"&&l[0].properties.every((n,a)=>n.name===t[a]&&n.type==="float")&&l[1].name==="vertex"&&l[1].properties.every((n,a)=>n.name===e[a]&&n.type==="uint"),r=()=>l[2].name==="sh"&&[9,24,45].indexOf(l[2].properties.length)!==-1&&l[2].properties.every((n,a)=>n.name===s[a]&&n.type==="uchar");return l.length===2&&i()||l.length===3&&i()&&r()},W2=l=>l.length===1&&l[0].name==="vertex"&&l[0].properties.every(t=>t.type==="float"),$2=async(l,t)=>{const e=new D2,s=t[0].count,i=t[0].properties.length,r=t[1].count,n=t[1].properties.some(h=>h.name==="packed_time"),a=h=>{const d=Math.ceil(Math.sqrt(h)),u=Math.ceil(h/d);return d*u};e.numSplats=r,e.is4D=n,e.chunkData=new Float32Array(s*i),e.vertexData=new Uint32Array(a(r)*6);const o=async(h,d)=>{const u=new Uint8Array(h);let f=0;for(;f<d;){for(;l.remaining===0;)await l.read();const p=Math.min(d-f,l.remaining),m=l.data;for(let _=0;_<p;++_)u[f++]=m[l.head++]}};return await o(e.chunkData.buffer,s*i*4),await o(e.vertexData.buffer,r*6*4),t.length===3&&(e.shData=new Uint8Array(t[2].count*t[2].properties.length),await o(e.shData.buffer,e.shData.byteLength)),e},q2=async(l,t)=>{console.log("____ ENGINE IVAN","readFloatPly");const e=t[0],s=e.properties,i=s.length,r=s.map(d=>d.storage),n=s.reduce((d,u)=>d+u.byteSize,0);let a=0,o;const h=()=>{const d=l.data.buffer;(o==null?void 0:o.buffer)!==d&&(o=new Float32Array(d,0,d.byteLength/4))};for(h();a<e.count;){for(;l.remaining<n;)await l.read(),h();const d=Math.min(e.count-a,Math.floor(l.remaining/n));for(let u=0;u<i;++u){const f=r[u];for(let p=0;p<d;++p)f[p+a]=o[p*i+u]}a+=d,l.head+=d*n}return new Fa(t)},X2=async(l,t)=>{for(let e=0;e<t.length;++e){const s=t[e],i=s.properties.reduce((a,o)=>a+o.byteSize,0),r=s.properties.map(a=>{if(a.storage)switch(a.type){case"char":return(o,h)=>{a.storage[h]=o.getInt8()};case"uchar":return(o,h)=>{a.storage[h]=o.getUint8()};case"short":return(o,h)=>{a.storage[h]=o.getInt16()};case"ushort":return(o,h)=>{a.storage[h]=o.getUint16()};case"int":return(o,h)=>{a.storage[h]=o.getInt32()};case"uint":return(o,h)=>{a.storage[h]=o.getUint32()};case"float":return(o,h)=>{a.storage[h]=o.getFloat32()};case"double":return(o,h)=>{a.storage[h]=o.getFloat64()};default:throw new Error(`Unsupported property data type '${a.type}' in ply header`)}else return o=>{o.head+=a.byteSize}});let n=0;for(;n<s.count;){for(;l.remaining<i;)await l.read();const a=Math.min(s.count-n,Math.floor(l.remaining/i));for(let o=0;o<a;++o){for(let h=0;h<s.properties.length;++h)r[h](l,n);n++}}}return new Fa(t)},j2=async(l,t=null,e=null)=>{console.log("____ ENGINE IVAN","readPly");const s=(f,p)=>{const m=f.length-p.length;let _,g;for(_=0;_<=m;++_){for(g=0;g<p.length&&f[_+g]===p[g];++g);if(g===p.length)return _}return-1},i=(f,p)=>{if(f.length<p.length)return!1;for(let m=0;m<p.length;++m)if(f[m]!==p[m])return!1;return!0},r=new V2(l,e);let n;for(;;){if(await r.read(),r.tail>=Vg.length&&!i(r.data,Vg))throw new Error("Invalid ply header");if(n=s(r.data,Gg),n!==-1)break}const a=new TextDecoder("ascii").decode(r.data.subarray(0,n)).split(`
`),{elements:o,format:h,comments:d}=G2(a);if(h!=="binary_little_endian")throw new Error("Unsupported ply format");return r.head=n+Gg.length,r.compact(),{data:await(async()=>H2(o)?await $2(r,o):(o.forEach(f=>{f.properties.forEach(p=>{const m=Ef.get(p.type);if(m){const _=!t||t(p.name)?new m(f.count):null;p.storage=_}})}),W2(o)?await q2(r,o):await X2(r,o)))(),comments:d}},Y2=l=>!0;class K2{constructor(t,e,s){c(this,"urlList");c(this,"device");c(this,"assets");c(this,"maxRetries");c(this,"gsplatResource");console.log("____ ENGINE IVAN","Register PlyParser.constructor"),this.device=t,this.assets=e,this.maxRetries=s,this.urlList=[],this.gsplatResource=null,this.totalReceived=0}async load(t,e,s){this.urlList=[],console.log("____ ENGINE IVAN","PlyParser.load"),t.load.includes(",")?this.urlList=t.load.split(","):this.urlList.push(t.load);const i=s.data.loadAllSeq?this.urlList.length:1,r=s.data.timeOption,n=s.data.events;for(let a=0;a<i;a++)await this.loadGsplatData(this.urlList,e,s,a,r,n,i);n.fire("loadAllAssetsDone")}async loadGsplatData(t,e,s,i,r,n,a){var h;const o=t[i].trim();try{const d=await U2.fetch(o);if(!d||!d.body)e("Error loading resource",null);else{const u=parseInt(d.headers.get("content-length")??"0",10),{data:f,comments:p}=await j2(d.body.getReader(),s.data.elementFilter??Y2,m=>{this.totalReceived+=m,s&&n.fire("progress",this.totalReceived,u*a)});f.isCompressed||s.data.reorder,this.gsplatResource&&((h=this.gsplatResource)!=null&&h.splatData)?this.gsplatResource.appendGSplatData(f.isCompressed&&s.data.decompress?await f.decompress():f,r,i):(console.log("____ ENGINE IVAN","new GSplatResource"),this.gsplatResource=new k2(this.device,f.isCompressed&&s.data.decompress?await f.decompress():f,p),this.gsplatResource.timeOption=r),e(null,this.gsplatResource)}}catch(d){e(d,null)}}open(t,e){return e}}class Z2 extends Ge{constructor(t){console.log("____ ENGINE IVAN","Register GSplatHandler.constructor by application addResourceHandles"),super(t,"gsplat"),this.parser=new K2(t.graphicsDevice,t.assets,3)}load(t,e,s){console.log("____ ENGINE IVAN","GSplatHandler.load"),typeof t=="string"&&(t={load:t,original:t}),this.parser.load(t,e,s)}open(t,e,s){return console.log("____ ENGINE IVAN","GSplatHandler.open"),this.parser.open(t,e,s)}}class Cf{static setCompressedPRS(t,e,s){const i=s.singleVecs;let r,n;const a=e.___1;a||(r=s.tripleVecs,n=e.___2);let o=a?a[0]:r[n];t.setLocalPosition(i[o],i[o+1],i[o+2]),o=a?a[1]:r[n+1],t.setLocalEulerAngles(i[o],i[o+1],i[o+2]),o=a?a[2]:r[n+2],t.setLocalScale(i[o],i[o+1],i[o+2])}static oneCharToKey(t,e){const s=t.charCodeAt(0)-e.fieldFirstCode;return e.fieldArray[s]}static multCharToKey(t,e){let s=0;for(let i=0;i<t.length;i++)s=s*e.fieldCodeBase+t.charCodeAt(i)-e.fieldFirstCode;return e.fieldArray[s]}}class oc{constructor(t,e){this._node=t,this._data=e}run(){const t=Object.prototype.toString.call(this._node);return t==="[object Object]"?this._handleMap():t==="[object Array]"?this._handleArray():this._result=this._node,this._result}_handleMap(){this._result={},Object.keys(this._node).forEach(this._handleKey,this)}_handleKey(t){let e=t;const s=t.length;s===1?e=Cf.oneCharToKey(t,this._data):s===2&&(e=Cf.multCharToKey(t,this._data)),this._result[e]=new oc(this._node[t],this._data).run()}_handleArray(){this._result=[],this._node.forEach(this._handleArElt,this)}_handleArElt(t){const e=new oc(t,this._data).run();this._result.push(e)}}class jp{constructor(t,e){this._app=t,this._isTemplate=e}parse(t){const e={};let s=null;const i=t.compressedFormat;i&&!t.entDecompressed&&(t.entDecompressed=!0,t.entities=new oc(t.entities,i).run());for(const r in t.entities){const n=t.entities[r],a=this._createEntity(n,i);e[r]=a,n.parent===null&&(s=a)}for(const r in t.entities){const n=e[r],a=t.entities[r].children,o=a.length;for(let h=0;h<o;h++){const d=e[a[h]];d&&n.addChild(d)}}return this._openComponentData(s,t.entities),s}_createEntity(t,e){const s=new je(t.name,this._app);if(s.setGuid(t.resource_id),this._setPosRotScale(s,t,e),s._enabled=t.enabled??!0,this._isTemplate?s._template=!0:s._enabledInHierarchy=s._enabled,s.template=t.template,t.tags)for(let i=0;i<t.tags.length;i++)s.tags.add(t.tags[i]);return s}_setPosRotScale(t,e,s){if(s)Cf.setCompressedPRS(t,e,s);else{const i=e.position,r=e.rotation,n=e.scale;t.setLocalPosition(i[0],i[1],i[2]),t.setLocalEulerAngles(r[0],r[1],r[2]),t.setLocalScale(n[0],n[1],n[2])}}_openComponentData(t,e){const s=this._app.systems.list;let i=s.length;const r=e[t.getGuid()];for(let a=0;a<i;a++){const o=s[a],h=r.components[o.id];h&&o.addComponent(t,h)}i=r.children.length;const n=t._children;for(let a=0;a<i;a++)n[a]?n[a]=this._openComponentData(n[a],e):b.warn(`Scene data is invalid where a child under "${t.name}" Entity doesn't exist. Please check the scene data.`);return t}}class Fx{static load(t,e,s){typeof t=="string"&&(t={load:t,original:t}),Ye.get(t.load,{retry:e>0,maxRetries:e},(i,r)=>{if(!i)s(i,r);else{let n=`Error while loading scene JSON ${t.original}`;i.message?(n+=`: ${i.message}`,i.stack&&(n+=`
${i.stack}`)):n+=`: ${i}`,s(n)}})}}class Q2 extends Ge{constructor(t){super(t,"hierarchy")}load(t,e){Fx.load(t,this.maxRetries,e)}open(t,e){this._app.systems.script.preloading=!0;const i=new jp(this._app,!1).parse(e);return this._app.systems.script.preloading=!1,i}}class J2 extends Ge{constructor(e){super(e,"html");c(this,"decoder",null)}load(e,s){typeof e=="string"&&(e={load:e,original:e}),Ye.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(i,r)=>{i?s(`Error loading html resource: ${e.original} [${i}]`):s(null,r)})}openBinary(e){return this.decoder??(this.decoder=new TextDecoder("utf-8")),this.decoder.decode(e)}}class eL extends Ge{constructor(e){super(e,"json");c(this,"decoder",null)}load(e,s){typeof e=="string"&&(e={load:e,original:e});const i={retry:this.maxRetries>0,maxRetries:this.maxRetries};e.load.startsWith("blob:")&&(i.responseType=ps.ResponseType.JSON),Ye.get(e.load,i,(r,n)=>{r?s(`Error loading JSON resource: ${e.original} [${r}]`):s(null,n)})}openBinary(e){return this.decoder??(this.decoder=new TextDecoder("utf-8")),JSON.parse(this.decoder.decode(e))}}class tL{constructor(){this.removeInvalid=!0,this.valid=!0,this.enumValidators={occludeSpecular:this._createEnumValidator([Kb,Vo,Bu]),cull:this._createEnumValidator([vt,nn,xo,RS]),blendType:this._createEnumValidator([a0,bp,Gt,hs,dn,wp,Xc,o0,l0,h0,c0]),depthFunc:this._createEnumValidator([IS,Ih,Dh,gu,DS,LS,FS,Ri])}}setInvalid(t,e){this.valid=!1,b.warn(`Ignoring invalid StandardMaterial property: ${t}`,e[t]),this.removeInvalid&&delete e[t]}validate(t){const e=Da,s=JC,i=t.mappingFormat==="path";for(const r in t){const n=e[r];if(!n){s[r]?delete t[r]:(b.warnOnce(`Ignoring unsupported input property to standard material: ${r}`),this.valid=!1);continue}if(n.startsWith("enum")){const a=n.split(":")[1];this.enumValidators[a]&&(this.enumValidators[a](t[r])||this.setInvalid(r,t))}else if(n==="number")typeof t[r]!="number"&&this.setInvalid(r,t);else if(n==="boolean")typeof t[r]!="boolean"&&this.setInvalid(r,t);else if(n==="string")typeof t[r]!="string"&&this.setInvalid(r,t);else if(n==="vec2")t[r]instanceof Array&&t[r].length===2||this.setInvalid(r,t);else if(n==="rgb")t[r]instanceof Array&&t[r].length===3||this.setInvalid(r,t);else if(n==="texture")i?typeof t[r]=="string"||t[r]===null||t[r]instanceof ce||this.setInvalid(r,t):typeof t[r]=="number"||t[r]===null||t[r]instanceof ce||this.setInvalid(r,t);else if(n==="boundingbox")t[r].center&&t[r].center instanceof Array&&t[r].center.length===3||this.setInvalid(r,t),t[r].halfExtents&&t[r].halfExtents instanceof Array&&t[r].halfExtents.length===3||this.setInvalid(r,t);else if(n==="cubemap")typeof t[r]=="number"||t[r]===null||t[r]===void 0||t[r]instanceof ce&&t[r].cubemap||this.setInvalid(r,t);else if(n==="chunks"){const a=Object.keys(t[r]);for(let o=0;o<a.length;o++)typeof t[r][a[o]]!="string"&&this.setInvalid(a[o],t[r])}else console.error(`Unknown material type: ${n}`)}return t.validated=!0,this.valid}_createEnumValidator(t){return function(e){return t.indexOf(e)>=0}}}class sL{constructor(){this._validator=null}parse(t){const e=this.migrate(t),s=this._validate(e),i=new _s;return this.initialize(i,s),i}initialize(t,e){e.validated||(e=this._validate(e)),e.chunks&&(t.chunks={...e.chunks});for(const s in e){const i=Da[s],r=e[s];if(i==="vec2")t[s]=new W(r[0],r[1]);else if(i==="rgb")t[s]=new Y(r[0],r[1],r[2]);else if(i==="texture")r instanceof ce?t[s]=r:t[s]instanceof ce&&typeof r=="number"&&r>0||(t[s]=null);else if(i==="cubemap")r instanceof ce?t[s]=r:t[s]instanceof ce&&typeof r=="number"&&r>0||(t[s]=null),s==="cubeMap"&&!r&&(t.prefilteredCubemaps=null);else if(i==="boundingbox"){const n=new A(r.center[0],r.center[1],r.center[2]),a=new A(r.halfExtents[0],r.halfExtents[1],r.halfExtents[2]);t[s]=new ve(n,a)}else t[s]=e[s]}t.update()}migrate(t){t.shader&&delete t.shader,t.mapping_format&&(t.mappingFormat=t.mapping_format,delete t.mapping_format);let e;const s=[["bumpMapFactor","bumpiness"],["aoUvSet","aoMapUv"],["aoMapVertexColor","aoVertexColor"],["diffuseMapVertexColor","diffuseVertexColor"],["emissiveMapVertexColor","emissiveVertexColor"],["specularMapVertexColor","specularVertexColor"],["metalnessMapVertexColor","metalnessVertexColor"],["opacityMapVertexColor","opacityVertexColor"],["glossMapVertexColor","glossVertexColor"],["lightMapVertexColor","lightVertexColor"],["specularMapTint","specularTint"],["metalnessMapTint","metalnessTint"],["clearCoatGlossiness","clearCoatGloss"]];for(e=0;e<s.length;e++){const r=s[e][0],n=s[e][1];t[r]!==void 0&&(t[n]===void 0&&(t[n]=t[r]),delete t[r])}const i=["fresnelFactor","shadowSampleType"];for(e=0;e<i.length;e++){const r=i[e];t.hasOwnProperty(r)&&delete t[r]}return t}_validate(t){return t.validated||(this._validator||(this._validator=new tL),this._validator.validate(t)),t}}const iL={aoMap:"white",aoDetailMap:"white",diffuseMap:"gray",diffuseDetailMap:"gray",specularMap:"gray",specularityFactorMap:"white",metalnessMap:"black",glossMap:"gray",sheenMap:"black",sheenGlossMap:"gray",clearCoatMap:"black",clearCoatGlossMap:"gray",clearCoatNormalMap:"normal",refractionMap:"white",emissiveMap:"gray",normalMap:"normal",normalDetailMap:"normal",heightMap:"gray",opacityMap:"gray",sphereMap:"gray",lightMap:"white",thicknessMap:"black",iridescenceMap:"black",iridescenceThicknessMap:"black",envAtlas:"black"};class rL extends Ge{constructor(t){super(t,"material"),this._assets=t.assets,this._device=t.graphicsDevice,this._parser=new sL}load(t,e){typeof t=="string"&&(t={load:t,original:t}),Ye.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e&&e(`Error loading material: ${t.original} [${s}]`):e&&(i._engine=!0,e(null,i))})}open(t,e){const s=this._parser.parse(e);return e._engine&&(s._data=e,delete e._engine),s}patch(t,e){t.resource._data&&(t._data=t.resource._data,delete t.resource._data),t.data.name=t.name,t.resource.name=t.name,this._bindAndAssignAssets(t,e),t.off("unload",this._onAssetUnload,this),t.on("unload",this._onAssetUnload,this)}_onAssetUnload(t){delete t.data.parameters,delete t.data.chunks,delete t.data.name}_assignTexture(t,e,s){e.resource[t]=s}_getPlaceholderTexture(t){const e=iL[t];return b.assert(e,`No placeholder texture found for parameter: ${t}`),tn(this._device,e)}_assignPlaceholderTexture(t,e){e.resource[t]=this._getPlaceholderTexture(t)}_onTextureLoad(t,e,s){this._assignTexture(t,e,s.resource),e.resource.update()}_onTextureAdd(t,e,s){this._assets.load(s)}_onTextureRemoveOrUnload(t,e,s){const i=e.resource;i&&e.resource[t]===s.resource&&(this._assignPlaceholderTexture(t,e),i.update())}_assignCubemap(t,e,s){if(e.resource[t]=s[0],t==="cubeMap"){const i=s.slice(1);i.every(r=>r)?e.resource.prefilteredCubemaps=i:i[0]&&(e.resource.envAtlas=i[0])}}_onCubemapLoad(t,e,s){this._assignCubemap(t,e,s.resources),this._parser.initialize(e.resource,e.data)}_onCubemapAdd(t,e,s){this._assets.load(s)}_onCubemapRemoveOrUnload(t,e,s){const i=e.resource;e.data.prefilteredCubeMap128===s.resources[1]&&(this._assignCubemap(t,e,[null,null,null,null,null,null,null]),i.update())}_bindAndAssignAssets(t,e){const s=this._parser.migrate(t.data),i=t.resource,r=s.mappingFormat==="path",n=ed;let a,o,h;for(a=0;a<n.length;a++){o=n[a],h=i._assetReferences[o];const u=s[o],f=i[o],p=f===this._getPlaceholderTexture(o),m=s.validated;u&&(!f||!m||p)?(h||(h=new qo(o,t,e,{load:this._onTextureLoad,add:this._onTextureAdd,remove:this._onTextureRemoveOrUnload,unload:this._onTextureRemoveOrUnload},this),i._assetReferences[o]=h),r?h.url=t.getAbsoluteUrl(u):h.id=u,h.asset&&(h.asset.resource?this._assignTexture(o,t,h.asset.resource):this._assignPlaceholderTexture(o,t),e.load(h.asset))):h&&(r?h.url=null:h.id=null)}const d=Np;for(a=0;a<d.length;a++)o=d[a],h=i._assetReferences[o],s[o]&&!t.data.prefilteredCubeMap128&&(h||(h=new qo(o,t,e,{load:this._onCubemapLoad,add:this._onCubemapAdd,remove:this._onCubemapRemoveOrUnload,unload:this._onCubemapRemoveOrUnload},this),i._assetReferences[o]=h),r?h.url=s[o]:h.id=s[o],h.asset&&(h.asset.loaded&&this._assignCubemap(o,t,h.asset.resources),e.load(h.asset)));this._parser.initialize(i,s)}}class nL{constructor(t){this._device=t.device,this._defaultMaterial=t.defaultMaterial,this._assets=t.assets}parse(t,e,s){ac.parse("filename.glb","",t,this._device,this._assets,(s==null?void 0:s.options)??{},(i,r)=>{if(i)e(i);else{const n=ir.createModel(r,this._defaultMaterial);r.destroy(),e(null,n)}})}}const aL={points:Dc,lines:Lc,lineloop:Py,linestrip:Ry,triangles:Fs,trianglestrip:lr,trianglefan:Kr},oL={int8:Fc,uint8:Zr,int16:kc,uint16:rl,int32:Ny,uint32:Oo,float32:Re};class lL{constructor(t){this._device=t.device,this._defaultMaterial=t.defaultMaterial}parse(t,e){const s=t.model;if(!s){e(null,null);return}if(s.version<=1){e("JsonModelParser#parse: Trying to parse unsupported model format.");return}const i=this._parseNodes(t),r=this._parseSkins(t,i),n=this._parseVertexBuffers(t),a=this._parseIndexBuffers(t,n),o=this._parseMorphs(t,i,n),h=this._parseMeshes(t,r.skins,o.morphs,n,a.buffer,a.data),d=this._parseMeshInstances(t,i,h,r.skins,r.instances,o.morphs,o.instances),u=new Ui;u.graph=i[0],u.meshInstances=d,u.skinInstances=r.instances,u.morphInstances=o.instances,u.getGraph().syncHierarchy(),e(null,u)}_parseNodes(t){const e=t.model,s=[];let i;for(i=0;i<e.nodes.length;i++){const r=e.nodes[i],n=new Oe(r.name);n.setLocalPosition(r.position[0],r.position[1],r.position[2]),n.setLocalEulerAngles(r.rotation[0],r.rotation[1],r.rotation[2]),n.setLocalScale(r.scale[0],r.scale[1],r.scale[2]),n.scaleCompensation=!!r.scaleCompensation,s.push(n)}for(i=1;i<e.parents.length;i++)s[e.parents[i]].addChild(s[i]);return s}_parseSkins(t,e){const s=t.model,i=[],r=[];let n,a;for(n=0;n<s.skins.length;n++){const o=s.skins[n],h=[];for(a=0;a<o.inverseBindMatrices.length;a++){const p=o.inverseBindMatrices[a];h[a]=new q().set(p)}const d=new z0(this._device,h,o.boneNames);i.push(d);const u=new hl(d),f=[];for(a=0;a<d.boneNames.length;a++){const p=d.boneNames[a],m=e[0].findByName(p);f.push(m)}u.bones=f,r.push(u)}return{skins:i,instances:r}}_getMorphVertexCount(t,e,s){for(let i=0;i<t.meshes.length;i++){const r=t.meshes[i];if(r.morph===e)return s[r.vertices].numVertices}}_parseMorphs(t,e,s){const i=t.model,r=[],n=[];let a,o,h,d,u,f;if(i.morphs){const p=function(m,_,g){const y=new Float32Array(g*3);for(let w=0;w<_.length;w++){const C=_[w]*3;y[C]=m[w*3],y[C+1]=m[w*3+1],y[C+2]=m[w*3+2]}return y};for(a=0;a<i.morphs.length;a++){for(d=i.morphs[a].targets,f=[],h=this._getMorphVertexCount(i,a,s),o=0;o<d.length;o++){const g=d[o].aabb,y=g.min,w=g.max,C=new ve(new A((w[0]+y[0])*.5,(w[1]+y[1])*.5,(w[2]+y[2])*.5),new A((w[0]-y[0])*.5,(w[1]-y[1])*.5,(w[2]-y[2])*.5)),x=d[o].indices;let M=d[o].deltaPositions,S=d[o].deltaNormals;x&&(M=p(M,x,h),S=p(S,x,h)),u=new sd({deltaPositions:M,deltaNormals:S,name:d[o].name,aabb:C}),f.push(u)}const m=new k0(f,this._device);r.push(m);const _=new mn(m);n.push(_)}}return{morphs:r,instances:n}}_parseVertexBuffers(t){const e=t.model,s=[],i={position:Xe,normal:ss,tangent:si,blendWeight:ei,blendIndices:Jt,color:It,texCoord0:ds,texCoord1:yn,texCoord2:Qo,texCoord3:Jo,texCoord4:el,texCoord5:tl,texCoord6:sl,texCoord7:il};for(let r=0;r<e.vertices.length;r++){const n=e.vertices[r],a=[];for(const f in n){const p=n[f];a.push({semantic:i[f],components:p.components,type:oL[p.type],normalize:i[f]===It})}const o=new Dt(this._device,a),h=n.position.data.length/n.position.components,d=new fs(this._device,o,h),u=new vo(d);for(let f=0;f<h;f++){for(const p in n){const m=n[p];switch(m.components){case 1:u.element[i[p]].set(m.data[f]);break;case 2:u.element[i[p]].set(m.data[f*2],1-m.data[f*2+1]);break;case 3:u.element[i[p]].set(m.data[f*3],m.data[f*3+1],m.data[f*3+2]);break;case 4:u.element[i[p]].set(m.data[f*4],m.data[f*4+1],m.data[f*4+2],m.data[f*4+3]);break}}u.next()}u.end(),s.push(d)}return s}_parseIndexBuffers(t,e){const s=t.model;let i=null,r=null,n,a=0;for(n=0;n<s.meshes.length;n++){const h=s.meshes[n];h.indices!==void 0&&(a+=h.indices.length)}let o=0;for(n=0;n<e.length;n++)o=Math.max(o,e[n].numVertices);return a>0&&(o>65535?(i=new cr(this._device,or,a),r=new Uint32Array(i.lock())):(i=new cr(this._device,Fi,a),r=new Uint16Array(i.lock()))),{buffer:i,data:r}}_parseMeshes(t,e,s,i,r,n){const a=t.model,o=[];let h=0;for(let d=0;d<a.meshes.length;d++){const u=a.meshes[d],f=u.aabb,p=f.min,m=f.max,_=new ve(new A((m[0]+p[0])*.5,(m[1]+p[1])*.5,(m[2]+p[2])*.5),new A((m[0]-p[0])*.5,(m[1]-p[1])*.5,(m[2]-p[2])*.5)),g=u.indices!==void 0,y=new ke(this._device);y.vertexBuffer=i[u.vertices],y.indexBuffer[0]=g?r:null,y.primitive[0].type=aL[u.type],y.primitive[0].base=g?u.base+h:u.base,y.primitive[0].count=u.count,y.primitive[0].indexed=g,y.skin=u.skin!==void 0?e[u.skin]:null,y.morph=u.morph!==void 0?s[u.morph]:null,y.aabb=_,g&&(n.set(u.indices,h),h+=u.indices.length),o.push(y)}return r!==null&&r.unlock(),o}_parseMeshInstances(t,e,s,i,r,n,a){const o=t.model,h=[];let d;for(d=0;d<o.meshInstances.length;d++){const u=o.meshInstances[d],f=e[u.node],p=s[u.mesh],m=new Be(p,this._defaultMaterial,f);if(p.skin){const _=i.indexOf(p.skin);if(_===-1)throw new Error("Mesh's skin does not appear in skin array.");m.skinInstance=r[_]}if(p.morph){const _=n.indexOf(p.morph);if(_===-1)throw new Error("Mesh's morph does not appear in morph array.");m.morphInstance=a[_]}h.push(m)}return h}}class hL extends Ge{constructor(t){super(t,"model"),this._parsers=[],this.device=t.graphicsDevice,this.assets=t.assets,this.defaultMaterial=cl(this.device),this.addParser(new lL(this),(e,s)=>me.getExtension(e)===".json"),this.addParser(new nL(this),(e,s)=>me.getExtension(e)===".glb")}load(t,e,s){typeof t=="string"&&(t={load:t,original:t});const i={retry:this.maxRetries>0,maxRetries:this.maxRetries};(t.load.startsWith("blob:")||t.load.startsWith("data:"))&&(me.getExtension(t.original).toLowerCase()===".glb"?i.responseType=ps.ResponseType.ARRAY_BUFFER:i.responseType=ps.ResponseType.JSON),Ye.get(t.load,i,(r,n)=>{if(e)if(r)e(`Error loading model: ${t.original} [${r}]`);else{for(let a=0;a<this._parsers.length;a++){const o=this._parsers[a];if(o.decider(t.original,n)){o.parser.parse(n,(h,d)=>{h?e(h):e(null,d)},s);return}}e("No parsers found")}})}open(t,e){return e}patch(t,e){if(!t.resource)return;const s=t.data,i=this;t.resource.meshInstances.forEach((r,n)=>{if(s.mapping){const a=function(u){u.resource?r.material=u.resource:(u.once("load",a),e.load(u)),u.once("remove",f=>{r.material===f.resource&&(r.material=i.defaultMaterial)})};if(!s.mapping[n]){r.material=i.defaultMaterial;return}const o=s.mapping[n].material,h=s.mapping[n].path;let d;if(o!==void 0)o?(d=e.get(o),d?a(d):e.once(`add:${o}`,a)):r.material=i.defaultMaterial;else if(h){const u=t.getAbsoluteUrl(s.mapping[n].path);d=e.getByUrl(u),d?a(d):e.once(`add:url:${u}`,a)}}})}addParser(t,e){this._parsers.push({parser:t,decider:e})}}class cL extends Ge{constructor(t){super(t,"scene")}load(t,e){Fx.load(t,this.maxRetries,e)}open(t,e){this._app.systems.script.preloading=!0;const i=new jp(this._app,!1).parse(e),r=this._app.scene;return r.root=i,this._app.applySceneSettings(e.settings),this._app.systems.script.preloading=!1,r}}const pc=class pc{static push(t){pc._types.push(t)}};c(pc,"_types",[]);let jr=pc;const dL=new Set(["system","entity","create","destroy","swap","move","data","scripts","_scripts","_scriptsIndex","_scriptsData","enabled","_oldState","onEnable","onDisable","onPostStateChange","_onSetEnabled","_checkState","_onBeforeRemove","_onInitializeAttributes","_onInitialize","_onPostInitialize","_onUpdate","_onPostUpdate","_callbacks","_callbackActive","has","get","on","off","fire","once","hasEvent"]),uL={};Xo.reservedNames.forEach((l,t,e)=>{uL[l]=1});function fL(l,t,e){if(typeof l!="function")throw new Error(`script class: '${l}' must be a constructor function (i.e. class).`);if(!(l.prototype instanceof Zt))throw new Error(`script class: '${ic.__getScriptName(l)}' does not extend pc.Script.`);if(t=t||l.__name||ic.__getScriptName(l),dL.has(t))throw new Error(`script name: '${t}' is reserved, please change script name`);l.__name=t,Zh.getApplication().scripts.add(l),jr.push(l)}const pL=l=>l[0].toLowerCase()+l.substring(1);class mL extends Ge{constructor(t){super(t,"script"),this._scripts={},this._cache={}}clearCache(){for(const t in this._cache){const e=this._cache[t],s=e.parentNode;s&&s.removeChild(e)}this._cache={}}load(t,e){typeof t=="string"&&(t={load:t,original:t});const s=this;this._app;const i=(t.load,(a,o,h)=>{if(a)e(a);else{const d={};for(let f=0;f<jr._types.length;f++)d[jr._types[f].name]=jr._types[f];jr._types.length=0,e(null,d,h);const u=o.split("&hash=")[0];delete s._loader._cache[_a.makeKey(u,"script")]}}),[r]=t.load.split("?");r.endsWith(".mjs")?this._loadModule(r,i):this._loadScript(t.load,i)}open(t,e){return e}patch(t,e){}_loadScript(t,e){const s=document.head,i=document.createElement("script");this._cache[t]=i,i.async=!1,i.addEventListener("error",n=>{e(`Script: ${n.target.src} failed to load`)},!1);let r=!1;i.onload=i.onreadystatechange=function(){!r&&(!this.readyState||this.readyState==="loaded"||this.readyState==="complete")&&(r=!0,e(null,t,i))},i.src=t,s.appendChild(i)}_loadModule(t,e){const s=be.browser?window.location.origin+window.location.pathname:import.meta.url,i=new URL(t,s);import(i.toString()).then(r=>{var o,h;const n=i.pathname.split("/").pop(),a=(h=(o=this._app.assets.find(n,"script"))==null?void 0:o.data)==null?void 0:h.scripts;for(const d in r){const u=r[d];if(u.prototype instanceof Zt){const p=pL(u.name);fL(u,p),a&&this._app.scripts.addSchema(p,a[p])}}e(null,t,null)}).catch(r=>{e(r)})}}class _L extends Ge{constructor(e){super(e,"shader");c(this,"decoder",null)}load(e,s){typeof e=="string"&&(e={load:e,original:e}),Ye.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(i,r)=>{i?s(`Error loading shader resource: ${e.original} [${i}]`):s(null,r)})}openBinary(e){return this.decoder??(this.decoder=new TextDecoder("utf-8")),this.decoder.decode(e)}}function ru(l){const t=this;t.resource&&(t.resource.atlas=l.resource)}function nu(l){this.registry.load(l)}class gL extends Ge{constructor(t){super(t,"sprite"),this._assets=t.assets,this._device=t.graphicsDevice}load(t,e){typeof t=="string"&&(t={load:t,original:t}),me.getExtension(t.original)===".json"&&Ye.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e(s):e(null,i)})}open(t,e){const s=new A1(this._device);return t&&(s.__data=e),s}patch(t,e){const s=t.resource;if(s.__data&&(t.data.pixelsPerUnit=s.__data.pixelsPerUnit,t.data.renderMode=s.__data.renderMode,t.data.frameKeys=s.__data.frameKeys,s.__data.textureAtlasAsset)){const i=e.getByUrl(s.__data.textureAtlasAsset);i?t.data.textureAtlasAsset=i.id:console.warn(`Could not find textureatlas with url: ${s.__data.textureAtlasAsset}`)}s.startUpdate(),s.renderMode=t.data.renderMode,s.pixelsPerUnit=t.data.pixelsPerUnit,s.frameKeys=t.data.frameKeys,this._updateAtlas(t),s.endUpdate(),t.off("change",this._onAssetChange,this),t.on("change",this._onAssetChange,this)}_updateAtlas(t){const e=t.resource;if(!t.data.textureAtlasAsset){e.atlas=null;return}this._assets.off(`load:${t.data.textureAtlasAsset}`,ru,t),this._assets.on(`load:${t.data.textureAtlasAsset}`,ru,t);const s=this._assets.get(t.data.textureAtlasAsset);s&&s.resource?e.atlas=s.resource:s?this._assets.load(s):(this._assets.off(`add:${t.data.textureAtlasAsset}`,nu,t),this._assets.on(`add:${t.data.textureAtlasAsset}`,nu,t))}_onAssetChange(t,e,s,i){e==="data"&&s&&s.textureAtlasAsset&&i&&s.textureAtlasAsset!==i.textureAtlasAsset&&(this._assets.off(`load:${i.textureAtlasAsset}`,ru,t),this._assets.off(`add:${i.textureAtlasAsset}`,nu,t))}}class Hg{constructor(t,e){c(this,"_app");c(this,"_data");c(this,"_templateRoot",null);this._app=t,this._data=e}instantiate(){return this._templateRoot||this._parseTemplate(),this._templateRoot.clone()}_parseTemplate(){const t=new jp(this._app,!0);this._templateRoot=t.parse(this._data)}}class yL extends Ge{constructor(e){super(e,"template");c(this,"decoder",null)}load(e,s){typeof e=="string"&&(e={load:e,original:e});const i={retry:this.maxRetries>0,maxRetries:this.maxRetries};Ye.get(e.load,i,(r,n)=>{r?s(`Error requesting template: ${e.original}`):s(r,n)})}open(e,s){return new Hg(this._app,s)}openBinary(e){return this.decoder??(this.decoder=new TextDecoder("utf-8")),new Hg(this._app,JSON.parse(this.decoder.decode(e)))}}class xL extends Ge{constructor(e){super(e,"text");c(this,"decoder",null)}load(e,s){typeof e=="string"&&(e={load:e,original:e}),Ye.get(e.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(i,r)=>{i?s(`Error loading text resource: ${e.original} [${i}]`):s(null,r)})}openBinary(e){return this.decoder??(this.decoder=new TextDecoder("utf-8")),this.decoder.decode(e)}}const ah={repeat:nt,clamp:oe,mirror:zf},oh={nearest:fe,linear:at,nearest_mip_nearest:yc,linear_mip_nearest:Sc,nearest_mip_linear:xc,linear_mip_linear:an},SL=/^data\.frames\.(\d+)$/;class vL extends Ge{constructor(t){super(t,"textureatlas"),this._loader=t.loader}load(t,e){typeof t=="string"&&(t={load:t,original:t});const s=this,i=this._loader.getHandler("texture");me.getExtension(t.original)===".json"?Ye.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(r,n)=>{if(r)e(r);else{const a=t.original.replace(".json",".png");s._loader.load(a,"texture",(o,h)=>{o?e(o):e(null,{data:n,texture:h})})}}):i.load(t,e)}open(t,e,s){const i=new E1;if(e.texture&&e.data)i.texture=e.texture,i.__data=e.data;else{const n=this._loader.getHandler("texture").open(t,e,s);if(!n)return null;i.texture=n}return i}patch(t,e){if(!t.resource)return;t.resource.__data&&(t.resource.__data.minfilter!==void 0&&(t.data.minfilter=t.resource.__data.minfilter),t.resource.__data.magfilter!==void 0&&(t.data.magfilter=t.resource.__data.magfilter),t.resource.__data.addressu!==void 0&&(t.data.addressu=t.resource.__data.addressu),t.resource.__data.addressv!==void 0&&(t.data.addressv=t.resource.__data.addressv),t.resource.__data.mipmaps!==void 0&&(t.data.mipmaps=t.resource.__data.mipmaps),t.resource.__data.anisotropy!==void 0&&(t.data.anisotropy=t.resource.__data.anisotropy),t.resource.__data.rgbm!==void 0&&(t.data.rgbm=!!t.resource.__data.rgbm),t.data.frames=t.resource.__data.frames,delete t.resource.__data);const s=t.resource.texture;if(s&&(s.name=t.name,t.data.hasOwnProperty("minfilter")&&s.minFilter!==oh[t.data.minfilter]&&(s.minFilter=oh[t.data.minfilter]),t.data.hasOwnProperty("magfilter")&&s.magFilter!==oh[t.data.magfilter]&&(s.magFilter=oh[t.data.magfilter]),t.data.hasOwnProperty("addressu")&&s.addressU!==ah[t.data.addressu]&&(s.addressU=ah[t.data.addressu]),t.data.hasOwnProperty("addressv")&&s.addressV!==ah[t.data.addressv]&&(s.addressV=ah[t.data.addressv]),t.data.hasOwnProperty("mipmaps")&&s.mipmaps!==t.data.mipmaps&&(s.mipmaps=t.data.mipmaps),t.data.hasOwnProperty("anisotropy")&&s.anisotropy!==t.data.anisotropy&&(s.anisotropy=t.data.anisotropy),t.data.hasOwnProperty("rgbm"))){const r=t.data.rgbm?ln:Bi;s.type!==r&&(s.type=r)}t.resource.texture=s;const i={};for(const r in t.data.frames){const n=t.data.frames[r];i[r]={rect:new ee(n.rect),pivot:new W(n.pivot),border:new ee(n.border)}}t.resource.frames=i,t.off("change",this._onAssetChange,this),t.on("change",this._onAssetChange,this)}_onAssetChange(t,e,s){let i;if(e==="data"||e==="data.frames"){const r={};for(const n in s.frames)i=s.frames[n],r[n]={rect:new ee(i.rect),pivot:new W(i.pivot),border:new ee(i.border)};t.resource.frames=r}else{const r=e.match(SL);if(r){const n=r[1];s?(t.resource.frames[n]?(i=t.resource.frames[n],i.rect.set(s.rect[0],s.rect[1],s.rect[2],s.rect[3]),i.pivot.set(s.pivot[0],s.pivot[1]),i.border.set(s.border[0],s.border[1],s.border[2],s.border[3])):t.resource.frames[n]={rect:new ee(s.rect),pivot:new W(s.pivot),border:new ee(s.border)},t.resource.fire("set:frame",n,t.resource.frames[n])):t.resource.frames[n]&&(delete t.resource.frames[n],t.resource.fire("remove:frame",n))}}}}function bL(){const l={cTFETC1:0,cTFETC2:1,cTFBC1:2,cTFBC3:3,cTFPVRTC1_4_RGB:8,cTFPVRTC1_4_RGBA:9,cTFASTC_4x4:10,cTFATC_RGB:11,cTFATC_RGBA_INTERPOLATED_ALPHA:12,cTFRGBA32:13,cTFRGB565:14,cTFRGBA4444:16},t={astc:l.cTFASTC_4x4,dxt:l.cTFBC1,etc1:l.cTFETC1,etc2:l.cTFETC1,pvr:l.cTFPVRTC1_4_RGB,atc:l.cTFATC_RGB,none:l.cTFRGB565},e={astc:l.cTFASTC_4x4,dxt:l.cTFBC3,etc1:l.cTFRGBA4444,etc2:l.cTFETC2,pvr:l.cTFPVRTC1_4_RGBA,atc:l.cTFATC_RGBA_INTERPOLATED_ALPHA,none:l.cTFRGBA4444},s={ETC1:21,ETC2_RGB:22,ETC2_RGBA:23,DXT1:8,DXT5:10,PVRTC_4BPP_RGB_1:26,PVRTC_4BPP_RGBA_1:27,ASTC_4x4:28,ATC_RGB:29,ATC_RGBA:30,R8_G8_B8_A8:7,R5_G6_B5:3,R4_G4_B4_A4:5},i=(x,M)=>{switch(x){case l.cTFETC1:return M.formats.etc2?s.ETC2_RGB:s.ETC1;case l.cTFETC2:return s.ETC2_RGBA;case l.cTFBC1:return s.DXT1;case l.cTFBC3:return s.DXT5;case l.cTFPVRTC1_4_RGB:return s.PVRTC_4BPP_RGB_1;case l.cTFPVRTC1_4_RGBA:return s.PVRTC_4BPP_RGBA_1;case l.cTFASTC_4x4:return s.ASTC_4x4;case l.cTFATC_RGB:return s.ATC_RGB;case l.cTFATC_RGBA_INTERPOLATED_ALPHA:return s.ATC_RGBA;case l.cTFRGBA32:return s.R8_G8_B8_A8;case l.cTFRGB565:return s.R5_G6_B5;case l.cTFRGBA4444:return s.R4_G4_B4_A4}},r=x=>{const M=function(S,v){const E=S*.00784313725490196-1,T=v*(2/255)-1,R=Math.sqrt(1-Math.min(1,E*E+T*T));return Math.max(0,Math.min(255,Math.floor((R+1)*.5*255)))};for(let S=0;S<x.length;S+=4){const v=x[S+3],E=x[S+1];x[S+0]=v,x[S+2]=M(v,E),x[S+3]=255}return x},n=x=>{const M=new Uint16Array(x.length/4);for(let S=0;S<x.length;S+=4){const v=x[S+0],E=x[S+1],T=x[S+2];M[S/4]=(v&248)<<8|(E&252)<<3|T>>3}return M},a=(x,M)=>(x&x-1)===0&&(M&M-1)===0,o=()=>typeof performance<"u"?performance.now():0;let h,d,u;const f=(x,M,S)=>{if(S){if(x.formats.astc)return"astc"}else if(M){if(x.formats.etc2)return"etc2"}else{if(x.formats.etc2)return"etc2";if(x.formats.etc1)return"etc1"}return(E=>{for(let T=0;T<E.length;++T){const R=E[T];if(x.formats[R])return R}return"none"})(M?u:d)},p=(x,M,S)=>{switch(S){case l.cTFETC1:case l.cTFETC2:return!0;case l.cTFBC1:case l.cTFBC3:return(x&3)===0&&(M&3)===0;case l.cTFPVRTC1_4_RGB:case l.cTFPVRTC1_4_RGBA:return a(x,M);case l.cTFASTC_4x4:return!0;case l.cTFATC_RGB:case l.cTFATC_RGBA_INTERPOLATED_ALPHA:return!0}return!1},m=(x,M,S)=>{if(!h.KTX2File)throw new Error("Basis transcoder module does not include support for KTX2.");const v=o(),E=new h.KTX2File(new Uint8Array(M)),T=E.getWidth(),R=E.getHeight(),D=E.getLevels(),P=!!E.getHasAlpha(),L=E.isUASTC&&E.isUASTC();if(!T||!R||!D)throw E.close(),E.delete(),new Error(`Invalid image dimensions url=${x} width=${T} height=${R} levels=${D}`);const k=f(S.deviceDetails,P,L),H=!!S.isGGGR&&k==="pvr";let N;if(H?N=l.cTFRGBA32:(N=P?e[k]:t[k],p(T,R,N)||(N=P?l.cTFRGBA32:l.cTFRGB565)),!E.startTranscoding())throw E.close(),E.delete(),new Error(`Failed to start transcoding url=${x}`);let I;const F=[];for(let O=0;O<D;++O){const B=E.getImageTranscodedSizeInBytes(O,0,0,N),U=new Uint8Array(B);if(!E.transcodeImage(U,O,0,0,N,0,-1,-1))throw E.close(),E.delete(),new Error(`Failed to transcode image url=${x}`);const V=N===l.cTFRGB565||N===l.cTFRGBA4444;F.push(V?new Uint16Array(U.buffer):U)}if(E.close(),E.delete(),H)for(N=l.cTFRGB565,I=0;I<F.length;++I)F[I]=n(r(F[I]));return{format:i(N,S.deviceDetails),width:T,height:R,levels:F,cubemap:!1,transcodeTime:o()-v,url:x,unswizzledGGGR:H}},_=(x,M,S)=>{const v=o(),E=new h.BasisFile(new Uint8Array(M)),T=E.getImageWidth(0,0),R=E.getImageHeight(0,0),D=E.getNumImages(),P=E.getNumLevels(0),L=!!E.getHasAlpha(),k=E.isUASTC&&E.isUASTC();if(!T||!R||!D||!P)throw E.close(),E.delete(),new Error(`Invalid image dimensions url=${x} width=${T} height=${R} images=${D} levels=${P}`);const H=f(S.deviceDetails,L,k),N=!!S.isGGGR&&H==="pvr";let I;if(N?I=l.cTFRGBA32:(I=L?e[H]:t[H],p(T,R,I)||(I=L?l.cTFRGBA32:l.cTFRGB565)),!E.startTranscoding())throw E.close(),E.delete(),new Error(`Failed to start transcoding url=${x}`);let F;const O=[];for(let B=0;B<P;++B){const U=E.getImageTranscodedSizeInBytes(0,B,I),V=new Uint8Array(U);if(!E.transcodeImage(V,0,B,I,0,0))if(B===P-1&&U===O[B-1].buffer.byteLength)V.set(new Uint8Array(O[B-1].buffer)),console.warn(`Failed to transcode last mipmap level, using previous level instead url=${x}`);else throw E.close(),E.delete(),new Error(`Failed to transcode image url=${x}`);const X=I===l.cTFRGB565||I===l.cTFRGBA4444;O.push(X?new Uint16Array(V.buffer):V)}if(E.close(),E.delete(),N)for(I=l.cTFRGB565,F=0;F<O.length;++F)O[F]=n(r(O[F]));return{format:i(I,S.deviceDetails),width:T,height:R,levels:O,cubemap:!1,transcodeTime:o()-v,url:x,unswizzledGGGR:N}},g=(x,M,S)=>S.isKTX2?m(x,M,S):_(x,M,S),y=(x,M,S)=>{try{const v=g(x,M,S);v.levels=v.levels.map(E=>E.buffer),self.postMessage({url:x,data:v},v.levels)}catch(v){self.postMessage({url:x,err:v},null)}},w=(x,M)=>{const S=(v,E)=>(WebAssembly.instantiate(x.module,v).then(T=>{E(T)}).catch(T=>{console.error(`instantiate failed + ${T}`)}),{});self.BASIS(x.module?{instantiateWasm:S}:null).then(v=>{v.initializeBasis(),h=v,d=x.rgbPriority,u=x.rgbaPriority,M(null)})},C=[];self.onmessage=x=>{const M=x.data;switch(M.type){case"init":w(M.config,()=>{for(let S=0;S<C.length;++S)y(C[S].url,C[S].data,C[S].options);C.length=0});break;case"transcode":h?y(M.url,M.data,M.options):C.push(M);break}}}const wL=l=>({astc:!!l.extCompressedTextureASTC,atc:!!l.extCompressedTextureATC,dxt:!!l.extCompressedTextureS3TC,etc1:!!l.extCompressedTextureETC1,etc2:!!l.extCompressedTextureETC,pvr:!!l.extCompressedTexturePVRTC}),TL=(l,t)=>{const e=n=>{const a=["/* basis */",n,"",`(${bL.toString()})()

`].join(`
`);return new Blob([a],{type:"application/javascript"})},s=()=>{try{if(typeof WebAssembly=="object"&&typeof WebAssembly.instantiate=="function"){const n=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(n instanceof WebAssembly.Module)return new WebAssembly.Instance(n)instanceof WebAssembly.Instance}}catch{}return!1},i=(n,a)=>{t(null,{workerUrl:URL.createObjectURL(e(n)),module:a,rgbPriority:l.rgbPriority,rgbaPriority:l.rgbaPriority})},r={cache:!0,responseType:"text",retry:l.maxRetries>0,maxRetries:l.maxRetries};if(l.glueUrl&&l.wasmUrl&&s()){let n=null,a=null;Ye.get(l.glueUrl,r,(d,u)=>{d?t(d):a?i(u,a):n=u});const o=fetch(l.wasmUrl),h=()=>{o.then(d=>d.arrayBuffer()).then(d=>WebAssembly.compile(d)).then(d=>{n?i(n,d):a=d}).catch(d=>{t(d,null)})};WebAssembly.compileStreaming?WebAssembly.compileStreaming(o).then(d=>{n?i(n,d):a=d}).catch(d=>{b.warn(`compileStreaming() failed for ${l.wasmUrl} (${d}), falling back to arraybuffer download.`),h()}):h()}else Ye.get(l.fallbackUrl,r,(n,a)=>{n?t(n,null):i(a,null)})};class AL{constructor(){this.callbacks={},this.queue=[],this.clients=[]}enqueueJob(t,e,s,i){if(this.callbacks.hasOwnProperty(t))this.callbacks[t].push(s);else{this.callbacks[t]=[s];const r={url:t,data:e,options:i};this.clients.length>0?this.clients.shift().run(r):this.queue.push(r)}}enqueueClient(t){this.queue.length>0?t.run(this.queue.shift()):this.clients.push(t)}handleResponse(t,e,s){const i=this.callbacks[t];if(e)for(let r=0;r<i.length;++r)i[r](e);else{s.format===vc||s.format===bc?s.levels=s.levels.map(r=>new Uint16Array(r)):s.levels=s.levels.map(r=>new Uint8Array(r));for(let r=0;r<i.length;++r)i[r](null,s)}delete this.callbacks[t]}}class EL{constructor(t,e,s){this.queue=t,this.worker=new Worker(e.workerUrl),this.worker.addEventListener("message",i=>{const r=i.data;this.queue.handleResponse(r.url,r.err,r.data),this.eager||this.queue.enqueueClient(this)}),this.worker.postMessage({type:"init",config:e}),this.eager=s}run(t){const e=[];t.data instanceof ArrayBuffer&&e.push(t.data),this.worker.postMessage({type:"transcode",url:t.url,format:t.format,data:t.data,options:t.options},e),this.eager&&this.queue.enqueueClient(this)}}const CL=1,ML=["etc2","etc1","astc","dxt","pvr","atc"],PL=["astc","dxt","etc2","pvr","atc"],RL=5,Mf=new AL;let Wg=null,Pf=!1;function IL(l){if(!Pf){if(!l)l=Wg||{};else if(l.lazyInit){Wg=l;return}if(!l.glueUrl||!l.wasmUrl||!l.fallbackUrl){const t=oy.getConfig("BASIS");t&&(l={glueUrl:t.glueUrl,wasmUrl:t.wasmUrl,fallbackUrl:t.fallbackUrl,numWorkers:t.numWorkers})}if(l.glueUrl||l.wasmUrl||l.fallbackUrl){Pf=!0;const t=Math.max(1,Math.min(16,l.numWorkers||CL)),e=l.numWorkers===1||(l.hasOwnProperty("eagerWorkers")?l.eagerWorkers:!0);l.rgbPriority=l.rgbPriority||ML,l.rgbaPriority=l.rgbaPriority||PL,l.maxRetries=l.hasOwnProperty("maxRetries")?l.maxRetries:RL,TL(l,(s,i)=>{if(s)console.error(`failed to initialize basis worker: ${s}`);else for(let r=0;r<t;++r)Mf.enqueueClient(new EL(Mf,i,e))})}}}let au=null;function kx(l,t,e,s,i){return IL(),au||(au={formats:wL(l)}),Mf.enqueueJob(t,e,s,{deviceDetails:au,isGGGR:!!(i!=null&&i.isGGGR),isKTX2:!!(i!=null&&i.isKTX2)}),Pf}class Va{load(t,e,s){throw new Error("not implemented")}open(t,e,s){throw new Error("not implemented")}}class DL extends Va{constructor(t,e){super(),this.device=e,this.maxRetries=0}load(t,e,s){const i=this.device,r=n=>{var o,h,d;kx(i,t.load,n,e,{isGGGR:(((d=(h=(o=s==null?void 0:s.file)==null?void 0:o.variants)==null?void 0:h.basis)==null?void 0:d.opt)&8)!==0})||e(`Basis module not found. Asset [${s.name}](${s.getFileUrl()}) basis texture variant will not be loaded.`)};he.fetchArrayBuffer(t.load,(n,a)=>{n?e(n):r(a)},s,this.maxRetries)}open(t,e,s,i={}){const r=i.srgb?Ic(e.format):e.format,n=new ce(s,{name:t,profilerHint:fr,addressU:e.cubemap?oe:nt,addressV:e.cubemap?oe:nt,width:e.width,height:e.height,format:r,cubemap:e.cubemap,levels:e.levels,...i});return n.upload(),n}}const Ox=new Uint8Array([137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,1,0,0,0,1,8,6,0,0,0,31,21,196,137,0,0,0,13,73,68,65,84,120,218,99,100,100,98,182,7,0,0,89,0,71,67,133,148,237,0,0,0,0,73,69,78,68,174,66,96,130]),Bx=(l,t)=>{const e=new ce(l,{width:1,height:1,format:Te,mipmaps:!1,levels:[t]}),s=new St({colorBuffer:e,depth:!1});l.setFramebuffer(s.impl._glFrameBuffer),l.initRenderTarget(s);const i=new Uint8ClampedArray(4);return l.gl.readPixels(0,0,1,1,l.gl.RGBA,l.gl.UNSIGNED_BYTE,i),s.destroy(),e.destroy(),i[0]===1&&i[1]===2&&i[2]===3&&i[3]===63},LL=l=>createImageBitmap(new Blob([Ox],{type:"image/png"}),{premultiplyAlpha:"none",colorSpaceConversion:"none"}).then(t=>Bx(l,t)).catch(t=>!1),FL=l=>new Promise((t,e)=>{const s=new Image;s.src=URL.createObjectURL(new Blob([Ox])),s.onload=()=>{t(Bx(l,s))}});class kL{static run(t){LL(t).then(e=>{console.log(`imageBitmapIsCorrect=${e}`)}),FL(t).then(e=>{console.log(`imgElementIsCorrect=${e}`)})}}class OL extends Va{constructor(t,e){super(),this.crossOrigin=t.prefix?"anonymous":null,this.maxRetries=0,this.device=e,Qs.get("IMG_ALPHA_TEST")&&kL.run(this.device)}load(t,e,s){var a;const i=!!((a=s==null?void 0:s.file)!=null&&a.contents);if(i){if(this.device.supportsImageBitmap){this._loadImageBitmapFromBlob(new Blob([s.file.contents]),e);return}t={load:URL.createObjectURL(new Blob([s.file.contents])),original:t.original}}const r=(o,h)=>{i&&URL.revokeObjectURL(t.load),e(o,h)};let n;s&&s.options&&s.options.hasOwnProperty("crossOrigin")?n=s.options.crossOrigin:ka.test(t.load)&&(n=this.crossOrigin),this.device.supportsImageBitmap?this._loadImageBitmap(t.load,t.original,n,r):this._loadImage(t.load,t.original,n,r)}open(t,e,s,i={}){const r=new ce(s,{name:t,profilerHint:fr,width:e.width,height:e.height,format:i.srgb?cs:Te,...i});return r.setSource(e),r}_loadImage(t,e,s,i){const r=new Image;s&&(r.crossOrigin=s);let n=0;const a=this.maxRetries;let o;r.onload=function(){i(null,r)},r.onerror=function(){if(!o)if(a>0&&++n<=a){const h=Math.pow(2,n)*100;console.log(`Error loading Texture from: '${e}' - Retrying in ${h}ms...`);const u=t.indexOf("?")>=0?"&":"?";o=setTimeout(()=>{r.src=`${t+u}retry=${Date.now()}`,o=null},h)}else i(`Error loading Texture from: '${e}'`)},r.src=t}_loadImageBitmap(t,e,s,i){const r={cache:!0,responseType:"blob",retry:this.maxRetries>0,maxRetries:this.maxRetries};Ye.get(t,r,(n,a)=>{n?i(n):this._loadImageBitmapFromBlob(a,i)})}_loadImageBitmapFromBlob(t,e){createImageBitmap(t,{premultiplyAlpha:"none",colorSpaceConversion:"none"}).then(s=>e(null,s)).catch(s=>e(s))}}const ou=[1481919403,3140563232,169478669],BL={33776:wc,33778:Hf,33779:Yo,36196:Cc,37492:$f,37496:qf,35840:Mc,35841:Ko,35842:Pc,35843:Zo,32849:ur,32856:Te,35905:Wf,35907:cs,35898:ya,34843:Tc,34842:it};function NL(l,t,e,s){return l===ya?new Uint32Array(t,e,s/4):new Uint8Array(t,e,s)}class zL extends Va{constructor(t){super(),this.maxRetries=0}load(t,e,s){he.fetchArrayBuffer(t.load,e,s,this.maxRetries)}open(t,e,s,i={}){const r=this.parse(e);if(!r)return null;const n=i.srgb?Ic(r.format):r.format,a=new ce(s,{name:t,profilerHint:fr,addressU:r.cubemap?oe:nt,addressV:r.cubemap?oe:nt,width:r.width,height:r.height,format:n,cubemap:r.cubemap,levels:r.levels,...i});return a.upload(),a}parse(t){const e=new Uint32Array(t);if(ou[0]!==e[0]||ou[1]!==e[1]||ou[2]!==e[2])return b.warn("Invalid definition header found in KTX file. Expected 0xAB4B5458, 0x203131BB, 0x0D0A1A0A"),null;const s={endianness:e[3],glType:e[4],glTypeSize:e[5],glFormat:e[6],glInternalFormat:e[7],glBaseInternalFormat:e[8],pixelWidth:e[9],pixelHeight:e[10],pixelDepth:e[11],numberOfArrayElements:e[12],numberOfFaces:e[13],numberOfMipmapLevels:e[14],bytesOfKeyValueData:e[15]};if(s.pixelDepth>1)return b.warn("More than 1 pixel depth not supported!"),null;if(s.numberOfArrayElements!==0)return b.warn("Array texture not supported!"),null;const i=BL[s.glInternalFormat];if(i===void 0)return b.warn(`Unknown glInternalFormat: ${s.glInternalFormat}`),null;let r=16+s.bytesOfKeyValueData/4;const n=s.numberOfFaces>1,a=[];for(let o=0;o<(s.numberOfMipmapLevels||1);o++){const h=e[r++];n&&a.push([]);const d=n?a[o]:a;for(let u=0;u<(n?6:1);++u)d.push(NL(i,t,r*4,h)),r+=h+3>>2}return{format:i,width:s.pixelWidth,height:s.pixelHeight,levels:a,cubemap:n}}}const UL={KHR_DF_MODEL_UASTC:166};class VL extends Va{constructor(t,e){super(),this.maxRetries=0,this.device=e}load(t,e,s){he.fetchArrayBuffer(t.load,(i,r)=>{i?e(i,r):this.parse(r,t,e,s)},s,this.maxRetries)}open(t,e,s,i={}){const r=i.srgb?Ic(e.format):e.format,n=new ce(s,{name:t,profilerHint:fr,addressU:e.cubemap?oe:nt,addressV:e.cubemap?oe:nt,width:e.width,height:e.height,format:r,cubemap:e.cubemap,levels:e.levels,...i});return n.upload(),n}parse(t,e,s,i){var f,p,m;const r=new ly(t),n=[r.readU32be(),r.readU32be(),r.readU32be()];if(n[0]!==2873840728||n[1]!==540160187||n[2]!==218765834)return b.warn("Invalid definition header found in KTX2 file. Expected 0xAB4B5458, 0x203131BB, 0x0D0A1A0A"),null;const a={vkFormat:r.readU32(),typeSize:r.readU32(),pixelWidth:r.readU32(),pixelHeight:r.readU32(),pixelDepth:r.readU32(),layerCount:r.readU32(),faceCount:r.readU32(),levelCount:r.readU32(),supercompressionScheme:r.readU32()},o={dfdByteOffset:r.readU32(),dfdByteLength:r.readU32(),kvdByteOffset:r.readU32(),kvdByteLength:r.readU32(),sgdByteOffset:r.readU64(),sgdByteLength:r.readU64()},h=[];for(let _=0;_<Math.max(1,a.levelCount);++_)h.push({byteOffset:r.readU64(),byteLength:r.readU64(),uncompressedByteLength:r.readU64()});if(r.readU32()!==o.kvdByteOffset-o.dfdByteOffset)return b.warn("Invalid file data encountered."),null;r.skip(8);const u=r.readU8();r.skip(o.dfdByteLength-9),r.skip(o.kvdByteLength),a.supercompressionScheme===1||u===UL.KHR_DF_MODEL_UASTC?kx(this.device,e.load,t,s,{isGGGR:(((m=(p=(f=i==null?void 0:i.file)==null?void 0:f.variants)==null?void 0:p.basis)==null?void 0:m.opt)&8)!==0,isKTX2:!0})||s(`Basis module not found. Asset [${i.name}](${i.getFileUrl()}) basis texture variant will not be loaded.`):s("unsupported KTX2 pixel format")}}class GL extends Va{constructor(t){super(),this.maxRetries=0}load(t,e,s){he.fetchArrayBuffer(t.load,e,s,this.maxRetries)}open(t,e,s,i={}){const r=new Uint32Array(e,0,32),n=r[4],a=r[3],o=Math.max(r[7],1),h=r[20]===4,d=r[21],u=r[22],f=r[28]===65024,p=827611204,m=894720068,_=113,g=116,y=826496069,w=825438800,C=825504336,x=825439312,M=825504848;let S=!1,v=!1,E=!1,T=!1,R=null,D=1,P;if(h?d===p?(R=wc,S=!0):d===m?(R=Yo,S=!0):d===_?(R=it,D=2):d===g?(R=et,D=4):d===y?(R=Cc,S=!0,v=!0):d===w||d===C?(R=d===w?Ko:Zo,S=!0,E=!0):(d===x||d===M)&&(R=d===x?Mc:Pc,S=!0,T=!0):u===32&&(R=Te),!R)return b.error(`This DDS pixel format is currently unsupported. Empty texture will be created instead of ${t}.`),P=new ce(s,{width:4,height:4,format:ur,name:"dds-legacy-empty"}),P;P=new ce(s,{name:t,profilerHint:fr,addressU:f?oe:nt,addressV:f?oe:nt,width:n,height:a,format:R,cubemap:f,mipmaps:o>1,...i});let L=128;const k=f?6:1;let H;const N=4,I=4,F=d===p?8:16;let O,B,U;for(let V=0;V<k;V++){let X=n,Z=a;for(let K=0;K<o;K++){S?v?H=Math.floor((X+3)/4)*Math.floor((Z+3)/4)*8:E?H=Math.max(X,16)*Math.max(Z,8)/4:T?H=Math.max(X,8)*Math.max(Z,8)/2:(O=Math.floor((X+N-1)/N),B=Math.floor((Z+I-1)/I),U=O*B,H=U*F):H=X*Z*4;const J=R===et?new Float32Array(e,L,H):R===it?new Uint16Array(e,L,H):new Uint8Array(e,L,H);f?(P._levels[K]||(P._levels[K]=[]),P._levels[K][V]=J):P._levels[K]=J,L+=H*D,X=Math.max(X*.5,1),Z=Math.max(Z*.5,1)}}return P.upload(),P}}class HL extends Va{constructor(t){super(),this.maxRetries=0}load(t,e,s){he.fetchArrayBuffer(t.load,e,s,this.maxRetries)}open(t,e,s,i={}){const r=this.parse(e);if(!r)return null;const n=new ce(s,{name:t,profilerHint:fr,addressU:nt,addressV:oe,minFilter:fe,magFilter:fe,width:r.width,height:r.height,levels:r.levels,format:Te,type:cp,mipmaps:!1,...i});return n.upload(),n}parse(t){const e=new ly(t);if(!e.readLine().startsWith("#?RADIANCE"))return b.error("radiance header has invalid magic"),null;const i={};for(;;){const h=e.readLine();if(h.length===0)break;{const d=h.split("=");d.length===2&&(i[d[0]]=d[1])}}if(!i.hasOwnProperty("FORMAT"))return b.error("radiance header missing FORMAT variable"),null;const r=e.readLine().split(" ");if(r.length!==4)return b.error("radiance header has invalid resolution"),null;const n=parseInt(r[1],10),a=parseInt(r[3],10),o=this._readPixels(e,a,n,r[0]==="-Y");return o?{width:a,height:n,levels:[o]}:null}_readPixels(t,e,s,i){if(e<8||e>32767)return this._readPixelsFlat(t,e,s);const r=[0,0,0,0];if(t.readArray(r),r[0]!==2||r[1]!==2||(r[2]&128)!==0)return t.skip(-4),this._readPixelsFlat(t,e,s);const n=new ArrayBuffer(e*s*4),a=new Uint8Array(n);let o=i?0:e*4*(s-1),h,d,u,f,p,m;for(d=0;d<s;++d){if(d&&t.readArray(r),(r[2]<<8)+r[3]!==e)return b.error("radiance has invalid scanline width"),null;for(f=0;f<4;++f)for(h=0;h<e;)if(p=t.readU8(),p>128){if(p-=128,h+p>e)return b.error("radiance has invalid scanline data"),null;for(m=t.readU8(),u=0;u<p;++u)a[o+f+4*h++]=m}else{if(p===0||h+p>e)return b.error("radiance has invalid scanline data"),null;for(u=0;u<p;++u)a[o+f+4*h++]=t.readU8()}o+=e*4*(i?1:-1)}return a}_readPixelsFlat(t,e,s){return t.remainingBytes===e*s*4?new Uint8Array(t.arraybuffer,t.offset):null}}const $g={repeat:nt,clamp:oe,mirror:zf},qg={nearest:fe,linear:at,nearest_mip_nearest:yc,linear_mip_nearest:Sc,nearest_mip_linear:xc,linear_mip_linear:an},WL={default:Bi,rgbm:ln,rgbe:cp,rgbp:ko,swizzleGGGR:dp},$L=function(l){const t=Li.calcMipLevelsCount(l._width,l._height),e=function(i){return i instanceof HTMLCanvasElement||i instanceof HTMLImageElement||i instanceof HTMLVideoElement};if(!(l._format===Te||l._format===et)||l._volume||l._compressed||l._levels.length===1||l._levels.length===t||e(l._cubemap?l._levels[0][0]:l._levels[0]))return;const s=function(i,r,n){const a=Math.max(1,i>>1),o=Math.max(1,r>>1),h=new n.constructor(a*o*4),d=Math.floor(i/a),u=Math.floor(r/o),f=d*u;for(let p=0;p<o;++p)for(let m=0;m<a;++m)for(let _=0;_<4;++_){let g=0;for(let y=0;y<u;++y)for(let w=0;w<d;++w)g+=n[(m*d+w+(p*u+y)*i)*4+_];h[(m+p*a)*4+_]=g/f}return h};for(let i=l._levels.length;i<t;++i){const r=Math.max(1,l._width>>i-1),n=Math.max(1,l._height>>i-1);if(l._cubemap){const a=[];for(let o=0;o<6;++o)a.push(s(r,n,l._levels[i-1][o]));l._levels.push(a)}else l._levels.push(s(r,n,l._levels[i-1]))}l._levelsUpdated=l._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0]};class qL extends Ge{constructor(t){super(t,"texture");const e=t.assets,s=t.graphicsDevice;this._device=s,this._assets=e,this.imgParser=new OL(e,s),this.parsers={dds:new GL(e),ktx:new zL(e),ktx2:new VL(e,s),basis:new DL(e,s),hdr:new HL(e)}}set crossOrigin(t){this.imgParser.crossOrigin=t}get crossOrigin(){return this.imgParser.crossOrigin}set maxRetries(t){this.imgParser.maxRetries=t;for(const e in this.parsers)this.parsers.hasOwnProperty(e)&&(this.parsers[e].maxRetries=t)}get maxRetries(){return this.imgParser.maxRetries}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}_getParser(t){const e=me.getExtension(this._getUrlWithoutParams(t)).toLowerCase().replace(".","");return this.parsers[e]||this.imgParser}_getTextureOptions(t){var s;const e={profilerHint:fr};if(t){((s=t.name)==null?void 0:s.length)>0&&(e.name=t.name);const i=t.data;i.hasOwnProperty("minfilter")&&(e.minFilter=qg[i.minfilter]),i.hasOwnProperty("magfilter")&&(e.magFilter=qg[i.magfilter]),i.hasOwnProperty("addressu")&&(e.addressU=$g[i.addressu]),i.hasOwnProperty("addressv")&&(e.addressV=$g[i.addressv]),i.hasOwnProperty("mipmaps")&&(e.mipmaps=i.mipmaps),i.hasOwnProperty("anisotropy")&&(e.anisotropy=i.anisotropy),i.hasOwnProperty("flipY")&&(e.flipY=!!i.flipY),i.hasOwnProperty("srgb")&&(e.srgb=!!i.srgb),i.hasOwnProperty("type")?e.type=WL[i.type]:i.hasOwnProperty("rgbm")&&i.rgbm?e.type=ln:t.file&&(t.file.opt&8)!==0&&(e.type=dp)}return e}load(t,e,s){typeof t=="string"&&(t={load:t,original:t}),this._getParser(t.original).load(t,e,s)}open(t,e,s){if(!t)return;const i=this._getTextureOptions(s);let r=this._getParser(t).open(t,e,this._device,i);return r===null?r=new ce(this._device,{width:4,height:4,format:ur}):($L(r),e.unswizzledGGGR&&(s.file.variants.basis.opt&=-9)),r}patch(t,e){const s=t.resource;if(!s)return;const i=this._getTextureOptions(t);for(const r of Object.keys(i))s[r]=i[r]}}const XL="inline",jL="immersive-vr",Po="immersive-ar",Xg="viewer",YL="left",KL="cpu-optimized",Nx="gpu-optimized",zx="luminance-alpha",Ux="unsigned-short",Vx="float32";class ZL{constructor(t){c(this,"_manager");c(this,"_supported",be.browser&&!!window.XRDOMOverlayState);c(this,"_root",null);this._manager=t}get supported(){return this._supported}get available(){return this._supported&&this._manager.active&&this._manager._session.domOverlayState!==null}get state(){return!this._supported||!this._manager.active||!this._manager._session.domOverlayState?null:this._manager._session.domOverlayState.type}set root(t){!this._supported||this._manager.active||(this._root=t)}get root(){return this._root}}const lh=[],jg=[];class Rf extends de{constructor(e,s,i,r=null){super();c(this,"manager");c(this,"_xrHitTestSource");c(this,"_transient");c(this,"_inputSource");this.manager=e,this._xrHitTestSource=s,this._transient=i,this._inputSource=r}remove(){if(!this._xrHitTestSource)return;const e=this.manager.hitTest.sources,s=e.indexOf(this);s!==-1&&e.splice(s,1),this.onStop()}onStop(){this._xrHitTestSource.cancel(),this._xrHitTestSource=null,this.fire("remove"),this.manager.hitTest.fire("remove",this)}update(e){if(this._transient){const s=e.getHitTestResultsForTransientInput(this._xrHitTestSource);for(let i=0;i<s.length;i++){const r=s[i];if(!r.results.length)continue;let n;r.inputSource&&(n=this.manager.input._getByInputSource(r.inputSource)),this.updateHitResults(r.results,n)}}else{const s=e.getHitTestResults(this._xrHitTestSource);if(!s.length)return;this.updateHitResults(s)}}updateHitResults(e,s){if(this._inputSource&&this._inputSource!==s)return;const i=lh.pop()??new A;s?i.copy(s.getOrigin()):i.copy(this.manager.camera.getPosition());let r=1/0,n=null;const a=lh.pop()??new A,o=jg.pop()??new ie;for(let h=0;h<e.length;h++){const d=e[h].getPose(this.manager._referenceSpace),u=i.distance(d.transform.position);u>=r||(r=u,n=e[h],a.copy(d.transform.position),o.copy(d.transform.orientation))}this.fire("result",a,o,s||this._inputSource,n),this.manager.hitTest.fire("result",this,a,o,s||this._inputSource,n),lh.push(i),lh.push(a),jg.push(o)}}c(Rf,"EVENT_REMOVE","remove"),c(Rf,"EVENT_RESULT","result");class Br extends de{constructor(e){super();c(this,"manager");c(this,"_supported",be.browser&&!!(window.XRSession&&window.XRSession.prototype.requestHitTestSource));c(this,"_available",!1);c(this,"_checkingAvailability",!1);c(this,"sources",[]);this.manager=e,this._supported&&(this.manager.on("start",this._onSessionStart,this),this.manager.on("end",this._onSessionEnd,this))}_onSessionStart(){if(this.manager.session.enabledFeatures){const e=this.manager.session.enabledFeatures.indexOf("hit-test")!==-1;if(!e)return;this._available=e,this.fire("available")}else this._checkingAvailability||(this._checkingAvailability=!0,this.manager.session.requestReferenceSpace(Xg).then(e=>{this.manager.session.requestHitTestSource({space:e}).then(s=>{s.cancel(),this.manager.active&&(this._available=!0,this.fire("available"))}).catch(()=>{})}).catch(()=>{}))}_onSessionEnd(){if(this._available){this._available=!1;for(let e=0;e<this.sources.length;e++)this.sources[e].onStop();this.sources=[],this.fire("unavailable")}}start(e={}){var n,a;if(!this._supported){(n=e.callback)==null||n.call(e,new Error("XR HitTest is not supported"),null);return}if(!this._available){(a=e.callback)==null||a.call(e,new Error("XR HitTest is not available"),null);return}!e.profile&&!e.spaceType&&(e.spaceType=Xg);let s;const i=e.offsetRay;if(i){const o=new DOMPoint(i.origin.x,i.origin.y,i.origin.z,1),h=new DOMPoint(i.direction.x,i.direction.y,i.direction.z,0);s=new XRRay(o,h)}const r=e.callback;e.spaceType?this.manager.session.requestReferenceSpace(e.spaceType).then(o=>{if(!this.manager.session){const h=new Error("XR Session is not started (2)");r&&r(h),this.fire("error",h);return}this.manager.session.requestHitTestSource({space:o,entityTypes:e.entityTypes||void 0,offsetRay:s}).then(h=>{this._onHitTestSource(h,!1,e.inputSource,r)}).catch(h=>{r&&r(h),this.fire("error",h)})}).catch(o=>{r&&r(o),this.fire("error",o)}):this.manager.session.requestHitTestSourceForTransientInput({profile:e.profile,entityTypes:e.entityTypes||void 0,offsetRay:s}).then(o=>{this._onHitTestSource(o,!0,e.inputSource,r)}).catch(o=>{r&&r(o),this.fire("error",o)})}_onHitTestSource(e,s,i,r){if(!this.manager.session){e.cancel();const a=new Error("XR Session is not started (3)");r&&r(a),this.fire("error",a);return}const n=new Rf(this.manager,e,s,i??null);this.sources.push(n),r&&r(null,n),this.fire("add",n)}update(e){if(this._available)for(let s=0;s<this.sources.length;s++)this.sources[s].update(e)}get supported(){return this._supported}get available(){return this._available}}c(Br,"EVENT_AVAILABLE","available"),c(Br,"EVENT_UNAVAILABLE","unavailable"),c(Br,"EVENT_ADD","add"),c(Br,"EVENT_REMOVE","remove"),c(Br,"EVENT_RESULT","result"),c(Br,"EVENT_ERROR","error");class If extends de{constructor(e,s){super();c(this,"_image");c(this,"_width");c(this,"_bitmap",null);c(this,"_measuredWidth",0);c(this,"_trackable",!1);c(this,"_tracking",!1);c(this,"_emulated",!1);c(this,"_pose",null);c(this,"_position",new A);c(this,"_rotation",new ie);this._image=e,this._width=s}get image(){return this._image}set width(e){this._width=e}get width(){return this._width}get trackable(){return this._trackable}get tracking(){return this._tracking}get emulated(){return this._emulated}prepare(){return this._bitmap?{image:this._bitmap,widthInMeters:this._width}:createImageBitmap(this._image).then(e=>(this._bitmap=e,{image:this._bitmap,widthInMeters:this._width}))}destroy(){this._image=null,this._pose=null,this._bitmap&&(this._bitmap.close(),this._bitmap=null)}getPosition(){return this._pose&&this._position.copy(this._pose.transform.position),this._position}getRotation(){return this._pose&&this._rotation.copy(this._pose.transform.orientation),this._rotation}}c(If,"EVENT_TRACKED","tracked"),c(If,"EVENT_UNTRACKED","untracked");class Gx extends de{constructor(e){super();c(this,"_manager");c(this,"_supported",be.browser&&!!window.XRImageTrackingResult);c(this,"_available",!1);c(this,"_images",[]);this._manager=e,this._supported&&(this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this))}add(e,s){if(!this._supported||this._manager.active)return null;const i=new If(e,s);return this._images.push(i),i}remove(e){if(this._manager.active)return;const s=this._images.indexOf(e);s!==-1&&(e.destroy(),this._images.splice(s,1))}_onSessionStart(){this._manager.session.getTrackedImageScores().then(e=>{this._available=!0;for(let s=0;s<e.length;s++)this._images[s]._trackable=e[s]==="trackable"}).catch(e=>{this._available=!1,this.fire("error",e)})}_onSessionEnd(){this._available=!1;for(let e=0;e<this._images.length;e++){const s=this._images[e];s._pose=null,s._measuredWidth=0,s._tracking&&(s._tracking=!1,s.fire("untracked"))}}prepareImages(e){this._images.length?Promise.all(this._images.map(s=>s.prepare())).then(s=>{e(null,s)}).catch(s=>{e(s,null)}):e(null,null)}update(e){if(!this._available)return;const s=e.getImageTrackingResults(),i={};for(let r=0;r<s.length;r++){i[s[r].index]=s[r];const n=this._images[s[r].index];n._emulated=s[r].trackingState==="emulated",n._measuredWidth=s[r].measuredWidthInMeters,n._pose=e.getPose(s[r].imageSpace,this._manager._referenceSpace)}for(let r=0;r<this._images.length;r++)this._images[r]._tracking&&!i[r]?(this._images[r]._tracking=!1,this._images[r].fire("untracked")):!this._images[r]._tracking&&i[r]&&(this._images[r]._tracking=!0,this._images[r].fire("tracked"))}get supported(){return this._supported}get available(){return this._available}get images(){return this._images}}c(Gx,"EVENT_ERROR","error");class QL{constructor(t,e){c(this,"_index");c(this,"_hand");c(this,"_joints",[]);c(this,"_tip",null);this._index=t,this._hand=e,this._hand._fingers.push(this)}get index(){return this._index}get hand(){return this._hand}get joints(){return this._joints}get tip(){return this._tip}}const Yg=be.browser&&window.XRHand?["thumb-tip","index-finger-tip","middle-finger-tip","ring-finger-tip","pinky-finger-tip"]:[],Hx={};for(let l=0;l<Yg.length;l++)Hx[Yg[l]]=!0;class Kg{constructor(t,e,s,i=null){c(this,"_index");c(this,"_id");c(this,"_hand");c(this,"_finger");c(this,"_wrist");c(this,"_tip");c(this,"_radius",null);c(this,"_localTransform",new q);c(this,"_worldTransform",new q);c(this,"_localPosition",new A);c(this,"_localRotation",new ie);c(this,"_position",new A);c(this,"_rotation",new ie);c(this,"_dirtyLocal",!0);this._index=t,this._id=e,this._hand=s,this._finger=i,this._wrist=e==="wrist",this._tip=this._finger&&!!Hx[e]}update(t){this._dirtyLocal=!0,this._radius=t.radius,this._localPosition.copy(t.transform.position),this._localRotation.copy(t.transform.orientation)}_updateTransforms(){this._dirtyLocal&&(this._dirtyLocal=!1,this._localTransform.setTRS(this._localPosition,this._localRotation,A.ONE));const e=this._hand._manager.camera.parent;e?this._worldTransform.mul2(e.getWorldTransform(),this._localTransform):this._worldTransform.copy(this._localTransform)}getPosition(){return this._updateTransforms(),this._worldTransform.getTranslation(this._position),this._position}getRotation(){return this._updateTransforms(),this._rotation.setFromMat4(this._worldTransform),this._rotation}get id(){return this._id}get index(){return this._index}get hand(){return this._hand}get finger(){return this._finger}get wrist(){return this._wrist}get tip(){return this._tip}get radius(){return this._radius||.005}}let Ah=[];const Dr=new A,hh=new A,Zg=new A;be.browser&&window.XRHand&&(Ah=[["thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip"],["index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip"],["middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip"],["ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip"],["pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"]]);class Df extends de{constructor(e){super();c(this,"_manager");c(this,"_inputSource");c(this,"_tracking",!1);c(this,"_fingers",[]);c(this,"_joints",[]);c(this,"_jointsById",{});c(this,"_tips",[]);c(this,"_wrist",null);const s=e._xrInputSource.hand;if(this._manager=e._manager,this._inputSource=e,s.get("wrist")){const i=new Kg(0,"wrist",this,null);this._wrist=i,this._joints.push(i),this._jointsById.wrist=i}for(let i=0;i<Ah.length;i++){const r=new QL(i,this);for(let n=0;n<Ah[i].length;n++){const a=Ah[i][n];if(!s.get(a))continue;const o=new Kg(n,a,this,r);this._joints.push(o),this._jointsById[a]=o,o.tip&&(this._tips.push(o),r._tip=o),r._joints.push(o)}}}update(e){const s=this._inputSource._xrInputSource;for(let u=0;u<this._joints.length;u++){const f=this._joints[u],p=s.hand.get(f._id);if(p){let m;if(e.session.visibilityState!=="hidden"&&(m=e.getJointPose(p,this._manager._referenceSpace)),m)f.update(m),f.wrist&&!this._tracking&&(this._tracking=!0,this.fire("tracking"));else if(f.wrist){this._tracking&&(this._tracking=!1,this.fire("trackinglost"));break}}}const i=this._jointsById["thumb-metacarpal"],r=this._jointsById["thumb-tip"],n=this._jointsById["index-finger-phalanx-proximal"],a=this._jointsById["index-finger-tip"],o=this._jointsById["ring-finger-phalanx-proximal"],h=this._jointsById["pinky-finger-phalanx-proximal"];if(i&&r&&n&&a&&o&&h){this._inputSource._dirtyRay=!0,this._inputSource._rayLocal.origin.lerp(r._localPosition,a._localPosition,.5);let u=i,f=h;if(this._inputSource.handedness===YL){const p=u;u=f,f=p}Dr.sub2(u._localPosition,this._wrist._localPosition),hh.sub2(f._localPosition,this._wrist._localPosition),Zg.cross(Dr,hh).normalize(),Dr.lerp(n._localPosition,o._localPosition,.5),Dr.sub(this._wrist._localPosition).normalize(),this._inputSource._rayLocal.direction.lerp(Zg,Dr,.5).normalize()}this._fingerIsClosed(1)&&this._fingerIsClosed(2)&&this._fingerIsClosed(3)&&this._fingerIsClosed(4)?this._inputSource._squeezing||(this._inputSource._squeezing=!0,this._inputSource.fire("squeezestart"),this._manager.input.fire("squeezestart",this._inputSource)):this._inputSource._squeezing&&(this._inputSource._squeezing=!1,this._inputSource.fire("squeeze"),this._manager.input.fire("squeeze",this._inputSource),this._inputSource.fire("squeezeend"),this._manager.input.fire("squeezeend",this._inputSource))}_fingerIsClosed(e){const s=this._fingers[e];return Dr.sub2(s.joints[0]._localPosition,s.joints[1]._localPosition).normalize(),hh.sub2(s.joints[2]._localPosition,s.joints[3]._localPosition).normalize(),Dr.dot(hh)<-.8}getJointById(e){return this._jointsById[e]||null}get fingers(){return this._fingers}get joints(){return this._joints}get tips(){return this._tips}get wrist(){return this._wrist}get tracking(){return this._tracking}}c(Df,"EVENT_TRACKING","tracking"),c(Df,"EVENT_TRACKINGLOST","trackinglost");const Qg=new A,Jg=new ie;let JL=0;class As extends de{constructor(e,s){super();c(this,"_id");c(this,"_manager");c(this,"_xrInputSource");c(this,"_ray",new _u);c(this,"_rayLocal",new _u);c(this,"_grip",!1);c(this,"_hand",null);c(this,"_velocitiesAvailable",!1);c(this,"_velocitiesTimestamp",ae());c(this,"_localTransform",null);c(this,"_worldTransform",null);c(this,"_position",new A);c(this,"_rotation",new ie);c(this,"_localPosition",null);c(this,"_localPositionLast",null);c(this,"_localRotation",null);c(this,"_linearVelocity",null);c(this,"_dirtyLocal",!0);c(this,"_dirtyRay",!1);c(this,"_selecting",!1);c(this,"_squeezing",!1);c(this,"_elementInput",!0);c(this,"_elementEntity",null);c(this,"_hitTestSources",[]);this._id=++JL,this._manager=e,this._xrInputSource=s,s.hand&&(this._hand=new Df(this))}get id(){return this._id}get inputSource(){return this._xrInputSource}get targetRayMode(){return this._xrInputSource.targetRayMode}get handedness(){return this._xrInputSource.handedness}get profiles(){return this._xrInputSource.profiles}get grip(){return this._grip}get hand(){return this._hand}get gamepad(){return this._xrInputSource.gamepad||null}get selecting(){return this._selecting}get squeezing(){return this._squeezing}set elementInput(e){this._elementInput!==e&&(this._elementInput=e,this._elementInput||(this._elementEntity=null))}get elementInput(){return this._elementInput}get elementEntity(){return this._elementEntity}get hitTestSources(){return this._hitTestSources}update(e){if(this._hand)this._hand.update(e);else{const s=this._xrInputSource.gripSpace;if(s){const r=e.getPose(s,this._manager._referenceSpace);if(r){this._grip||(this._grip=!0,this._localTransform=new q,this._worldTransform=new q,this._localPositionLast=new A,this._localPosition=new A,this._localRotation=new ie,this._linearVelocity=new A);const n=ae(),a=(n-this._velocitiesTimestamp)/1e3;this._velocitiesTimestamp=n,this._dirtyLocal=!0,this._localPositionLast.copy(this._localPosition),this._localPosition.copy(r.transform.position),this._localRotation.copy(r.transform.orientation),this._velocitiesAvailable=!0,this._manager.input.velocitiesSupported&&r.linearVelocity?this._linearVelocity.copy(r.linearVelocity):a>0&&(Qg.sub2(this._localPosition,this._localPositionLast).divScalar(a),this._linearVelocity.lerp(this._linearVelocity,Qg,.15))}else this._velocitiesAvailable=!1}const i=e.getPose(this._xrInputSource.targetRaySpace,this._manager._referenceSpace);i&&(this._dirtyRay=!0,this._rayLocal.origin.copy(i.transform.position),this._rayLocal.direction.set(0,0,-1),Jg.copy(i.transform.orientation),Jg.transformVector(this._rayLocal.direction,this._rayLocal.direction))}}_updateTransforms(){this._dirtyLocal&&(this._dirtyLocal=!1,this._localTransform.setTRS(this._localPosition,this._localRotation,A.ONE));const e=this._manager.camera.parent;e?this._worldTransform.mul2(e.getWorldTransform(),this._localTransform):this._worldTransform.copy(this._localTransform)}_updateRayTransforms(){const e=this._dirtyRay;if(this._dirtyRay=!1,this._manager.camera.parent){const i=this._manager.camera.parent.getWorldTransform();i.getTranslation(this._position),this._rotation.setFromMat4(i),this._rotation.transformVector(this._rayLocal.origin,this._ray.origin),this._ray.origin.add(this._position),this._rotation.transformVector(this._rayLocal.direction,this._ray.direction)}else e&&(this._ray.origin.copy(this._rayLocal.origin),this._ray.direction.copy(this._rayLocal.direction))}getPosition(){return this._position?(this._updateTransforms(),this._worldTransform.getTranslation(this._position),this._position):null}getLocalPosition(){return this._localPosition}getRotation(){return this._rotation?(this._updateTransforms(),this._rotation.setFromMat4(this._worldTransform),this._rotation):null}getLocalRotation(){return this._localRotation}getLinearVelocity(){return this._velocitiesAvailable?this._linearVelocity:null}getOrigin(){return this._updateRayTransforms(),this._ray.origin}getDirection(){return this._updateRayTransforms(),this._ray.direction}hitTestStart(e={}){e.inputSource=this,e.profile=this._xrInputSource.profiles[0];const s=e.callback;e.callback=(i,r)=>{r&&this.onHitTestSourceAdd(r),s&&s(i,r)},this._manager.hitTest.start(e)}onHitTestSourceAdd(e){this._hitTestSources.push(e),this.fire("hittest:add",e),e.on("result",(s,i,r,n)=>{r===this&&this.fire("hittest:result",e,s,i,n)}),e.once("remove",()=>{this.onHitTestSourceRemove(e),this.fire("hittest:remove",e)})}onHitTestSourceRemove(e){const s=this._hitTestSources.indexOf(e);s!==-1&&this._hitTestSources.splice(s,1)}}c(As,"EVENT_REMOVE","remove"),c(As,"EVENT_SELECT","select"),c(As,"EVENT_SELECTSTART","selectstart"),c(As,"EVENT_SELECTEND","selectend"),c(As,"EVENT_SQUEEZE","squeeze"),c(As,"EVENT_SQUEEZESTART","squeezestart"),c(As,"EVENT_SQUEEZEEND","squeezeend"),c(As,"EVENT_HITTESTADD","hittest:add"),c(As,"EVENT_HITTESTREMOVE","hittest:remove"),c(As,"EVENT_HITTESTRESULT","hittest:result");class gi extends de{constructor(e){var s,i;super();c(this,"manager");c(this,"_inputSources",[]);c(this,"_onInputSourcesChangeEvt");c(this,"velocitiesSupported",!1);this.manager=e,this.velocitiesSupported=!!(be.browser&&((i=(s=window.XRPose)==null?void 0:s.prototype)!=null&&i.hasOwnProperty("linearVelocity"))),this._onInputSourcesChangeEvt=r=>{this._onInputSourcesChange(r)},this.manager.on("start",this._onSessionStart,this),this.manager.on("end",this._onSessionEnd,this)}_onSessionStart(){const e=this.manager.session;e.addEventListener("inputsourceschange",this._onInputSourcesChangeEvt),e.addEventListener("select",i=>{const r=this._getByInputSource(i.inputSource);r.update(i.frame),r.fire("select",i),this.fire("select",r,i)}),e.addEventListener("selectstart",i=>{const r=this._getByInputSource(i.inputSource);r._selecting||(r.update(i.frame),r._selecting=!0,r.fire("selectstart",i),this.fire("selectstart",r,i))}),e.addEventListener("selectend",i=>{const r=this._getByInputSource(i.inputSource);r.update(i.frame),r._selecting=!1,r.fire("selectend",i),this.fire("selectend",r,i)}),e.addEventListener("squeeze",i=>{const r=this._getByInputSource(i.inputSource);r.update(i.frame),r.fire("squeeze",i),this.fire("squeeze",r,i)}),e.addEventListener("squeezestart",i=>{const r=this._getByInputSource(i.inputSource);r.update(i.frame),r._squeezing=!0,r.fire("squeezestart",i),this.fire("squeezestart",r,i)}),e.addEventListener("squeezeend",i=>{const r=this._getByInputSource(i.inputSource);r.update(i.frame),r._squeezing=!1,r.fire("squeezeend",i),this.fire("squeezeend",r,i)});const s=e.inputSources;for(let i=0;i<s.length;i++)this._addInputSource(s[i])}_onSessionEnd(){let e=this._inputSources.length;for(;e--;){const i=this._inputSources[e];this._inputSources.splice(e,1),i.fire("remove"),this.fire("remove",i)}this.fire("removeall"),this.manager.session.removeEventListener("inputsourceschange",this._onInputSourcesChangeEvt)}_onInputSourcesChange(e){for(let s=0;s<e.removed.length;s++)this._removeInputSource(e.removed[s]);for(let s=0;s<e.added.length;s++)this._addInputSource(e.added[s])}_getByInputSource(e){for(let s=0;s<this._inputSources.length;s++)if(this._inputSources[s].inputSource===e)return this._inputSources[s];return null}_removeAppEntity(e){const s=this.manager.app.root.findByName(`Armature_${e}`);s&&this.manager.app.root.removeChild(s)}_addInputSource(e){if(this._removeAppEntity(e.handedness),this._getByInputSource(e))return;const s=new As(this.manager,e);this._inputSources.push(s),this.fire("add",s)}_removeInputSource(e){for(let s=0;s<this._inputSources.length;s++){if(this._inputSources[s].inputSource!==e)continue;const i=this._inputSources[s];this._inputSources.splice(s,1);let r=i.hitTestSources.length;for(;r--;)i.hitTestSources[r].remove();this._removeAppEntity(i.handedness),i.fire("remove"),this.fire("remove",i);return}}update(e){for(let s=0;s<this._inputSources.length;s++)this._inputSources[s].update(e)}get inputSources(){return this._inputSources}}c(gi,"EVENT_ADD","add"),c(gi,"EVENT_REMOVE","remove"),c(gi,"EVENT_SELECT","select"),c(gi,"EVENT_SELECTSTART","selectstart"),c(gi,"EVENT_SELECTEND","selectend"),c(gi,"EVENT_SQUEEZE","squeeze"),c(gi,"EVENT_SQUEEZESTART","squeezestart"),c(gi,"EVENT_SQUEEZEEND","squeezeend");const Yn=new A,ey=new A,lu=new q,ty=new q;class Lf extends de{constructor(e){super();c(this,"_manager");c(this,"_supported",!1);c(this,"_available",!1);c(this,"_lightProbeRequested",!1);c(this,"_lightProbe",null);c(this,"_intensity",0);c(this,"_rotation",new ie);c(this,"_color",new Y);c(this,"_sphericalHarmonics",new Float32Array(27));this._manager=e,this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this)}_onSessionStart(){this._manager.session.requestLightProbe&&(this._supported=!0)}_onSessionEnd(){this._supported=!1,this._available=!1,this._lightProbeRequested=!1,this._lightProbe=null}start(){let e;if(this._manager.session||(e=new Error("XR session is not running")),!e&&this._manager.type!==Po&&(e=new Error("XR session type is not AR")),!e&&!this._supported&&(e=new Error("light-estimation is not supported")),(!e&&this._lightProbe||this._lightProbeRequested)&&(e=new Error("light estimation is already requested")),e){this.fire("error",e);return}this._lightProbeRequested=!0,this._manager.session.requestLightProbe().then(s=>{const i=this._lightProbeRequested;this._lightProbeRequested=!1,this._manager.active?i&&(this._lightProbe=s):this.fire("error",new Error("XR session is not active"))}).catch(s=>{this._lightProbeRequested=!1,this.fire("error",s)})}end(){this._lightProbeRequested=!1,this._lightProbe=null,this._available=!1}update(e){if(!this._lightProbe)return;const s=e.getLightEstimate(this._lightProbe);if(!s)return;this._available||(this._available=!0,this.fire("available"));const i=s.primaryLightIntensity;this._intensity=Math.max(1,Math.max(i.x,Math.max(i.y,i.z))),Yn.copy(i).mulScalar(1/this._intensity),this._color.set(Yn.x,Yn.y,Yn.z),Yn.set(0,0,0),ey.copy(s.primaryLightDirection),lu.setLookAt(ey,Yn,A.UP),ty.setFromAxisAngle(A.RIGHT,90),lu.mul(ty),this._rotation.setFromMat4(lu),this._sphericalHarmonics.set(s.sphericalHarmonicsCoefficients)}get supported(){return this._supported}get available(){return this._available}get intensity(){return this._available?this._intensity:null}get color(){return this._available?this._color:null}get rotation(){return this._available?this._rotation:null}get sphericalHarmonics(){return this._available?this._sphericalHarmonics:null}}c(Lf,"EVENT_AVAILABLE","available"),c(Lf,"EVENT_ERROR","error");let eF=0;class Ff extends de{constructor(e,s){super();c(this,"_id");c(this,"_planeDetection");c(this,"_xrPlane");c(this,"_lastChangedTime");c(this,"_orientation");c(this,"_position",new A);c(this,"_rotation",new ie);this._id=++eF,this._planeDetection=e,this._xrPlane=s,this._lastChangedTime=s.lastChangedTime,this._orientation=s.orientation}destroy(){this._xrPlane&&(this._xrPlane=null,this.fire("remove"))}update(e){const s=this._planeDetection._manager,i=e.getPose(this._xrPlane.planeSpace,s._referenceSpace);i&&(this._position.copy(i.transform.position),this._rotation.copy(i.transform.orientation)),this._lastChangedTime!==this._xrPlane.lastChangedTime&&(this._lastChangedTime=this._xrPlane.lastChangedTime,this.fire("change"))}getPosition(){return this._position}getRotation(){return this._rotation}get id(){return this._id}get orientation(){return this._orientation}get points(){return this._xrPlane.polygon}get label(){return this._xrPlane.semanticLabel||""}}c(Ff,"EVENT_REMOVE","remove"),c(Ff,"EVENT_CHANGE","change");class mo extends de{constructor(e){super();c(this,"_manager");c(this,"_supported",be.browser&&!!window.XRPlane);c(this,"_available",!1);c(this,"_planesIndex",new Map);c(this,"_planes",[]);this._manager=e,this._supported&&(this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this))}_onSessionStart(){this._manager.session.enabledFeatures&&this._manager.session.enabledFeatures.indexOf("plane-detection")!==-1&&(this._available=!0,this.fire("available"))}_onSessionEnd(){for(let e=0;e<this._planes.length;e++)this._planes[e].destroy(),this.fire("remove",this._planes[e]);this._planesIndex.clear(),this._planes.length=0,this._available&&(this._available=!1,this.fire("unavailable"))}update(e){if(!this._available)if(!this._manager.session.enabledFeatures&&e.detectedPlanes.size)this._available=!0,this.fire("available");else return;const s=e.detectedPlanes;for(const[i,r]of this._planesIndex)s.has(i)||(this._planesIndex.delete(i),this._planes.splice(this._planes.indexOf(r),1),r.destroy(),this.fire("remove",r));for(const i of s){let r=this._planesIndex.get(i);r?r.update(e):(r=new Ff(this,i),this._planesIndex.set(i,r),this._planes.push(r),r.update(e),this.fire("add",r))}}get supported(){return this._supported}get available(){return this._available}get planes(){return this._planes}}c(mo,"EVENT_AVAILABLE","available"),c(mo,"EVENT_UNAVAILABLE","unavailable"),c(mo,"EVENT_ADD","add"),c(mo,"EVENT_REMOVE","remove");class _o extends de{constructor(e,s,i=null){super();c(this,"_position",new A);c(this,"_rotation",new ie);c(this,"_uuid",null);c(this,"_uuidRequests",null);this._anchors=e,this._xrAnchor=s,this._uuid=i}destroy(){if(!this._xrAnchor)return;const e=this._xrAnchor;this._xrAnchor.delete(),this._xrAnchor=null,this.fire("destroy",e,this)}update(e){if(!this._xrAnchor)return;const s=e.getPose(this._xrAnchor.anchorSpace,this._anchors.manager._referenceSpace);if(s){if(this._position.equals(s.transform.position)&&this._rotation.equals(s.transform.orientation))return;this._position.copy(s.transform.position),this._rotation.copy(s.transform.orientation),this.fire("change")}}getPosition(){return this._position}getRotation(){return this._rotation}persist(e){if(!this._anchors.persistence){e==null||e(new Error("Persistent Anchors are not supported"),null);return}if(this._uuid){e==null||e(null,this._uuid);return}if(this._uuidRequests){e&&this._uuidRequests.push(e);return}this._uuidRequests=[],this._xrAnchor.requestPersistentHandle().then(s=>{this._uuid=s,this._anchors._indexByUuid.set(this._uuid,this),e==null||e(null,s);for(const i of this._uuidRequests)i(null,s);this._uuidRequests=null,this.fire("persist",s)}).catch(s=>{e==null||e(s,null);for(const i of this._uuidRequests)i(s,null);this._uuidRequests=null})}forget(e){if(!this._uuid){e==null||e(new Error("Anchor is not persistent"));return}this._anchors.forget(this._uuid,s=>{this._uuid=null,e==null||e(s),this.fire("forget")})}get uuid(){return this._uuid}get persistent(){return!!this._uuid}}c(_o,"EVENT_DESTROY","destroy"),c(_o,"EVENT_CHANGE","change"),c(_o,"EVENT_PERSIST","persist"),c(_o,"EVENT_FORGET","forget");var sy;class Jn extends de{constructor(e){super();c(this,"manager");c(this,"_supported",be.browser&&!!window.XRAnchor);c(this,"_available",!1);c(this,"_checkingAvailability",!1);c(this,"_persistence",be.browser&&!!((sy=window==null?void 0:window.XRSession)!=null&&sy.prototype.restorePersistentAnchor));c(this,"_creationQueue",[]);c(this,"_index",new Map);c(this,"_indexByUuid",new Map);c(this,"_list",[]);c(this,"_callbacksAnchors",new Map);this.manager=e,this._supported&&(this.manager.on("start",this._onSessionStart,this),this.manager.on("end",this._onSessionEnd,this))}_onSessionStart(){const e=this.manager.session.enabledFeatures.indexOf("anchors")!==-1;e&&(this._available=e,this.fire("available"))}_onSessionEnd(){if(!this._available)return;this._available=!1;for(let s=0;s<this._creationQueue.length;s++)this._creationQueue[s].callback&&this._creationQueue[s].callback(new Error("session ended"),null);this._creationQueue.length=0,this._index.clear(),this._indexByUuid.clear();let e=this._list.length;for(;e--;)this._list[e].destroy();this._list.length=0,this.fire("unavailable")}_createAnchor(e,s=null){const i=new _o(this,e,s);return this._index.set(e,i),s&&this._indexByUuid.set(s,i),this._list.push(i),i.once("destroy",this._onAnchorDestroy,this),i}_onAnchorDestroy(e,s){this._index.delete(e),s.uuid&&this._indexByUuid.delete(s.uuid);const i=this._list.indexOf(s);i!==-1&&this._list.splice(i,1),this.fire("destroy",s)}create(e,s,i){if(!this._available){i==null||i(new Error("Anchors API is not available"),null);return}if(window.XRHitTestResult&&e instanceof XRHitTestResult){const r=e;if(i=s,!this._supported){i==null||i(new Error("Anchors API is not supported"),null);return}if(!r.createAnchor){i==null||i(new Error("Creating Anchor from Hit Test is not supported"),null);return}r.createAnchor().then(n=>{const a=this._createAnchor(n);i==null||i(null,a),this.fire("add",a)}).catch(n=>{i==null||i(n,null),this.fire("error",n)})}else this._creationQueue.push({transform:new XRRigidTransform(e,s),callback:i})}restore(e,s){if(!this._available){s==null||s(new Error("Anchors API is not available"),null);return}if(!this._persistence){s==null||s(new Error("Anchor Persistence is not supported"),null);return}if(!this.manager.active){s==null||s(new Error("WebXR session is not active"),null);return}this.manager.session.restorePersistentAnchor(e).then(i=>{const r=this._createAnchor(i,e);s==null||s(null,r),this.fire("add",r)}).catch(i=>{s==null||s(i,null),this.fire("error",i)})}forget(e,s){if(!this._available){s==null||s(new Error("Anchors API is not available"));return}if(!this._persistence){s==null||s(new Error("Anchor Persistence is not supported"));return}if(!this.manager.active){s==null||s(new Error("WebXR session is not active"));return}this.manager.session.deletePersistentAnchor(e).then(()=>{s==null||s(null)}).catch(i=>{s==null||s(i),this.fire("error",i)})}update(e){if(!this._available){!this.manager.session.enabledFeatures&&!this._checkingAvailability&&(this._checkingAvailability=!0,e.createAnchor(new XRRigidTransform,this.manager._referenceSpace).then(s=>{s.delete(),this.manager.active&&(this._available=!0,this.fire("available"))}).catch(()=>{}));return}if(this._creationQueue.length){for(let s=0;s<this._creationQueue.length;s++){const i=this._creationQueue[s];e.createAnchor(i.transform,this.manager._referenceSpace).then(r=>{i.callback&&this._callbacksAnchors.set(r,i.callback)}).catch(r=>{i.callback&&i.callback(r,null),this.fire("error",r)})}this._creationQueue.length=0}for(const[s,i]of this._index)e.trackedAnchors.has(s)||(this._index.delete(s),i.destroy());for(let s=0;s<this._list.length;s++)this._list[s].update(e);for(const s of e.trackedAnchors){if(this._index.has(s))continue;try{const n=s.anchorSpace}catch{continue}const i=this._createAnchor(s);i.update(e);const r=this._callbacksAnchors.get(s);r&&(this._callbacksAnchors.delete(s),r(null,i)),this.fire("add",i)}}get supported(){return this._supported}get available(){return this._available}get persistence(){return this._persistence}get uuids(){return!this._available||!this._persistence||!this.manager.active?null:this.manager.session.persistentAnchors}get list(){return this._list}}c(Jn,"EVENT_AVAILABLE","available"),c(Jn,"EVENT_UNAVAILABLE","unavailable"),c(Jn,"EVENT_ERROR","error"),c(Jn,"EVENT_ADD","add"),c(Jn,"EVENT_DESTROY","destroy");class kf extends de{constructor(e,s){super();c(this,"_meshDetection");c(this,"_xrMesh");c(this,"_lastChanged",0);c(this,"_position",new A);c(this,"_rotation",new ie);this._meshDetection=e,this._xrMesh=s,this._lastChanged=this._xrMesh.lastChangedTime}get xrMesh(){return this._xrMesh}get label(){return this._xrMesh.semanticLabel||""}get vertices(){return this._xrMesh.vertices}get indices(){return this._xrMesh.indices}destroy(){this._xrMesh&&(this._xrMesh=null,this.fire("remove"))}update(e){const s=this._meshDetection._manager,i=e.getPose(this._xrMesh.meshSpace,s._referenceSpace);i&&(this._position.copy(i.transform.position),this._rotation.copy(i.transform.orientation)),this._lastChanged!==this._xrMesh.lastChangedTime&&(this._lastChanged=this._xrMesh.lastChangedTime,this.fire("change"))}getPosition(){return this._position}getRotation(){return this._rotation}}c(kf,"EVENT_REMOVE","remove"),c(kf,"EVENT_CHANGE","change");class go extends de{constructor(e){super();c(this,"_manager");c(this,"_supported",be.browser&&!!window.XRMesh);c(this,"_available",!1);c(this,"_index",new Map);c(this,"_list",[]);this._manager=e,this._supported&&(this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this))}update(e){if(!this._available)if(!this._manager.session.enabledFeatures&&e.detectedMeshes.size)this._available=!0,this.fire("available");else return;for(const s of e.detectedMeshes){let i=this._index.get(s);i?i.update(e):(i=new kf(this,s),this._index.set(s,i),this._list.push(i),i.update(e),this.fire("add",i))}for(const s of this._index.values())e.detectedMeshes.has(s.xrMesh)||this._removeMesh(s)}_removeMesh(e){this._index.delete(e.xrMesh),this._list.splice(this._list.indexOf(e),1),e.destroy(),this.fire("remove",e)}_onSessionStart(){if(this._manager.session.enabledFeatures){const e=this._manager.session.enabledFeatures.indexOf("mesh-detection")!==-1;if(!e)return;this._available=e,this.fire("available")}}_onSessionEnd(){if(this._available){this._available=!1;for(const e of this._index.values())this._removeMesh(e);this.fire("unavailable")}}get supported(){return this._supported}get available(){return this._available}get meshes(){return this._list}}c(go,"EVENT_AVAILABLE","available"),c(go,"EVENT_UNAVAILABLE","unavailable"),c(go,"EVENT_ADD","add"),c(go,"EVENT_REMOVE","remove");class Wx extends de{constructor(e,s,i){super();c(this,"_manager");c(this,"_xrView");c(this,"_positionData",new Float32Array(3));c(this,"_viewport",new ee);c(this,"_projMat",new q);c(this,"_projViewOffMat",new q);c(this,"_viewMat",new q);c(this,"_viewOffMat",new q);c(this,"_viewMat3",new Js);c(this,"_viewInvMat",new q);c(this,"_viewInvOffMat",new q);c(this,"_xrCamera",null);c(this,"_textureColor",null);c(this,"_textureDepth",null);c(this,"_depthInfo",null);c(this,"_emptyDepthBuffer",new Uint8Array(32));c(this,"_depthMatrix",new q);this._manager=e,this._xrView=s;const r=this._manager.app.graphicsDevice;if(this._manager.views.supportedColor&&(this._xrCamera=this._xrView.camera,this._manager.views.availableColor&&this._xrCamera&&(this._textureColor=new ce(r,{format:ur,mipmaps:!1,addressU:oe,addressV:oe,minFilter:at,magFilter:at,width:this._xrCamera.width,height:this._xrCamera.height,name:`XrView-${this._xrView.eye}-Color`}))),this._manager.views.supportedDepth&&this._manager.views.availableDepth){const n=this._manager.views.depthGpuOptimized?fe:at;this._textureDepth=new ce(r,{format:this._manager.views.depthPixelFormat,arrayLength:i===1?0:i,mipmaps:!1,addressU:oe,addressV:oe,minFilter:n,magFilter:n,width:4,height:4,name:`XrView-${this._xrView.eye}-Depth`});for(let a=0;a<this._textureDepth._levels.length;a++)this._textureDepth._levels[a]=this._emptyDepthBuffer;this._textureDepth.upload()}(this._textureColor||this._textureDepth)&&r.on("devicelost",this._onDeviceLost,this)}get textureColor(){return this._textureColor}get textureDepth(){return this._textureDepth}get depthUvMatrix(){return this._depthMatrix}get depthValueToMeters(){var e;return((e=this._depthInfo)==null?void 0:e.rawValueToMeters)||0}get eye(){return this._xrView.eye}get viewport(){return this._viewport}get projMat(){return this._projMat}get projViewOffMat(){return this._projViewOffMat}get viewOffMat(){return this._viewOffMat}get viewInvOffMat(){return this._viewInvOffMat}get viewMat3(){return this._viewMat3}get positionData(){return this._positionData}update(e,s){this._xrView=s,this._manager.views.availableColor&&(this._xrCamera=this._xrView.camera);const r=e.session.renderState.baseLayer.getViewport(this._xrView);this._viewport.x=r.x,this._viewport.y=r.y,this._viewport.z=r.width,this._viewport.w=r.height,this._projMat.set(this._xrView.projectionMatrix),this._viewMat.set(this._xrView.transform.inverse.matrix),this._viewInvMat.set(this._xrView.transform.matrix),this._updateTextureColor(),this._updateDepth(e)}_updateTextureColor(){if(!this._manager.views.availableColor||!this._xrCamera||!this._textureColor)return;const e=this._manager.webglBinding;if(!e)return;const s=e.getCameraImage(this._xrCamera);if(!s)return;const i=this._manager.app.graphicsDevice,r=i.gl;if(!this._frameBufferSource)this._frameBufferSource=r.createFramebuffer(),this._frameBuffer=r.createFramebuffer();else{const n=r.COLOR_ATTACHMENT0,a=this._xrCamera.width,o=this._xrCamera.height;i.setFramebuffer(this._frameBufferSource),r.framebufferTexture2D(r.FRAMEBUFFER,n,r.TEXTURE_2D,s,0),i.setFramebuffer(this._frameBuffer),r.framebufferTexture2D(r.FRAMEBUFFER,n,r.TEXTURE_2D,this._textureColor.impl._glTexture,0),r.bindFramebuffer(r.READ_FRAMEBUFFER,this._frameBufferSource),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,this._frameBuffer),r.blitFramebuffer(0,o,a,0,0,0,a,o,r.COLOR_BUFFER_BIT,r.NEAREST)}}_updateDepth(e){var d,u;if(!this._manager.views.availableDepth||!this._textureDepth)return;const s=this._manager.views.depthGpuOptimized,i=s?this._manager.webglBinding:e;if(!i){this._depthInfo=null;return}const r=i.getDepthInformation(this._xrView);if(!r){this._depthInfo=null;return}let n=!this._depthInfo!=!r;this._depthInfo=r;const a=((d=this._depthInfo)==null?void 0:d.width)||4,o=((u=this._depthInfo)==null?void 0:u.height)||4;let h=!1;if((this._textureDepth.width!==a||this._textureDepth.height!==o)&&(this._textureDepth._width=a,this._textureDepth._height=o,n=!0,h=!0),n&&(this._depthInfo?this._depthMatrix.data.set(this._depthInfo.normDepthBufferFromNormView.matrix):this._depthMatrix.setIdentity()),this._depthInfo)if(s){if(this._depthInfo.texture){const f=this._manager.app.graphicsDevice.gl;switch(this._textureDepth.impl._glTexture=this._depthInfo.texture,this._depthInfo.textureType==="texture-array"?this._textureDepth.impl._glTarget=f.TEXTURE_2D_ARRAY:this._textureDepth.impl._glTarget=f.TEXTURE_2D,this._manager.views.depthPixelFormat){case Oi:this._textureDepth.impl._glInternalFormat=f.R32F,this._textureDepth.impl._glPixelType=f.FLOAT,this._textureDepth.impl._glFormat=f.RED;break;case Di:this._textureDepth.impl._glInternalFormat=f.DEPTH_COMPONENT16,this._textureDepth.impl._glPixelType=f.UNSIGNED_SHORT,this._textureDepth.impl._glFormat=f.DEPTH_COMPONENT;break}this._textureDepth.impl._glCreated=!0}}else this._textureDepth._levels[0]=new Uint8Array(this._depthInfo.data),this._textureDepth.upload();else this._textureDepth._levels[0]=this._emptyDepthBuffer,this._textureDepth.upload();h&&this.fire("depth:resize",a,o)}updateTransforms(e){e?(this._viewInvOffMat.mul2(e,this._viewInvMat),this.viewOffMat.copy(this._viewInvOffMat).invert()):(this._viewInvOffMat.copy(this._viewInvMat),this.viewOffMat.copy(this._viewMat)),this._viewMat3.setFromMat4(this._viewOffMat),this._projViewOffMat.mul2(this._projMat,this._viewOffMat),this._positionData[0]=this._viewInvOffMat.data[12],this._positionData[1]=this._viewInvOffMat.data[13],this._positionData[2]=this._viewInvOffMat.data[14]}_onDeviceLost(){this._frameBufferSource=null,this._frameBuffer=null,this._depthInfo=null}getDepth(e,s){var i;return this._manager.views.depthGpuOptimized?null:((i=this._depthInfo)==null?void 0:i.getDepthInMeters(e,s))??null}destroy(){if(this._depthInfo=null,this._textureColor&&(this._textureColor.destroy(),this._textureColor=null),this._textureDepth&&(this._textureDepth.destroy(),this._textureDepth=null),this._frameBufferSource){const e=this._manager.app.graphicsDevice.gl;e.deleteFramebuffer(this._frameBufferSource),this._frameBufferSource=null,e.deleteFramebuffer(this._frameBuffer),this._frameBuffer=null}}}c(Wx,"EVENT_DEPTHRESIZE","depth:resize");class lc extends de{constructor(e){super();c(this,"_manager");c(this,"_index",new Map);c(this,"_indexTmp",new Map);c(this,"_list",[]);c(this,"_supportedColor",be.browser&&!!window.XRCamera&&!!window.XRWebGLBinding);c(this,"_supportedDepth",be.browser&&!!window.XRDepthInformation);c(this,"_availableColor",!1);c(this,"_availableDepth",!1);c(this,"_depthUsage","");c(this,"_depthFormat","");c(this,"_depthFormats",{[zx]:Vf,[Ux]:Di,[Vx]:Oi});this._manager=e,this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this)}get list(){return this._list}get supportedColor(){return this._supportedColor}get supportedDepth(){return this._supportedDepth}get availableColor(){return this._availableColor}get availableDepth(){return this._availableDepth}get depthUsage(){return this._depthUsage}get depthGpuOptimized(){return this._depthUsage===Nx}get depthFormat(){return this._depthFormat}get depthPixelFormat(){return this._depthFormats[this._depthFormat]??null}update(e,s){for(let i=0;i<s.length;i++)this._indexTmp.set(s[i].eye,s[i]);for(const[i,r]of this._indexTmp){let n=this._index.get(i);n?n.update(e,r):(n=new Wx(this._manager,r,s.length),this._index.set(i,n),this._list.push(n),n.update(e,r),this.fire("add",n))}for(const[i,r]of this._index){if(this._indexTmp.has(i))continue;r.destroy(),this._index.delete(i);const n=this._list.indexOf(r);n!==-1&&this._list.splice(n,1),this.fire("remove",r)}this._indexTmp.clear()}get(e){return this._index.get(e)||null}_onSessionStart(){if(this._manager.type===Po&&this._manager.session.enabledFeatures&&(this._availableColor=this._manager.session.enabledFeatures.indexOf("camera-access")!==-1,this._availableDepth=this._manager.session.enabledFeatures.indexOf("depth-sensing")!==-1,this._availableDepth)){const e=this._manager.session;this._depthUsage=e.depthUsage,this._depthFormat=e.depthDataFormat}}_onSessionEnd(){for(const e of this._index.values())e.destroy();this._index.clear(),this._availableColor=!1,this._availableDepth=!1,this._depthUsage="",this._depthFormat="",this._list.length=0}}c(lc,"EVENT_ADD","add"),c(lc,"EVENT_REMOVE","remove");class ea extends de{constructor(e){super();c(this,"app");c(this,"_supported",be.browser&&!!navigator.xr);c(this,"_available",{});c(this,"_type",null);c(this,"_spaceType",null);c(this,"_session",null);c(this,"_baseLayer",null);c(this,"webglBinding",null);c(this,"_referenceSpace",null);c(this,"domOverlay");c(this,"hitTest");c(this,"imageTracking");c(this,"planeDetection");c(this,"meshDetection");c(this,"input");c(this,"lightEstimation");c(this,"views");c(this,"anchors");c(this,"_camera",null);c(this,"_localPosition",new A);c(this,"_localRotation",new ie);c(this,"_depthNear",.1);c(this,"_depthFar",1e3);c(this,"_supportedFrameRates",null);c(this,"_width",0);c(this,"_height",0);c(this,"_framebufferScaleFactor",1);this.app=e,this._available[XL]=!1,this._available[jL]=!1,this._available[Po]=!1,this.views=new lc(this),this.domOverlay=new ZL(this),this.hitTest=new Br(this),this.imageTracking=new Gx(this),this.planeDetection=new mo(this),this.meshDetection=new go(this),this.input=new gi(this),this.lightEstimation=new Lf(this),this.anchors=new Jn(this),this.views=new lc(this),this._supported&&(navigator.xr.addEventListener("devicechange",()=>{this._deviceAvailabilityCheck()}),this._deviceAvailabilityCheck(),this.app.graphicsDevice.on("devicelost",this._onDeviceLost,this),this.app.graphicsDevice.on("devicerestored",this._onDeviceRestored,this))}destroy(){}start(e,s,i,r){var h;let n=r;if(typeof r=="object"&&(n=r.callback),!this._available[s]){n&&n(new Error("XR is not available"));return}if(this._session){n&&n(new Error("XR session is already started"));return}this._camera=e,this._camera.camera.xr=this,this._type=s,this._spaceType=i,this._framebufferScaleFactor=(r==null?void 0:r.framebufferScaleFactor)??1,this._setClipPlanes(e.nearClip,e.farClip);const a={requiredFeatures:[i],optionalFeatures:[]},o=(h=this.app.graphicsDevice)==null?void 0:h.isWebGL2;if(s===Po){if(a.optionalFeatures.push("light-estimation"),a.optionalFeatures.push("hit-test"),r&&(r.imageTracking&&this.imageTracking.supported&&a.optionalFeatures.push("image-tracking"),r.planeDetection&&a.optionalFeatures.push("plane-detection"),r.meshDetection&&a.optionalFeatures.push("mesh-detection")),this.domOverlay.supported&&this.domOverlay.root&&(a.optionalFeatures.push("dom-overlay"),a.domOverlay={root:this.domOverlay.root}),r&&r.anchors&&this.anchors.supported&&a.optionalFeatures.push("anchors"),r&&r.depthSensing&&this.views.supportedDepth){a.optionalFeatures.push("depth-sensing");const d=[],u=[];if(d.push(Nx,KL),u.push(Vx,zx,Ux),r.depthSensing.usagePreference){const f=d.indexOf(r.depthSensing.usagePreference);f!==-1&&d.splice(f,1),d.unshift(r.depthSensing.usagePreference)}if(r.depthSensing.dataFormatPreference){const f=u.indexOf(r.depthSensing.dataFormatPreference);f!==-1&&u.splice(f,1),u.unshift(r.depthSensing.dataFormatPreference)}a.depthSensing={usagePreference:d,dataFormatPreference:u}}o&&r&&r.cameraColor&&this.views.supportedColor&&a.optionalFeatures.push("camera-access")}a.optionalFeatures.push("hand-tracking"),r&&r.optionalFeatures&&(a.optionalFeatures=a.optionalFeatures.concat(r.optionalFeatures)),this.imageTracking.supported&&this.imageTracking.images.length?this.imageTracking.prepareImages((d,u)=>{if(d){n&&n(d),this.fire("error",d);return}u!==null&&(a.trackedImages=u),this._onStartOptionsReady(s,i,a,n)}):this._onStartOptionsReady(s,i,a,n)}_onStartOptionsReady(e,s,i,r){navigator.xr.requestSession(e,i).then(n=>{this._onSessionStart(n,s,r)}).catch(n=>{this._camera.camera.xr=null,this._camera=null,this._type=null,this._spaceType=null,r&&r(n),this.fire("error",n)})}end(e){if(!this._session){e&&e(new Error("XR Session is not initialized"));return}this.webglBinding=null,e&&this.once("end",e),this._session.end()}isAvailable(e){return this._available[e]}_deviceAvailabilityCheck(){for(const e in this._available)this._sessionSupportCheck(e)}initiateRoomCapture(e){if(!this._session){e(new Error("Session is not active"));return}if(!this._session.initiateRoomCapture){e(new Error("Session does not support manual room capture"));return}this._session.initiateRoomCapture().then(()=>{e&&e(null)}).catch(s=>{e&&e(s)})}updateTargetFrameRate(e,s){var i;if(!((i=this._session)!=null&&i.updateTargetFrameRate)){s==null||s(new Error("unable to update frameRate"));return}this._session.updateTargetFrameRate(e).then(()=>{s==null||s()}).catch(r=>{s==null||s(r)})}_sessionSupportCheck(e){navigator.xr.isSessionSupported(e).then(s=>{this._available[e]!==s&&(this._available[e]=s,this.fire("available",e,s),this.fire(`available:${e}`,s))}).catch(s=>{this.fire("error",s)})}_onSessionStart(e,s,i){let r=!1;this._session=e;const n=()=>{this.fire("visibility:change",e.visibilityState)},a=()=>{this._setClipPlanes(this._camera.nearClip,this._camera.farClip)},o=()=>{this._camera&&(this._camera.off("set_nearClip",a),this._camera.off("set_farClip",a),this._camera.camera.xr=null,this._camera=null),e.removeEventListener("end",o),e.removeEventListener("visibilitychange",n),r||this.fire("end"),this._session=null,this._referenceSpace=null,this._width=0,this._height=0,this._type=null,this._spaceType=null,this.app.systems&&this.app.tick()};e.addEventListener("end",o),e.addEventListener("visibilitychange",n),this._camera.on("set_nearClip",a),this._camera.on("set_farClip",a),b.assert(window,"window is needed to scale the XR framebuffer. Are you running XR headless?"),this._createBaseLayer(),this.session.supportedFrameRates?this._supportedFrameRates=Array.from(this.session.supportedFrameRates):this._supportedFrameRates=null,this._session.addEventListener("frameratechange",()=>{var h;this.fire("frameratechange",(h=this._session)==null?void 0:h.frameRate)}),e.requestReferenceSpace(s).then(h=>{this._referenceSpace=h,this.app.tick(),i&&i(null),this.fire("start")}).catch(h=>{r=!0,e.end(),i&&i(h),this.fire("error",h)})}_setClipPlanes(e,s){this._depthNear===e&&this._depthFar===s||(this._depthNear=e,this._depthFar=s,this._session&&this._session.updateRenderState({depthNear:this._depthNear,depthFar:this._depthFar}))}_createBaseLayer(){const e=this.app.graphicsDevice,s=e.maxPixelRatio/window.devicePixelRatio*this._framebufferScaleFactor;if(this._baseLayer=new XRWebGLLayer(this._session,e.gl,{alpha:!0,depth:!0,stencil:!0,framebufferScaleFactor:s,antialias:!1}),e!=null&&e.isWebGL2&&window.XRWebGLBinding)try{this.webglBinding=new XRWebGLBinding(this._session,e.gl)}catch(i){this.fire("error",i)}this._session.updateRenderState({baseLayer:this._baseLayer,depthNear:this._depthNear,depthFar:this._depthFar})}_onDeviceLost(){this._session&&(this.webglBinding&&(this.webglBinding=null),this._baseLayer=null,this._session.updateRenderState({baseLayer:this._baseLayer,depthNear:this._depthNear,depthFar:this._depthFar}))}_onDeviceRestored(){this._session&&setTimeout(()=>{this.app.graphicsDevice.gl.makeXRCompatible().then(()=>{this._createBaseLayer()}).catch(e=>{this.fire("error",e)})},0)}update(e){if(!this._session)return!1;const s=e.session.renderState.baseLayer.framebufferWidth,i=e.session.renderState.baseLayer.framebufferHeight;(this._width!==s||this._height!==i)&&(this._width=s,this._height=i,this.app.graphicsDevice.setResolution(s,i));const r=e.getViewerPose(this._referenceSpace);if(!r)return!1;const n=this.views.list.length;this.views.update(e,r.views);const a=r.transform.position,o=r.transform.orientation;if(this._localPosition.set(a.x,a.y,a.z),this._localRotation.set(o.x,o.y,o.z,o.w),n===0&&this.views.list.length>0){const h=new q,d=this.views.list[0];h.copy(d.projMat);const u=h.data,f=2*Math.atan(1/u[5])*180/Math.PI,p=u[5]/u[0],m=u[14]/(u[10]+1),_=u[14]/(u[10]-1);this._camera.camera.setXrProperties({aspectRatio:p,farClip:m,fov:f,horizontalFov:!1,nearClip:_})}return this._camera.camera._node.setLocalPosition(this._localPosition),this._camera.camera._node.setLocalRotation(this._localRotation),this.input.update(e),this._type===Po&&(this.hitTest.supported&&this.hitTest.update(e),this.lightEstimation.supported&&this.lightEstimation.update(e),this.imageTracking.supported&&this.imageTracking.update(e),this.anchors.supported&&this.anchors.update(e),this.planeDetection.supported&&this.planeDetection.update(e),this.meshDetection.supported&&this.meshDetection.update(e)),this.fire("update",e),!0}get supported(){return this._supported}get active(){return!!this._session}get type(){return this._type}get spaceType(){return this._spaceType}get session(){return this._session}get frameRate(){var e;return((e=this._session)==null?void 0:e.frameRate)??null}get supportedFrameRates(){return this._supportedFrameRates}get framebufferScaleFactor(){return this._framebufferScaleFactor}set fixedFoveation(e){var s;(((s=this._baseLayer)==null?void 0:s.fixedFoveation)??null)!==null&&(this.app.graphicsDevice.samples>1&&b.warn("Fixed Foveation is ignored. Disable anti-aliasing for it to be effective."),this._baseLayer.fixedFoveation=e)}get fixedFoveation(){var e;return((e=this._baseLayer)==null?void 0:e.fixedFoveation)??null}get camera(){return this._camera?this._camera.entity:null}get visibilityState(){return this._session?this._session.visibilityState:null}}c(ea,"EVENT_AVAILABLE","available"),c(ea,"EVENT_START","start"),c(ea,"EVENT_END","end"),c(ea,"EVENT_UPDATE","update"),c(ea,"EVENT_ERROR","error");class gF extends Zh{constructor(t,e={}){super(t);const s=new mP;s.graphicsDevice=e.graphicsDevice??this.createDevice(t,e),this.addComponentSystems(s),this.addResourceHandles(s),s.elementInput=e.elementInput,s.keyboard=e.keyboard,s.mouse=e.mouse,s.touch=e.touch,s.gamepads=e.gamepads,s.scriptPrefix=e.scriptPrefix,s.assetPrefix=e.assetPrefix,s.scriptsOrder=e.scriptsOrder,s.soundManager=new Ob,s.lightmapper=bP,s.batchManager=uC,s.xr=ea,this.init(s)}createDevice(t,e){return e.graphicsDeviceOptions||(e.graphicsDeviceOptions={}),be.browser&&navigator.xr&&(e.graphicsDeviceOptions.xrCompatible=!0),e.graphicsDeviceOptions.alpha=e.graphicsDeviceOptions.alpha||!1,new pb(t,e.graphicsDeviceOptions)}addComponentSystems(t){t.componentSystems=[_x,pR,WR,VP,XP,rI,pI,YI,ZI,dD,NI,YP,dI,wI,UR,JP,LI,kI,HI,eI,qR,$I,fD]}addResourceHandles(t){t.resourceHandlers=[pD,g2,y2,x2,hL,rL,qL,xL,eL,v2,mL,cL,E2,J2,A2,_L,Q2,C2,M2,b2,vL,gL,yL,T2,Z2]}}const ch=[],tF=[[],[],[]];class sF extends gs{constructor(e,s){super(e);c(this,"viewBindGroups",[]);this.renderer=s}destroy(){this.viewBindGroups.forEach(e=>{e.defaultUniformBuffer.destroy(),e.destroy()}),this.viewBindGroups.length=0}update(e,s,i,r){this.camera=e,this.scene=s,this.layers=i,this.mapping=r}execute(){const e=this.device,{renderer:s,camera:i,scene:r,layers:n,mapping:a,renderTarget:o}=this,h=r.layers.layerList,d=r.layers.subLayerEnabled,u=r.layers.subLayerList;for(let f=0;f<h.length;f++){const p=h[f];if(!(n&&n.indexOf(p)<0)&&p.enabled&&d[f]&&p.camerasSet.has(i.camera)){const m=u[f];G.pushGpuMarker(e,`${p.name}(${m?"TRANSP":"OPAQUE"})`),p._clearDepthBuffer&&s.clear(i.camera,!1,!0,!1);const _=p.meshInstances;for(let g=0;g<_.length;g++){const y=_[g];y.pick&&y.transparent===m&&(ch.push(y),a.set(y.id,y))}ch.length>0&&(r.clusteredLightingEnabled&&s.worldClustersAllocator.empty.activate(),s.setCameraUniforms(i.camera,o),e.supportsUniformBuffers&&s.setupViewUniformBuffers(this.viewBindGroups,s.viewUniformFormat,s.viewBindGroupFormat,1),s.renderForward(i.camera,o,ch,tF,Na,y=>{e.setBlendState(bt.NOBLEND)}),ch.length=0),G.popGpuMarker(e)}}}}const hu=new Set,iF=new ee;let yF=class{constructor(t,e,s){c(this,"renderTarget",null);c(this,"mapping",new Map);c(this,"deviceValid",!0);b.assert(t),this.renderer=t.renderer,this.device=t.graphicsDevice,this.renderPass=new sF(this.device,t.renderer),this.width=0,this.height=0,this.resize(e,s),this.device.on("destroy",()=>{this.deviceValid=!1})}getSelection(t,e,s=1,i=1){const r=this.device;if(r.isWebGPU)return b.errorOnce("pc.Picker#getSelection is not supported on WebGPU, use pc.Picker#getSelectionAsync instead."),[];b.assert(typeof t!="object","Picker.getSelection:param 'rect' is deprecated, use 'x, y, width, height' instead."),e=this.renderTarget.height-(e+i);const n=this.sanitizeRect(t,e,s,i);r.setRenderTarget(this.renderTarget),r.updateBegin();const a=new Uint8Array(4*n.z*n.w);return r.readPixels(n.x,n.y,n.z,n.w,a),r.updateEnd(),this.decodePixels(a,this.mapping)}getSelectionAsync(t,e,s=1,i=1){var n;(n=this.device)!=null&&n.isWebGL2&&(e=this.renderTarget.height-(e+i));const r=this.sanitizeRect(t,e,s,i);return this.renderTarget.colorBuffer.read(r.x,r.y,r.z,r.w,{renderTarget:this.renderTarget,immediate:!0}).then(a=>this.decodePixels(a,this.mapping))}sanitizeRect(t,e,s,i){const r=this.renderTarget.width,n=this.renderTarget.height;return t=z.clamp(Math.floor(t),0,r-1),e=z.clamp(Math.floor(e),0,n-1),s=Math.floor(Math.max(s,1)),s=Math.min(s,r-t),i=Math.floor(Math.max(i,1)),i=Math.min(i,n-e),iF.set(t,e,s,i)}decodePixels(t,e){const s=[];if(this.deviceValid){const i=t.length;for(let r=0;r<i;r+=4){const n=t[r+0],a=t[r+1],o=t[r+2],d=t[r+3]<<24|n<<16|a<<8|o;d!==-1&&hu.add(e.get(d))}hu.forEach(r=>{r&&s.push(r)}),hu.clear()}return s}allocateRenderTarget(){const t=new ce(this.device,{format:Te,width:this.width,height:this.height,mipmaps:!1,minFilter:fe,magFilter:fe,addressU:oe,addressV:oe,name:"pick"});this.renderTarget=new St({colorBuffer:t,depth:!0})}releaseRenderTarget(){this.renderTarget&&(this.renderTarget.destroyTextureBuffers(),this.renderTarget.destroy(),this.renderTarget=null)}prepare(t,e,s){s instanceof Fr&&(s=[s]),(!this.renderTarget||this.width!==this.renderTarget.width||this.height!==this.renderTarget.height)&&(this.releaseRenderTarget(),this.allocateRenderTarget()),this.mapping.clear();const i=this.renderPass;i.init(this.renderTarget),i.colorOps.clearValue=Y.WHITE,i.colorOps.clear=!0,i.depthStencilOps.clearDepth=!0,i.update(t,e,s,this.mapping),i.render()}resize(t,e){this.width=Math.floor(t),this.height=Math.floor(e)}};class rF{constructor(t){this._frameIndex=0,this._frameTimings=[],this._timings=[],this._prevTimings=[],this.unitsName="ms",this.decimalPlaces=1,this.enabled=!0,t.on("frameupdate",this.begin.bind(this,"update")),t.on("framerender",this.mark.bind(this,"render")),t.on("frameend",this.mark.bind(this,"other"))}begin(t){if(!this.enabled)return;this._frameIndex<this._frameTimings.length&&this._frameTimings.splice(this._frameIndex);const e=this._prevTimings;this._prevTimings=this._timings,this._timings=this._frameTimings,this._frameTimings=e,this._frameIndex=0,this.mark(t)}mark(t){if(!this.enabled)return;const e=ae();if(this._frameIndex>0){const s=this._frameTimings[this._frameIndex-1];s[1]=e-s[1]}else if(this._timings.length>0){const s=this._timings[this._timings.length-1];s[1]=e-s[1]}if(this._frameIndex>=this._frameTimings.length)this._frameTimings.push([t,e]);else{const s=this._frameTimings[this._frameIndex];s[0]=t,s[1]=e}this._frameIndex++}get timings(){return this._timings.slice(0,-1).map(t=>t[1])}}class nF{constructor(t){this.device=t,t.gpuProfiler.enabled=!0,this.enabled=!0,this.unitsName="ms",this.decimalPlaces=1,this._timings=[]}get timings(){return this._timings[0]=this.device.gpuProfiler._frameTime,this._timings}}class aF{constructor(t,e,s,i,r){this.app=t,this.values=[],this.statNames=e,this.statNames.length>3&&(this.statNames.length=3),this.unitsName=i,this.decimalPlaces=s,this.multiplier=r||1;const n=(a,o)=>a.split(".").reduce((h,d)=>h?h[d]:null,o||this);t.on("frameupdate",a=>{for(let o=0;o<this.statNames.length;o++)this.values[o]=n(this.statNames[o],this.app.stats)*this.multiplier})}get timings(){return this.values}}class cu{constructor(t,e,s,i,r){this.app=e,this.name=t,this.device=e.graphicsDevice,this.timer=r,this.watermark=s,this.enabled=!1,this.textRefreshRate=i,this.avgTotal=0,this.avgTimer=0,this.avgCount=0,this.timingText="",this.texture=null,this.yOffset=0,this.cursor=0,this.sample=new Uint8ClampedArray(4),this.sample.set([0,0,0,255]),this.counter=0,this.app.on("frameupdate",this.update,this)}destroy(){this.app.off("frameupdate",this.update,this)}loseContext(){this.timer&&typeof this.timer.loseContext=="function"&&this.timer.loseContext()}update(t){const e=this.timer.timings,s=e.reduce((i,r)=>i+r,0);if(this.avgTotal+=s,this.avgTimer+=t,this.avgCount++,this.avgTimer>this.textRefreshRate&&(this.timingText=(this.avgTotal/this.avgCount).toFixed(this.timer.decimalPlaces),this.avgTimer=0,this.avgTotal=0,this.avgCount=0),this.enabled){let i=0;const r=1.5*this.watermark;for(let a=0;a<e.length;++a)i+=Math.floor(e[a]/r*255),this.sample[a]=i;this.sample[3]=this.watermark/r*255,this.texture.lock().set(this.sample,(this.cursor+this.yOffset*this.texture.width)*4),this.texture.unlock(),this.cursor++,this.cursor===this.texture.width&&(this.cursor=0)}}render(t,e,s,i,r){t.quad(e+i,s,-i,r,this.enabled?this.cursor:0,this.enabled?.5+this.yOffset:this.texture.height-1,-i,0,this.texture,0)}}class oF{constructor(t,e){const s=p=>{p.font='10px "Lucida Console", Monaco, monospace',p.textAlign="left",p.textBaseline="alphabetic"},i=p=>p==="."||p.length===1&&p.charCodeAt(0)>=48&&p.charCodeAt(0)<=57,r=document.createElement("canvas"),n=r.getContext("2d",{alpha:!0});s(n);const a=new Map,o=5,h=512;let d=o,u=o;e.forEach(p=>{const m=n.measureText(p),_=Math.ceil(-m.actualBoundingBoxLeft),g=Math.ceil(m.actualBoundingBoxRight),y=Math.ceil(m.actualBoundingBoxAscent),w=Math.ceil(m.actualBoundingBoxDescent),C=_+g,x=y+w;d+C+o>=h&&(d=o,u+=16),a.set(p,{l:_,r:g,a:y,d:w,w:C,h:x,x:d,y:u}),d+=C+o}),r.width=512,r.height=z.nextPowerOfTwo(u+16+o),s(n),n.fillStyle="rgb(0, 0, 0)",n.fillRect(0,0,r.width,r.height),a.forEach((p,m)=>{n.fillStyle=i(m)?"rgb(255, 255, 255)":"rgb(170, 170, 170)",n.fillText(m,p.x-p.l,p.y+p.a)}),this.placements=a;const f=n.getImageData(0,0,r.width,r.height).data;for(let p=0;p<f.length;p+=4)f[p+3]=f[p+0],f[p+0]=255,f[p+1]=255,f[p+2]=255;this.texture=new ce(t,{name:"mini-stats-word-atlas",width:r.width,height:r.height,mipmaps:!1,minFilter:fe,magFilter:fe,levels:[f]})}destroy(){this.texture.destroy(),this.texture=null}render(t,e,s,i){const r=this.placements.get(e);return r?(t.quad(s+r.l-1,i-r.d+1,r.w+1*2,r.h+1*2,r.x-1,this.texture.height-r.y-r.h-1,void 0,void 0,this.texture,1),r.w):0}}const lF=`
attribute vec3 vertex_position;         // unnormalized xy, word flag
attribute vec4 vertex_texCoord0;        // unnormalized texture space uv, normalized uv

varying vec4 uv0;
varying float wordFlag;

void main(void) {
    gl_Position = vec4(vertex_position.xy * 2.0 - 1.0, 0.5, 1.0);
    uv0 = vertex_texCoord0;
    wordFlag = vertex_position.z;
}`,hF=`
varying vec4 uv0;
varying float wordFlag;

uniform vec4 clr;
uniform sampler2D graphTex;
uniform sampler2D wordsTex;

void main (void) {
    vec4 graphSample = texture2D(graphTex, uv0.xy);

    vec4 graph;
    if (uv0.w < graphSample.r)
        graph = vec4(0.7, 0.2, 0.2, 1.0);
    else if (uv0.w < graphSample.g)
        graph = vec4(0.2, 0.7, 0.2, 1.0);
    else if (uv0.w < graphSample.b)
        graph = vec4(0.2, 0.2, 0.7, 1.0);
    else
        graph = vec4(0.0, 0.0, 0.0, 1.0 - 0.25 * sin(uv0.w * 3.14159));

    vec4 words = texture2D(wordsTex, vec2(uv0.x, 1.0 - uv0.y));

    gl_FragColor = mix(graph, words, wordFlag) * clr;
}`;class cF{constructor(t,e=512){const s=new Dt(t,[{semantic:Xe,components:3,type:Re},{semantic:ds,components:4,type:Re}]),i=new Uint16Array(e*6);for(let n=0;n<e;++n)i[n*6+0]=n*4,i[n*6+1]=n*4+1,i[n*6+2]=n*4+2,i[n*6+3]=n*4,i[n*6+4]=n*4+2,i[n*6+5]=n*4+3;this.device=t,this.buffer=new fs(t,s,e*4,{usage:fy}),this.data=new Float32Array(this.buffer.numBytes/4),this.indexBuffer=new cr(t,Fi,e*6,ts,i),this.prim={type:Fs,indexed:!0,base:0,count:0},this.quads=0,this.mesh=new ke(t),this.mesh.vertexBuffer=this.buffer,this.mesh.indexBuffer[0]=this.indexBuffer,this.mesh.primitive=[this.prim];const r=new La({uniqueName:"MiniStats",vertexCode:lF,fragmentCode:hF});this.material=r,r.cull=vt,r.depthState=us.NODEPTH,r.blendState=new bt(!0,Ut,_c,gc,Ut,ct,ct),r.update(),this.meshInstance=new Be(this.mesh,r,new Oe("MiniStatsMesh")),this.uniforms={clr:new Float32Array(4)},this.targetSize={width:t.width,height:t.height}}quad(t,e,s,i,r,n,a,o,h,d=0){const u=this.targetSize.width,f=this.targetSize.height,p=t/u,m=e/f,_=(t+s)/u,g=(e+i)/f,y=h.width,w=h.height,C=r/y,x=n/w,M=(r+(a??s))/y,S=(n+(o??i))/w;this.data.set([p,m,d,C,x,0,0,_,m,d,M,x,1,0,_,g,d,M,S,1,1,p,g,d,C,S,0,1],4*7*this.quads),this.quads++,this.prim.count+=6}startFrame(){this.quads=0,this.prim.count=0,this.targetSize.width=this.device.canvas.scrollWidth,this.targetSize.height=this.device.canvas.scrollHeight}render(t,e,s,i,r,n){this.buffer.setData(this.data.buffer),this.uniforms.clr.set(r,0),this.material.setParameter("clr",this.uniforms.clr),this.material.setParameter("graphTex",s),this.material.setParameter("wordsTex",i),t.drawMeshInstance(this.meshInstance,e)}}class $x{constructor(t,e){const s=t.graphicsDevice;e=e||$x.getDefaultOptions(),this.initGraphs(t,s,e);const i=new Set(["","ms","0","1","2","3","4","5","6","7","8","9","."].concat(this.graphs.map(n=>n.name)).concat(e.stats?e.stats.map(n=>n.unitsName):[]).filter(n=>!!n));this.wordAtlas=new oF(s,i),this.sizes=e.sizes,this._activeSizeIndex=e.startSizeIndex;const r=document.createElement("div");r.setAttribute("id","mini-stats"),r.style.cssText="position:fixed;bottom:0;left:0;background:transparent;",document.body.appendChild(r),r.addEventListener("mouseenter",n=>{this.opacity=1}),r.addEventListener("mouseleave",n=>{this.opacity=.7}),r.addEventListener("click",n=>{n.preventDefault(),this._enabled&&(this.activeSizeIndex=(this.activeSizeIndex+1)%this.sizes.length,this.resize(this.sizes[this.activeSizeIndex].width,this.sizes[this.activeSizeIndex].height,this.sizes[this.activeSizeIndex].graphs))}),s.on("resizecanvas",this.updateDiv,this),s.on("losecontext",this.loseContext,this),t.on("postrender",this.postRender,this),this.app=t,this.drawLayer=t.scene.layers.getLayerById(nl),this.device=s,this.render2d=new cF(s),this.div=r,this.width=0,this.height=0,this.gspacing=2,this.clr=[1,1,1,.5],this._enabled=!0,this.activeSizeIndex=this._activeSizeIndex}destroy(){this.device.off("resizecanvas",this.updateDiv,this),this.device.off("losecontext",this.loseContext,this),this.app.off("postrender",this.postRender,this),this.graphs.forEach(t=>t.destroy()),this.wordAtlas.destroy(),this.texture.destroy()}static getDefaultOptions(){return{sizes:[{width:100,height:16,spacing:0,graphs:!1},{width:128,height:32,spacing:2,graphs:!0},{width:256,height:64,spacing:2,graphs:!0}],startSizeIndex:0,textRefreshRate:500,cpu:{enabled:!0,watermark:33},gpu:{enabled:!0,watermark:33},stats:[{name:"Frame",stats:["frame.ms"],decimalPlaces:1,unitsName:"ms",watermark:33},{name:"DrawCalls",stats:["drawCalls.total"],watermark:1e3}]}}set activeSizeIndex(t){this._activeSizeIndex=t,this.gspacing=this.sizes[t].spacing,this.resize(this.sizes[t].width,this.sizes[t].height,this.sizes[t].graphs)}get activeSizeIndex(){return this._activeSizeIndex}set opacity(t){this.clr[3]=t}get opacity(){return this.clr[3]}get overallHeight(){const t=this.graphs,e=this.gspacing;return this.height*t.length+e*(t.length-1)}set enabled(t){if(t!==this._enabled){this._enabled=t;for(let e=0;e<this.graphs.length;++e)this.graphs[e].enabled=t,this.graphs[e].timer.enabled=t}}get enabled(){return this._enabled}initGraphs(t,e,s){if(this.graphs=[],s.cpu.enabled){const r=new rF(t),n=new cu("CPU",t,s.cpu.watermark,s.textRefreshRate,r);this.graphs.push(n)}if(s.gpu.enabled){const r=new nF(e),n=new cu("GPU",t,s.gpu.watermark,s.textRefreshRate,r);this.graphs.push(n)}s.stats&&s.stats.forEach(r=>{const n=new aF(t,r.stats,r.decimalPlaces,r.unitsName,r.multiplier),a=new cu(r.name,t,r.watermark,s.textRefreshRate,n);this.graphs.push(a)});const i=s.sizes.reduce((r,n)=>n.width>r?n.width:r,0);this.texture=new ce(e,{name:"mini-stats-graph-texture",width:z.nextPowerOfTwo(i),height:z.nextPowerOfTwo(this.graphs.length),mipmaps:!1,minFilter:fe,magFilter:fe,addressU:nt,addressV:nt}),this.graphs.forEach((r,n)=>{r.texture=this.texture,r.yOffset=n})}render(){const t=this.graphs,e=this.wordAtlas,s=this.render2d,i=this.width,r=this.height,n=this.gspacing;s.startFrame();for(let a=0;a<t.length;++a){const o=t[a];let h=a*(r+n);o.render(s,0,h,i,r);let d=1;h+=r-13,d+=e.render(s,o.name,d,h)+10;const u=o.timingText;for(let f=0;f<u.length;++f)d+=e.render(s,u[f],d,h);o.timer.unitsName&&(d+=3,e.render(s,o.timer.unitsName,d,h))}s.render(this.app,this.drawLayer,this.texture,this.wordAtlas.texture,this.clr,r)}resize(t,e,s){const i=this.graphs;for(let r=0;r<i.length;++r)i[r].enabled=s;this.width=t,this.height=e,this.updateDiv()}updateDiv(){const t=this.device.canvas.getBoundingClientRect();this.div.style.left=`${t.left}px`,this.div.style.bottom=`${window.innerHeight-t.bottom}px`,this.div.style.width=`${this.width}px`,this.div.style.height=`${this.overallHeight}px`}loseContext(){this.graphs.forEach(t=>t.loseContext())}postRender(){this._enabled&&this.render()}}class SF extends Zt{constructor(){super(...arguments);c(this,"basePath","https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets/dist/profiles");c(this,"controllers",new Map);c(this,"preEntities",new Map);c(this,"eventsList",[]);c(this,"addEvents",(e,s,i)=>{e.on(s,i),this.eventsList=this.eventsList.concat({e,ty:s,fn:i})});c(this,"removeEvents",()=>{this.eventsList.forEach(({e,ty:s,fn:i})=>{e.off(s,i)}),this.eventsList=[]});c(this,"initialize",()=>{if(!this.app.xr){console.error("XrControllers script requires XR to be enabled on the application");return}this.addEvents(this.app.xr.input,"add",async e=>{var n;if(console.log("add xr input",e.handedness),!((n=e.profiles)!=null&&n.length)){console.warn("No profiles available for input source");return}const s=e.profiles.map(async a=>{var h;const o=`${this.basePath}/${a}/profile.json`;try{const d=await fetch(o);if(!d.ok)return null;const u=await d.json(),f=((h=u.layouts[e.handedness])==null?void 0:h.assetPath)||"",p=`${this.basePath}/${u.profileId}/${e.handedness}${f.replace(/^\/?(left|right)/,"")}`,m=await new Promise((_,g)=>{this.app.assets.loadFromUrl(p,"container",(y,w)=>{y?g(y):_(w)})});return{profileId:a,asset:m}}catch{return console.warn(`Failed to process profile ${a}`),null}}),r=(await Promise.all(s)).find(a=>a!==null);if(r){const{asset:a}=r,h=a.resource.instantiateRenderEntity();h.name=`Armature_${e.handedness}`,this.app.root.addChild(h),this.preEntities.set(e,h);const d=new Map;if(e.hand)for(const u of e.hand.joints){const f=h.findByName(u.id);f&&d.set(u,f)}this.controllers.set(e,{entity:h,jointMap:d})}else console.warn("No compatible profiles found")}),this.addEvents(this.app.xr.input,"remove",e=>{var i;const s=this.controllers.get(e);s&&((i=s.entity)==null||i.destroy(),this.app.root.removeChild(s==null?void 0:s.entity),this.controllers.delete(e))}),this.addEvents(this.app.xr.input,"removeall",this.destroy),this.on("destroy",this.removeEvents)});c(this,"destroy",()=>{var i,r,n;const e=this.app;(i=this.controllers)==null||i.forEach(a=>{var o;e.root.removeChild(a==null?void 0:a.entity),(o=a.entity)==null||o.destroy()}),(r=this.controllers)==null||r.clear(),(n=this.preEntities)==null||n.forEach(a=>{e.root.removeChild(a),a==null||a.destroy()});const s=()=>{const a=e.root.findByName("Armature_left"),o=e.root.findByName("Armature_right");for(a&&e.root.removeChild(a),o&&e.root.removeChild(o);e.root.findByName("Armature_left")||e.root.findByName("Armature_right");)s()};s()})}update(e){var s;if((s=this.app.xr)!=null&&s.active)for(const[i,{entity:r,jointMap:n}]of this.controllers)if(i.hand)for(const[a,o]of n)o.setPosition(a.getPosition()),o.setRotation(a.getRotation());else r.setPosition(i.getPosition()),r.setRotation(i.getRotation())}}export{gF as A,ve as B,Y as C,SF as D,je as E,q1 as F,ph as G,tx as H,de as I,$x as J,km as K,Ap as L,Cl as M,j as N,yF as P,ie as Q,H_ as R,zt as S,p0 as T,A as V,oy as W,jL as X,ee as a,IL as b,W as c,he as d,al as e,pa as f,Xs as g,Pp as h,uF as i,fF as j,pF as k,mF as l,_F as m,Hh as n,Gh as o,Wh as p,ku as q,fh as r,Wr as s,$r as t,Rs as u,_s as v,vI as w,Xn as x,P0 as y,q as z};
